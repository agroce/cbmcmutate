Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.66662.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (False) == (True) ',), <traceback object at 0x1038fb2d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 30649, in act571
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 66 steps

SAVING TEST AS failure.66662.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "g"                                                         # STEP 0
ACTION: component1 = "g" 
component1 = None : <type 'NoneType'>
=> component1 = 'g' : <type 'str'>
==================================================
component4 = "phi"                                                       # STEP 1
ACTION: component4 = "phi" 
component4 = None : <type 'NoneType'>
=> component4 = 'phi' : <type 'str'>
==================================================
component0 = "phi"                                                       # STEP 2
ACTION: component0 = "phi" 
component0 = None : <type 'NoneType'>
=> component0 = 'phi' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 3
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 4
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component2 = "d"                                                         # STEP 5
ACTION: component2 = "d" 
component2 = None : <type 'NoneType'>
=> component2 = 'd' : <type 'str'>
==================================================
component3 = "beta"                                                      # STEP 6
ACTION: component3 = "beta" 
component3 = None : <type 'NoneType'>
=> component3 = 'beta' : <type 'str'>
==================================================
path4 += "/" + component1                                                # STEP 7
ACTION: path4 += "/" + component1 
component1 = 'g' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
component1 = "phi"                                                       # STEP 8
ACTION: component1 = "phi" 
component1 = 'g' : <type 'str'>
=> component1 = 'phi' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 9
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 10
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str0 += 'r'                                                             # STEP 11
ACTION: str0 += 'r' 
str0 = '' : <type 'str'>
=> str0 = 'r' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 12
ACTION: str0 += 'r' 
str0 = 'r' : <type 'str'>
=> str0 = 'rr' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 13
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 14
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 15
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str0 += 'e'                                                             # STEP 16
ACTION: str0 += 'e' 
str0 = 'rr' : <type 'str'>
=> str0 = 'rre' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 17
ACTION: str0 += 'b' 
str0 = 'rre' : <type 'str'>
=> str0 = 'rreb' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 18
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str1 = ""                                                               # STEP 19
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 20
ACTION: str4 += 'r' 
str4 = '' : <type 'str'>
=> str4 = 'r' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 21
ACTION: str4 += 'h' 
str4 = 'r' : <type 'str'>
=> str4 = 'rh' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 22
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 23
ACTION: fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
os0.mkdir(path4)                                                        # STEP 24
ACTION: os0.mkdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: os_REF0.mkdir(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/g'
==================================================
str1 += 'w'                                                             # STEP 25
ACTION: str1 += 'w' 
str1 = '' : <type 'str'>
=> str1 = 'w' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 26
ACTION: str4 += 'f' 
str4 = 'rh' : <type 'str'>
=> str4 = 'rhf' : <type 'str'>
==================================================
stat4 = os0.fstat(fd0)                                                  # STEP 27
ACTION: stat4 = os0.fstat(fd0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102bf7b10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.fstat(fd_REF0) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=23650904, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507478373, st_mtime=1507478373, st_ctime=1507478373) : <type 'posix.stat_result'>
==================================================
str3 += 'b'                                                             # STEP 28
ACTION: str3 += 'b' 
str3 = '' : <type 'str'>
=> str3 = 'b' : <type 'str'>
==================================================
result = os0.read(fd0,bytes3)                                           # STEP 29
ACTION: result = os0.read(fd0,bytes3) 
bytes3 = 1 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
str3 += 'g'                                                             # STEP 30
ACTION: str3 += 'g' 
str3 = 'b' : <type 'str'>
=> str3 = 'bg' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 31
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 32
ACTION: str3 += 'u' 
str3 = 'bg' : <type 'str'>
=> str3 = 'bgu' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 33
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 34
ACTION: str1 += 'd' 
str1 = 'w' : <type 'str'>
=> str1 = 'wd' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 35
ACTION: str0 += 'o' 
str0 = 'rreb' : <type 'str'>
=> str0 = 'rrebo' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 36
ACTION: str1 += 'f' 
str1 = 'wd' : <type 'str'>
=> str1 = 'wdf' : <type 'str'>
==================================================
stat0 = os0.fstat(fd0)                                                  # STEP 37
ACTION: stat0 = os0.fstat(fd0) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103849050> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.fstat(fd_REF0) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=23650904, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507478373, st_mtime=1507478373, st_ctime=1507478373) : <type 'posix.stat_result'>
==================================================
str2 += 'k'                                                             # STEP 38
ACTION: str2 += 'k' 
str2 = '' : <type 'str'>
=> str2 = 'k' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 39
ACTION: str3 += 'o' 
str3 = 'bgu' : <type 'str'>
=> str3 = 'bguo' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 40
ACTION: str0 += 'h' 
str0 = 'rrebo' : <type 'str'>
=> str0 = 'rreboh' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 41
ACTION: str3 += 'f' 
str3 = 'bguo' : <type 'str'>
=> str3 = 'bguof' : <type 'str'>
==================================================
result = os0.read(fd0,bytes3)                                           # STEP 42
ACTION: result = os0.read(fd0,bytes3) 
bytes3 = 1 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
str2 += 'f'                                                             # STEP 43
ACTION: str2 += 'f' 
str2 = 'k' : <type 'str'>
=> str2 = 'kf' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 44
ACTION: str1 += 'v' 
str1 = 'wdf' : <type 'str'>
=> str1 = 'wdfv' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 45
ACTION: str4 += 'f' 
str4 = 'rhf' : <type 'str'>
=> str4 = 'rhff' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 46
ACTION: str2 = "" 
str2 = 'kf' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
stat2 = os0.lstat(path4)                                                # STEP 47
ACTION: stat2 = os0.lstat(path4) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1026bc050> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.lstat(path4) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=23650904, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507478373, st_mtime=1507478373, st_ctime=1507478373) : <type 'posix.stat_result'>
==================================================
result = stat0.st_nlink                                                 # STEP 48
ACTION: result = stat0.st_nlink 
stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103849050> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF0 = posix.stat_result(st_mode=33261, st_ino=23650904, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507478373, st_mtime=1507478373, st_ctime=1507478373) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF0.st_nlink 
==================================================
str1 += 'f'                                                             # STEP 49
ACTION: str1 += 'f' 
str1 = 'wdfv' : <type 'str'>
=> str1 = 'wdfvf' : <type 'str'>
==================================================
result = os0.path.isabs(path1)                                          # STEP 50
ACTION: result = os0.path.isabs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path1) 
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 51
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.dirname(path1)                                        # STEP 52
ACTION: result = os0.path.dirname(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path1) 
==================================================
stat0 = os0.fstat(fd0)                                                  # STEP 53
ACTION: stat0 = os0.fstat(fd0) 
stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103849050> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF0 = posix.stat_result(st_mode=33261, st_ino=23650904, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507478373, st_mtime=1507478373, st_ctime=1507478373) : <type 'posix.stat_result'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102c0c690> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.fstat(fd_REF0) 
==================================================
result = os0.path.isfile(path1)                                         # STEP 54
ACTION: result = os0.path.isfile(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path1) 
==================================================
str1 += 'c'                                                             # STEP 55
ACTION: str1 += 'c' 
str1 = 'wdfvf' : <type 'str'>
=> str1 = 'wdfvfc' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 56
ACTION: path1 += "/" + component1 
component1 = 'phi' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
component1 = "a"                                                        # STEP 57
ACTION: component1 = "a" 
component1 = 'phi' : <type 'str'>
=> component1 = 'a' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 58
ACTION: path3 += "/" + component4 
component4 = 'phi' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
os0.link(path3,path3)                                                   # STEP 59
ACTION: os0.link(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/phi'
REFERENCE ACTION: os_REF0.link(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
str2 += 'd'                                                             # STEP 60
ACTION: str2 += 'd' 
str2 = '' : <type 'str'>
=> str2 = 'd' : <type 'str'>
==================================================
result = os0.path.isfile(path3)                                         # STEP 61
ACTION: result = os0.path.isfile(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path3) 
==================================================
str3 += 'r'                                                             # STEP 62
ACTION: str3 += 'r' 
str3 = 'bguof' : <type 'str'>
=> str3 = 'bguofr' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 63
ACTION: component4 = "beta" 
component4 = 'phi' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
os0.symlink(path4,path1)                                                # STEP 64
ACTION: os0.symlink(path4,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path4,path1) 
==================================================
result = os0.path.isfile(path3)                                         # STEP 65
ACTION: result = os0.path.isfile(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103888310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path3) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (False) == (True) ',), <traceback object at 0x103d1a290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 30649, in act571
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
0.431974887848 TOTAL RUNTIME
11 EXECUTED
2066 TOTAL TEST OPERATIONS
0.260941743851 TIME SPENT EXECUTING TEST OPERATIONS
0.0964739322662 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00105738639832 TIME SPENT CHECKING PROPERTIES
0.261999130249 TOTAL TIME SPENT RUNNING SUT
0.0289821624756 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
