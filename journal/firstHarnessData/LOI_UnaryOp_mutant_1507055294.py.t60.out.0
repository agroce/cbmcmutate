Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.48737.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10333de60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 10771, in act283
    assert (type(raised) == type(refRaised))
Original test has 29 steps

SAVING TEST AS failure.48737.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path2 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 1
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component2 = "b"                                                         # STEP 2
ACTION: component2 = "b" 
component2 = None : <type 'NoneType'>
=> component2 = 'b' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 3
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103533c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.path.exists(path2)                                          # STEP 4
ACTION: result = os0.path.exists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103533c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path2) 
==================================================
component1 = "b"                                                         # STEP 5
ACTION: component1 = "b" 
component1 = None : <type 'NoneType'>
=> component1 = 'b' : <type 'str'>
==================================================
os0.remove(path2)                                                        # STEP 6
ACTION: os0.remove(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103533c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
str3 = ""                                                                # STEP 7
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component3 = "omega"                                                     # STEP 8
ACTION: component3 = "omega" 
component3 = None : <type 'NoneType'>
=> component3 = 'omega' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 9
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 10
ACTION: str2 += 'l' 
str2 = '' : <type 'str'>
=> str2 = 'l' : <type 'str'>
==================================================
result = os0.readlink(path2)                                            # STEP 11
ACTION: result = os0.readlink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103533c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
str3 += 'y'                                                             # STEP 12
ACTION: str3 += 'y' 
str3 = '' : <type 'str'>
=> str3 = 'y' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 13
ACTION: str3 += 'a' 
str3 = 'y' : <type 'str'>
=> str3 = 'ya' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 14
ACTION: str3 += 's' 
str3 = 'ya' : <type 'str'>
=> str3 = 'yas' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 15
ACTION: str2 += 'd' 
str2 = 'l' : <type 'str'>
=> str2 = 'ld' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 16
ACTION: str3 += 'w' 
str3 = 'yas' : <type 'str'>
=> str3 = 'yasw' : <type 'str'>
==================================================
result = sorted(os0.listdir(path2))                                     # STEP 17
ACTION: result = sorted(os0.listdir(path2)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103533c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path2)) 
==================================================
str2 = ""                                                               # STEP 18
ACTION: str2 = "" 
str2 = 'ld' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 19
ACTION: str2 += 'h' 
str2 = '' : <type 'str'>
=> str2 = 'h' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 20
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
result = os0.path.isdir(path2)                                          # STEP 21
ACTION: result = os0.path.isdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103533c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path2) 
==================================================
component4 = "f"                                                        # STEP 22
ACTION: component4 = "f" 
component4 = None : <type 'NoneType'>
=> component4 = 'f' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 23
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 24
ACTION: str2 += 'l' 
str2 = 'h' : <type 'str'>
=> str2 = 'hl' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 25
ACTION: path2 += "/" + component3 
component3 = 'omega' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
component0 = "f"                                                        # STEP 26
ACTION: component0 = "f" 
component0 = None : <type 'NoneType'>
=> component0 = 'f' : <type 'str'>
==================================================
result = os0.path.lexists(path1)                                        # STEP 27
ACTION: result = os0.path.lexists(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103533c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path1) 
==================================================
os0.symlink(path2,path2)                                                # STEP 28
ACTION: os0.symlink(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103533c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in the fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path2,path2) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10396ca28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 10771, in act283
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0337660312653 TOTAL RUNTIME
1 EXECUTED
29 TOTAL TEST OPERATIONS
0.00409364700317 TIME SPENT EXECUTING TEST OPERATIONS
0.00168991088867 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.85966491699e-05 TIME SPENT CHECKING PROPERTIES
0.00411224365234 TOTAL TIME SPENT RUNNING SUT
0.00459504127502 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
