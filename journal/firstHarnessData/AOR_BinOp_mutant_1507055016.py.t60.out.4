Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62477.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for //: 'list' and 'list'",), <traceback object at 0x1006c3200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 24361, in act477
    self.p_stat[2] = self.p_os[0].stat(self.p_path[4])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3551, in stat
    return self.filesystem.GetStat(entry_path, follow_symlinks)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1081, in GetStat
    file_object = self.ResolveObject(entry_path, follow_symlinks, allow_fd=True)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1837, in ResolveObject
    return self.GetObjectFromNormalizedPath(self.ResolvePath(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1758, in ResolvePath
    path_components = (target_components // path_components)
Original test has 85 steps

SAVING TEST AS failure.62477.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "lambda"                                                    # STEP 0
ACTION: component0 = "lambda" 
component0 = None : <type 'NoneType'>
=> component0 = 'lambda' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 1
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
component1 = "b"                                                         # STEP 2
ACTION: component1 = "b" 
component1 = None : <type 'NoneType'>
=> component1 = 'b' : <type 'str'>
==================================================
component3 = "c"                                                         # STEP 3
ACTION: component3 = "c" 
component3 = None : <type 'NoneType'>
=> component3 = 'c' : <type 'str'>
==================================================
component4 = "b"                                                         # STEP 4
ACTION: component4 = "b" 
component4 = None : <type 'NoneType'>
=> component4 = 'b' : <type 'str'>
==================================================
component2 = "c"                                                         # STEP 5
ACTION: component2 = "c" 
component2 = None : <type 'NoneType'>
=> component2 = 'c' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 6
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component0                                                # STEP 8
ACTION: path3 += "/" + component0 
component0 = 'lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 9
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.makedirs(path0)                                                     # STEP 10
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = os0.path.islink(path3)                                         # STEP 11
ACTION: result = os0.path.islink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path3) 
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 12
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
stat0 = os0.lstat(path3)                                                # STEP 13
ACTION: stat0 = os0.lstat(path3) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102434c10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path3) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=17788895, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507396539, st_mtime=1507396539, st_ctime=1507396539) : <type 'posix.stat_result'>
==================================================
result = os0.path.dirname(path3)                                        # STEP 14
ACTION: result = os0.path.dirname(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path3) 
==================================================
result = os0.path.isabs(path3)                                          # STEP 15
ACTION: result = os0.path.isabs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path3) 
==================================================
str2 += 'p'                                                             # STEP 16
ACTION: str2 += 'p' 
str2 = '' : <type 'str'>
=> str2 = 'p' : <type 'str'>
==================================================
stat3 = os0.stat(path3)                                                 # STEP 17
ACTION: stat3 = os0.stat(path3) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102434650> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path3) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=17788895, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507396539, st_mtime=1507396539, st_ctime=1507396539) : <type 'posix.stat_result'>
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 18
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
component0 = "g"                                                        # STEP 19
ACTION: component0 = "g" 
component0 = 'lambda' : <type 'str'>
=> component0 = 'g' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 20
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
result = os0.path.abspath(path0)                                        # STEP 21
ACTION: result = os0.path.abspath(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path0) 
==================================================
result = os0.path.exists(path3)                                         # STEP 22
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
os0.write(fd0,str1)                                                     # STEP 23
ACTION: os0.write(fd0,str1) 
str1 = '' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF0,str1) 
==================================================
result = os0.path.isdir(path0)                                          # STEP 24
ACTION: result = os0.path.isdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path0) 
==================================================
stat1 = os0.fstat(fd0)                                                  # STEP 25
ACTION: stat1 = os0.fstat(fd0) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102434b10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.fstat(fd_REF0) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=17788895, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507396539, st_mtime=1507396539, st_ctime=1507396539) : <type 'posix.stat_result'>
==================================================
str1 += 'q'                                                             # STEP 26
ACTION: str1 += 'q' 
str1 = '' : <type 'str'>
=> str1 = 'q' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 27
ACTION: str1 += 'b' 
str1 = 'q' : <type 'str'>
=> str1 = 'qb' : <type 'str'>
==================================================
os0.remove(path3)                                                       # STEP 28
ACTION: os0.remove(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.remove(path3) 
==================================================
result = os0.path.islink(path0)                                         # STEP 29
ACTION: result = os0.path.islink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path0) 
==================================================
os0.link(path0,path3)                                                   # STEP 30
ACTION: os0.link(path0,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Cannot create hard link to directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path0,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted
==================================================
path3 += "/" + component0                                               # STEP 31
ACTION: path3 += "/" + component0 
component0 = 'g' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda/g' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 32
ACTION: str2 += 'e' 
str2 = 'p' : <type 'str'>
=> str2 = 'pe' : <type 'str'>
==================================================
component0 = "f"                                                        # STEP 33
ACTION: component0 = "f" 
component0 = 'g' : <type 'str'>
=> component0 = 'f' : <type 'str'>
==================================================
os0.write(fd1,str2)                                                     # STEP 34
ACTION: os0.write(fd1,str2) 
str2 = 'pe' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF1,str2) 
==================================================
os0.mkdir(path3)                                                        # STEP 35
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: os_REF0.mkdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda/g'
==================================================
str2 += 't'                                                             # STEP 36
ACTION: str2 += 't' 
str2 = 'pe' : <type 'str'>
=> str2 = 'pet' : <type 'str'>
==================================================
result = os0.path.exists(path0)                                         # STEP 37
ACTION: result = os0.path.exists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path0) 
==================================================
bytes3 = 0                                                              # STEP 38
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str2 += 'f'                                                             # STEP 39
ACTION: str2 += 'f' 
str2 = 'pet' : <type 'str'>
=> str2 = 'petf' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 40
ACTION: str2 += 'g' 
str2 = 'petf' : <type 'str'>
=> str2 = 'petfg' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 41
ACTION: str1 += 'n' 
str1 = 'qb' : <type 'str'>
=> str1 = 'qbn' : <type 'str'>
==================================================
os0.link(path0,path3)                                                   # STEP 42
ACTION: os0.link(path0,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: os_REF0.link(path0,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
str2 += 'o'                                                             # STEP 43
ACTION: str2 += 'o' 
str2 = 'petfg' : <type 'str'>
=> str2 = 'petfgo' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 44
ACTION: str1 += 'a' 
str1 = 'qbn' : <type 'str'>
=> str1 = 'qbna' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 45
ACTION: str1 += 'o' 
str1 = 'qbna' : <type 'str'>
=> str1 = 'qbnao' : <type 'str'>
==================================================
result = stat1.st_nlink                                                 # STEP 46
ACTION: result = stat1.st_nlink 
stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102434b10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF1 = posix.stat_result(st_mode=33261, st_ino=17788895, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507396539, st_mtime=1507396539, st_ctime=1507396539) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF1.st_nlink 
==================================================
stat1 = os0.lstat(path3)                                                # STEP 47
ACTION: stat1 = os0.lstat(path3) 
stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102434b10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/g' : <type 'str'>
stat_REF1 = posix.stat_result(st_mode=33261, st_ino=17788895, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507396539, st_mtime=1507396539, st_ctime=1507396539) : <type 'posix.stat_result'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/lambda/g'
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda/g'
==================================================
str1 += 'c'                                                             # STEP 48
ACTION: str1 += 'c' 
str1 = 'qbnao' : <type 'str'>
=> str1 = 'qbnaoc' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 49
ACTION: str1 += 'g' 
str1 = 'qbnaoc' : <type 'str'>
=> str1 = 'qbnaocg' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 50
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str1 += 'y'                                                             # STEP 51
ACTION: str1 += 'y' 
str1 = 'qbnaocg' : <type 'str'>
=> str1 = 'qbnaocgy' : <type 'str'>
==================================================
stat4 = os0.stat(path3)                                                 # STEP 52
ACTION: stat4 = os0.stat(path3) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/g' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/lambda/g'
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda/g'
==================================================
result = sorted(os0.listdir(path3))                                     # STEP 53
ACTION: result = sorted(os0.listdir(path3)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/lambda/g'
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path3)) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda/g'
==================================================
result = os0.path.lexists(path3)                                        # STEP 54
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
str1 += 'r'                                                             # STEP 55
ACTION: str1 += 'r' 
str1 = 'qbnaocgy' : <type 'str'>
=> str1 = 'qbnaocgyr' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 56
ACTION: str2 += 'z' 
str2 = 'petfgo' : <type 'str'>
=> str2 = 'petfgoz' : <type 'str'>
==================================================
os0.mkdir(path0)                                                        # STEP 57
ACTION: os0.mkdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
path3 += "/" + component3                                               # STEP 58
ACTION: path3 += "/" + component3 
component3 = 'c' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda/g' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda/g/c' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 59
ACTION: path0 += "/" + component2 
component2 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 60
ACTION: str2 += 'e' 
str2 = 'petfgoz' : <type 'str'>
=> str2 = 'petfgoze' : <type 'str'>
==================================================
os0.write(fd1,str2)                                                     # STEP 61
ACTION: os0.write(fd1,str2) 
str2 = 'petfgoze' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF1,str2) 
==================================================
path0 += "/" + component0                                               # STEP 62
ACTION: path0 += "/" + component0 
component0 = 'f' : <type 'str'>
path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c/f' : <type 'str'>
==================================================
component2 = "gamma"                                                    # STEP 63
ACTION: component2 = "gamma" 
component2 = 'c' : <type 'str'>
=> component2 = 'gamma' : <type 'str'>
==================================================
result = os0.path.lexists(path0)                                        # STEP 64
ACTION: result = os0.path.lexists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/c/f' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path0) 
==================================================
os0.makedirs(path3)                                                     # STEP 65
ACTION: os0.makedirs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/g/c' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path3) 
==================================================
str2 += 'p'                                                             # STEP 66
ACTION: str2 += 'p' 
str2 = 'petfgoze' : <type 'str'>
=> str2 = 'petfgozep' : <type 'str'>
==================================================
component3 = "e"                                                        # STEP 67
ACTION: component3 = "e" 
component3 = 'c' : <type 'str'>
=> component3 = 'e' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 68
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 69
ACTION: str1 += 'n' 
str1 = 'qbnaocgyr' : <type 'str'>
=> str1 = 'qbnaocgyrn' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 70
ACTION: str2 += 'j' 
str2 = 'petfgozep' : <type 'str'>
=> str2 = 'petfgozepj' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 71
ACTION: str1 += 'n' 
str1 = 'qbnaocgyrn' : <type 'str'>
=> str1 = 'qbnaocgyrnn' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 72
ACTION: str1 += 'a' 
str1 = 'qbnaocgyrnn' : <type 'str'>
=> str1 = 'qbnaocgyrnna' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 73
ACTION: str2 += 'o' 
str2 = 'petfgozepj' : <type 'str'>
=> str2 = 'petfgozepjo' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 74
ACTION: path4 += "/" + component1 
component1 = 'b' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
os0.symlink(path0,path4)                                                # STEP 75
ACTION: os0.symlink(path0,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/c/f' : <type 'str'>
path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path0,path4) 
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 76
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.isabs(path2)                                          # STEP 77
ACTION: result = os0.path.isabs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path2) 
==================================================
str1 += 'h'                                                             # STEP 78
ACTION: str1 += 'h' 
str1 = 'qbnaocgyrnna' : <type 'str'>
=> str1 = 'qbnaocgyrnnah' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 79
ACTION: str2 += 'w' 
str2 = 'petfgozepjo' : <type 'str'>
=> str2 = 'petfgozepjow' : <type 'str'>
==================================================
os0.remove(path2)                                                       # STEP 80
ACTION: os0.remove(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
os0.link(path3,path3)                                                   # STEP 81
ACTION: os0.link(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/g/c' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/lambda/g/c'
REFERENCE ACTION: os_REF0.link(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
component1 = "e"                                                        # STEP 82
ACTION: component1 = "e" 
component1 = 'b' : <type 'str'>
=> component1 = 'e' : <type 'str'>
==================================================
stat2 = os0.lstat(path0)                                                # STEP 83
ACTION: stat2 = os0.lstat(path0) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/c/f' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/c/f'
REFERENCE ACTION: stat_REF2 = os_REF0.lstat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/c/f'
==================================================
stat2 = os0.stat(path4)                                                 # STEP 84
ACTION: stat2 = os0.stat(path4) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024263d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unsupported operand type(s) for //: 'list' and 'list'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for //: 'list' and 'list'",), <traceback object at 0x1023a1c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 24361, in act477
    self.p_stat[2] = self.p_os[0].stat(self.p_path[4])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3551, in stat
    return self.filesystem.GetStat(entry_path, follow_symlinks)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1081, in GetStat
    file_object = self.ResolveObject(entry_path, follow_symlinks, allow_fd=True)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1837, in ResolveObject
    return self.GetObjectFromNormalizedPath(self.ResolvePath(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1758, in ResolvePath
    path_components = (target_components // path_components)
STOPPING TESTING DUE TO FAILED TEST
0.0609660148621 TOTAL RUNTIME
1 EXECUTED
85 TOTAL TEST OPERATIONS
0.0155816078186 TIME SPENT EXECUTING TEST OPERATIONS
0.00418305397034 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.31537628174e-05 TIME SPENT CHECKING PROPERTIES
0.0156247615814 TOTAL TIME SPENT RUNNING SUT
0.00331282615662 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
