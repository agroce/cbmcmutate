Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.50838.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103712560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 11283, in act291
    assert (type(raised) == type(refRaised))
Original test has 59 steps

SAVING TEST AS failure.50838.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
component3 = "omega"                                                     # STEP 1
ACTION: component3 = "omega" 
component3 = None : <type 'NoneType'>
=> component3 = 'omega' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 2
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
bytes1 = 0                                                               # STEP 3
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
component1 = "c"                                                         # STEP 4
ACTION: component1 = "c" 
component1 = None : <type 'NoneType'>
=> component1 = 'c' : <type 'str'>
==================================================
component4 = "d"                                                         # STEP 5
ACTION: component4 = "d" 
component4 = None : <type 'NoneType'>
=> component4 = 'd' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "omega"                                                     # STEP 7
ACTION: component0 = "omega" 
component0 = None : <type 'NoneType'>
=> component0 = 'omega' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "b"                                                         # STEP 9
ACTION: component2 = "b" 
component2 = None : <type 'NoneType'>
=> component2 = 'b' : <type 'str'>
==================================================
result = os0.path.abspath(path3)                                        # STEP 10
ACTION: result = os0.path.abspath(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path3) 
==================================================
os0.remove(path3)                                                       # STEP 11
ACTION: os0.remove(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
bytes1 += 1                                                             # STEP 12
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.islink(path0)                                         # STEP 14
ACTION: result = os0.path.islink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path0) 
==================================================
os0.link(path0,path3)                                                   # STEP 15
ACTION: os0.link(path0,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> Links are not supported on Windows before Python 3.2
REFERENCE ACTION: os_REF0.link(path0,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 16
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 17
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 18
ACTION: path4 += "/" + component0 
component0 = 'omega' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
os0.symlink(path0,path3)                                                # STEP 19
ACTION: os0.symlink(path0,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> Symbolic links are not supported on Windows before Python 3.2
REFERENCE ACTION: os_REF0.symlink(path0,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.dirname(path3)                                        # STEP 20
ACTION: result = os0.path.dirname(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path3) 
==================================================
str0 += 'c'                                                             # STEP 21
ACTION: str0 += 'c' 
str0 = '' : <type 'str'>
=> str0 = 'c' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 22
ACTION: path4 += "/" + component3 
component3 = 'omega' : <type 'str'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega/omega' : <type 'str'>
==================================================
component0 = "g"                                                        # STEP 23
ACTION: component0 = "g" 
component0 = 'omega' : <type 'str'>
=> component0 = 'g' : <type 'str'>
==================================================
os0.symlink(path4,path3)                                                # STEP 24
ACTION: os0.symlink(path4,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/omega' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> Symbolic links are not supported on Windows before Python 3.2
REFERENCE ACTION: os_REF0.symlink(path4,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.readlink(path0)                                            # STEP 25
ACTION: result = os0.readlink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
str0 += 'y'                                                             # STEP 26
ACTION: str0 += 'y' 
str0 = 'c' : <type 'str'>
=> str0 = 'cy' : <type 'str'>
==================================================
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 27
ACTION: fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/omega' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/omega'
==================================================
stat3 = os0.stat(path4)                                                 # STEP 28
ACTION: stat3 = os0.stat(path4) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/omega' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/omega/omega'
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/omega'
==================================================
str0 += 'g'                                                             # STEP 29
ACTION: str0 += 'g' 
str0 = 'cy' : <type 'str'>
=> str0 = 'cyg' : <type 'str'>
==================================================
os0.link(path3,path0)                                                   # STEP 30
ACTION: os0.link(path3,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> Links are not supported on Windows before Python 3.2
REFERENCE ACTION: os_REF0.link(path3,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.islink(path0)                                         # STEP 31
ACTION: result = os0.path.islink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path0) 
==================================================
os0.symlink(path4,path4)                                                # STEP 32
ACTION: os0.symlink(path4,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> Symbolic links are not supported on Windows before Python 3.2
REFERENCE ACTION: os_REF0.symlink(path4,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
component3 = "gamma"                                                    # STEP 33
ACTION: component3 = "gamma" 
component3 = 'omega' : <type 'str'>
=> component3 = 'gamma' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 34
ACTION: str0 += 'b' 
str0 = 'cyg' : <type 'str'>
=> str0 = 'cygb' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 35
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
stat3 = os0.stat(path4)                                                 # STEP 36
ACTION: stat3 = os0.stat(path4) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/omega' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/omega/omega'
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/omega'
==================================================
result = os0.path.isfile(path0)                                         # STEP 37
ACTION: result = os0.path.isfile(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path0) 
==================================================
fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 38
ACTION: fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/omega' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path4, os.O_CREAT | os.O_WRONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/omega'
==================================================
path4 += "/" + component1                                               # STEP 39
ACTION: path4 += "/" + component1 
component1 = 'c' : <type 'str'>
path4 = '/Volumes/ramdisk/test/omega/omega' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega/omega/c' : <type 'str'>
==================================================
os0.remove(path3)                                                       # STEP 40
ACTION: os0.remove(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 41
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = sorted(os0.listdir(path4))                                     # STEP 42
ACTION: result = sorted(os0.listdir(path4)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/omega/c' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/omega/omega/c'
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path4)) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/omega/c'
==================================================
bytes4 += 1                                                             # STEP 43
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
stat1 = os0.stat(path4)                                                 # STEP 44
ACTION: stat1 = os0.stat(path4) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/omega/c' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/omega/omega/c'
REFERENCE ACTION: stat_REF1 = os_REF0.stat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/omega/c'
==================================================
fd1 = os0.open(path4, os.O_RDWR)                                        # STEP 45
ACTION: fd1 = os0.open(path4, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/omega/c' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/omega/c'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path4, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/omega/c'
==================================================
os0.symlink(path0,path3)                                                # STEP 46
ACTION: os0.symlink(path0,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> Symbolic links are not supported on Windows before Python 3.2
REFERENCE ACTION: os_REF0.symlink(path0,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
stat4 = os0.stat(path4)                                                 # STEP 47
ACTION: stat4 = os0.stat(path4) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/omega/c' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/omega/omega/c'
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/omega/c'
==================================================
str0 += 'c'                                                             # STEP 48
ACTION: str0 += 'c' 
str0 = 'cygb' : <type 'str'>
=> str0 = 'cygbc' : <type 'str'>
==================================================
os0.link(path3,path0)                                                   # STEP 49
ACTION: os0.link(path3,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> Links are not supported on Windows before Python 3.2
REFERENCE ACTION: os_REF0.link(path3,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str0 += 'k'                                                             # STEP 50
ACTION: str0 += 'k' 
str0 = 'cygbc' : <type 'str'>
=> str0 = 'cygbck' : <type 'str'>
==================================================
result = os0.path.lexists(path0)                                        # STEP 51
ACTION: result = os0.path.lexists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path0) 
==================================================
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 52
ACTION: fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/omega/c' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/omega/c'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path4, os.O_WRONLY | os.O_APPEND) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/omega/c'
==================================================
component1 = "epsilon"                                                  # STEP 53
ACTION: component1 = "epsilon" 
component1 = 'c' : <type 'str'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 54
ACTION: str0 += 'x' 
str0 = 'cygbck' : <type 'str'>
=> str0 = 'cygbckx' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 55
ACTION: path0 += "/" + component0 
component0 = 'g' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 56
ACTION: str0 += " " 
str0 = 'cygbckx' : <type 'str'>
=> str0 = 'cygbckx ' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 57
ACTION: str0 += 'x' 
str0 = 'cygbckx ' : <type 'str'>
=> str0 = 'cygbckx x' : <type 'str'>
==================================================
os0.symlink(path4,path0)                                                # STEP 58
ACTION: os0.symlink(path4,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103707090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/omega/c' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> Symbolic links are not supported on Windows before Python 3.2
REFERENCE ACTION: os_REF0.symlink(path4,path0) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1043becb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 11283, in act291
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.196624040604 TOTAL RUNTIME
5 EXECUTED
859 TOTAL TEST OPERATIONS
0.0963819026947 TIME SPENT EXECUTING TEST OPERATIONS
0.0378518104553 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000412702560425 TIME SPENT CHECKING PROPERTIES
0.0967946052551 TOTAL TIME SPENT RUNNING SUT
0.0134437084198 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
