Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.49639.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (/lambda/test/ramdisk/Volumes) == (/Volumes/ramdisk/test/lambda) ',), <traceback object at 0x1005aa200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31924, in act592
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 66 steps

SAVING TEST AS failure.49639.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "beta"                                                      # STEP 0
ACTION: component4 = "beta" 
component4 = None : <type 'NoneType'>
=> component4 = 'beta' : <type 'str'>
==================================================
component0 = "f"                                                         # STEP 1
ACTION: component0 = "f" 
component0 = None : <type 'NoneType'>
=> component0 = 'f' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 2
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str0 = ""                                                                # STEP 3
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component2 = "lambda"                                                    # STEP 4
ACTION: component2 = "lambda" 
component2 = None : <type 'NoneType'>
=> component2 = 'lambda' : <type 'str'>
==================================================
str0 += 'g'                                                              # STEP 5
ACTION: str0 += 'g' 
str0 = '' : <type 'str'>
=> str0 = 'g' : <type 'str'>
==================================================
component3 = "d"                                                         # STEP 6
ACTION: component3 = "d" 
component3 = None : <type 'NoneType'>
=> component3 = 'd' : <type 'str'>
==================================================
str0 += 'o'                                                              # STEP 7
ACTION: str0 += 'o' 
str0 = 'g' : <type 'str'>
=> str0 = 'go' : <type 'str'>
==================================================
str0 += 'r'                                                              # STEP 8
ACTION: str0 += 'r' 
str0 = 'go' : <type 'str'>
=> str0 = 'gor' : <type 'str'>
==================================================
component1 = "h"                                                         # STEP 9
ACTION: component1 = "h" 
component1 = None : <type 'NoneType'>
=> component1 = 'h' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 10
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 11
ACTION: str2 += 'c' 
str2 = '' : <type 'str'>
=> str2 = 'c' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 12
ACTION: str2 += 'q' 
str2 = 'c' : <type 'str'>
=> str2 = 'cq' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 13
ACTION: str0 += 'a' 
str0 = 'gor' : <type 'str'>
=> str0 = 'gora' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 14
ACTION: str0 += 'l' 
str0 = 'gora' : <type 'str'>
=> str0 = 'goral' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 15
ACTION: str0 += 'o' 
str0 = 'goral' : <type 'str'>
=> str0 = 'goralo' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 16
ACTION: str2 += 'o' 
str2 = 'cq' : <type 'str'>
=> str2 = 'cqo' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 17
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str2 += 'v'                                                             # STEP 18
ACTION: str2 += 'v' 
str2 = 'cqo' : <type 'str'>
=> str2 = 'cqov' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 19
ACTION: str2 += 'w' 
str2 = 'cqov' : <type 'str'>
=> str2 = 'cqovw' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 20
ACTION: str2 += 'y' 
str2 = 'cqovw' : <type 'str'>
=> str2 = 'cqovwy' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 21
ACTION: str0 += 'e' 
str0 = 'goralo' : <type 'str'>
=> str0 = 'goraloe' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 22
ACTION: str2 = "" 
str2 = 'cqovwy' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 23
ACTION: str2 += 'd' 
str2 = '' : <type 'str'>
=> str2 = 'd' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 24
ACTION: str0 += 'g' 
str0 = 'goraloe' : <type 'str'>
=> str0 = 'goraloeg' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 25
ACTION: str0 += " " 
str0 = 'goraloeg' : <type 'str'>
=> str0 = 'goraloeg ' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 26
ACTION: str2 += 'd' 
str2 = 'd' : <type 'str'>
=> str2 = 'dd' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 27
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 28
ACTION: str2 += 'u' 
str2 = 'dd' : <type 'str'>
=> str2 = 'ddu' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 29
ACTION: str0 += 'g' 
str0 = 'goraloeg ' : <type 'str'>
=> str0 = 'goraloeg g' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 30
ACTION: str4 += 'm' 
str4 = '' : <type 'str'>
=> str4 = 'm' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 31
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 32
ACTION: str0 += 'b' 
str0 = 'goraloeg g' : <type 'str'>
=> str0 = 'goraloeg gb' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 33
ACTION: str0 += 'b' 
str0 = 'goraloeg gb' : <type 'str'>
=> str0 = 'goraloeg gbb' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 34
ACTION: str0 += 'h' 
str0 = 'goraloeg gbb' : <type 'str'>
=> str0 = 'goraloeg gbbh' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 35
ACTION: str2 += 's' 
str2 = 'ddu' : <type 'str'>
=> str2 = 'ddus' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 36
ACTION: str4 += 'e' 
str4 = 'm' : <type 'str'>
=> str4 = 'me' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 37
ACTION: str4 += 'q' 
str4 = 'me' : <type 'str'>
=> str4 = 'meq' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 38
ACTION: str4 += 'z' 
str4 = 'meq' : <type 'str'>
=> str4 = 'meqz' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 39
ACTION: str4 += 'u' 
str4 = 'meqz' : <type 'str'>
=> str4 = 'meqzu' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 40
ACTION: str0 += 'v' 
str0 = 'goraloeg gbbh' : <type 'str'>
=> str0 = 'goraloeg gbbhv' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 41
ACTION: str0 += 'b' 
str0 = 'goraloeg gbbhv' : <type 'str'>
=> str0 = 'goraloeg gbbhvb' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 42
ACTION: str0 = "" 
str0 = 'goraloeg gbbhvb' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 43
ACTION: str2 += 'm' 
str2 = 'ddus' : <type 'str'>
=> str2 = 'ddusm' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 44
ACTION: str4 += 'l' 
str4 = 'meqzu' : <type 'str'>
=> str4 = 'meqzul' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 45
ACTION: str0 += 'v' 
str0 = '' : <type 'str'>
=> str0 = 'v' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 46
ACTION: str0 += 'n' 
str0 = 'v' : <type 'str'>
=> str0 = 'vn' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 47
ACTION: str4 = "" 
str4 = 'meqzul' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 48
ACTION: str2 += 'z' 
str2 = 'ddusm' : <type 'str'>
=> str2 = 'ddusmz' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 49
ACTION: str4 += 'e' 
str4 = '' : <type 'str'>
=> str4 = 'e' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 50
ACTION: str4 += 'g' 
str4 = 'e' : <type 'str'>
=> str4 = 'eg' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 51
ACTION: str2 += 'k' 
str2 = 'ddusmz' : <type 'str'>
=> str2 = 'ddusmzk' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 52
ACTION: str0 += 'b' 
str0 = 'vn' : <type 'str'>
=> str0 = 'vnb' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 53
ACTION: str2 += 'o' 
str2 = 'ddusmzk' : <type 'str'>
=> str2 = 'ddusmzko' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 54
ACTION: path4 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 55
ACTION: str4 += 'h' 
str4 = 'eg' : <type 'str'>
=> str4 = 'egh' : <type 'str'>
==================================================
component2 = "d"                                                        # STEP 56
ACTION: component2 = "d" 
component2 = 'lambda' : <type 'str'>
=> component2 = 'd' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 57
ACTION: str4 += 'l' 
str4 = 'egh' : <type 'str'>
=> str4 = 'eghl' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 58
ACTION: str2 = "" 
str2 = 'ddusmzko' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 59
ACTION: str4 += 'v' 
str4 = 'eghl' : <type 'str'>
=> str4 = 'eghlv' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 60
ACTION: str4 = "" 
str4 = 'eghlv' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 61
ACTION: str2 += 'w' 
str2 = '' : <type 'str'>
=> str2 = 'w' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 62
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102db9cd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str4 += 'l'                                                             # STEP 63
ACTION: str4 += 'l' 
str4 = '' : <type 'str'>
=> str4 = 'l' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 64
ACTION: str0 += 'c' 
str0 = 'vnb' : <type 'str'>
=> str0 = 'vnbc' : <type 'str'>
==================================================
result = os0.path.abspath(path4)                                        # STEP 65
ACTION: result = os0.path.abspath(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102db9cd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path4) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (/lambda/test/ramdisk/Volumes) == (/Volumes/ramdisk/test/lambda) ',), <traceback object at 0x102e1cab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31924, in act592
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
0.0260498523712 TOTAL RUNTIME
1 EXECUTED
66 TOTAL TEST OPERATIONS
0.00157880783081 TIME SPENT EXECUTING TEST OPERATIONS
0.00360560417175 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.76565551758e-05 TIME SPENT CHECKING PROPERTIES
0.00160646438599 TOTAL TIME SPENT RUNNING SUT
0.00299596786499 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
