Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.50556.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (False) == (True) ',), <traceback object at 0x1006c3368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 29989, in act560
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 23 steps

SAVING TEST AS failure.50556.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "f"                                                         # STEP 0
ACTION: component1 = "f" 
component1 = None : <type 'NoneType'>
=> component1 = 'f' : <type 'str'>
==================================================
component3 = "beta"                                                      # STEP 1
ACTION: component3 = "beta" 
component3 = None : <type 'NoneType'>
=> component3 = 'beta' : <type 'str'>
==================================================
component0 = "delta"                                                     # STEP 2
ACTION: component0 = "delta" 
component0 = None : <type 'NoneType'>
=> component0 = 'delta' : <type 'str'>
==================================================
component4 = "g"                                                         # STEP 3
ACTION: component4 = "g" 
component4 = None : <type 'NoneType'>
=> component4 = 'g' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 4
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
component2 = "c"                                                         # STEP 5
ACTION: component2 = "c" 
component2 = None : <type 'NoneType'>
=> component2 = 'c' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 6
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103673190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str4 = ""                                                                # STEP 7
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 8
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str4 += 'd'                                                              # STEP 9
ACTION: str4 += 'd' 
str4 = '' : <type 'str'>
=> str4 = 'd' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 10
ACTION: str4 += 'r' 
str4 = 'd' : <type 'str'>
=> str4 = 'dr' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 11
ACTION: str4 += 'b' 
str4 = 'dr' : <type 'str'>
=> str4 = 'drb' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 12
ACTION: str4 += 's' 
str4 = 'drb' : <type 'str'>
=> str4 = 'drbs' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 13
ACTION: str4 += 'a' 
str4 = 'drbs' : <type 'str'>
=> str4 = 'drbsa' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 14
ACTION: str4 += 'z' 
str4 = 'drbsa' : <type 'str'>
=> str4 = 'drbsaz' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 15
ACTION: str4 += 'z' 
str4 = 'drbsaz' : <type 'str'>
=> str4 = 'drbsazz' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 16
ACTION: str4 += 't' 
str4 = 'drbsazz' : <type 'str'>
=> str4 = 'drbsazzt' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 17
ACTION: str4 += 'a' 
str4 = 'drbsazzt' : <type 'str'>
=> str4 = 'drbsazzta' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 18
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str4 += 'w'                                                             # STEP 19
ACTION: str4 += 'w' 
str4 = 'drbsazzta' : <type 'str'>
=> str4 = 'drbsazztaw' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 20
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 21
ACTION: str4 += 'r' 
str4 = 'drbsazztaw' : <type 'str'>
=> str4 = 'drbsazztawr' : <type 'str'>
==================================================
result = os0.path.lexists(path2)                                        # STEP 22
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103673190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (False) == (True) ',), <traceback object at 0x1053c5368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 29989, in act560
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
0.0240468978882 TOTAL RUNTIME
1 EXECUTED
23 TOTAL TEST OPERATIONS
0.0009605884552 TIME SPENT EXECUTING TEST OPERATIONS
0.00207853317261 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
8.82148742676e-06 TIME SPENT CHECKING PROPERTIES
0.000969409942627 TOTAL TIME SPENT RUNNING SUT
0.00363993644714 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
