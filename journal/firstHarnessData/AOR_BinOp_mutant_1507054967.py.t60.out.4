Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.65229.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for /: 'str' and 'str'",), <traceback object at 0x1006c32d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9973, in act271
    self.p_os[0].symlink(self.p_path[0],self.p_path[0])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3853, in symlink
    self.filesystem.CreateLink(path, link_target, create_missing_dirs=False)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2244, in CreateLink
    if (not self.IsLink(file_path)):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2443, in IsLink
    return self._IsType(path, stat.S_IFLNK, follow_symlinks=False)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2412, in _IsType
    obj = self.ResolveObject(path, follow_symlinks)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1839, in ResolveObject
    return self.LResolveObject(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1862, in LResolveObject
    (parent_directory, child_name) = self.SplitPath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1390, in SplitPath
    return ((drive / sep.join(path_components)), basename)
Original test has 44 steps

SAVING TEST AS failure.65229.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 1
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component4 = "beta"                                                      # STEP 2
ACTION: component4 = "beta" 
component4 = None : <type 'NoneType'>
=> component4 = 'beta' : <type 'str'>
==================================================
component1 = "alpha"                                                     # STEP 3
ACTION: component1 = "alpha" 
component1 = None : <type 'NoneType'>
=> component1 = 'alpha' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 4
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 5
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str2 += 'o'                                                              # STEP 6
ACTION: str2 += 'o' 
str2 = '' : <type 'str'>
=> str2 = 'o' : <type 'str'>
==================================================
str3 += 'a'                                                              # STEP 7
ACTION: str3 += 'a' 
str3 = '' : <type 'str'>
=> str3 = 'a' : <type 'str'>
==================================================
component2 = "c"                                                         # STEP 8
ACTION: component2 = "c" 
component2 = None : <type 'NoneType'>
=> component2 = 'c' : <type 'str'>
==================================================
str2 += 'y'                                                              # STEP 9
ACTION: str2 += 'y' 
str2 = 'o' : <type 'str'>
=> str2 = 'oy' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 10
ACTION: str3 += 'p' 
str3 = 'a' : <type 'str'>
=> str3 = 'ap' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 11
ACTION: str3 += 'i' 
str3 = 'ap' : <type 'str'>
=> str3 = 'api' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 12
ACTION: str2 += 'n' 
str2 = 'oy' : <type 'str'>
=> str2 = 'oyn' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 13
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component3 = "f"                                                        # STEP 14
ACTION: component3 = "f" 
component3 = None : <type 'NoneType'>
=> component3 = 'f' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 15
ACTION: str3 += 'n' 
str3 = 'api' : <type 'str'>
=> str3 = 'apin' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 16
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 17
ACTION: str3 += 'b' 
str3 = 'apin' : <type 'str'>
=> str3 = 'apinb' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 18
ACTION: str0 += 'v' 
str0 = '' : <type 'str'>
=> str0 = 'v' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 19
ACTION: str2 += 'z' 
str2 = 'oyn' : <type 'str'>
=> str2 = 'oynz' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 20
ACTION: str3 += " " 
str3 = 'apinb' : <type 'str'>
=> str3 = 'apinb ' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 21
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102673c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str3 += 'o'                                                             # STEP 22
ACTION: str3 += 'o' 
str3 = 'apinb ' : <type 'str'>
=> str3 = 'apinb o' : <type 'str'>
==================================================
component0 = "d"                                                        # STEP 23
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 24
ACTION: str2 += 'i' 
str2 = 'oynz' : <type 'str'>
=> str2 = 'oynzi' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 26
ACTION: str0 += 'x' 
str0 = 'v' : <type 'str'>
=> str0 = 'vx' : <type 'str'>
==================================================
str0 += 'f'                                                             # STEP 27
ACTION: str0 += 'f' 
str0 = 'vx' : <type 'str'>
=> str0 = 'vxf' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 28
ACTION: str0 += " " 
str0 = 'vxf' : <type 'str'>
=> str0 = 'vxf ' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 29
ACTION: str0 += 'r' 
str0 = 'vxf ' : <type 'str'>
=> str0 = 'vxf r' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 30
ACTION: str3 += 'u' 
str3 = 'apinb o' : <type 'str'>
=> str3 = 'apinb ou' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 31
ACTION: str2 += 'a' 
str2 = 'oynzi' : <type 'str'>
=> str2 = 'oynzia' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 32
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 33
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 34
ACTION: str2 += 'm' 
str2 = 'oynzia' : <type 'str'>
=> str2 = 'oynziam' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 35
ACTION: path0 += "/" + component2 
component2 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 36
ACTION: str0 += 'w' 
str0 = 'vxf r' : <type 'str'>
=> str0 = 'vxf rw' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 37
ACTION: str0 += 's' 
str0 = 'vxf rw' : <type 'str'>
=> str0 = 'vxf rws' : <type 'str'>
==================================================
result = sorted(os0.listdir(path3))                                     # STEP 38
ACTION: result = sorted(os0.listdir(path3)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102673c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path3)) 
==================================================
str0 += 'j'                                                             # STEP 39
ACTION: str0 += 'j' 
str0 = 'vxf rws' : <type 'str'>
=> str0 = 'vxf rwsj' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 40
ACTION: str0 += 'e' 
str0 = 'vxf rwsj' : <type 'str'>
=> str0 = 'vxf rwsje' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 41
ACTION: str2 += 'k' 
str2 = 'oynziam' : <type 'str'>
=> str2 = 'oynziamk' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 42
ACTION: str2 += " " 
str2 = 'oynziamk' : <type 'str'>
=> str2 = 'oynziamk ' : <type 'str'>
==================================================
os0.symlink(path0,path0)                                                # STEP 43
ACTION: os0.symlink(path0,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102673c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unsupported operand type(s) for /: 'str' and 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for /: 'str' and 'str'",), <traceback object at 0x102451518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9973, in act271
    self.p_os[0].symlink(self.p_path[0],self.p_path[0])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3853, in symlink
    self.filesystem.CreateLink(path, link_target, create_missing_dirs=False)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2244, in CreateLink
    if (not self.IsLink(file_path)):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2443, in IsLink
    return self._IsType(path, stat.S_IFLNK, follow_symlinks=False)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2412, in _IsType
    obj = self.ResolveObject(path, follow_symlinks)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1839, in ResolveObject
    return self.LResolveObject(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1862, in LResolveObject
    (parent_directory, child_name) = self.SplitPath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1390, in SplitPath
    return ((drive / sep.join(path_components)), basename)
STOPPING TESTING DUE TO FAILED TEST
0.0360288619995 TOTAL RUNTIME
1 EXECUTED
44 TOTAL TEST OPERATIONS
0.00473117828369 TIME SPENT EXECUTING TEST OPERATIONS
0.00206136703491 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.86102294922e-05 TIME SPENT CHECKING PROPERTIES
0.00475978851318 TOTAL TIME SPENT RUNNING SUT
0.00362777709961 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
