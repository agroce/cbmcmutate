Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.57099.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1028327a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 13068, in act319
    assert (type(raised) == type(refRaised))
Original test has 33 steps

SAVING TEST AS failure.57099.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "f"                                                         # STEP 0
ACTION: component2 = "f" 
component2 = None : <type 'NoneType'>
=> component2 = 'f' : <type 'str'>
==================================================
component1 = "b"                                                         # STEP 1
ACTION: component1 = "b" 
component1 = None : <type 'NoneType'>
=> component1 = 'b' : <type 'str'>
==================================================
component3 = "e"                                                         # STEP 2
ACTION: component3 = "e" 
component3 = None : <type 'NoneType'>
=> component3 = 'e' : <type 'str'>
==================================================
component0 = "lambda"                                                    # STEP 3
ACTION: component0 = "lambda" 
component0 = None : <type 'NoneType'>
=> component0 = 'lambda' : <type 'str'>
==================================================
component4 = "epsilon"                                                   # STEP 4
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 5
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101dc4b50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str0 = ""                                                                # STEP 6
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 7
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str0 += 'l'                                                              # STEP 8
ACTION: str0 += 'l' 
str0 = '' : <type 'str'>
=> str0 = 'l' : <type 'str'>
==================================================
str0 += 'h'                                                              # STEP 9
ACTION: str0 += 'h' 
str0 = 'l' : <type 'str'>
=> str0 = 'lh' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 10
ACTION: str0 += 'r' 
str0 = 'lh' : <type 'str'>
=> str0 = 'lhr' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 11
ACTION: str0 += 'c' 
str0 = 'lhr' : <type 'str'>
=> str0 = 'lhrc' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 12
ACTION: str0 += 's' 
str0 = 'lhrc' : <type 'str'>
=> str0 = 'lhrcs' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 13
ACTION: str0 += 'n' 
str0 = 'lhrcs' : <type 'str'>
=> str0 = 'lhrcsn' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 14
ACTION: str0 += 'j' 
str0 = 'lhrcsn' : <type 'str'>
=> str0 = 'lhrcsnj' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 15
ACTION: str0 = "" 
str0 = 'lhrcsnj' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 16
ACTION: str0 += 'w' 
str0 = '' : <type 'str'>
=> str0 = 'w' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 17
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 18
ACTION: str0 += 'j' 
str0 = 'w' : <type 'str'>
=> str0 = 'wj' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 19
ACTION: str0 += 's' 
str0 = 'wj' : <type 'str'>
=> str0 = 'wjs' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 20
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.isabs(path3)                                          # STEP 21
ACTION: result = os0.path.isabs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101dc4b50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path3) 
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 22
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 23
ACTION: str0 += 'l' 
str0 = 'wjs' : <type 'str'>
=> str0 = 'wjsl' : <type 'str'>
==================================================
path4 += "/" + component4                                               # STEP 24
ACTION: path4 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 25
ACTION: fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101dc4b50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
str3 += 'x'                                                             # STEP 26
ACTION: str3 += 'x' 
str3 = '' : <type 'str'>
=> str3 = 'x' : <type 'str'>
==================================================
result = os0.path.lexists(path3)                                        # STEP 27
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101dc4b50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
str0 += 'z'                                                             # STEP 28
ACTION: str0 += 'z' 
str0 = 'wjsl' : <type 'str'>
=> str0 = 'wjslz' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 29
ACTION: str0 += 'e' 
str0 = 'wjslz' : <type 'str'>
=> str0 = 'wjslze' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 30
ACTION: path3 += "/" + component2 
component2 = 'f' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
os0.write(fd1,str3)                                                     # STEP 31
ACTION: os0.write(fd1,str3) 
str3 = 'x' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101dc4b50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF1,str3) 
==================================================
os0.link(path4,path3)                                                   # STEP 32
ACTION: os0.link(path4,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101dc4b50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> Links are not supported on Windows before Python 3.2
REFERENCE ACTION: os_REF0.link(path4,path3) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1050f63f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 13068, in act319
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
1.16361498833 TOTAL RUNTIME
25 EXECUTED
4833 TOTAL TEST OPERATIONS
0.832203626633 TIME SPENT EXECUTING TEST OPERATIONS
0.203597307205 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.002366065979 TIME SPENT CHECKING PROPERTIES
0.834569692612 TOTAL TIME SPENT RUNNING SUT
0.0664985179901 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
