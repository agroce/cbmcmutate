Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.63318.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10352d560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20545, in act421
    assert (type(raised) == type(refRaised))
Original test has 51 steps

SAVING TEST AS failure.63318.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "b"                                                         # STEP 0
ACTION: component4 = "b" 
component4 = None : <type 'NoneType'>
=> component4 = 'b' : <type 'str'>
==================================================
component2 = "f"                                                         # STEP 1
ACTION: component2 = "f" 
component2 = None : <type 'NoneType'>
=> component2 = 'f' : <type 'str'>
==================================================
component1 = "e"                                                         # STEP 2
ACTION: component1 = "e" 
component1 = None : <type 'NoneType'>
=> component1 = 'e' : <type 'str'>
==================================================
component3 = "g"                                                         # STEP 3
ACTION: component3 = "g" 
component3 = None : <type 'NoneType'>
=> component3 = 'g' : <type 'str'>
==================================================
component0 = "a"                                                         # STEP 4
ACTION: component0 = "a" 
component0 = None : <type 'NoneType'>
=> component0 = 'a' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 5
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str3 = ""                                                                # STEP 6
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'z'                                                              # STEP 7
ACTION: str3 += 'z' 
str3 = '' : <type 'str'>
=> str3 = 'z' : <type 'str'>
==================================================
str3 += 'z'                                                              # STEP 8
ACTION: str3 += 'z' 
str3 = 'z' : <type 'str'>
=> str3 = 'zz' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 9
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str3 += 's'                                                             # STEP 10
ACTION: str3 += 's' 
str3 = 'zz' : <type 'str'>
=> str3 = 'zzs' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 11
ACTION: str3 += 'd' 
str3 = 'zzs' : <type 'str'>
=> str3 = 'zzsd' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 12
ACTION: str3 += 'z' 
str3 = 'zzsd' : <type 'str'>
=> str3 = 'zzsdz' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 13
ACTION: str3 += 'q' 
str3 = 'zzsdz' : <type 'str'>
=> str3 = 'zzsdzq' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 14
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 15
ACTION: str3 += 'w' 
str3 = 'zzsdzq' : <type 'str'>
=> str3 = 'zzsdzqw' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 16
ACTION: str2 += 'g' 
str2 = '' : <type 'str'>
=> str2 = 'g' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 17
ACTION: str3 += 'm' 
str3 = 'zzsdzqw' : <type 'str'>
=> str3 = 'zzsdzqwm' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 18
ACTION: str2 += 'k' 
str2 = 'g' : <type 'str'>
=> str2 = 'gk' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 19
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 20
ACTION: str2 += 'v' 
str2 = 'gk' : <type 'str'>
=> str2 = 'gkv' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 21
ACTION: path0 += "/" + component3 
component3 = 'g' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
component3 = "delta"                                                    # STEP 22
ACTION: component3 = "delta" 
component3 = 'g' : <type 'str'>
=> component3 = 'delta' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 23
ACTION: str3 += 'c' 
str3 = 'zzsdzqwm' : <type 'str'>
=> str3 = 'zzsdzqwmc' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 24
ACTION: str3 += 's' 
str3 = 'zzsdzqwmc' : <type 'str'>
=> str3 = 'zzsdzqwmcs' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 25
ACTION: str2 += 'r' 
str2 = 'gkv' : <type 'str'>
=> str2 = 'gkvr' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 26
ACTION: str2 += 'r' 
str2 = 'gkvr' : <type 'str'>
=> str2 = 'gkvrr' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 27
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 28
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1037e6690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 29
ACTION: fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1037e6690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
stat4 = os0.lstat(path0)                                                # STEP 30
ACTION: stat4 = os0.lstat(path0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1037e6690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039d93d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path0) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=18864085, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507411988, st_mtime=1507411988, st_ctime=1507411988) : <type 'posix.stat_result'>
==================================================
str2 += 'q'                                                             # STEP 31
ACTION: str2 += 'q' 
str2 = 'gkvrr' : <type 'str'>
=> str2 = 'gkvrrq' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 32
ACTION: str3 += 'v' 
str3 = 'zzsdzqwmcs' : <type 'str'>
=> str3 = 'zzsdzqwmcsv' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 33
ACTION: str2 += 'l' 
str2 = 'gkvrrq' : <type 'str'>
=> str2 = 'gkvrrql' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 34
ACTION: str2 += 'k' 
str2 = 'gkvrrql' : <type 'str'>
=> str2 = 'gkvrrqlk' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 35
ACTION: str3 += 'o' 
str3 = 'zzsdzqwmcsv' : <type 'str'>
=> str3 = 'zzsdzqwmcsvo' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 36
ACTION: str2 += 'q' 
str2 = 'gkvrrqlk' : <type 'str'>
=> str2 = 'gkvrrqlkq' : <type 'str'>
==================================================
os0.close(fd1)                                                          # STEP 37
ACTION: os0.close(fd1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1037e6690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.close(fd_REF1) 
==================================================
fd1 = os0.open(path0, os.O_RDONLY)                                      # STEP 38
ACTION: fd1 = os0.open(path0, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1037e6690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_RDONLY) 
==================================================
path0 += "/" + component3                                               # STEP 39
ACTION: path0 += "/" + component3 
component3 = 'delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/delta' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 40
ACTION: str3 += 'm' 
str3 = 'zzsdzqwmcsvo' : <type 'str'>
=> str3 = 'zzsdzqwmcsvom' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 41
ACTION: str3 += 'v' 
str3 = 'zzsdzqwmcsvom' : <type 'str'>
=> str3 = 'zzsdzqwmcsvomv' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 42
ACTION: str3 += 'c' 
str3 = 'zzsdzqwmcsvomv' : <type 'str'>
=> str3 = 'zzsdzqwmcsvomvc' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 43
ACTION: str2 += 'q' 
str2 = 'gkvrrqlkq' : <type 'str'>
=> str2 = 'gkvrrqlkqq' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 44
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
stat0 = os0.stat(path0)                                                 # STEP 45
ACTION: stat0 = os0.stat(path0) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1037e6690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/g/delta' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in fake filesystem: '/Volumes/ramdisk/test/g/delta'
REFERENCE ACTION: stat_REF0 = os_REF0.stat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/g/delta'
==================================================
str2 += 't'                                                             # STEP 46
ACTION: str2 += 't' 
str2 = 'gkvrrqlkqq' : <type 'str'>
=> str2 = 'gkvrrqlkqqt' : <type 'str'>
==================================================
result = os0.read(fd1,bytes0)                                           # STEP 47
ACTION: result = os0.read(fd1,bytes0) 
bytes0 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1037e6690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes0) 
==================================================
stat2 = os0.fstat(fd1)                                                  # STEP 48
ACTION: stat2 = os0.fstat(fd1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1037e6690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039d9a10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF1) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=18864085, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507411988, st_mtime=1507411988, st_ctime=1507411988) : <type 'posix.stat_result'>
==================================================
str2 += 'o'                                                             # STEP 49
ACTION: str2 += 'o' 
str2 = 'gkvrrqlkqqt' : <type 'str'>
=> str2 = 'gkvrrqlkqqto' : <type 'str'>
==================================================
os0.write(fd1,str3)                                                     # STEP 50
ACTION: os0.write(fd1,str3) 
str3 = 'zzsdzqwmcsvomvc' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1037e6690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF1,str3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102774e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20545, in act421
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.12658405304 TOTAL RUNTIME
4 EXECUTED
651 TOTAL TEST OPERATIONS
0.0625982284546 TIME SPENT EXECUTING TEST OPERATIONS
0.0293090343475 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000298976898193 TIME SPENT CHECKING PROPERTIES
0.0628972053528 TOTAL TIME SPENT RUNNING SUT
0.0107300281525 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
