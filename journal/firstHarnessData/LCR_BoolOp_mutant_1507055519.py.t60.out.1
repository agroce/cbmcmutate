Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.49358.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104efe248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 28976, in act544
    assert (type(raised) == type(refRaised))
Original test has 43 steps

SAVING TEST AS failure.49358.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path1 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 1
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
component2 = "g"                                                         # STEP 2
ACTION: component2 = "g" 
component2 = None : <type 'NoneType'>
=> component2 = 'g' : <type 'str'>
==================================================
component0 = "omega"                                                     # STEP 3
ACTION: component0 = "omega" 
component0 = None : <type 'NoneType'>
=> component0 = 'omega' : <type 'str'>
==================================================
component4 = "e"                                                         # STEP 4
ACTION: component4 = "e" 
component4 = None : <type 'NoneType'>
=> component4 = 'e' : <type 'str'>
==================================================
str1 += 'o'                                                              # STEP 5
ACTION: str1 += 'o' 
str1 = '' : <type 'str'>
=> str1 = 'o' : <type 'str'>
==================================================
component1 = "beta"                                                      # STEP 6
ACTION: component1 = "beta" 
component1 = None : <type 'NoneType'>
=> component1 = 'beta' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 7
ACTION: str1 = "" 
str1 = 'o' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 8
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str1 += 'n'                                                              # STEP 9
ACTION: str1 += 'n' 
str1 = '' : <type 'str'>
=> str1 = 'n' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 10
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component3 = "omega"                                                    # STEP 11
ACTION: component3 = "omega" 
component3 = None : <type 'NoneType'>
=> component3 = 'omega' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 12
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes4 = 0                                                              # STEP 13
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str1 += 'c'                                                             # STEP 14
ACTION: str1 += 'c' 
str1 = 'n' : <type 'str'>
=> str1 = 'nc' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 15
ACTION: str1 += 'c' 
str1 = 'nc' : <type 'str'>
=> str1 = 'ncc' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 16
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102615510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 += 't'                                                             # STEP 17
ACTION: str1 += 't' 
str1 = 'ncc' : <type 'str'>
=> str1 = 'ncct' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 18
ACTION: str1 += 'y' 
str1 = 'ncct' : <type 'str'>
=> str1 = 'nccty' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 19
ACTION: str1 += 'm' 
str1 = 'nccty' : <type 'str'>
=> str1 = 'ncctym' : <type 'str'>
==================================================
os0.mkdir(path1)                                                        # STEP 20
ACTION: os0.mkdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102615510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
os0.symlink(path3,path1)                                                # STEP 21
ACTION: os0.symlink(path3,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102615510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path3,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.makedirs(path1)                                                     # STEP 22
ACTION: os0.makedirs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102615510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = os0.path.isfile(path3)                                         # STEP 23
ACTION: result = os0.path.isfile(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102615510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path3) 
==================================================
result = os0.path.isabs(path1)                                          # STEP 24
ACTION: result = os0.path.isabs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102615510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path1) 
==================================================
str1 += 'h'                                                             # STEP 25
ACTION: str1 += 'h' 
str1 = 'ncctym' : <type 'str'>
=> str1 = 'ncctymh' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 26
ACTION: path3 += "/" + component0 
component0 = 'omega' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
os0.symlink(path1,path3)                                                # STEP 27
ACTION: os0.symlink(path1,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102615510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path1,path3) 
==================================================
component0 = "alpha"                                                    # STEP 28
ACTION: component0 = "alpha" 
component0 = 'omega' : <type 'str'>
=> component0 = 'alpha' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 29
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 30
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
path1 += "/" + component1                                               # STEP 31
ACTION: path1 += "/" + component1 
component1 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
result = os0.path.exists(path3)                                         # STEP 32
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102615510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
str1 += 'e'                                                             # STEP 33
ACTION: str1 += 'e' 
str1 = 'ncctymh' : <type 'str'>
=> str1 = 'ncctymhe' : <type 'str'>
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 34
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102615510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
str3 += 'y'                                                             # STEP 35
ACTION: str3 += 'y' 
str3 = '' : <type 'str'>
=> str3 = 'y' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 36
ACTION: str3 += 'z' 
str3 = 'y' : <type 'str'>
=> str3 = 'yz' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 37
ACTION: str3 += 's' 
str3 = 'yz' : <type 'str'>
=> str3 = 'yzs' : <type 'str'>
==================================================
result = os0.path.abspath(path3)                                        # STEP 38
ACTION: result = os0.path.abspath(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102615510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path3) 
==================================================
str3 += 'z'                                                             # STEP 39
ACTION: str3 += 'z' 
str3 = 'yzs' : <type 'str'>
=> str3 = 'yzsz' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 40
ACTION: str3 += 'y' 
str3 = 'yzsz' : <type 'str'>
=> str3 = 'yzszy' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 41
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.rename(path3,path1)                                                 # STEP 42
ACTION: os0.rename(path3,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102615510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake filesystem object: can not rename to existing file: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: os_REF0.rename(path3,path1) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104e88cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 28976, in act544
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
4.51793885231 TOTAL RUNTIME
86 EXECUTED
17043 TOTAL TEST OPERATIONS
3.41510915756 TIME SPENT EXECUTING TEST OPERATIONS
0.728893995285 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00894641876221 TIME SPENT CHECKING PROPERTIES
3.42405557632 TOTAL TIME SPENT RUNNING SUT
0.243091344833 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
