Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.55892.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('I/O operation on closed file',), <traceback object at 0x1021985a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21077, in act429
    result = self.p_os[0].read(self.p_fd[1],self.p_bytes[1])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3338, in read
    return file_handle.read(num_bytes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4338, in __getattr__
    self._check_open_file()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4404, in _check_open_file
    raise ValueError('I/O operation on closed file')
Original test has 91 steps

SAVING TEST AS failure.55892.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "d"                                                         # STEP 0
ACTION: component4 = "d" 
component4 = None : <type 'NoneType'>
=> component4 = 'd' : <type 'str'>
==================================================
component3 = "alpha"                                                     # STEP 1
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
component0 = "alpha"                                                     # STEP 2
ACTION: component0 = "alpha" 
component0 = None : <type 'NoneType'>
=> component0 = 'alpha' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 3
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 4
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'w'                                                              # STEP 5
ACTION: str3 += 'w' 
str3 = '' : <type 'str'>
=> str3 = 'w' : <type 'str'>
==================================================
component2 = "c"                                                         # STEP 6
ACTION: component2 = "c" 
component2 = None : <type 'NoneType'>
=> component2 = 'c' : <type 'str'>
==================================================
component1 = "h"                                                         # STEP 7
ACTION: component1 = "h" 
component1 = None : <type 'NoneType'>
=> component1 = 'h' : <type 'str'>
==================================================
str4 += 'i'                                                              # STEP 8
ACTION: str4 += 'i' 
str4 = '' : <type 'str'>
=> str4 = 'i' : <type 'str'>
==================================================
str3 += 'g'                                                              # STEP 9
ACTION: str3 += 'g' 
str3 = 'w' : <type 'str'>
=> str3 = 'wg' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 10
ACTION: str4 += 'd' 
str4 = 'i' : <type 'str'>
=> str4 = 'id' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 11
ACTION: str3 += 'j' 
str3 = 'wg' : <type 'str'>
=> str3 = 'wgj' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 12
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 13
ACTION: str4 += 'h' 
str4 = 'id' : <type 'str'>
=> str4 = 'idh' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 14
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str3 = ""                                                               # STEP 15
ACTION: str3 = "" 
str3 = 'wgj' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 16
ACTION: path2 += "/" + component2 
component2 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
result = os0.path.abspath(path2)                                        # STEP 17
ACTION: result = os0.path.abspath(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path2) 
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 18
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
str4 += 'n'                                                             # STEP 19
ACTION: str4 += 'n' 
str4 = 'idh' : <type 'str'>
=> str4 = 'idhn' : <type 'str'>
==================================================
stat4 = os0.stat(path2)                                                 # STEP 20
ACTION: stat4 = os0.stat(path2) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1021a3d50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path2) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=10376356, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507291348, st_mtime=1507291348, st_ctime=1507291348) : <type 'posix.stat_result'>
==================================================
str3 += 'j'                                                             # STEP 21
ACTION: str3 += 'j' 
str3 = '' : <type 'str'>
=> str3 = 'j' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 22
ACTION: str4 += 'f' 
str4 = 'idhn' : <type 'str'>
=> str4 = 'idhnf' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 23
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/c'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/c'
==================================================
str4 += 'z'                                                             # STEP 24
ACTION: str4 += 'z' 
str4 = 'idhnf' : <type 'str'>
=> str4 = 'idhnfz' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 25
ACTION: str4 += 'u' 
str4 = 'idhnfz' : <type 'str'>
=> str4 = 'idhnfzu' : <type 'str'>
==================================================
component2 = "g"                                                        # STEP 26
ACTION: component2 = "g" 
component2 = 'c' : <type 'str'>
=> component2 = 'g' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 27
ACTION: str4 += " " 
str4 = 'idhnfzu' : <type 'str'>
=> str4 = 'idhnfzu ' : <type 'str'>
==================================================
os0.link(path2,path2)                                                   # STEP 28
ACTION: os0.link(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/c'
REFERENCE ACTION: os_REF0.link(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
stat3 = os0.stat(path2)                                                 # STEP 29
ACTION: stat3 = os0.stat(path2) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1020d3090> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path2) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=10376356, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507291348, st_mtime=1507291348, st_ctime=1507291348) : <type 'posix.stat_result'>
==================================================
result = os0.readlink(path2)                                            # STEP 30
ACTION: result = os0.readlink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test/c'
REFERENCE ACTION: result_REF = os_REF0.readlink(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test/c'
==================================================
str3 += 'g'                                                             # STEP 31
ACTION: str3 += 'g' 
str3 = 'j' : <type 'str'>
=> str3 = 'jg' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 32
ACTION: str4 += 'v' 
str4 = 'idhnfzu ' : <type 'str'>
=> str4 = 'idhnfzu v' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 33
ACTION: str3 += 'x' 
str3 = 'jg' : <type 'str'>
=> str3 = 'jgx' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 34
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/c'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/c'
==================================================
result = stat3.st_size                                                  # STEP 35
ACTION: result = stat3.st_size 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1020d3090> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=10376356, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507291348, st_mtime=1507291348, st_ctime=1507291348) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF3.st_size 
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 36
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 37
ACTION: str3 += 's' 
str3 = 'jgx' : <type 'str'>
=> str3 = 'jgxs' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 38
ACTION: str4 += 'c' 
str4 = 'idhnfzu v' : <type 'str'>
=> str4 = 'idhnfzu vc' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 39
ACTION: str3 += 'w' 
str3 = 'jgxs' : <type 'str'>
=> str3 = 'jgxsw' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 40
ACTION: str4 += 'e' 
str4 = 'idhnfzu vc' : <type 'str'>
=> str4 = 'idhnfzu vce' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 41
ACTION: str4 += 'q' 
str4 = 'idhnfzu vce' : <type 'str'>
=> str4 = 'idhnfzu vceq' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 42
ACTION: str4 += 'v' 
str4 = 'idhnfzu vceq' : <type 'str'>
=> str4 = 'idhnfzu vceqv' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 43
ACTION: str3 += 'j' 
str3 = 'jgxsw' : <type 'str'>
=> str3 = 'jgxswj' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 44
ACTION: str3 += 'j' 
str3 = 'jgxswj' : <type 'str'>
=> str3 = 'jgxswjj' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 45
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.isdir(path1)                                          # STEP 46
ACTION: result = os0.path.isdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path1) 
==================================================
stat1 = os0.fstat(fd0)                                                  # STEP 47
ACTION: stat1 = os0.fstat(fd0) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102351950> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.fstat(fd_REF0) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=10376356, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507291348, st_mtime=1507291348, st_ctime=1507291348) : <type 'posix.stat_result'>
==================================================
str3 += 'c'                                                             # STEP 48
ACTION: str3 += 'c' 
str3 = 'jgxswjj' : <type 'str'>
=> str3 = 'jgxswjjc' : <type 'str'>
==================================================
result = os0.path.isfile(path1)                                         # STEP 49
ACTION: result = os0.path.isfile(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path1) 
==================================================
result = os0.readlink(path2)                                            # STEP 50
ACTION: result = os0.readlink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
result = os0.path.dirname(path1)                                        # STEP 51
ACTION: result = os0.path.dirname(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path1) 
==================================================
str3 += 'y'                                                             # STEP 52
ACTION: str3 += 'y' 
str3 = 'jgxswjjc' : <type 'str'>
=> str3 = 'jgxswjjcy' : <type 'str'>
==================================================
os0.makedirs(path2)                                                     # STEP 53
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
str4 += 'n'                                                             # STEP 54
ACTION: str4 += 'n' 
str4 = 'idhnfzu vceqv' : <type 'str'>
=> str4 = 'idhnfzu vceqvn' : <type 'str'>
==================================================
stat2 = os0.fstat(fd0)                                                  # STEP 55
ACTION: stat2 = os0.fstat(fd0) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1020d3150> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF0) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=10376356, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507291348, st_mtime=1507291348, st_ctime=1507291348) : <type 'posix.stat_result'>
==================================================
str4 += 'h'                                                             # STEP 56
ACTION: str4 += 'h' 
str4 = 'idhnfzu vceqvn' : <type 'str'>
=> str4 = 'idhnfzu vceqvnh' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 57
ACTION: path1 += "/" + component0 
component0 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
component0 = "b"                                                        # STEP 58
ACTION: component0 = "b" 
component0 = 'alpha' : <type 'str'>
=> component0 = 'b' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 59
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
result = os0.path.exists(path1)                                         # STEP 60
ACTION: result = os0.path.exists(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path1) 
==================================================
result = stat2.st_size                                                  # STEP 61
ACTION: result = stat2.st_size 
stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1020d3150> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF2 = posix.stat_result(st_mode=33261, st_ino=10376356, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507291348, st_mtime=1507291348, st_ctime=1507291348) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF2.st_size 
==================================================
result = os0.readlink(path2)                                            # STEP 62
ACTION: result = os0.readlink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 63
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_EXCL) 
=> fd_REF1 = 5 : <type 'int'>
==================================================
str4 += 'r'                                                             # STEP 64
ACTION: str4 += 'r' 
str4 = 'idhnfzu vceqvnh' : <type 'str'>
=> str4 = 'idhnfzu vceqvnhr' : <type 'str'>
==================================================
os0.mkdir(path1)                                                        # STEP 65
ACTION: os0.mkdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: os_REF0.mkdir(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/alpha'
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 66
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 67
ACTION: str4 += 'b' 
str4 = 'idhnfzu vceqvnhr' : <type 'str'>
=> str4 = 'idhnfzu vceqvnhrb' : <type 'str'>
==================================================
result = os0.path.exists(path3)                                         # STEP 68
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
os0.symlink(path3,path2)                                                # STEP 69
ACTION: os0.symlink(path3,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path3,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.link(path2,path2)                                                   # STEP 70
ACTION: os0.link(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.lexists(path2)                                        # STEP 71
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
str4 += 'd'                                                             # STEP 72
ACTION: str4 += 'd' 
str4 = 'idhnfzu vceqvnhrb' : <type 'str'>
=> str4 = 'idhnfzu vceqvnhrbd' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 73
ACTION: str4 += 's' 
str4 = 'idhnfzu vceqvnhrbd' : <type 'str'>
=> str4 = 'idhnfzu vceqvnhrbds' : <type 'str'>
==================================================
result = stat3.st_size                                                  # STEP 74
ACTION: result = stat3.st_size 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1020d3090> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=10376356, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507291348, st_mtime=1507291348, st_ctime=1507291348) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF3.st_size 
==================================================
os0.mkdir(path3)                                                        # STEP 75
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
str4 += 'e'                                                             # STEP 76
ACTION: str4 += 'e' 
str4 = 'idhnfzu vceqvnhrbds' : <type 'str'>
=> str4 = 'idhnfzu vceqvnhrbdse' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 77
ACTION: str3 += 'd' 
str3 = 'jgxswjjcy' : <type 'str'>
=> str3 = 'jgxswjjcyd' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 78
ACTION: str3 += 'k' 
str3 = 'jgxswjjcyd' : <type 'str'>
=> str3 = 'jgxswjjcydk' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 79
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 80
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 81
ACTION: str0 += 't' 
str0 = '' : <type 'str'>
=> str0 = 't' : <type 'str'>
==================================================
os0.symlink(path1,path3)                                                # STEP 82
ACTION: os0.symlink(path1,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path1,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str0 += 'd'                                                             # STEP 83
ACTION: str0 += 'd' 
str0 = 't' : <type 'str'>
=> str0 = 'td' : <type 'str'>
==================================================
os0.rename(path1,path3)                                                 # STEP 84
ACTION: os0.rename(path1,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake filesystem object: can not rename to non-empty directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.rename(path1,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory
==================================================
str3 += 'g'                                                             # STEP 85
ACTION: str3 += 'g' 
str3 = 'jgxswjjcydk' : <type 'str'>
=> str3 = 'jgxswjjcydkg' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 86
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
os0.rename(path1,path3)                                                 # STEP 87
ACTION: os0.rename(path1,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake filesystem object: can not rename to non-empty directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.rename(path1,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory
==================================================
result = os0.path.exists(path3)                                         # STEP 88
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
bytes1 = 0                                                              # STEP 89
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
result = os0.read(fd1,bytes1)                                           # STEP 90
ACTION: result = os0.read(fd1,bytes1) 
bytes1 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d3210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> I/O operation on closed file
ERROR: (<type 'exceptions.ValueError'>, ValueError('I/O operation on closed file',), <traceback object at 0x10441c5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21077, in act429
    result = self.p_os[0].read(self.p_fd[1],self.p_bytes[1])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3338, in read
    return file_handle.read(num_bytes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4338, in __getattr__
    self._check_open_file()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4404, in _check_open_file
    raise ValueError('I/O operation on closed file')
STOPPING TESTING DUE TO FAILED TEST
0.0592401027679 TOTAL RUNTIME
1 EXECUTED
91 TOTAL TEST OPERATIONS
0.0152206420898 TIME SPENT EXECUTING TEST OPERATIONS
0.00431132316589 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
5.74588775635e-05 TIME SPENT CHECKING PROPERTIES
0.0152781009674 TOTAL TIME SPENT RUNNING SUT
0.00312495231628 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
