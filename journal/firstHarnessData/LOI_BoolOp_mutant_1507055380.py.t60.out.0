Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.57916.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105301128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 10517, in act279
    assert (type(raised) == type(refRaised))
Original test has 81 steps

SAVING TEST AS failure.57916.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "h"                                                         # STEP 0
ACTION: component1 = "h" 
component1 = None : <type 'NoneType'>
=> component1 = 'h' : <type 'str'>
==================================================
component3 = "phi"                                                       # STEP 1
ACTION: component3 = "phi" 
component3 = None : <type 'NoneType'>
=> component3 = 'phi' : <type 'str'>
==================================================
component2 = "f"                                                         # STEP 2
ACTION: component2 = "f" 
component2 = None : <type 'NoneType'>
=> component2 = 'f' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 3
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component4 = "h"                                                         # STEP 4
ACTION: component4 = "h" 
component4 = None : <type 'NoneType'>
=> component4 = 'h' : <type 'str'>
==================================================
component0 = "d"                                                         # STEP 5
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 6
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str0 = ""                                                                # STEP 7
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'u'                                                              # STEP 8
ACTION: str0 += 'u' 
str0 = '' : <type 'str'>
=> str0 = 'u' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 9
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 10
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 11
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 12
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
bytes0 += 1                                                             # STEP 13
ACTION: bytes0 += 1 
bytes0 = 1 : <type 'int'>
=> bytes0 = 2 : <type 'int'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 14
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 15
ACTION: str0 += 'k' 
str0 = 'u' : <type 'str'>
=> str0 = 'uk' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 16
ACTION: str0 += 'j' 
str0 = 'uk' : <type 'str'>
=> str0 = 'ukj' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 17
ACTION: str0 += 'p' 
str0 = 'ukj' : <type 'str'>
=> str0 = 'ukjp' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 18
ACTION: path0 += "/" + component0 
component0 = 'd' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 19
ACTION: path0 += "/" + component3 
component3 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/phi' : <type 'str'>
==================================================
component0 = "beta"                                                     # STEP 20
ACTION: component0 = "beta" 
component0 = 'd' : <type 'str'>
=> component0 = 'beta' : <type 'str'>
==================================================
component3 = "c"                                                        # STEP 21
ACTION: component3 = "c" 
component3 = 'phi' : <type 'str'>
=> component3 = 'c' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 22
ACTION: path2 += "/" + component2 
component2 = 'f' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 23
ACTION: path4 += "/" + component0 
component0 = 'beta' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 24
ACTION: str0 += 'x' 
str0 = 'ukjp' : <type 'str'>
=> str0 = 'ukjpx' : <type 'str'>
==================================================
component0 = "lambda"                                                   # STEP 25
ACTION: component0 = "lambda" 
component0 = 'beta' : <type 'str'>
=> component0 = 'lambda' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 26
ACTION: path2 += "/" + component1 
component1 = 'h' : <type 'str'>
path2 = '/Volumes/ramdisk/test/f' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f/h' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 27
ACTION: path4 += "/" + component1 
component1 = 'h' : <type 'str'>
path4 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/beta/h' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 28
ACTION: str0 += 'q' 
str0 = 'ukjpx' : <type 'str'>
=> str0 = 'ukjpxq' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 29
ACTION: path4 += "/" + component1 
component1 = 'h' : <type 'str'>
path4 = '/Volumes/ramdisk/test/beta/h' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/beta/h/h' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 30
ACTION: path2 += "/" + component3 
component3 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test/f/h' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f/h/c' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 31
ACTION: path2 += "/" + component2 
component2 = 'f' : <type 'str'>
path2 = '/Volumes/ramdisk/test/f/h/c' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f/h/c/f' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 32
ACTION: path2 += "/" + component2 
component2 = 'f' : <type 'str'>
path2 = '/Volumes/ramdisk/test/f/h/c/f' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f/h/c/f/f' : <type 'str'>
==================================================
component2 = "g"                                                        # STEP 33
ACTION: component2 = "g" 
component2 = 'f' : <type 'str'>
=> component2 = 'g' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 34
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/d/phi' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 35
ACTION: str0 += " " 
str0 = 'ukjpxq' : <type 'str'>
=> str0 = 'ukjpxq ' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 36
ACTION: str0 += 'h' 
str0 = 'ukjpxq ' : <type 'str'>
=> str0 = 'ukjpxq h' : <type 'str'>
==================================================
path4 += "/" + component4                                               # STEP 37
ACTION: path4 += "/" + component4 
component4 = 'h' : <type 'str'>
path4 = '/Volumes/ramdisk/test/beta/h/h' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/beta/h/h/h' : <type 'str'>
==================================================
component4 = "delta"                                                    # STEP 38
ACTION: component4 = "delta" 
component4 = 'h' : <type 'str'>
=> component4 = 'delta' : <type 'str'>
==================================================
component3 = "c"                                                        # STEP 39
ACTION: component3 = "c" 
component3 = 'c' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 40
ACTION: str0 += 'b' 
str0 = 'ukjpxq h' : <type 'str'>
=> str0 = 'ukjpxq hb' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 41
ACTION: path2 += "/" + component0 
component0 = 'lambda' : <type 'str'>
path2 = '/Volumes/ramdisk/test/f/h/c/f/f' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f/h/c/f/f/lambda' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 42
ACTION: str0 += 'm' 
str0 = 'ukjpxq hb' : <type 'str'>
=> str0 = 'ukjpxq hbm' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 43
ACTION: str0 += 'a' 
str0 = 'ukjpxq hbm' : <type 'str'>
=> str0 = 'ukjpxq hbma' : <type 'str'>
==================================================
component0 = "d"                                                        # STEP 44
ACTION: component0 = "d" 
component0 = 'lambda' : <type 'str'>
=> component0 = 'd' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 45
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/f/h/c/f/f/lambda' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component1 = "d"                                                        # STEP 46
ACTION: component1 = "d" 
component1 = 'h' : <type 'str'>
=> component1 = 'd' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 47
ACTION: str0 = "" 
str0 = 'ukjpxq hbma' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 48
ACTION: str0 += 's' 
str0 = '' : <type 'str'>
=> str0 = 's' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 49
ACTION: path2 += "/" + component4 
component4 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 50
ACTION: str0 += 'c' 
str0 = 's' : <type 'str'>
=> str0 = 'sc' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 51
ACTION: path0 += "/" + component1 
component1 = 'd' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 52
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 53
ACTION: str0 += 'e' 
str0 = 'sc' : <type 'str'>
=> str0 = 'sce' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 54
ACTION: path0 += "/" + component0 
component0 = 'd' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/d' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 55
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 56
ACTION: bytes0 = 0 
bytes0 = 2 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
component1 = "lambda"                                                   # STEP 57
ACTION: component1 = "lambda" 
component1 = 'd' : <type 'str'>
=> component1 = 'lambda' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 58
ACTION: path3 += "/" + component3 
component3 = 'c' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 59
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 60
ACTION: path0 += "/" + component4 
component4 = 'delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d/d' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/d/delta' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 61
ACTION: path4 += "/" + component0 
component0 = 'd' : <type 'str'>
path4 = '/Volumes/ramdisk/test/beta/h/h/h' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/beta/h/h/h/d' : <type 'str'>
==================================================
component3 = "b"                                                        # STEP 62
ACTION: component3 = "b" 
component3 = 'c' : <type 'str'>
=> component3 = 'b' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 63
ACTION: path2 += "/" + component1 
component1 = 'lambda' : <type 'str'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/delta/lambda' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 64
ACTION: str3 += 'z' 
str3 = '' : <type 'str'>
=> str3 = 'z' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 65
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1044b8f10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.path.dirname(path1)                                        # STEP 66
ACTION: result = os0.path.dirname(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1044b8f10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path1) 
==================================================
stat1 = os0.lstat(path4)                                                # STEP 67
ACTION: stat1 = os0.lstat(path4) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1044b8f10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/beta/h/h/h/d' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/beta/h/h/h/d'
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/h/h/h/d'
==================================================
os0.link(path4,path4)                                                   # STEP 68
ACTION: os0.link(path4,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1044b8f10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/beta/h/h/h/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/beta/h/h/h'
REFERENCE ACTION: os_REF0.link(path4,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
os0.rename(path3,path0)                                                 # STEP 69
ACTION: os0.rename(path3,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1044b8f10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/c' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d/d/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake filesystem object: can not rename nonexistent file: '/Volumes/ramdisk/test/c'
REFERENCE ACTION: os_REF0.rename(path3,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 70
ACTION: fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1044b8f10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/beta/h/h/h/d' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/beta/h/h/h/d'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path4, os.O_CREAT | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/h/h/h/d'
==================================================
fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 71
ACTION: fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1044b8f10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/beta/h/h/h/d' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/beta/h/h/h/d'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path4, os.O_CREAT | os.O_WRONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/h/h/h/d'
==================================================
str3 += 'w'                                                             # STEP 72
ACTION: str3 += 'w' 
str3 = 'z' : <type 'str'>
=> str3 = 'zw' : <type 'str'>
==================================================
component0 = "b"                                                        # STEP 73
ACTION: component0 = "b" 
component0 = 'd' : <type 'str'>
=> component0 = 'b' : <type 'str'>
==================================================
component1 = "g"                                                        # STEP 74
ACTION: component1 = "g" 
component1 = 'lambda' : <type 'str'>
=> component1 = 'g' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 75
ACTION: str3 = "" 
str3 = 'zw' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
result = os0.path.getsize(path0)                                        # STEP 76
ACTION: result = os0.path.getsize(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1044b8f10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/d/d/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/d/d/delta'
==================================================
result = os0.path.abspath(path2)                                        # STEP 77
ACTION: result = os0.path.abspath(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1044b8f10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path2) 
==================================================
result = os0.path.exists(path1)                                         # STEP 78
ACTION: result = os0.path.exists(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1044b8f10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path1) 
==================================================
fd1 = os0.open(path4, os.O_RDWR)                                        # STEP 79
ACTION: fd1 = os0.open(path4, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1044b8f10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/beta/h/h/h/d' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/h/h/h/d'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path4, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/h/h/h/d'
==================================================
os0.symlink(path1,path3)                                                # STEP 80
ACTION: os0.symlink(path1,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1044b8f10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
path3 = '/Volumes/ramdisk/test/c' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/c'
REFERENCE ACTION: os_REF0.symlink(path1,path3) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1006c3368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 10517, in act279
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.047091960907 TOTAL RUNTIME
1 EXECUTED
81 TOTAL TEST OPERATIONS
0.00754809379578 TIME SPENT EXECUTING TEST OPERATIONS
0.00626397132874 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.14848327637e-05 TIME SPENT CHECKING PROPERTIES
0.00758957862854 TOTAL TIME SPENT RUNNING SUT
0.00503396987915 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
