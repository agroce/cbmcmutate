Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.58726.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for -: 'str' and 'str'",), <traceback object at 0x104b77c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31336, in act583
    result = self.p_os[0].path.getsize(self.p_path[0])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2765, in getsize
    file_obj = self.filesystem.ResolveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1837, in ResolveObject
    return self.GetObjectFromNormalizedPath(self.ResolvePath(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1752, in ResolvePath
    raise error_class(errno.ELOOP, ("Too many levels of symbolic links: '%s'" - _ComponentsToPath(resolved_components)))
Original test has 95 steps

SAVING TEST AS failure.58726.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "d"                                                         # STEP 0
ACTION: component4 = "d" 
component4 = None : <type 'NoneType'>
=> component4 = 'd' : <type 'str'>
==================================================
component1 = "g"                                                         # STEP 1
ACTION: component1 = "g" 
component1 = None : <type 'NoneType'>
=> component1 = 'g' : <type 'str'>
==================================================
component3 = "gamma"                                                     # STEP 2
ACTION: component3 = "gamma" 
component3 = None : <type 'NoneType'>
=> component3 = 'gamma' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 3
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 4
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 5
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str2 += 'z'                                                              # STEP 6
ACTION: str2 += 'z' 
str2 = '' : <type 'str'>
=> str2 = 'z' : <type 'str'>
==================================================
component0 = "gamma"                                                     # STEP 7
ACTION: component0 = "gamma" 
component0 = None : <type 'NoneType'>
=> component0 = 'gamma' : <type 'str'>
==================================================
str2 += 'm'                                                              # STEP 8
ACTION: str2 += 'm' 
str2 = 'z' : <type 'str'>
=> str2 = 'zm' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 10
ACTION: str2 += 'u' 
str2 = 'zm' : <type 'str'>
=> str2 = 'zmu' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 11
ACTION: str2 += 'u' 
str2 = 'zmu' : <type 'str'>
=> str2 = 'zmuu' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 12
ACTION: str1 += 's' 
str1 = '' : <type 'str'>
=> str1 = 's' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 13
ACTION: str2 += 'm' 
str2 = 'zmuu' : <type 'str'>
=> str2 = 'zmuum' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 14
ACTION: str2 += 'q' 
str2 = 'zmuum' : <type 'str'>
=> str2 = 'zmuumq' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 15
ACTION: str1 += 'l' 
str1 = 's' : <type 'str'>
=> str1 = 'sl' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 16
ACTION: str1 += 'd' 
str1 = 'sl' : <type 'str'>
=> str1 = 'sld' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 17
ACTION: str1 += 'i' 
str1 = 'sld' : <type 'str'>
=> str1 = 'sldi' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 18
ACTION: str1 += 'y' 
str1 = 'sldi' : <type 'str'>
=> str1 = 'sldiy' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 19
ACTION: str1 = "" 
str1 = 'sldiy' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 20
ACTION: str2 += 'i' 
str2 = 'zmuumq' : <type 'str'>
=> str2 = 'zmuumqi' : <type 'str'>
==================================================
component2 = "delta"                                                    # STEP 21
ACTION: component2 = "delta" 
component2 = None : <type 'NoneType'>
=> component2 = 'delta' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 22
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 23
ACTION: str1 += 'f' 
str1 = '' : <type 'str'>
=> str1 = 'f' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 24
ACTION: str1 += 's' 
str1 = 'f' : <type 'str'>
=> str1 = 'fs' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 25
ACTION: str2 += 'v' 
str2 = 'zmuumqi' : <type 'str'>
=> str2 = 'zmuumqiv' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 26
ACTION: str1 += 'l' 
str1 = 'fs' : <type 'str'>
=> str1 = 'fsl' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 27
ACTION: str2 += 'w' 
str2 = 'zmuumqiv' : <type 'str'>
=> str2 = 'zmuumqivw' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 28
ACTION: str1 += 'n' 
str1 = 'fsl' : <type 'str'>
=> str1 = 'fsln' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 29
ACTION: path4 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 30
ACTION: str2 += 'm' 
str2 = 'zmuumqivw' : <type 'str'>
=> str2 = 'zmuumqivwm' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 31
ACTION: str2 += 'q' 
str2 = 'zmuumqivwm' : <type 'str'>
=> str2 = 'zmuumqivwmq' : <type 'str'>
==================================================
component0 = "lambda"                                                   # STEP 32
ACTION: component0 = "lambda" 
component0 = 'gamma' : <type 'str'>
=> component0 = 'lambda' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 33
ACTION: str2 += 'n' 
str2 = 'zmuumqivwmq' : <type 'str'>
=> str2 = 'zmuumqivwmqn' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 34
ACTION: str1 += 'x' 
str1 = 'fsln' : <type 'str'>
=> str1 = 'fslnx' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 35
ACTION: str2 += 'd' 
str2 = 'zmuumqivwmqn' : <type 'str'>
=> str2 = 'zmuumqivwmqnd' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 36
ACTION: path4 += "/" + component0 
component0 = 'lambda' : <type 'str'>
path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma/lambda' : <type 'str'>
==================================================
component0 = "delta"                                                    # STEP 37
ACTION: component0 = "delta" 
component0 = 'lambda' : <type 'str'>
=> component0 = 'delta' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 38
ACTION: str2 += " " 
str2 = 'zmuumqivwmqnd' : <type 'str'>
=> str2 = 'zmuumqivwmqnd ' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 39
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path4 += "/" + component3                                               # STEP 40
ACTION: path4 += "/" + component3 
component3 = 'gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test/gamma/lambda' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma/lambda/gamma' : <type 'str'>
==================================================
component3 = "beta"                                                     # STEP 41
ACTION: component3 = "beta" 
component3 = 'gamma' : <type 'str'>
=> component3 = 'beta' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 42
ACTION: str2 += 'd' 
str2 = 'zmuumqivwmqnd ' : <type 'str'>
=> str2 = 'zmuumqivwmqnd d' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 43
ACTION: str2 += 'd' 
str2 = 'zmuumqivwmqnd d' : <type 'str'>
=> str2 = 'zmuumqivwmqnd dd' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 44
ACTION: str1 += 'z' 
str1 = 'fslnx' : <type 'str'>
=> str1 = 'fslnxz' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 45
ACTION: str1 += 'c' 
str1 = 'fslnxz' : <type 'str'>
=> str1 = 'fslnxzc' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 46
ACTION: str1 += 'o' 
str1 = 'fslnxzc' : <type 'str'>
=> str1 = 'fslnxzco' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 47
ACTION: str2 += 'n' 
str2 = 'zmuumqivwmqnd dd' : <type 'str'>
=> str2 = 'zmuumqivwmqnd ddn' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 48
ACTION: str1 += 's' 
str1 = 'fslnxzco' : <type 'str'>
=> str1 = 'fslnxzcos' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 49
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str1 += 'o'                                                             # STEP 50
ACTION: str1 += 'o' 
str1 = 'fslnxzcos' : <type 'str'>
=> str1 = 'fslnxzcoso' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 51
ACTION: str2 += 'l' 
str2 = 'zmuumqivwmqnd ddn' : <type 'str'>
=> str2 = 'zmuumqivwmqnd ddnl' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 52
ACTION: str2 += 'b' 
str2 = 'zmuumqivwmqnd ddnl' : <type 'str'>
=> str2 = 'zmuumqivwmqnd ddnlb' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 53
ACTION: str1 += 'k' 
str1 = 'fslnxzcoso' : <type 'str'>
=> str1 = 'fslnxzcosok' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 54
ACTION: str1 += 'u' 
str1 = 'fslnxzcosok' : <type 'str'>
=> str1 = 'fslnxzcosoku' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 55
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 += 'k'                                                             # STEP 56
ACTION: str1 += 'k' 
str1 = 'fslnxzcosoku' : <type 'str'>
=> str1 = 'fslnxzcosokuk' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 57
ACTION: str1 += 'q' 
str1 = 'fslnxzcosokuk' : <type 'str'>
=> str1 = 'fslnxzcosokukq' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 58
ACTION: str1 += 'w' 
str1 = 'fslnxzcosokukq' : <type 'str'>
=> str1 = 'fslnxzcosokukqw' : <type 'str'>
==================================================
result = os0.path.getsize(path4)                                        # STEP 59
ACTION: result = os0.path.getsize(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/gamma/lambda/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma/lambda/gamma'
==================================================
result = os0.path.islink(path2)                                         # STEP 60
ACTION: result = os0.path.islink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path2) 
==================================================
os0.makedirs(path4)                                                     # STEP 61
ACTION: os0.makedirs(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/gamma/lambda/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path4) 
==================================================
str2 += 'l'                                                             # STEP 62
ACTION: str2 += 'l' 
str2 = 'zmuumqivwmqnd ddnlb' : <type 'str'>
=> str2 = 'zmuumqivwmqnd ddnlbl' : <type 'str'>
==================================================
os0.symlink(path2,path4)                                                # STEP 63
ACTION: os0.symlink(path2,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
path4 = '/Volumes/ramdisk/test/gamma/lambda/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/gamma/lambda/gamma'
REFERENCE ACTION: os_REF0.symlink(path2,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
stat2 = os0.lstat(path4)                                                # STEP 64
ACTION: stat2 = os0.lstat(path4) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/gamma/lambda/gamma' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104f5b2d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.lstat(path4) 
=> stat_REF2 = posix.stat_result(st_mode=16877, st_ino=13044139, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507329328, st_mtime=1507329328, st_ctime=1507329328) : <type 'posix.stat_result'>
==================================================
result = os0.path.islink(path4)                                         # STEP 65
ACTION: result = os0.path.islink(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/gamma/lambda/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path4) 
==================================================
path2 += "/" + component3                                               # STEP 66
ACTION: path2 += "/" + component3 
component3 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
os0.link(path4,path2)                                                   # STEP 67
ACTION: os0.link(path4,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/gamma/lambda/gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Cannot create hard link to directory: '/Volumes/ramdisk/test/gamma/lambda/gamma'
REFERENCE ACTION: os_REF0.link(path4,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted
==================================================
fd0 = os0.open(path2, os.O_RDWR)                                        # STEP 68
ACTION: fd0 = os0.open(path2, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
==================================================
str1 += 'f'                                                             # STEP 69
ACTION: str1 += 'f' 
str1 = 'fslnxzcosokukqw' : <type 'str'>
=> str1 = 'fslnxzcosokukqwf' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 70
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 71
ACTION: path2 += "/" + component3 
component3 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 72
ACTION: path0 += "/" + component3 
component3 = 'beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 73
ACTION: str1 += 'f' 
str1 = 'fslnxzcosokukqwf' : <type 'str'>
=> str1 = 'fslnxzcosokukqwff' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 74
ACTION: str2 += 'e' 
str2 = 'zmuumqivwmqnd ddnlbl' : <type 'str'>
=> str2 = 'zmuumqivwmqnd ddnlble' : <type 'str'>
==================================================
result = os0.path.exists(path2)                                         # STEP 75
ACTION: result = os0.path.exists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path2) 
==================================================
result = os0.path.dirname(path4)                                        # STEP 76
ACTION: result = os0.path.dirname(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/gamma/lambda/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path4) 
==================================================
component3 = "e"                                                        # STEP 77
ACTION: component3 = "e" 
component3 = 'beta' : <type 'str'>
=> component3 = 'e' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 78
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/beta'
==================================================
os0.link(path0,path0)                                                   # STEP 79
ACTION: os0.link(path0,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: os_REF0.link(path0,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
os0.mkdir(path2)                                                        # STEP 80
ACTION: os0.mkdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: os_REF0.mkdir(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/beta'
==================================================
stat1 = os0.lstat(path4)                                                # STEP 81
ACTION: stat1 = os0.lstat(path4) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/gamma/lambda/gamma' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104930790> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path4) 
=> stat_REF1 = posix.stat_result(st_mode=16877, st_ino=13044139, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507329328, st_mtime=1507329328, st_ctime=1507329328) : <type 'posix.stat_result'>
==================================================
str2 += 'u'                                                             # STEP 82
ACTION: str2 += 'u' 
str2 = 'zmuumqivwmqnd ddnlble' : <type 'str'>
=> str2 = 'zmuumqivwmqnd ddnlbleu' : <type 'str'>
==================================================
stat3 = os0.lstat(path2)                                                # STEP 83
ACTION: stat3 = os0.lstat(path2) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/beta/beta'
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/beta'
==================================================
str1 += 'q'                                                             # STEP 84
ACTION: str1 += 'q' 
str1 = 'fslnxzcosokukqwff' : <type 'str'>
=> str1 = 'fslnxzcosokukqwffq' : <type 'str'>
==================================================
fd1 = os0.open(path0, os.O_RDONLY)                                      # STEP 85
ACTION: fd1 = os0.open(path0, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                         # STEP 86
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/beta'
==================================================
path2 += "/" + component0                                               # STEP 87
ACTION: path2 += "/" + component0 
component0 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta/beta/delta' : <type 'str'>
==================================================
stat4 = os0.stat(path2)                                                 # STEP 88
ACTION: stat4 = os0.stat(path2) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta/delta' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/beta/beta/delta'
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/beta/delta'
==================================================
result = os0.path.isdir(path4)                                          # STEP 89
ACTION: result = os0.path.isdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/gamma/lambda/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path4) 
==================================================
fd1 = os0.open(path0, os.O_RDWR)                                        # STEP 90
ACTION: fd1 = os0.open(path0, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
==================================================
result = os0.path.isdir(path2)                                          # STEP 91
ACTION: result = os0.path.isdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path2) 
==================================================
str2 += 'b'                                                             # STEP 92
ACTION: str2 += 'b' 
str2 = 'zmuumqivwmqnd ddnlbleu' : <type 'str'>
=> str2 = 'zmuumqivwmqnd ddnlbleub' : <type 'str'>
==================================================
os0.symlink(path0,path0)                                                # STEP 93
ACTION: os0.symlink(path0,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path0,path0) 
==================================================
result = os0.path.getsize(path0)                                        # STEP 94
ACTION: result = os0.path.getsize(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104dc3410> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unsupported operand type(s) for -: 'str' and 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for -: 'str' and 'str'",), <traceback object at 0x1056bb440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31336, in act583
    result = self.p_os[0].path.getsize(self.p_path[0])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2765, in getsize
    file_obj = self.filesystem.ResolveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1837, in ResolveObject
    return self.GetObjectFromNormalizedPath(self.ResolvePath(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1752, in ResolvePath
    raise error_class(errno.ELOOP, ("Too many levels of symbolic links: '%s'" - _ComponentsToPath(resolved_components)))
STOPPING TESTING DUE TO FAILED TEST
0.368510007858 TOTAL RUNTIME
7 EXECUTED
1295 TOTAL TEST OPERATIONS
0.240639925003 TIME SPENT EXECUTING TEST OPERATIONS
0.0593492984772 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000669479370117 TIME SPENT CHECKING PROPERTIES
0.241309404373 TOTAL TIME SPENT RUNNING SUT
0.0210745334625 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
