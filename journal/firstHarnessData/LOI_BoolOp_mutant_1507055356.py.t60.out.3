Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.63550.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('sequence item 0: expected string, NoneType found',), <traceback object at 0x10240b128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1333, in NormalizeCase
    return components_to_path()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1301, in components_to_path
    normalized_path = sep.join(normalized_components)
Original test has 120 steps

SAVING TEST AS failure.63550.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "alpha"                                                     # STEP 0
ACTION: component1 = "alpha" 
component1 = None : <type 'NoneType'>
=> component1 = 'alpha' : <type 'str'>
==================================================
component0 = "h"                                                         # STEP 1
ACTION: component0 = "h" 
component0 = None : <type 'NoneType'>
=> component0 = 'h' : <type 'str'>
==================================================
component3 = "b"                                                         # STEP 2
ACTION: component3 = "b" 
component3 = None : <type 'NoneType'>
=> component3 = 'b' : <type 'str'>
==================================================
component2 = "gamma"                                                     # STEP 3
ACTION: component2 = "gamma" 
component2 = None : <type 'NoneType'>
=> component2 = 'gamma' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 4
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component4 = "gamma"                                                     # STEP 5
ACTION: component4 = "gamma" 
component4 = None : <type 'NoneType'>
=> component4 = 'gamma' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 6
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str4 = ""                                                                # STEP 7
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'u'                                                              # STEP 8
ACTION: str4 += 'u' 
str4 = '' : <type 'str'>
=> str4 = 'u' : <type 'str'>
==================================================
str4 += 'e'                                                              # STEP 9
ACTION: str4 += 'e' 
str4 = 'u' : <type 'str'>
=> str4 = 'ue' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 10
ACTION: str4 += 'w' 
str4 = 'ue' : <type 'str'>
=> str4 = 'uew' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 11
ACTION: str4 += 'b' 
str4 = 'uew' : <type 'str'>
=> str4 = 'uewb' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 12
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 13
ACTION: str4 += 'm' 
str4 = 'uewb' : <type 'str'>
=> str4 = 'uewbm' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 14
ACTION: str4 += 'w' 
str4 = 'uewbm' : <type 'str'>
=> str4 = 'uewbmw' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 15
ACTION: str4 += 's' 
str4 = 'uewbmw' : <type 'str'>
=> str4 = 'uewbmws' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 16
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 17
ACTION: str4 += 'z' 
str4 = 'uewbmws' : <type 'str'>
=> str4 = 'uewbmwsz' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 18
ACTION: str1 += 'c' 
str1 = '' : <type 'str'>
=> str1 = 'c' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 19
ACTION: str1 += 'c' 
str1 = 'c' : <type 'str'>
=> str1 = 'cc' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 20
ACTION: str0 += " " 
str0 = '' : <type 'str'>
=> str0 = ' ' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 21
ACTION: str1 += 'p' 
str1 = 'cc' : <type 'str'>
=> str1 = 'ccp' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 22
ACTION: str0 += 'r' 
str0 = ' ' : <type 'str'>
=> str0 = ' r' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 23
ACTION: str1 += 'g' 
str1 = 'ccp' : <type 'str'>
=> str1 = 'ccpg' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 24
ACTION: str1 += 'v' 
str1 = 'ccpg' : <type 'str'>
=> str1 = 'ccpgv' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 25
ACTION: str4 += 'q' 
str4 = 'uewbmwsz' : <type 'str'>
=> str4 = 'uewbmwszq' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 26
ACTION: str0 = "" 
str0 = ' r' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 27
ACTION: str0 += 'k' 
str0 = '' : <type 'str'>
=> str0 = 'k' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 28
ACTION: str4 += 't' 
str4 = 'uewbmwszq' : <type 'str'>
=> str4 = 'uewbmwszqt' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 29
ACTION: str4 += 'j' 
str4 = 'uewbmwszqt' : <type 'str'>
=> str4 = 'uewbmwszqtj' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 30
ACTION: str4 += 'd' 
str4 = 'uewbmwszqtj' : <type 'str'>
=> str4 = 'uewbmwszqtjd' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 31
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
bytes2 += 1                                                             # STEP 32
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str0 += 'k'                                                             # STEP 33
ACTION: str0 += 'k' 
str0 = 'k' : <type 'str'>
=> str0 = 'kk' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 34
ACTION: str1 += 'w' 
str1 = 'ccpgv' : <type 'str'>
=> str1 = 'ccpgvw' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 35
ACTION: str1 += 'u' 
str1 = 'ccpgvw' : <type 'str'>
=> str1 = 'ccpgvwu' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 36
ACTION: str4 += 'q' 
str4 = 'uewbmwszqtjd' : <type 'str'>
=> str4 = 'uewbmwszqtjdq' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 37
ACTION: str1 += 'r' 
str1 = 'ccpgvwu' : <type 'str'>
=> str1 = 'ccpgvwur' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 38
ACTION: str1 += 'y' 
str1 = 'ccpgvwur' : <type 'str'>
=> str1 = 'ccpgvwury' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 39
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str1 = ""                                                               # STEP 40
ACTION: str1 = "" 
str1 = 'ccpgvwury' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 41
ACTION: str1 += 'o' 
str1 = '' : <type 'str'>
=> str1 = 'o' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 42
ACTION: str4 += 'l' 
str4 = 'uewbmwszqtjdq' : <type 'str'>
=> str4 = 'uewbmwszqtjdql' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 43
ACTION: str0 += 'z' 
str0 = 'kk' : <type 'str'>
=> str0 = 'kkz' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 44
ACTION: str1 += 'n' 
str1 = 'o' : <type 'str'>
=> str1 = 'on' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 45
ACTION: str0 += 'o' 
str0 = 'kkz' : <type 'str'>
=> str0 = 'kkzo' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 46
ACTION: str0 += 'y' 
str0 = 'kkzo' : <type 'str'>
=> str0 = 'kkzoy' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 47
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str4 += 'p'                                                             # STEP 48
ACTION: str4 += 'p' 
str4 = 'uewbmwszqtjdql' : <type 'str'>
=> str4 = 'uewbmwszqtjdqlp' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 49
ACTION: str1 += 't' 
str1 = 'on' : <type 'str'>
=> str1 = 'ont' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 50
ACTION: str4 += 'd' 
str4 = 'uewbmwszqtjdqlp' : <type 'str'>
=> str4 = 'uewbmwszqtjdqlpd' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 51
ACTION: str4 += 'i' 
str4 = 'uewbmwszqtjdqlpd' : <type 'str'>
=> str4 = 'uewbmwszqtjdqlpdi' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 52
ACTION: str0 += " " 
str0 = 'kkzoy' : <type 'str'>
=> str0 = 'kkzoy ' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 53
ACTION: str1 += 'c' 
str1 = 'ont' : <type 'str'>
=> str1 = 'ontc' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 54
ACTION: str4 += 'c' 
str4 = 'uewbmwszqtjdqlpdi' : <type 'str'>
=> str4 = 'uewbmwszqtjdqlpdic' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 55
ACTION: str0 += 'u' 
str0 = 'kkzoy ' : <type 'str'>
=> str0 = 'kkzoy u' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 56
ACTION: str4 = "" 
str4 = 'uewbmwszqtjdqlpdic' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 57
ACTION: str4 += 'q' 
str4 = '' : <type 'str'>
=> str4 = 'q' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 58
ACTION: str4 += " " 
str4 = 'q' : <type 'str'>
=> str4 = 'q ' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 59
ACTION: str4 += 'f' 
str4 = 'q ' : <type 'str'>
=> str4 = 'q f' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 60
ACTION: str1 += 'e' 
str1 = 'ontc' : <type 'str'>
=> str1 = 'ontce' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 61
ACTION: str1 += 'm' 
str1 = 'ontce' : <type 'str'>
=> str1 = 'ontcem' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 62
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 63
ACTION: str1 += 'q' 
str1 = 'ontcem' : <type 'str'>
=> str1 = 'ontcemq' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 64
ACTION: str1 += " " 
str1 = 'ontcemq' : <type 'str'>
=> str1 = 'ontcemq ' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 65
ACTION: str0 += 'k' 
str0 = 'kkzoy u' : <type 'str'>
=> str0 = 'kkzoy uk' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 66
ACTION: str0 += 'q' 
str0 = 'kkzoy uk' : <type 'str'>
=> str0 = 'kkzoy ukq' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 67
ACTION: str4 += 'e' 
str4 = 'q f' : <type 'str'>
=> str4 = 'q fe' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 68
ACTION: str0 = "" 
str0 = 'kkzoy ukq' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 69
ACTION: str4 += 'x' 
str4 = 'q fe' : <type 'str'>
=> str4 = 'q fex' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 70
ACTION: str1 += 'q' 
str1 = 'ontcemq ' : <type 'str'>
=> str1 = 'ontcemq q' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 71
ACTION: str4 += 'e' 
str4 = 'q fex' : <type 'str'>
=> str4 = 'q fexe' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 72
ACTION: str4 += 'q' 
str4 = 'q fexe' : <type 'str'>
=> str4 = 'q fexeq' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 73
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 74
ACTION: str1 += 'c' 
str1 = 'ontcemq q' : <type 'str'>
=> str1 = 'ontcemq qc' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 75
ACTION: str4 += 'h' 
str4 = 'q fexeq' : <type 'str'>
=> str4 = 'q fexeqh' : <type 'str'>
==================================================
path4 += "/" + component4                                               # STEP 76
ACTION: path4 += "/" + component4 
component4 = 'gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 77
ACTION: str4 += 'c' 
str4 = 'q fexeqh' : <type 'str'>
=> str4 = 'q fexeqhc' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 78
ACTION: str4 += 'v' 
str4 = 'q fexeqhc' : <type 'str'>
=> str4 = 'q fexeqhcv' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 79
ACTION: str0 += 'i' 
str0 = '' : <type 'str'>
=> str0 = 'i' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 80
ACTION: str0 += 'i' 
str0 = 'i' : <type 'str'>
=> str0 = 'ii' : <type 'str'>
==================================================
component4 = "alpha"                                                    # STEP 81
ACTION: component4 = "alpha" 
component4 = 'gamma' : <type 'str'>
=> component4 = 'alpha' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 82
ACTION: str0 += 'd' 
str0 = 'ii' : <type 'str'>
=> str0 = 'iid' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 83
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 84
ACTION: str1 += 'd' 
str1 = 'ontcemq qc' : <type 'str'>
=> str1 = 'ontcemq qcd' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 85
ACTION: path4 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma/gamma' : <type 'str'>
==================================================
component2 = "e"                                                        # STEP 86
ACTION: component2 = "e" 
component2 = 'gamma' : <type 'str'>
=> component2 = 'e' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 87
ACTION: str4 += 't' 
str4 = 'q fexeqhcv' : <type 'str'>
=> str4 = 'q fexeqhcvt' : <type 'str'>
==================================================
path4 += "/" + component4                                               # STEP 88
ACTION: path4 += "/" + component4 
component4 = 'alpha' : <type 'str'>
path4 = '/Volumes/ramdisk/test/gamma/gamma' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma/gamma/alpha' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 89
ACTION: str0 += " " 
str0 = 'iid' : <type 'str'>
=> str0 = 'iid ' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 90
ACTION: str4 += 'j' 
str4 = 'q fexeqhcvt' : <type 'str'>
=> str4 = 'q fexeqhcvtj' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 91
ACTION: path4 += "/" + component0 
component0 = 'h' : <type 'str'>
path4 = '/Volumes/ramdisk/test/gamma/gamma/alpha' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma/gamma/alpha/h' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 92
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 93
ACTION: path2 += "/" + component4 
component4 = 'alpha' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 94
ACTION: str0 += 'x' 
str0 = 'iid ' : <type 'str'>
=> str0 = 'iid x' : <type 'str'>
==================================================
component0 = "c"                                                        # STEP 95
ACTION: component0 = "c" 
component0 = 'h' : <type 'str'>
=> component0 = 'c' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 96
ACTION: str2 += 'q' 
str2 = '' : <type 'str'>
=> str2 = 'q' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 97
ACTION: str4 += 'v' 
str4 = 'q fexeqhcvtj' : <type 'str'>
=> str4 = 'q fexeqhcvtjv' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 98
ACTION: path2 += "/" + component4 
component4 = 'alpha' : <type 'str'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha/alpha' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 99
ACTION: path1 += "/" + component1 
component1 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str1 += 'h'                                                            # STEP 100
ACTION: str1 += 'h' 
str1 = 'ontcemq qcd' : <type 'str'>
=> str1 = 'ontcemq qcdh' : <type 'str'>
==================================================
str1 += 'l'                                                            # STEP 101
ACTION: str1 += 'l' 
str1 = 'ontcemq qcdh' : <type 'str'>
=> str1 = 'ontcemq qcdhl' : <type 'str'>
==================================================
str4 += 'v'                                                            # STEP 102
ACTION: str4 += 'v' 
str4 = 'q fexeqhcvtjv' : <type 'str'>
=> str4 = 'q fexeqhcvtjvv' : <type 'str'>
==================================================
component4 = "phi"                                                     # STEP 103
ACTION: component4 = "phi" 
component4 = 'alpha' : <type 'str'>
=> component4 = 'phi' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                        # STEP 104
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/alpha/alpha' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'e'                                                            # STEP 105
ACTION: str4 += 'e' 
str4 = 'q fexeqhcvtjvv' : <type 'str'>
=> str4 = 'q fexeqhcvtjvve' : <type 'str'>
==================================================
str2 += 'e'                                                            # STEP 106
ACTION: str2 += 'e' 
str2 = 'q' : <type 'str'>
=> str2 = 'qe' : <type 'str'>
==================================================
str0 += 'm'                                                            # STEP 107
ACTION: str0 += 'm' 
str0 = 'iid x' : <type 'str'>
=> str0 = 'iid xm' : <type 'str'>
==================================================
str4 += 'v'                                                            # STEP 108
ACTION: str4 += 'v' 
str4 = 'q fexeqhcvtjvve' : <type 'str'>
=> str4 = 'q fexeqhcvtjvvev' : <type 'str'>
==================================================
str0 += 'm'                                                            # STEP 109
ACTION: str0 += 'm' 
str0 = 'iid xm' : <type 'str'>
=> str0 = 'iid xmm' : <type 'str'>
==================================================
path1 += "/" + component2                                              # STEP 110
ACTION: path1 += "/" + component2 
component2 = 'e' : <type 'str'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha/e' : <type 'str'>
==================================================
str0 += 'o'                                                            # STEP 111
ACTION: str0 += 'o' 
str0 = 'iid xmm' : <type 'str'>
=> str0 = 'iid xmmo' : <type 'str'>
==================================================
str1 += 'a'                                                            # STEP 112
ACTION: str1 += 'a' 
str1 = 'ontcemq qcdhl' : <type 'str'>
=> str1 = 'ontcemq qcdhla' : <type 'str'>
==================================================
path2 += "/" + component4                                              # STEP 113
ACTION: path2 += "/" + component4 
component4 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
component4 = "lambda"                                                  # STEP 114
ACTION: component4 = "lambda" 
component4 = 'phi' : <type 'str'>
=> component4 = 'lambda' : <type 'str'>
==================================================
str2 += 'm'                                                            # STEP 115
ACTION: str2 += 'm' 
str2 = 'qe' : <type 'str'>
=> str2 = 'qem' : <type 'str'>
==================================================
str1 += 'a'                                                            # STEP 116
ACTION: str1 += 'a' 
str1 = 'ontcemq qcdhla' : <type 'str'>
=> str1 = 'ontcemq qcdhlaa' : <type 'str'>
==================================================
str1 += 'h'                                                            # STEP 117
ACTION: str1 += 'h' 
str1 = 'ontcemq qcdhlaa' : <type 'str'>
=> str1 = 'ontcemq qcdhlaah' : <type 'str'>
==================================================
component2 = "gamma"                                                   # STEP 118
ACTION: component2 = "gamma" 
component2 = 'e' : <type 'str'>
=> component2 = 'gamma' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 119
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> sequence item 0: expected string, NoneType found
ERROR: (<type 'exceptions.TypeError'>, TypeError('sequence item 0: expected string, NoneType found',), <traceback object at 0x1023a0fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1333, in NormalizeCase
    return components_to_path()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1301, in components_to_path
    normalized_path = sep.join(normalized_components)
STOPPING TESTING DUE TO FAILED TEST
0.029718875885 TOTAL RUNTIME
1 EXECUTED
120 TOTAL TEST OPERATIONS
0.0025520324707 TIME SPENT EXECUTING TEST OPERATIONS
0.00576305389404 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
5.14984130859e-05 TIME SPENT CHECKING PROPERTIES
0.00260353088379 TOTAL TIME SPENT RUNNING SUT
0.00293302536011 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
