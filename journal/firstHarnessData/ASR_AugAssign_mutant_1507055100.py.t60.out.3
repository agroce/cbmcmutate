Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.65730.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1040010e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 28539, in act538
    self.p_os[0].rename(self.p_path[2],self.p_path[0])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3587, in rename
    self.filesystem.RenameObject(old_file_path, new_file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2009, in RenameObject
    old_dir_object.RemoveEntry(old_name, recursive=False)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 740, in RemoveEntry
    assert (entry.st_nlink >= 0)
Original test has 61 steps

SAVING TEST AS failure.65730.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "delta"                                                     # STEP 0
ACTION: component3 = "delta" 
component3 = None : <type 'NoneType'>
=> component3 = 'delta' : <type 'str'>
==================================================
component4 = "alpha"                                                     # STEP 1
ACTION: component4 = "alpha" 
component4 = None : <type 'NoneType'>
=> component4 = 'alpha' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 2
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
component0 = "d"                                                         # STEP 3
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
str2 += 'b'                                                              # STEP 4
ACTION: str2 += 'b' 
str2 = '' : <type 'str'>
=> str2 = 'b' : <type 'str'>
==================================================
str2 += 'o'                                                              # STEP 5
ACTION: str2 += 'o' 
str2 = 'b' : <type 'str'>
=> str2 = 'bo' : <type 'str'>
==================================================
str2 += 'u'                                                              # STEP 6
ACTION: str2 += 'u' 
str2 = 'bo' : <type 'str'>
=> str2 = 'bou' : <type 'str'>
==================================================
component2 = "epsilon"                                                   # STEP 7
ACTION: component2 = "epsilon" 
component2 = None : <type 'NoneType'>
=> component2 = 'epsilon' : <type 'str'>
==================================================
str2 += 'q'                                                              # STEP 8
ACTION: str2 += 'q' 
str2 = 'bou' : <type 'str'>
=> str2 = 'bouq' : <type 'str'>
==================================================
str2 += 'i'                                                              # STEP 9
ACTION: str2 += 'i' 
str2 = 'bouq' : <type 'str'>
=> str2 = 'bouqi' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 10
ACTION: str2 += 'p' 
str2 = 'bouqi' : <type 'str'>
=> str2 = 'bouqip' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 11
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
component1 = "alpha"                                                    # STEP 12
ACTION: component1 = "alpha" 
component1 = None : <type 'NoneType'>
=> component1 = 'alpha' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 13
ACTION: str2 += 'h' 
str2 = 'bouqip' : <type 'str'>
=> str2 = 'bouqiph' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 14
ACTION: str2 += 'n' 
str2 = 'bouqiph' : <type 'str'>
=> str2 = 'bouqiphn' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 15
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str2 += 'd'                                                             # STEP 16
ACTION: str2 += 'd' 
str2 = 'bouqiphn' : <type 'str'>
=> str2 = 'bouqiphnd' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 17
ACTION: str2 += 'q' 
str2 = 'bouqiphnd' : <type 'str'>
=> str2 = 'bouqiphndq' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 18
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.islink(path2)                                         # STEP 19
ACTION: result = os0.path.islink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path2) 
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 20
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.dirname(path2)                                        # STEP 21
ACTION: result = os0.path.dirname(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path2) 
==================================================
str2 += 'm'                                                             # STEP 22
ACTION: str2 += 'm' 
str2 = 'bouqiphndq' : <type 'str'>
=> str2 = 'bouqiphndqm' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 23
ACTION: str2 += 'q' 
str2 = 'bouqiphndqm' : <type 'str'>
=> str2 = 'bouqiphndqmq' : <type 'str'>
==================================================
result = os0.path.isabs(path0)                                          # STEP 24
ACTION: result = os0.path.isabs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path0) 
==================================================
result = os0.readlink(path0)                                            # STEP 25
ACTION: result = os0.readlink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
str2 += 'o'                                                             # STEP 26
ACTION: str2 += 'o' 
str2 = 'bouqiphndqmq' : <type 'str'>
=> str2 = 'bouqiphndqmqo' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 27
ACTION: str2 += 't' 
str2 = 'bouqiphndqmqo' : <type 'str'>
=> str2 = 'bouqiphndqmqot' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 28
ACTION: str2 += 'm' 
str2 = 'bouqiphndqmqot' : <type 'str'>
=> str2 = 'bouqiphndqmqotm' : <type 'str'>
==================================================
result = os0.path.exists(path2)                                         # STEP 29
ACTION: result = os0.path.exists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path2) 
==================================================
os0.makedirs(path0)                                                     # STEP 30
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
bytes2 = 0                                                              # STEP 31
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str2 += 'j'                                                             # STEP 32
ACTION: str2 += 'j' 
str2 = 'bouqiphndqmqotm' : <type 'str'>
=> str2 = 'bouqiphndqmqotmj' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 33
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 34
ACTION: str2 += 'd' 
str2 = 'bouqiphndqmqotmj' : <type 'str'>
=> str2 = 'bouqiphndqmqotmjd' : <type 'str'>
==================================================
result = os0.path.isdir(path0)                                          # STEP 35
ACTION: result = os0.path.isdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path0) 
==================================================
str2 += 'p'                                                             # STEP 36
ACTION: str2 += 'p' 
str2 = 'bouqiphndqmqotmjd' : <type 'str'>
=> str2 = 'bouqiphndqmqotmjdp' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 37
ACTION: str2 += 'n' 
str2 = 'bouqiphndqmqotmjdp' : <type 'str'>
=> str2 = 'bouqiphndqmqotmjdpn' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 38
ACTION: str0 += 'n' 
str0 = '' : <type 'str'>
=> str0 = 'n' : <type 'str'>
==================================================
os0.makedirs(path0)                                                     # STEP 39
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
os0.remove(path2)                                                       # STEP 40
ACTION: os0.remove(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
str1 = ""                                                               # STEP 41
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 42
ACTION: path2 += "/" + component3 
component3 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
component3 = "alpha"                                                    # STEP 43
ACTION: component3 = "alpha" 
component3 = 'delta' : <type 'str'>
=> component3 = 'alpha' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_RDONLY)                                      # STEP 44
ACTION: fd1 = os0.open(path2, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/delta'
==================================================
result = os0.path.islink(path2)                                         # STEP 45
ACTION: result = os0.path.islink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path2) 
==================================================
path0 += "/" + component3                                               # STEP 46
ACTION: path0 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 47
ACTION: str0 += 'e' 
str0 = 'n' : <type 'str'>
=> str0 = 'ne' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 48
ACTION: str0 += 'm' 
str0 = 'ne' : <type 'str'>
=> str0 = 'nem' : <type 'str'>
==================================================
component3 = "f"                                                        # STEP 49
ACTION: component3 = "f" 
component3 = 'alpha' : <type 'str'>
=> component3 = 'f' : <type 'str'>
==================================================
result = os0.readlink(path0)                                            # STEP 50
ACTION: result = os0.readlink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake path does not exist: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: result_REF = os_REF0.readlink(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha'
==================================================
str2 += 'q'                                                             # STEP 51
ACTION: str2 += 'q' 
str2 = 'bouqiphndqmqotmjdpn' : <type 'str'>
=> str2 = 'bouqiphndqmqotmjdpnq' : <type 'str'>
==================================================
result = os0.path.abspath(path0)                                        # STEP 52
ACTION: result = os0.path.abspath(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path0) 
==================================================
os0.symlink(path2,path2)                                                # STEP 53
ACTION: os0.symlink(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path2,path2) 
==================================================
str2 += 'b'                                                             # STEP 54
ACTION: str2 += 'b' 
str2 = 'bouqiphndqmqotmjdpnq' : <type 'str'>
=> str2 = 'bouqiphndqmqotmjdpnqb' : <type 'str'>
==================================================
result = os0.path.dirname(path2)                                        # STEP 55
ACTION: result = os0.path.dirname(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path2) 
==================================================
stat1 = os0.stat(path2)                                                 # STEP 56
ACTION: stat1 = os0.stat(path2) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: stat_REF1 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/delta'
==================================================
stat4 = os0.stat(path2)                                                 # STEP 57
ACTION: stat4 = os0.stat(path2) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/delta'
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 58
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/delta'
==================================================
fd1 = os0.open(path2, os.O_RDONLY)                                      # STEP 59
ACTION: fd1 = os0.open(path2, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/delta'
==================================================
os0.rename(path2,path0)                                                 # STEP 60
ACTION: os0.rename(path2,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103366c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.AssertionError'> 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1036e6f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 28539, in act538
    self.p_os[0].rename(self.p_path[2],self.p_path[0])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3587, in rename
    self.filesystem.RenameObject(old_file_path, new_file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2009, in RenameObject
    old_dir_object.RemoveEntry(old_name, recursive=False)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 740, in RemoveEntry
    assert (entry.st_nlink >= 0)
STOPPING TESTING DUE TO FAILED TEST
0.138036966324 TOTAL RUNTIME
6 EXECUTED
1061 TOTAL TEST OPERATIONS
0.0342373847961 TIME SPENT EXECUTING TEST OPERATIONS
0.0480105876923 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000466585159302 TIME SPENT CHECKING PROPERTIES
0.0347039699554 TOTAL TIME SPENT RUNNING SUT
0.0148272514343 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
