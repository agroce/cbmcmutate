Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59591.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1006c3320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9425, in act261
    assert (type(raised) == type(refRaised))
Original test has 75 steps

SAVING TEST AS failure.59591.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component3 = "delta"                                                     # STEP 1
ACTION: component3 = "delta" 
component3 = None : <type 'NoneType'>
=> component3 = 'delta' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 2
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component1 = "g"                                                         # STEP 3
ACTION: component1 = "g" 
component1 = None : <type 'NoneType'>
=> component1 = 'g' : <type 'str'>
==================================================
component4 = "c"                                                         # STEP 4
ACTION: component4 = "c" 
component4 = None : <type 'NoneType'>
=> component4 = 'c' : <type 'str'>
==================================================
component2 = "g"                                                         # STEP 5
ACTION: component2 = "g" 
component2 = None : <type 'NoneType'>
=> component2 = 'g' : <type 'str'>
==================================================
path0 += "/" + component2                                                # STEP 6
ACTION: path0 += "/" + component2 
component2 = 'g' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
component2 = "lambda"                                                    # STEP 7
ACTION: component2 = "lambda" 
component2 = 'g' : <type 'str'>
=> component2 = 'lambda' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 8
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 9
ACTION: fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
result = os0.path.abspath(path0)                                        # STEP 10
ACTION: result = os0.path.abspath(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path0) 
==================================================
stat3 = os0.stat(path0)                                                 # STEP 11
ACTION: stat3 = os0.stat(path0) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102c20ad0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path0) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=13889753, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507341453, st_mtime=1507341453, st_ctime=1507341453) : <type 'posix.stat_result'>
==================================================
stat4 = os0.fstat(fd0)                                                  # STEP 12
ACTION: stat4 = os0.fstat(fd0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102bf8510> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.fstat(fd_REF0) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=13889753, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507341453, st_mtime=1507341453, st_ctime=1507341453) : <type 'posix.stat_result'>
==================================================
component0 = "f"                                                        # STEP 13
ACTION: component0 = "f" 
component0 = None : <type 'NoneType'>
=> component0 = 'f' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 14
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
stat1 = os0.fstat(fd0)                                                  # STEP 15
ACTION: stat1 = os0.fstat(fd0) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102c20b50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.fstat(fd_REF0) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=13889753, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507341453, st_mtime=1507341453, st_ctime=1507341453) : <type 'posix.stat_result'>
==================================================
str4 = ""                                                               # STEP 16
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 17
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
result = stat4.st_size                                                  # STEP 18
ACTION: result = stat4.st_size 
stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102bf8510> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF4 = posix.stat_result(st_mode=33261, st_ino=13889753, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507341453, st_mtime=1507341453, st_ctime=1507341453) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF4.st_size 
==================================================
os0.write(fd0,str4)                                                     # STEP 19
ACTION: os0.write(fd0,str4) 
str4 = '' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF0,str4) 
==================================================
result = os0.path.lexists(path0)                                        # STEP 20
ACTION: result = os0.path.lexists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path0) 
==================================================
str4 += 'g'                                                             # STEP 21
ACTION: str4 += 'g' 
str4 = '' : <type 'str'>
=> str4 = 'g' : <type 'str'>
==================================================
result = os0.path.exists(path0)                                         # STEP 22
ACTION: result = os0.path.exists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path0) 
==================================================
str4 += 's'                                                             # STEP 23
ACTION: str4 += 's' 
str4 = 'g' : <type 'str'>
=> str4 = 'gs' : <type 'str'>
==================================================
os0.link(path0,path0)                                                   # STEP 24
ACTION: os0.link(path0,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path0,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.makedirs(path0)                                                     # STEP 25
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = os0.path.isfile(path0)                                         # STEP 26
ACTION: result = os0.path.isfile(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path0) 
==================================================
str4 += 'l'                                                             # STEP 27
ACTION: str4 += 'l' 
str4 = 'gs' : <type 'str'>
=> str4 = 'gsl' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 28
ACTION: str4 += 'm' 
str4 = 'gsl' : <type 'str'>
=> str4 = 'gslm' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 29
ACTION: str4 += 'k' 
str4 = 'gslm' : <type 'str'>
=> str4 = 'gslmk' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 30
ACTION: str4 += 'v' 
str4 = 'gslmk' : <type 'str'>
=> str4 = 'gslmkv' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 31
ACTION: path0 += "/" + component3 
component3 = 'delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
component3 = "alpha"                                                    # STEP 32
ACTION: component3 = "alpha" 
component3 = 'delta' : <type 'str'>
=> component3 = 'alpha' : <type 'str'>
==================================================
fd1 = os0.open(path0, os.O_RDONLY)                                      # STEP 33
ACTION: fd1 = os0.open(path0, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/delta'
==================================================
fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 34
ACTION: fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
=> fd_REF1 = 5 : <type 'int'>
==================================================
str4 += 'x'                                                             # STEP 35
ACTION: str4 += 'x' 
str4 = 'gslmkv' : <type 'str'>
=> str4 = 'gslmkvx' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 36
ACTION: str4 += 'p' 
str4 = 'gslmkvx' : <type 'str'>
=> str4 = 'gslmkvxp' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 37
ACTION: str4 += 'g' 
str4 = 'gslmkvxp' : <type 'str'>
=> str4 = 'gslmkvxpg' : <type 'str'>
==================================================
os0.removedirs(path0)                                                   # STEP 38
ACTION: os0.removedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Fake os module: not a directory: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: os_REF0.removedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/delta'
==================================================
str0 = ""                                                               # STEP 39
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 40
ACTION: str0 += 'u' 
str0 = '' : <type 'str'>
=> str0 = 'u' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 41
ACTION: str0 += 'e' 
str0 = 'u' : <type 'str'>
=> str0 = 'ue' : <type 'str'>
==================================================
result = os0.path.lexists(path0)                                        # STEP 42
ACTION: result = os0.path.lexists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path0) 
==================================================
str4 += 'p'                                                             # STEP 43
ACTION: str4 += 'p' 
str4 = 'gslmkvxpg' : <type 'str'>
=> str4 = 'gslmkvxpgp' : <type 'str'>
==================================================
stat2 = os0.fstat(fd1)                                                  # STEP 44
ACTION: stat2 = os0.fstat(fd1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102c20d50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF1) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=13889754, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507341453, st_mtime=1507341453, st_ctime=1507341453) : <type 'posix.stat_result'>
==================================================
str4 += 'k'                                                             # STEP 45
ACTION: str4 += 'k' 
str4 = 'gslmkvxpgp' : <type 'str'>
=> str4 = 'gslmkvxpgpk' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 46
ACTION: str4 += 'b' 
str4 = 'gslmkvxpgpk' : <type 'str'>
=> str4 = 'gslmkvxpgpkb' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 47
ACTION: str4 += 'z' 
str4 = 'gslmkvxpgpkb' : <type 'str'>
=> str4 = 'gslmkvxpgpkbz' : <type 'str'>
==================================================
result = os0.read(fd0,bytes0)                                           # STEP 48
ACTION: result = os0.read(fd0,bytes0) 
bytes0 = 1 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
stat0 = os0.stat(path0)                                                 # STEP 49
ACTION: stat0 = os0.stat(path0) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104361350> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.stat(path0) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=13889754, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507341453, st_mtime=1507341453, st_ctime=1507341453) : <type 'posix.stat_result'>
==================================================
str0 += 'c'                                                             # STEP 50
ACTION: str0 += 'c' 
str0 = 'ue' : <type 'str'>
=> str0 = 'uec' : <type 'str'>
==================================================
result = stat0.st_nlink                                                 # STEP 51
ACTION: result = stat0.st_nlink 
stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104361350> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF0 = posix.stat_result(st_mode=33261, st_ino=13889754, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507341453, st_mtime=1507341453, st_ctime=1507341453) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF0.st_nlink 
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 52
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 53
ACTION: str0 += 'e' 
str0 = 'uec' : <type 'str'>
=> str0 = 'uece' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 54
ACTION: str4 += 'x' 
str4 = 'gslmkvxpgpkbz' : <type 'str'>
=> str4 = 'gslmkvxpgpkbzx' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 55
ACTION: str4 += 'v' 
str4 = 'gslmkvxpgpkbzx' : <type 'str'>
=> str4 = 'gslmkvxpgpkbzxv' : <type 'str'>
==================================================
result = os0.path.isfile(path0)                                         # STEP 56
ACTION: result = os0.path.isfile(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path0) 
==================================================
str0 += 'o'                                                             # STEP 57
ACTION: str0 += 'o' 
str0 = 'uece' : <type 'str'>
=> str0 = 'ueceo' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 58
ACTION: str4 += 'q' 
str4 = 'gslmkvxpgpkbzxv' : <type 'str'>
=> str4 = 'gslmkvxpgpkbzxvq' : <type 'str'>
==================================================
result = os0.path.isabs(path0)                                          # STEP 59
ACTION: result = os0.path.isabs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path0) 
==================================================
bytes0 = 0                                                              # STEP 60
ACTION: bytes0 = 0 
bytes0 = 1 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
os0.symlink(path0,path2)                                                # STEP 61
ACTION: os0.symlink(path0,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path0,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str4 += 'n'                                                             # STEP 62
ACTION: str4 += 'n' 
str4 = 'gslmkvxpgpkbzxvq' : <type 'str'>
=> str4 = 'gslmkvxpgpkbzxvqn' : <type 'str'>
==================================================
os0.link(path0,path2)                                                   # STEP 63
ACTION: os0.link(path0,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path0,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
bytes1 = 0                                                              # STEP 64
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
stat4 = os0.fstat(fd1)                                                  # STEP 65
ACTION: stat4 = os0.fstat(fd1) 
stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102bf8510> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
stat_REF4 = posix.stat_result(st_mode=33261, st_ino=13889753, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507341453, st_mtime=1507341453, st_ctime=1507341453) : <type 'posix.stat_result'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1043611d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.fstat(fd_REF1) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=13889754, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507341453, st_mtime=1507341453, st_ctime=1507341453) : <type 'posix.stat_result'>
==================================================
result = stat2.st_size                                                  # STEP 66
ACTION: result = stat2.st_size 
stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102c20d50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF2 = posix.stat_result(st_mode=33261, st_ino=13889754, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507341453, st_mtime=1507341453, st_ctime=1507341453) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF2.st_size 
==================================================
bytes0 += 1                                                             # STEP 67
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
os0.makedirs(path0)                                                     # STEP 68
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: os_REF0.makedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/delta'
==================================================
stat0 = os0.fstat(fd1)                                                  # STEP 69
ACTION: stat0 = os0.fstat(fd1) 
stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104361350> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
stat_REF0 = posix.stat_result(st_mode=33261, st_ino=13889754, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507341453, st_mtime=1507341453, st_ctime=1507341453) : <type 'posix.stat_result'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102bf8510> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.fstat(fd_REF1) 
==================================================
str4 += 'i'                                                             # STEP 70
ACTION: str4 += 'i' 
str4 = 'gslmkvxpgpkbzxvqn' : <type 'str'>
=> str4 = 'gslmkvxpgpkbzxvqni' : <type 'str'>
==================================================
result = os0.readlink(path0)                                            # STEP 71
ACTION: result = os0.readlink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: result_REF = os_REF0.readlink(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test/delta'
==================================================
os0.rename(path0,path2)                                                 # STEP 72
ACTION: os0.rename(path0,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake filesystem object: can not rename to non-empty directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.rename(path0,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory
==================================================
str0 += 'z'                                                             # STEP 73
ACTION: str0 += 'z' 
str0 = 'ueceo' : <type 'str'>
=> str0 = 'ueceoz' : <type 'str'>
==================================================
os0.mkdir(path0)                                                        # STEP 74
ACTION: os0.mkdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.mkdir(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/delta'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1027d5290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9425, in act261
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.110065937042 TOTAL RUNTIME
4 EXECUTED
675 TOTAL TEST OPERATIONS
0.0326681137085 TIME SPENT EXECUTING TEST OPERATIONS
0.0313704013824 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000293493270874 TIME SPENT CHECKING PROPERTIES
0.0329616069794 TOTAL TIME SPENT RUNNING SUT
0.0109770298004 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
