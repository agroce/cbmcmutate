Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.55234.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("can't multiply sequence by non-int of type 'str'",), <traceback object at 0x101fddef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17, in newFakeOS
    fs = pyfakefs.fake_filesystem.FakeFilesystem()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 881, in __init__
    self.AddMountPoint(self.root.name, total_size)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 933, in AddMountPoint
    path = self.NormalizePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1357, in NormalizePath
    return self.CollapsePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1283, in CollapsePath
    collapsed_path = (sep * collapsed_path)
Original test has 112 steps

SAVING TEST AS failure.55234.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "c"                                                         # STEP 1
ACTION: component2 = "c" 
component2 = None : <type 'NoneType'>
=> component2 = 'c' : <type 'str'>
==================================================
component4 = "epsilon"                                                   # STEP 2
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
component0 = "lambda"                                                    # STEP 3
ACTION: component0 = "lambda" 
component0 = None : <type 'NoneType'>
=> component0 = 'lambda' : <type 'str'>
==================================================
component1 = "d"                                                         # STEP 4
ACTION: component1 = "d" 
component1 = None : <type 'NoneType'>
=> component1 = 'd' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 5
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str4 = ""                                                                # STEP 6
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'm'                                                              # STEP 7
ACTION: str4 += 'm' 
str4 = '' : <type 'str'>
=> str4 = 'm' : <type 'str'>
==================================================
str4 += 'm'                                                              # STEP 8
ACTION: str4 += 'm' 
str4 = 'm' : <type 'str'>
=> str4 = 'mm' : <type 'str'>
==================================================
str4 += 'c'                                                              # STEP 9
ACTION: str4 += 'c' 
str4 = 'mm' : <type 'str'>
=> str4 = 'mmc' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 10
ACTION: str4 += 'v' 
str4 = 'mmc' : <type 'str'>
=> str4 = 'mmcv' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 11
ACTION: str4 += 'j' 
str4 = 'mmcv' : <type 'str'>
=> str4 = 'mmcvj' : <type 'str'>
==================================================
component3 = "gamma"                                                    # STEP 12
ACTION: component3 = "gamma" 
component3 = None : <type 'NoneType'>
=> component3 = 'gamma' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 13
ACTION: str4 += 'e' 
str4 = 'mmcvj' : <type 'str'>
=> str4 = 'mmcvje' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 14
ACTION: path0 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 15
ACTION: str4 += 'j' 
str4 = 'mmcvje' : <type 'str'>
=> str4 = 'mmcvjej' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 16
ACTION: str4 += 'i' 
str4 = 'mmcvjej' : <type 'str'>
=> str4 = 'mmcvjeji' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 18
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "omega"                                                    # STEP 19
ACTION: component4 = "omega" 
component4 = 'epsilon' : <type 'str'>
=> component4 = 'omega' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 20
ACTION: path1 += "/" + component2 
component2 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 21
ACTION: str4 += 'h' 
str4 = 'mmcvjeji' : <type 'str'>
=> str4 = 'mmcvjejih' : <type 'str'>
==================================================
component2 = "c"                                                        # STEP 22
ACTION: component2 = "c" 
component2 = 'c' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 23
ACTION: path0 += "/" + component4 
component4 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/epsilon/omega' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 24
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 25
ACTION: str4 += 'i' 
str4 = 'mmcvjejih' : <type 'str'>
=> str4 = 'mmcvjejihi' : <type 'str'>
==================================================
component4 = "g"                                                        # STEP 26
ACTION: component4 = "g" 
component4 = 'omega' : <type 'str'>
=> component4 = 'g' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 27
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path3 += "/" + component4                                               # STEP 28
ACTION: path3 += "/" + component4 
component4 = 'g' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 29
ACTION: path3 += "/" + component4 
component4 = 'g' : <type 'str'>
path3 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g/g' : <type 'str'>
==================================================
component4 = "phi"                                                      # STEP 30
ACTION: component4 = "phi" 
component4 = 'g' : <type 'str'>
=> component4 = 'phi' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 31
ACTION: path0 += "/" + component0 
component0 = 'lambda' : <type 'str'>
path0 = '/Volumes/ramdisk/test/epsilon/omega' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/epsilon/omega/lambda' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 32
ACTION: path3 += "/" + component4 
component4 = 'phi' : <type 'str'>
path3 = '/Volumes/ramdisk/test/g/g' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g/g/phi' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 33
ACTION: path3 += "/" + component2 
component2 = 'c' : <type 'str'>
path3 = '/Volumes/ramdisk/test/g/g/phi' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g/g/phi/c' : <type 'str'>
==================================================
component0 = "gamma"                                                    # STEP 34
ACTION: component0 = "gamma" 
component0 = 'lambda' : <type 'str'>
=> component0 = 'gamma' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 35
ACTION: path1 += "/" + component3 
component3 = 'gamma' : <type 'str'>
path1 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/c/gamma' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 36
ACTION: path3 += "/" + component2 
component2 = 'c' : <type 'str'>
path3 = '/Volumes/ramdisk/test/g/g/phi/c' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g/g/phi/c/c' : <type 'str'>
==================================================
component4 = "b"                                                        # STEP 37
ACTION: component4 = "b" 
component4 = 'phi' : <type 'str'>
=> component4 = 'b' : <type 'str'>
==================================================
component3 = "omega"                                                    # STEP 38
ACTION: component3 = "omega" 
component3 = 'gamma' : <type 'str'>
=> component3 = 'omega' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 39
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str4 += 'v'                                                             # STEP 40
ACTION: str4 += 'v' 
str4 = 'mmcvjejihi' : <type 'str'>
=> str4 = 'mmcvjejihiv' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 41
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes2 = 0                                                              # STEP 42
ACTION: bytes2 = 0 
bytes2 = 1 : <type 'int'>
=> bytes2 = 0 : <type 'int'>
==================================================
str1 = ""                                                               # STEP 43
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 44
ACTION: str1 += 'l' 
str1 = '' : <type 'str'>
=> str1 = 'l' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 45
ACTION: path0 += "/" + component1 
component1 = 'd' : <type 'str'>
path0 = '/Volumes/ramdisk/test/epsilon/omega/lambda' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/epsilon/omega/lambda/d' : <type 'str'>
==================================================
component1 = "h"                                                        # STEP 46
ACTION: component1 = "h" 
component1 = 'd' : <type 'str'>
=> component1 = 'h' : <type 'str'>
==================================================
component2 = "f"                                                        # STEP 47
ACTION: component2 = "f" 
component2 = 'c' : <type 'str'>
=> component2 = 'f' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 48
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str4 += 'w'                                                             # STEP 49
ACTION: str4 += 'w' 
str4 = 'mmcvjejihiv' : <type 'str'>
=> str4 = 'mmcvjejihivw' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 50
ACTION: bytes3 += 1 
bytes3 = 1 : <type 'int'>
=> bytes3 = 2 : <type 'int'>
==================================================
path3 += "/" + component0                                               # STEP 51
ACTION: path3 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path3 = '/Volumes/ramdisk/test/g/g/phi/c/c' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g/g/phi/c/c/gamma' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 52
ACTION: str4 += 'k' 
str4 = 'mmcvjejihivw' : <type 'str'>
=> str4 = 'mmcvjejihivwk' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 53
ACTION: str1 += 'g' 
str1 = 'l' : <type 'str'>
=> str1 = 'lg' : <type 'str'>
==================================================
component0 = "d"                                                        # STEP 54
ACTION: component0 = "d" 
component0 = 'gamma' : <type 'str'>
=> component0 = 'd' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 55
ACTION: path0 += "/" + component3 
component3 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test/epsilon/omega/lambda/d' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/epsilon/omega/lambda/d/omega' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 56
ACTION: path1 += "/" + component2 
component2 = 'f' : <type 'str'>
path1 = '/Volumes/ramdisk/test/c/gamma' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/c/gamma/f' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 57
ACTION: str1 += 'o' 
str1 = 'lg' : <type 'str'>
=> str1 = 'lgo' : <type 'str'>
==================================================
component2 = "h"                                                        # STEP 58
ACTION: component2 = "h" 
component2 = 'f' : <type 'str'>
=> component2 = 'h' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 59
ACTION: str4 += 'v' 
str4 = 'mmcvjejihivwk' : <type 'str'>
=> str4 = 'mmcvjejihivwkv' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 60
ACTION: str1 += 'v' 
str1 = 'lgo' : <type 'str'>
=> str1 = 'lgov' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 61
ACTION: str4 += 'p' 
str4 = 'mmcvjejihivwkv' : <type 'str'>
=> str4 = 'mmcvjejihivwkvp' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 62
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
component3 = "a"                                                        # STEP 63
ACTION: component3 = "a" 
component3 = 'omega' : <type 'str'>
=> component3 = 'a' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 64
ACTION: str4 += 'n' 
str4 = 'mmcvjejihivwkvp' : <type 'str'>
=> str4 = 'mmcvjejihivwkvpn' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 65
ACTION: str2 += " " 
str2 = '' : <type 'str'>
=> str2 = ' ' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 66
ACTION: str4 += 'l' 
str4 = 'mmcvjejihivwkvpn' : <type 'str'>
=> str4 = 'mmcvjejihivwkvpnl' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 67
ACTION: str1 += 'l' 
str1 = 'lgov' : <type 'str'>
=> str1 = 'lgovl' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 68
ACTION: str1 += 'l' 
str1 = 'lgovl' : <type 'str'>
=> str1 = 'lgovll' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 69
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/epsilon/omega/lambda/d/omega' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 70
ACTION: str1 += 'h' 
str1 = 'lgovll' : <type 'str'>
=> str1 = 'lgovllh' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 71
ACTION: str2 += 'x' 
str2 = ' ' : <type 'str'>
=> str2 = ' x' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 72
ACTION: str2 = "" 
str2 = ' x' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 73
ACTION: str4 += 'r' 
str4 = 'mmcvjejihivwkvpnl' : <type 'str'>
=> str4 = 'mmcvjejihivwkvpnlr' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 74
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str4 += " "                                                             # STEP 75
ACTION: str4 += " " 
str4 = 'mmcvjejihivwkvpnlr' : <type 'str'>
=> str4 = 'mmcvjejihivwkvpnlr ' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 76
ACTION: str4 += 'd' 
str4 = 'mmcvjejihivwkvpnlr ' : <type 'str'>
=> str4 = 'mmcvjejihivwkvpnlr d' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 77
ACTION: str1 += 'c' 
str1 = 'lgovllh' : <type 'str'>
=> str1 = 'lgovllhc' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 78
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str4 += 'r'                                                             # STEP 79
ACTION: str4 += 'r' 
str4 = 'mmcvjejihivwkvpnlr d' : <type 'str'>
=> str4 = 'mmcvjejihivwkvpnlr dr' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 80
ACTION: str4 = "" 
str4 = 'mmcvjejihivwkvpnlr dr' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 81
ACTION: str1 += 'p' 
str1 = 'lgovllhc' : <type 'str'>
=> str1 = 'lgovllhcp' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 82
ACTION: bytes3 += 1 
bytes3 = 2 : <type 'int'>
=> bytes3 = 3 : <type 'int'>
==================================================
str2 += 'z'                                                             # STEP 83
ACTION: str2 += 'z' 
str2 = '' : <type 'str'>
=> str2 = 'z' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 84
ACTION: str4 += 'u' 
str4 = '' : <type 'str'>
=> str4 = 'u' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 85
ACTION: str4 += 'k' 
str4 = 'u' : <type 'str'>
=> str4 = 'uk' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 86
ACTION: path4 += "/" + component3 
component3 = 'a' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 87
ACTION: str2 += 'h' 
str2 = 'z' : <type 'str'>
=> str2 = 'zh' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 88
ACTION: str1 += 'q' 
str1 = 'lgovllhcp' : <type 'str'>
=> str1 = 'lgovllhcpq' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 89
ACTION: path3 += "/" + component4 
component4 = 'b' : <type 'str'>
path3 = '/Volumes/ramdisk/test/g/g/phi/c/c/gamma' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g/g/phi/c/c/gamma/b' : <type 'str'>
==================================================
component4 = "gamma"                                                    # STEP 90
ACTION: component4 = "gamma" 
component4 = 'b' : <type 'str'>
=> component4 = 'gamma' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 91
ACTION: str2 += 's' 
str2 = 'zh' : <type 'str'>
=> str2 = 'zhs' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 92
ACTION: str4 += 'w' 
str4 = 'uk' : <type 'str'>
=> str4 = 'ukw' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 93
ACTION: str4 = "" 
str4 = 'ukw' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 94
ACTION: path3 += "/" + component4 
component4 = 'gamma' : <type 'str'>
path3 = '/Volumes/ramdisk/test/g/g/phi/c/c/gamma/b' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g/g/phi/c/c/gamma/b/gamma' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 95
ACTION: str2 += 'f' 
str2 = 'zhs' : <type 'str'>
=> str2 = 'zhsf' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 96
ACTION: path3 += "/" + component0 
component0 = 'd' : <type 'str'>
path3 = '/Volumes/ramdisk/test/g/g/phi/c/c/gamma/b/gamma' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g/g/phi/c/c/gamma/b/gamma/d' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 97
ACTION: path1 += "/" + component4 
component4 = 'gamma' : <type 'str'>
path1 = '/Volumes/ramdisk/test/c/gamma/f' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/c/gamma/f/gamma' : <type 'str'>
==================================================
component3 = "a"                                                        # STEP 98
ACTION: component3 = "a" 
component3 = 'a' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 99
ACTION: path3 += "/" + component1 
component1 = 'h' : <type 'str'>
path3 = '/Volumes/ramdisk/test/g/g/phi/c/c/gamma/b/gamma/d' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g/g/phi/c/c/gamma/b/gamma/d/h' : <type 'str'>
==================================================
str1 += 'y'                                                            # STEP 100
ACTION: str1 += 'y' 
str1 = 'lgovllhcpq' : <type 'str'>
=> str1 = 'lgovllhcpqy' : <type 'str'>
==================================================
str1 += 'f'                                                            # STEP 101
ACTION: str1 += 'f' 
str1 = 'lgovllhcpqy' : <type 'str'>
=> str1 = 'lgovllhcpqyf' : <type 'str'>
==================================================
component1 = "gamma"                                                   # STEP 102
ACTION: component1 = "gamma" 
component1 = 'h' : <type 'str'>
=> component1 = 'gamma' : <type 'str'>
==================================================
path4 += "/" + component2                                              # STEP 103
ACTION: path4 += "/" + component2 
component2 = 'h' : <type 'str'>
path4 = '/Volumes/ramdisk/test/a' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/a/h' : <type 'str'>
==================================================
str2 += 'k'                                                            # STEP 104
ACTION: str2 += 'k' 
str2 = 'zhsf' : <type 'str'>
=> str2 = 'zhsfk' : <type 'str'>
==================================================
str4 += 'l'                                                            # STEP 105
ACTION: str4 += 'l' 
str4 = '' : <type 'str'>
=> str4 = 'l' : <type 'str'>
==================================================
str2 += 'u'                                                            # STEP 106
ACTION: str2 += 'u' 
str2 = 'zhsfk' : <type 'str'>
=> str2 = 'zhsfku' : <type 'str'>
==================================================
str4 += 'f'                                                            # STEP 107
ACTION: str4 += 'f' 
str4 = 'l' : <type 'str'>
=> str4 = 'lf' : <type 'str'>
==================================================
str4 += 'm'                                                            # STEP 108
ACTION: str4 += 'm' 
str4 = 'lf' : <type 'str'>
=> str4 = 'lfm' : <type 'str'>
==================================================
str2 = ""                                                              # STEP 109
ACTION: str2 = "" 
str2 = 'zhsfku' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
component4 = "h"                                                       # STEP 110
ACTION: component4 = "h" 
component4 = 'gamma' : <type 'str'>
=> component4 = 'h' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 111
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> can't multiply sequence by non-int of type 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("can't multiply sequence by non-int of type 'str'",), <traceback object at 0x101f81b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17, in newFakeOS
    fs = pyfakefs.fake_filesystem.FakeFilesystem()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 881, in __init__
    self.AddMountPoint(self.root.name, total_size)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 933, in AddMountPoint
    path = self.NormalizePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1357, in NormalizePath
    return self.CollapsePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1283, in CollapsePath
    collapsed_path = (sep * collapsed_path)
STOPPING TESTING DUE TO FAILED TEST
0.0306370258331 TOTAL RUNTIME
1 EXECUTED
112 TOTAL TEST OPERATIONS
0.00158143043518 TIME SPENT EXECUTING TEST OPERATIONS
0.00518035888672 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.95774841309e-05 TIME SPENT CHECKING PROPERTIES
0.00162100791931 TOTAL TIME SPENT RUNNING SUT
0.00321197509766 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
