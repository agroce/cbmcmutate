Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.53861.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(17, 'Directory exists in fake filesystem'), <traceback object at 0x1039daf80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2057, in CreateDirectory
    raise OSError(errno.EEXIST, 'Directory exists in fake filesystem', directory_path)
Original test has 35 steps

SAVING TEST AS failure.53861.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "h"                                                         # STEP 0
ACTION: component1 = "h" 
component1 = None : <type 'NoneType'>
=> component1 = 'h' : <type 'str'>
==================================================
component3 = "g"                                                         # STEP 1
ACTION: component3 = "g" 
component3 = None : <type 'NoneType'>
=> component3 = 'g' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 2
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 3
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str3 += 't'                                                              # STEP 4
ACTION: str3 += 't' 
str3 = '' : <type 'str'>
=> str3 = 't' : <type 'str'>
==================================================
str0 += 'w'                                                              # STEP 5
ACTION: str0 += 'w' 
str0 = '' : <type 'str'>
=> str0 = 'w' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 's'                                                              # STEP 7
ACTION: str3 += 's' 
str3 = 't' : <type 'str'>
=> str3 = 'ts' : <type 'str'>
==================================================
str0 += 'j'                                                              # STEP 8
ACTION: str0 += 'j' 
str0 = 'w' : <type 'str'>
=> str0 = 'wj' : <type 'str'>
==================================================
component0 = "a"                                                         # STEP 9
ACTION: component0 = "a" 
component0 = None : <type 'NoneType'>
=> component0 = 'a' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 10
ACTION: str0 += 'm' 
str0 = 'wj' : <type 'str'>
=> str0 = 'wjm' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 11
ACTION: str0 += 'y' 
str0 = 'wjm' : <type 'str'>
=> str0 = 'wjmy' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 12
ACTION: str3 += 'b' 
str3 = 'ts' : <type 'str'>
=> str3 = 'tsb' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 13
ACTION: str0 += 'm' 
str0 = 'wjmy' : <type 'str'>
=> str0 = 'wjmym' : <type 'str'>
==================================================
component2 = "g"                                                        # STEP 14
ACTION: component2 = "g" 
component2 = None : <type 'NoneType'>
=> component2 = 'g' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 15
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str0 += 'b'                                                             # STEP 16
ACTION: str0 += 'b' 
str0 = 'wjmym' : <type 'str'>
=> str0 = 'wjmymb' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 17
ACTION: str3 += 'j' 
str3 = 'tsb' : <type 'str'>
=> str3 = 'tsbj' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 18
ACTION: component4 = "beta" 
component4 = None : <type 'NoneType'>
=> component4 = 'beta' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 19
ACTION: str3 += 's' 
str3 = 'tsbj' : <type 'str'>
=> str3 = 'tsbjs' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 20
ACTION: path4 += "/" + component2 
component2 = 'g' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 21
ACTION: str3 = "" 
str3 = 'tsbjs' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 22
ACTION: str3 += 'c' 
str3 = '' : <type 'str'>
=> str3 = 'c' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 23
ACTION: str0 += 'z' 
str0 = 'wjmymb' : <type 'str'>
=> str0 = 'wjmymbz' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 24
ACTION: str3 += 'v' 
str3 = 'c' : <type 'str'>
=> str3 = 'cv' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 25
ACTION: str3 += 'h' 
str3 = 'cv' : <type 'str'>
=> str3 = 'cvh' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 26
ACTION: str3 += 'l' 
str3 = 'cvh' : <type 'str'>
=> str3 = 'cvhl' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 27
ACTION: str0 += 't' 
str0 = 'wjmymbz' : <type 'str'>
=> str0 = 'wjmymbzt' : <type 'str'>
==================================================
component2 = "a"                                                        # STEP 28
ACTION: component2 = "a" 
component2 = 'g' : <type 'str'>
=> component2 = 'a' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 29
ACTION: str0 += 'r' 
str0 = 'wjmymbzt' : <type 'str'>
=> str0 = 'wjmymbztr' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 30
ACTION: str3 += 'f' 
str3 = 'cvhl' : <type 'str'>
=> str3 = 'cvhlf' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 31
ACTION: str0 += 'u' 
str0 = 'wjmymbztr' : <type 'str'>
=> str0 = 'wjmymbztru' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 32
ACTION: str3 += 'n' 
str3 = 'cvhlf' : <type 'str'>
=> str3 = 'cvhlfn' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 33
ACTION: str3 += 'd' 
str3 = 'cvhlfn' : <type 'str'>
=> str3 = 'cvhlfnd' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 34
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes'
ERROR: (<type 'exceptions.OSError'>, OSError(17, 'Directory exists in fake filesystem'), <traceback object at 0x1044057e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2057, in CreateDirectory
    raise OSError(errno.EEXIST, 'Directory exists in fake filesystem', directory_path)
STOPPING TESTING DUE TO FAILED TEST
0.0274791717529 TOTAL RUNTIME
1 EXECUTED
35 TOTAL TEST OPERATIONS
0.000718832015991 TIME SPENT EXECUTING TEST OPERATIONS
0.00167751312256 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.6450881958e-05 TIME SPENT CHECKING PROPERTIES
0.000735282897949 TOTAL TIME SPENT RUNNING SUT
0.00339388847351 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
