Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59434.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for -: 'str' and 'str'",), <traceback object at 0x1007c3290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22295, in act446
    self.p_os[0].remove(self.p_path[3])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3569, in remove
    self.filesystem.RemoveFile(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2481, in RemoveFile
    raise OSError(errno.EISDIR, ("Is a directory: '%s'" - path))
Original test has 43 steps

SAVING TEST AS failure.59434.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "alpha"                                                     # STEP 0
ACTION: component0 = "alpha" 
component0 = None : <type 'NoneType'>
=> component0 = 'alpha' : <type 'str'>
==================================================
component3 = "b"                                                         # STEP 1
ACTION: component3 = "b" 
component3 = None : <type 'NoneType'>
=> component3 = 'b' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "alpha"                                                     # STEP 3
ACTION: component4 = "alpha" 
component4 = None : <type 'NoneType'>
=> component4 = 'alpha' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 4
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'h'                                                              # STEP 5
ACTION: str1 += 'h' 
str1 = '' : <type 'str'>
=> str1 = 'h' : <type 'str'>
==================================================
str1 += 'x'                                                              # STEP 6
ACTION: str1 += 'x' 
str1 = 'h' : <type 'str'>
=> str1 = 'hx' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 7
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component2 = "delta"                                                     # STEP 8
ACTION: component2 = "delta" 
component2 = None : <type 'NoneType'>
=> component2 = 'delta' : <type 'str'>
==================================================
str1 += 'z'                                                              # STEP 9
ACTION: str1 += 'z' 
str1 = 'hx' : <type 'str'>
=> str1 = 'hxz' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 10
ACTION: str1 += 'c' 
str1 = 'hxz' : <type 'str'>
=> str1 = 'hxzc' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 11
ACTION: str1 += 'r' 
str1 = 'hxzc' : <type 'str'>
=> str1 = 'hxzcr' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 12
ACTION: str0 += 'h' 
str0 = '' : <type 'str'>
=> str0 = 'h' : <type 'str'>
==================================================
component1 = "phi"                                                      # STEP 13
ACTION: component1 = "phi" 
component1 = None : <type 'NoneType'>
=> component1 = 'phi' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 14
ACTION: str0 += 'd' 
str0 = 'h' : <type 'str'>
=> str0 = 'hd' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 15
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 16
ACTION: str1 += 'o' 
str1 = 'hxzcr' : <type 'str'>
=> str1 = 'hxzcro' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 17
ACTION: str1 += 'r' 
str1 = 'hxzcro' : <type 'str'>
=> str1 = 'hxzcror' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 18
ACTION: str1 += 'z' 
str1 = 'hxzcror' : <type 'str'>
=> str1 = 'hxzcrorz' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 19
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 20
ACTION: str1 += 'd' 
str1 = 'hxzcrorz' : <type 'str'>
=> str1 = 'hxzcrorzd' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 21
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 22
ACTION: str0 += 'w' 
str0 = 'hd' : <type 'str'>
=> str0 = 'hdw' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 23
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103deb9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
os0.symlink(path4,path2)                                                # STEP 24
ACTION: os0.symlink(path4,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103deb9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path4,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.symlink(path2,path4)                                                # STEP 25
ACTION: os0.symlink(path2,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103deb9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path2,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.makedirs(path1)                                                     # STEP 26
ACTION: os0.makedirs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103deb9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
bytes4 = 0                                                              # STEP 27
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str4 = ""                                                               # STEP 28
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 29
ACTION: str1 += 'm' 
str1 = 'hxzcrorzd' : <type 'str'>
=> str1 = 'hxzcrorzdm' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 30
ACTION: str1 += 's' 
str1 = 'hxzcrorzdm' : <type 'str'>
=> str1 = 'hxzcrorzdms' : <type 'str'>
==================================================
result = os0.path.isfile(path3)                                         # STEP 31
ACTION: result = os0.path.isfile(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103deb9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path3) 
==================================================
str1 += 'x'                                                             # STEP 32
ACTION: str1 += 'x' 
str1 = 'hxzcrorzdms' : <type 'str'>
=> str1 = 'hxzcrorzdmsx' : <type 'str'>
==================================================
os0.link(path4,path1)                                                   # STEP 33
ACTION: os0.link(path4,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103deb9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path4,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.link(path1,path1)                                                   # STEP 34
ACTION: os0.link(path1,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103deb9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path1,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.link(path3,path3)                                                   # STEP 35
ACTION: os0.link(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103deb9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str4 += 'w'                                                             # STEP 36
ACTION: str4 += 'w' 
str4 = '' : <type 'str'>
=> str4 = 'w' : <type 'str'>
==================================================
os0.mkdir(path3)                                                        # STEP 37
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103deb9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
str4 += 'l'                                                             # STEP 38
ACTION: str4 += 'l' 
str4 = 'w' : <type 'str'>
=> str4 = 'wl' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 39
ACTION: str0 += 'p' 
str0 = 'hdw' : <type 'str'>
=> str0 = 'hdwp' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 40
ACTION: str1 += 'e' 
str1 = 'hxzcrorzdmsx' : <type 'str'>
=> str1 = 'hxzcrorzdmsxe' : <type 'str'>
==================================================
result = sorted(os0.listdir(path2))                                     # STEP 41
ACTION: result = sorted(os0.listdir(path2)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103deb9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path2)) 
==================================================
os0.remove(path3)                                                       # STEP 42
ACTION: os0.remove(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103deb9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unsupported operand type(s) for -: 'str' and 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for -: 'str' and 'str'",), <traceback object at 0x1045d2fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22295, in act446
    self.p_os[0].remove(self.p_path[3])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3569, in remove
    self.filesystem.RemoveFile(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2481, in RemoveFile
    raise OSError(errno.EISDIR, ("Is a directory: '%s'" - path))
STOPPING TESTING DUE TO FAILED TEST
0.0877640247345 TOTAL RUNTIME
2 EXECUTED
243 TOTAL TEST OPERATIONS
0.0443139076233 TIME SPENT EXECUTING TEST OPERATIONS
0.0107669830322 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000117778778076 TIME SPENT CHECKING PROPERTIES
0.0444316864014 TOTAL TIME SPENT RUNNING SUT
0.00627493858337 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
