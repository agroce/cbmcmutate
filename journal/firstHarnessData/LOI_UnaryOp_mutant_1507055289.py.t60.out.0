Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.63825.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.IOError'>, IOError(20, 'Not a directory in fake filesystem'), <traceback object at 0x10206eab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22237, in act445
    self.p_os[0].remove(self.p_path[2])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3569, in remove
    self.filesystem.RemoveFile(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2473, in RemoveFile
    obj = self.ResolveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1837, in ResolveObject
    return self.GetObjectFromNormalizedPath(self.ResolvePath(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1797, in GetObjectFromNormalizedPath
    raise IOError(errno.ENOTDIR, 'Not a directory in fake filesystem', file_path)
Original test has 34 steps

SAVING TEST AS failure.63825.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes3 = 0                                                               # STEP 0
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
bytes4 = 0                                                               # STEP 1
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component0 = "beta"                                                      # STEP 2
ACTION: component0 = "beta" 
component0 = None : <type 'NoneType'>
=> component0 = 'beta' : <type 'str'>
==================================================
component4 = "alpha"                                                     # STEP 3
ACTION: component4 = "alpha" 
component4 = None : <type 'NoneType'>
=> component4 = 'alpha' : <type 'str'>
==================================================
component2 = "delta"                                                     # STEP 4
ACTION: component2 = "delta" 
component2 = None : <type 'NoneType'>
=> component2 = 'delta' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 5
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1023163d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 = ""                                                                # STEP 6
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'i'                                                              # STEP 7
ACTION: str1 += 'i' 
str1 = '' : <type 'str'>
=> str1 = 'i' : <type 'str'>
==================================================
str1 += 'm'                                                              # STEP 8
ACTION: str1 += 'm' 
str1 = 'i' : <type 'str'>
=> str1 = 'im' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 9
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 10
ACTION: str4 += 'f' 
str4 = '' : <type 'str'>
=> str4 = 'f' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 11
ACTION: str1 += 'x' 
str1 = 'im' : <type 'str'>
=> str1 = 'imx' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 12
ACTION: str4 += 'i' 
str4 = 'f' : <type 'str'>
=> str4 = 'fi' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 13
ACTION: str4 += 'c' 
str4 = 'fi' : <type 'str'>
=> str4 = 'fic' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 14
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str1 += 'd'                                                             # STEP 15
ACTION: str1 += 'd' 
str1 = 'imx' : <type 'str'>
=> str1 = 'imxd' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 16
ACTION: str4 += 'r' 
str4 = 'fic' : <type 'str'>
=> str4 = 'ficr' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 18
ACTION: str4 += " " 
str4 = 'ficr' : <type 'str'>
=> str4 = 'ficr ' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 19
ACTION: str1 += 'a' 
str1 = 'imxd' : <type 'str'>
=> str1 = 'imxda' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 20
ACTION: str4 += 'r' 
str4 = 'ficr ' : <type 'str'>
=> str4 = 'ficr r' : <type 'str'>
==================================================
component1 = "phi"                                                      # STEP 21
ACTION: component1 = "phi" 
component1 = None : <type 'NoneType'>
=> component1 = 'phi' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 22
ACTION: str1 += 'o' 
str1 = 'imxda' : <type 'str'>
=> str1 = 'imxdao' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 23
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 24
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
os0.link(path2,path2)                                                   # STEP 25
ACTION: os0.link(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1023163d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.link(path1,path1)                                                   # STEP 26
ACTION: os0.link(path1,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1023163d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path1,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.exists(path1)                                         # STEP 27
ACTION: result = os0.path.exists(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1023163d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path1) 
==================================================
result = os0.path.abspath(path2)                                        # STEP 28
ACTION: result = os0.path.abspath(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1023163d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path2) 
==================================================
str1 += 'n'                                                             # STEP 29
ACTION: str1 += 'n' 
str1 = 'imxdao' : <type 'str'>
=> str1 = 'imxdaon' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 30
ACTION: str1 += 'x' 
str1 = 'imxdaon' : <type 'str'>
=> str1 = 'imxdaonx' : <type 'str'>
==================================================
result = os0.path.islink(path2)                                         # STEP 31
ACTION: result = os0.path.islink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1023163d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path2) 
==================================================
str1 += 'e'                                                             # STEP 32
ACTION: str1 += 'e' 
str1 = 'imxdaonx' : <type 'str'>
=> str1 = 'imxdaonxe' : <type 'str'>
==================================================
os0.remove(path2)                                                       # STEP 33
ACTION: os0.remove(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1023163d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.IOError'> [Errno 20] Not a directory in fake filesystem: '/Volumes/ramdisk/test'
ERROR: (<type 'exceptions.IOError'>, IOError(20, 'Not a directory in fake filesystem'), <traceback object at 0x102009cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22237, in act445
    self.p_os[0].remove(self.p_path[2])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3569, in remove
    self.filesystem.RemoveFile(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2473, in RemoveFile
    obj = self.ResolveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1837, in ResolveObject
    return self.GetObjectFromNormalizedPath(self.ResolvePath(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1797, in GetObjectFromNormalizedPath
    raise IOError(errno.ENOTDIR, 'Not a directory in fake filesystem', file_path)
STOPPING TESTING DUE TO FAILED TEST
0.0257520675659 TOTAL RUNTIME
1 EXECUTED
34 TOTAL TEST OPERATIONS
0.00300908088684 TIME SPENT EXECUTING TEST OPERATIONS
0.00189185142517 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.6450881958e-05 TIME SPENT CHECKING PROPERTIES
0.0030255317688 TOTAL TIME SPENT RUNNING SUT
0.00398302078247 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
