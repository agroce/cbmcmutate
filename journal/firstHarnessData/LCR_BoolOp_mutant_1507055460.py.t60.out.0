Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.56393.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(13, 'Permission Denied'), <traceback object at 0x10397a758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2075, in CreateDirectory
    current_dir.AddEntry(new_dir)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 685, in AddEntry
    raise OSError(errno.EACCES, 'Permission Denied', self.GetPath())
Original test has 74 steps

SAVING TEST AS failure.56393.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str1 = ""                                                                # STEP 0
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
component1 = "c"                                                         # STEP 1
ACTION: component1 = "c" 
component1 = None : <type 'NoneType'>
=> component1 = 'c' : <type 'str'>
==================================================
str1 += " "                                                              # STEP 2
ACTION: str1 += " " 
str1 = '' : <type 'str'>
=> str1 = ' ' : <type 'str'>
==================================================
component3 = "e"                                                         # STEP 3
ACTION: component3 = "e" 
component3 = None : <type 'NoneType'>
=> component3 = 'e' : <type 'str'>
==================================================
component0 = "alpha"                                                     # STEP 4
ACTION: component0 = "alpha" 
component0 = None : <type 'NoneType'>
=> component0 = 'alpha' : <type 'str'>
==================================================
str1 += 'a'                                                              # STEP 5
ACTION: str1 += 'a' 
str1 = ' ' : <type 'str'>
=> str1 = ' a' : <type 'str'>
==================================================
component4 = "lambda"                                                    # STEP 6
ACTION: component4 = "lambda" 
component4 = None : <type 'NoneType'>
=> component4 = 'lambda' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 7
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str3 = ""                                                                # STEP 8
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component2 = "omega"                                                     # STEP 9
ACTION: component2 = "omega" 
component2 = None : <type 'NoneType'>
=> component2 = 'omega' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 10
ACTION: str3 += 'x' 
str3 = '' : <type 'str'>
=> str3 = 'x' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 11
ACTION: str3 += 'f' 
str3 = 'x' : <type 'str'>
=> str3 = 'xf' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 12
ACTION: str1 += 'k' 
str1 = ' a' : <type 'str'>
=> str1 = ' ak' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 13
ACTION: str3 += 'z' 
str3 = 'xf' : <type 'str'>
=> str3 = 'xfz' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 14
ACTION: str3 += 'd' 
str3 = 'xfz' : <type 'str'>
=> str3 = 'xfzd' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 15
ACTION: str1 += 's' 
str1 = ' ak' : <type 'str'>
=> str1 = ' aks' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 16
ACTION: str3 += 'b' 
str3 = 'xfzd' : <type 'str'>
=> str3 = 'xfzdb' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 17
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str1 += 'n'                                                             # STEP 18
ACTION: str1 += 'n' 
str1 = ' aks' : <type 'str'>
=> str1 = ' aksn' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 19
ACTION: str3 += 'k' 
str3 = 'xfzdb' : <type 'str'>
=> str3 = 'xfzdbk' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 20
ACTION: str1 += 'd' 
str1 = ' aksn' : <type 'str'>
=> str1 = ' aksnd' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 21
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str3 += 'w'                                                             # STEP 22
ACTION: str3 += 'w' 
str3 = 'xfzdbk' : <type 'str'>
=> str3 = 'xfzdbkw' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 23
ACTION: str3 += " " 
str3 = 'xfzdbkw' : <type 'str'>
=> str3 = 'xfzdbkw ' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 24
ACTION: str3 += 's' 
str3 = 'xfzdbkw ' : <type 'str'>
=> str3 = 'xfzdbkw s' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 25
ACTION: bytes4 = 0 
bytes4 = 1 : <type 'int'>
=> bytes4 = 0 : <type 'int'>
==================================================
str3 += 'g'                                                             # STEP 26
ACTION: str3 += 'g' 
str3 = 'xfzdbkw s' : <type 'str'>
=> str3 = 'xfzdbkw sg' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 27
ACTION: str3 += 'y' 
str3 = 'xfzdbkw sg' : <type 'str'>
=> str3 = 'xfzdbkw sgy' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 28
ACTION: str3 += " " 
str3 = 'xfzdbkw sgy' : <type 'str'>
=> str3 = 'xfzdbkw sgy ' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 29
ACTION: str3 += 'z' 
str3 = 'xfzdbkw sgy ' : <type 'str'>
=> str3 = 'xfzdbkw sgy z' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 30
ACTION: str3 += 'm' 
str3 = 'xfzdbkw sgy z' : <type 'str'>
=> str3 = 'xfzdbkw sgy zm' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 31
ACTION: str1 += 'q' 
str1 = ' aksnd' : <type 'str'>
=> str1 = ' aksndq' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 32
ACTION: str3 += 'd' 
str3 = 'xfzdbkw sgy zm' : <type 'str'>
=> str3 = 'xfzdbkw sgy zmd' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 33
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 34
ACTION: str3 += 's' 
str3 = 'xfzdbkw sgy zmd' : <type 'str'>
=> str3 = 'xfzdbkw sgy zmds' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 35
ACTION: str3 += 'g' 
str3 = 'xfzdbkw sgy zmds' : <type 'str'>
=> str3 = 'xfzdbkw sgy zmdsg' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 36
ACTION: str3 += 'f' 
str3 = 'xfzdbkw sgy zmdsg' : <type 'str'>
=> str3 = 'xfzdbkw sgy zmdsgf' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 37
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 38
ACTION: path3 += "/" + component0 
component0 = 'alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 39
ACTION: path3 += "/" + component3 
component3 = 'e' : <type 'str'>
path3 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/alpha/e' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 40
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 += 'z'                                                             # STEP 41
ACTION: str3 += 'z' 
str3 = 'xfzdbkw sgy zmdsgf' : <type 'str'>
=> str3 = 'xfzdbkw sgy zmdsgfz' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 42
ACTION: str1 += 'b' 
str1 = ' aksndq' : <type 'str'>
=> str1 = ' aksndqb' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 43
ACTION: str3 += 'x' 
str3 = 'xfzdbkw sgy zmdsgfz' : <type 'str'>
=> str3 = 'xfzdbkw sgy zmdsgfzx' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 44
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/alpha/e' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 45
ACTION: str3 = "" 
str3 = 'xfzdbkw sgy zmdsgfzx' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 46
ACTION: str1 += 'c' 
str1 = ' aksndqb' : <type 'str'>
=> str1 = ' aksndqbc' : <type 'str'>
==================================================
component0 = "phi"                                                      # STEP 47
ACTION: component0 = "phi" 
component0 = 'alpha' : <type 'str'>
=> component0 = 'phi' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 48
ACTION: str3 += 'g' 
str3 = '' : <type 'str'>
=> str3 = 'g' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 49
ACTION: str3 += 'm' 
str3 = 'g' : <type 'str'>
=> str3 = 'gm' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 50
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str3 += 'g'                                                             # STEP 51
ACTION: str3 += 'g' 
str3 = 'gm' : <type 'str'>
=> str3 = 'gmg' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 52
ACTION: str1 += 'l' 
str1 = ' aksndqbc' : <type 'str'>
=> str1 = ' aksndqbcl' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 53
ACTION: path4 += "/" + component1 
component1 = 'c' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 54
ACTION: str3 += 'j' 
str3 = 'gmg' : <type 'str'>
=> str3 = 'gmgj' : <type 'str'>
==================================================
component3 = "delta"                                                    # STEP 55
ACTION: component3 = "delta" 
component3 = 'e' : <type 'str'>
=> component3 = 'delta' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 56
ACTION: str1 += " " 
str1 = ' aksndqbcl' : <type 'str'>
=> str1 = ' aksndqbcl ' : <type 'str'>
==================================================
component1 = "lambda"                                                   # STEP 57
ACTION: component1 = "lambda" 
component1 = 'c' : <type 'str'>
=> component1 = 'lambda' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 58
ACTION: path3 += "/" + component1 
component1 = 'lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
component1 = "gamma"                                                    # STEP 59
ACTION: component1 = "gamma" 
component1 = 'lambda' : <type 'str'>
=> component1 = 'gamma' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 60
ACTION: str3 += 'u' 
str3 = 'gmgj' : <type 'str'>
=> str3 = 'gmgju' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 61
ACTION: str1 += 's' 
str1 = ' aksndqbcl ' : <type 'str'>
=> str1 = ' aksndqbcl s' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 62
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str1 += 'l'                                                             # STEP 63
ACTION: str1 += 'l' 
str1 = ' aksndqbcl s' : <type 'str'>
=> str1 = ' aksndqbcl sl' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 64
ACTION: str3 += 'b' 
str3 = 'gmgju' : <type 'str'>
=> str3 = 'gmgjub' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 65
ACTION: str1 += 'j' 
str1 = ' aksndqbcl sl' : <type 'str'>
=> str1 = ' aksndqbcl slj' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 66
ACTION: str3 += 'j' 
str3 = 'gmgjub' : <type 'str'>
=> str3 = 'gmgjubj' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 67
ACTION: str3 += 'v' 
str3 = 'gmgjubj' : <type 'str'>
=> str3 = 'gmgjubjv' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 68
ACTION: str3 += 's' 
str3 = 'gmgjubjv' : <type 'str'>
=> str3 = 'gmgjubjvs' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 69
ACTION: str3 += 'l' 
str3 = 'gmgjubjvs' : <type 'str'>
=> str3 = 'gmgjubjvsl' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 70
ACTION: str1 += 's' 
str1 = ' aksndqbcl slj' : <type 'str'>
=> str1 = ' aksndqbcl sljs' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 71
ACTION: str1 += 'i' 
str1 = ' aksndqbcl sljs' : <type 'str'>
=> str1 = ' aksndqbcl sljsi' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 72
ACTION: str1 += 'y' 
str1 = ' aksndqbcl sljsi' : <type 'str'>
=> str1 = ' aksndqbcl sljsiy' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 73
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 13] Permission Denied: '/'
ERROR: (<type 'exceptions.OSError'>, OSError(13, 'Permission Denied'), <traceback object at 0x1006aa368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2075, in CreateDirectory
    current_dir.AddEntry(new_dir)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 685, in AddEntry
    raise OSError(errno.EACCES, 'Permission Denied', self.GetPath())
STOPPING TESTING DUE TO FAILED TEST
0.0333290100098 TOTAL RUNTIME
1 EXECUTED
74 TOTAL TEST OPERATIONS
0.0020112991333 TIME SPENT EXECUTING TEST OPERATIONS
0.00595283508301 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.33921813965e-05 TIME SPENT CHECKING PROPERTIES
0.0020546913147 TOTAL TIME SPENT RUNNING SUT
0.00513982772827 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
