Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.50082.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102afb950>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22809, in act454
    assert (type(raised) == type(refRaised))
Original test has 42 steps

SAVING TEST AS failure.50082.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "alpha"                                                     # STEP 0
ACTION: component1 = "alpha" 
component1 = None : <type 'NoneType'>
=> component1 = 'alpha' : <type 'str'>
==================================================
component0 = "g"                                                         # STEP 1
ACTION: component0 = "g" 
component0 = None : <type 'NoneType'>
=> component0 = 'g' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "g"                                                         # STEP 3
ACTION: component4 = "g" 
component4 = None : <type 'NoneType'>
=> component4 = 'g' : <type 'str'>
==================================================
component3 = "gamma"                                                     # STEP 4
ACTION: component3 = "gamma" 
component3 = None : <type 'NoneType'>
=> component3 = 'gamma' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "f"                                                         # STEP 6
ACTION: component2 = "f" 
component2 = None : <type 'NoneType'>
=> component2 = 'f' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 7
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
path2 += "/" + component2                                                # STEP 8
ACTION: path2 += "/" + component2 
component2 = 'f' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
str4 += 'z'                                                              # STEP 9
ACTION: str4 += 'z' 
str4 = '' : <type 'str'>
=> str4 = 'z' : <type 'str'>
==================================================
component2 = "f"                                                        # STEP 10
ACTION: component2 = "f" 
component2 = 'f' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 11
ACTION: str4 += 'f' 
str4 = 'z' : <type 'str'>
=> str4 = 'zf' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 12
ACTION: str4 += 'm' 
str4 = 'zf' : <type 'str'>
=> str4 = 'zfm' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 13
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path2 += "/" + component3                                               # STEP 14
ACTION: path2 += "/" + component3 
component3 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/f' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f/gamma' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 15
ACTION: str4 += 'g' 
str4 = 'zfm' : <type 'str'>
=> str4 = 'zfmg' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 16
ACTION: str4 += 'w' 
str4 = 'zfmg' : <type 'str'>
=> str4 = 'zfmgw' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 17
ACTION: str4 += 's' 
str4 = 'zfmgw' : <type 'str'>
=> str4 = 'zfmgws' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 18
ACTION: str4 += 'f' 
str4 = 'zfmgws' : <type 'str'>
=> str4 = 'zfmgwsf' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 19
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 20
ACTION: path3 += "/" + component3 
component3 = 'gamma' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 21
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 22
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 23
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component3 = "beta"                                                     # STEP 24
ACTION: component3 = "beta" 
component3 = 'gamma' : <type 'str'>
=> component3 = 'beta' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 25
ACTION: str4 += 'n' 
str4 = 'zfmgwsf' : <type 'str'>
=> str4 = 'zfmgwsfn' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 26
ACTION: path2 += "/" + component0 
component0 = 'g' : <type 'str'>
path2 = '/Volumes/ramdisk/test/f/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f/gamma/g' : <type 'str'>
==================================================
component0 = "e"                                                        # STEP 27
ACTION: component0 = "e" 
component0 = 'g' : <type 'str'>
=> component0 = 'e' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 28
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
path1 += "/" + component0                                               # STEP 29
ACTION: path1 += "/" + component0 
component0 = 'e' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
component0 = "g"                                                        # STEP 30
ACTION: component0 = "g" 
component0 = 'e' : <type 'str'>
=> component0 = 'g' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 31
ACTION: path4 += "/" + component2 
component2 = 'f' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
component2 = "lambda"                                                   # STEP 32
ACTION: component2 = "lambda" 
component2 = 'f' : <type 'str'>
=> component2 = 'lambda' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 33
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b6e190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 34
ACTION: fd0 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b6e190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 35
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b6e190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/e' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
=> fd_REF1 = 5 : <type 'int'>
==================================================
os0.close(fd1)                                                          # STEP 36
ACTION: os0.close(fd1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b6e190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
REFERENCE ACTION: os_REF0.close(fd_REF1) 
==================================================
path2 += "/" + component0                                               # STEP 37
ACTION: path2 += "/" + component0 
component0 = 'g' : <type 'str'>
path2 = '/Volumes/ramdisk/test/f/gamma/g' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f/gamma/g/g' : <type 'str'>
==================================================
stat1 = os0.lstat(path3)                                                # STEP 38
ACTION: stat1 = os0.lstat(path3) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b6e190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102ae8fd0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path3) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=4219336, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507205755, st_mtime=1507205755, st_ctime=1507205755) : <type 'posix.stat_result'>
==================================================
result = os0.path.getsize(path3)                                        # STEP 39
ACTION: result = os0.path.getsize(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b6e190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path3) 
==================================================
path2 += "/" + component3                                               # STEP 40
ACTION: path2 += "/" + component3 
component3 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/f/gamma/g/g' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f/gamma/g/g/beta' : <type 'str'>
==================================================
os0.removedirs(path1)                                                   # STEP 41
ACTION: os0.removedirs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b6e190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.removedirs(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/e'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1030d03f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22809, in act454
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0326769351959 TOTAL RUNTIME
1 EXECUTED
42 TOTAL TEST OPERATIONS
0.00421333312988 TIME SPENT EXECUTING TEST OPERATIONS
0.00315022468567 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.6450881958e-05 TIME SPENT CHECKING PROPERTIES
0.00422978401184 TOTAL TIME SPENT RUNNING SUT
0.00312685966492 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
