Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.49645.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1005aa200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 25141, in act487
    assert (type(raised) == type(refRaised))
Original test has 26 steps

SAVING TEST AS failure.49645.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "d"                                                         # STEP 0
ACTION: component2 = "d" 
component2 = None : <type 'NoneType'>
=> component2 = 'd' : <type 'str'>
==================================================
component3 = "phi"                                                       # STEP 1
ACTION: component3 = "phi" 
component3 = None : <type 'NoneType'>
=> component3 = 'phi' : <type 'str'>
==================================================
component0 = "g"                                                         # STEP 2
ACTION: component0 = "g" 
component0 = None : <type 'NoneType'>
=> component0 = 'g' : <type 'str'>
==================================================
component4 = "b"                                                         # STEP 3
ACTION: component4 = "b" 
component4 = None : <type 'NoneType'>
=> component4 = 'b' : <type 'str'>
==================================================
component1 = "h"                                                         # STEP 4
ACTION: component1 = "h" 
component1 = None : <type 'NoneType'>
=> component1 = 'h' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 5
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'f'                                                              # STEP 7
ACTION: str3 += 'f' 
str3 = '' : <type 'str'>
=> str3 = 'f' : <type 'str'>
==================================================
str3 += 'f'                                                              # STEP 8
ACTION: str3 += 'f' 
str3 = 'f' : <type 'str'>
=> str3 = 'ff' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 9
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 10
ACTION: str3 += 'w' 
str3 = 'ff' : <type 'str'>
=> str3 = 'ffw' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 11
ACTION: str4 += " " 
str4 = '' : <type 'str'>
=> str4 = ' ' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 12
ACTION: str3 += 'o' 
str3 = 'ffw' : <type 'str'>
=> str3 = 'ffwo' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 13
ACTION: str4 += 'k' 
str4 = ' ' : <type 'str'>
=> str4 = ' k' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 14
ACTION: str3 += 'w' 
str3 = 'ffwo' : <type 'str'>
=> str3 = 'ffwow' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 15
ACTION: str3 += 'e' 
str3 = 'ffwow' : <type 'str'>
=> str3 = 'ffwowe' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 16
ACTION: str4 += 'i' 
str4 = ' k' : <type 'str'>
=> str4 = ' ki' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 17
ACTION: str4 += 'z' 
str4 = ' ki' : <type 'str'>
=> str4 = ' kiz' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 18
ACTION: str4 += " " 
str4 = ' kiz' : <type 'str'>
=> str4 = ' kiz ' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 19
ACTION: str4 += 'a' 
str4 = ' kiz ' : <type 'str'>
=> str4 = ' kiz a' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 20
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d28310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.readlink(path4)                                            # STEP 21
ACTION: result = os0.readlink(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d28310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
path4 += "/" + component3                                               # STEP 22
ACTION: path4 += "/" + component3 
component3 = 'phi' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 23
ACTION: str3 += 'p' 
str3 = 'ffwowe' : <type 'str'>
=> str3 = 'ffwowep' : <type 'str'>
==================================================
os0.symlink(path4,path4)                                                # STEP 24
ACTION: os0.symlink(path4,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d28310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path4,path4) 
==================================================
stat4 = os0.stat(path4)                                                 # STEP 25
ACTION: stat4 = os0.stat(path4) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d28310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/phi' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10428c450> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/phi'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104242c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 25141, in act487
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0406601428986 TOTAL RUNTIME
2 EXECUTED
226 TOTAL TEST OPERATIONS
0.00507998466492 TIME SPENT EXECUTING TEST OPERATIONS
0.0112407207489 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000107765197754 TIME SPENT CHECKING PROPERTIES
0.00518774986267 TOTAL TIME SPENT RUNNING SUT
0.00545787811279 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
