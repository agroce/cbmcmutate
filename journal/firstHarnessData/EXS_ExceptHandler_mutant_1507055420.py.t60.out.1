Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59559.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1006c3320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 25955, in act498
    assert (type(raised) == type(refRaised))
Original test has 111 steps

SAVING TEST AS failure.59559.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "e"                                                         # STEP 0
ACTION: component2 = "e" 
component2 = None : <type 'NoneType'>
=> component2 = 'e' : <type 'str'>
==================================================
component1 = "h"                                                         # STEP 1
ACTION: component1 = "h" 
component1 = None : <type 'NoneType'>
=> component1 = 'h' : <type 'str'>
==================================================
component0 = "f"                                                         # STEP 2
ACTION: component0 = "f" 
component0 = None : <type 'NoneType'>
=> component0 = 'f' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 3
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
component3 = "d"                                                         # STEP 4
ACTION: component3 = "d" 
component3 = None : <type 'NoneType'>
=> component3 = 'd' : <type 'str'>
==================================================
component4 = "f"                                                         # STEP 5
ACTION: component4 = "f" 
component4 = None : <type 'NoneType'>
=> component4 = 'f' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 6
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'a'                                                              # STEP 7
ACTION: str0 += 'a' 
str0 = '' : <type 'str'>
=> str0 = 'a' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 8
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 9
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 10
ACTION: str0 += 'i' 
str0 = 'a' : <type 'str'>
=> str0 = 'ai' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 11
ACTION: str2 += 'w' 
str2 = '' : <type 'str'>
=> str2 = 'w' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 12
ACTION: str2 += 'd' 
str2 = 'w' : <type 'str'>
=> str2 = 'wd' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 13
ACTION: str2 += 'k' 
str2 = 'wd' : <type 'str'>
=> str2 = 'wdk' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 14
ACTION: str0 += 'p' 
str0 = 'ai' : <type 'str'>
=> str0 = 'aip' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 15
ACTION: str0 += 'x' 
str0 = 'aip' : <type 'str'>
=> str0 = 'aipx' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 16
ACTION: str2 += 'o' 
str2 = 'wdk' : <type 'str'>
=> str2 = 'wdko' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 17
ACTION: str0 += 'm' 
str0 = 'aipx' : <type 'str'>
=> str0 = 'aipxm' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 18
ACTION: str0 += 'm' 
str0 = 'aipxm' : <type 'str'>
=> str0 = 'aipxmm' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 19
ACTION: str2 += 'j' 
str2 = 'wdko' : <type 'str'>
=> str2 = 'wdkoj' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 20
ACTION: str2 += 'o' 
str2 = 'wdkoj' : <type 'str'>
=> str2 = 'wdkojo' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 21
ACTION: str0 += 'h' 
str0 = 'aipxmm' : <type 'str'>
=> str0 = 'aipxmmh' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 22
ACTION: str2 += 'l' 
str2 = 'wdkojo' : <type 'str'>
=> str2 = 'wdkojol' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 23
ACTION: str2 += 'g' 
str2 = 'wdkojol' : <type 'str'>
=> str2 = 'wdkojolg' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 24
ACTION: str2 = "" 
str2 = 'wdkojolg' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 25
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str1 = ""                                                               # STEP 26
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 27
ACTION: str0 += 'e' 
str0 = 'aipxmmh' : <type 'str'>
=> str0 = 'aipxmmhe' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 28
ACTION: str1 += 'p' 
str1 = '' : <type 'str'>
=> str1 = 'p' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 29
ACTION: str2 += 's' 
str2 = '' : <type 'str'>
=> str2 = 's' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 30
ACTION: str1 += 'c' 
str1 = 'p' : <type 'str'>
=> str1 = 'pc' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 31
ACTION: str0 += 'm' 
str0 = 'aipxmmhe' : <type 'str'>
=> str0 = 'aipxmmhem' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 32
ACTION: str1 += 'g' 
str1 = 'pc' : <type 'str'>
=> str1 = 'pcg' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 33
ACTION: str1 += 'd' 
str1 = 'pcg' : <type 'str'>
=> str1 = 'pcgd' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 34
ACTION: str1 += 'q' 
str1 = 'pcgd' : <type 'str'>
=> str1 = 'pcgdq' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 35
ACTION: str0 += 'z' 
str0 = 'aipxmmhem' : <type 'str'>
=> str0 = 'aipxmmhemz' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 36
ACTION: str2 += 'k' 
str2 = 's' : <type 'str'>
=> str2 = 'sk' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 37
ACTION: str2 += 'n' 
str2 = 'sk' : <type 'str'>
=> str2 = 'skn' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 38
ACTION: str2 += 'x' 
str2 = 'skn' : <type 'str'>
=> str2 = 'sknx' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 39
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 40
ACTION: str2 += 'q' 
str2 = 'sknx' : <type 'str'>
=> str2 = 'sknxq' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 41
ACTION: str0 += 'q' 
str0 = 'aipxmmhemz' : <type 'str'>
=> str0 = 'aipxmmhemzq' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 42
ACTION: str4 += 'i' 
str4 = '' : <type 'str'>
=> str4 = 'i' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 43
ACTION: str0 += 'r' 
str0 = 'aipxmmhemzq' : <type 'str'>
=> str0 = 'aipxmmhemzqr' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 44
ACTION: str1 += 'k' 
str1 = 'pcgdq' : <type 'str'>
=> str1 = 'pcgdqk' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 45
ACTION: str1 += 'p' 
str1 = 'pcgdqk' : <type 'str'>
=> str1 = 'pcgdqkp' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 46
ACTION: str2 += 'i' 
str2 = 'sknxq' : <type 'str'>
=> str2 = 'sknxqi' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 47
ACTION: str1 += 'n' 
str1 = 'pcgdqkp' : <type 'str'>
=> str1 = 'pcgdqkpn' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 48
ACTION: str4 += 'f' 
str4 = 'i' : <type 'str'>
=> str4 = 'if' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 49
ACTION: path2 += "/" + component3 
component3 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 50
ACTION: str4 += 'z' 
str4 = 'if' : <type 'str'>
=> str4 = 'ifz' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 51
ACTION: str2 += 'l' 
str2 = 'sknxqi' : <type 'str'>
=> str2 = 'sknxqil' : <type 'str'>
==================================================
component3 = "alpha"                                                    # STEP 52
ACTION: component3 = "alpha" 
component3 = 'd' : <type 'str'>
=> component3 = 'alpha' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 53
ACTION: str0 += 'd' 
str0 = 'aipxmmhemzqr' : <type 'str'>
=> str0 = 'aipxmmhemzqrd' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 54
ACTION: str2 += 'k' 
str2 = 'sknxqil' : <type 'str'>
=> str2 = 'sknxqilk' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 55
ACTION: str0 += 'o' 
str0 = 'aipxmmhemzqrd' : <type 'str'>
=> str0 = 'aipxmmhemzqrdo' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 56
ACTION: str1 += 'm' 
str1 = 'pcgdqkpn' : <type 'str'>
=> str1 = 'pcgdqkpnm' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 57
ACTION: str2 += 'i' 
str2 = 'sknxqilk' : <type 'str'>
=> str2 = 'sknxqilki' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 58
ACTION: str1 += 'm' 
str1 = 'pcgdqkpnm' : <type 'str'>
=> str1 = 'pcgdqkpnmm' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 59
ACTION: str1 += 'n' 
str1 = 'pcgdqkpnmm' : <type 'str'>
=> str1 = 'pcgdqkpnmmn' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 60
ACTION: str4 += 'z' 
str4 = 'ifz' : <type 'str'>
=> str4 = 'ifzz' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 61
ACTION: str1 += 's' 
str1 = 'pcgdqkpnmmn' : <type 'str'>
=> str1 = 'pcgdqkpnmmns' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 62
ACTION: str2 += 'i' 
str2 = 'sknxqilki' : <type 'str'>
=> str2 = 'sknxqilkii' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 63
ACTION: str1 += 'y' 
str1 = 'pcgdqkpnmmns' : <type 'str'>
=> str1 = 'pcgdqkpnmmnsy' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 64
ACTION: str2 += 'g' 
str2 = 'sknxqilkii' : <type 'str'>
=> str2 = 'sknxqilkiig' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 65
ACTION: path2 += "/" + component4 
component4 = 'f' : <type 'str'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/d/f' : <type 'str'>
==================================================
component4 = "a"                                                        # STEP 66
ACTION: component4 = "a" 
component4 = 'f' : <type 'str'>
=> component4 = 'a' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 67
ACTION: str1 += 'k' 
str1 = 'pcgdqkpnmmnsy' : <type 'str'>
=> str1 = 'pcgdqkpnmmnsyk' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 68
ACTION: str1 += 'u' 
str1 = 'pcgdqkpnmmnsyk' : <type 'str'>
=> str1 = 'pcgdqkpnmmnsyku' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 69
ACTION: str2 += 'g' 
str2 = 'sknxqilkiig' : <type 'str'>
=> str2 = 'sknxqilkiigg' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 70
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 71
ACTION: str0 += 'a' 
str0 = 'aipxmmhemzqrdo' : <type 'str'>
=> str0 = 'aipxmmhemzqrdoa' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 72
ACTION: str0 += 's' 
str0 = 'aipxmmhemzqrdoa' : <type 'str'>
=> str0 = 'aipxmmhemzqrdoas' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 73
ACTION: str2 += 'v' 
str2 = 'sknxqilkiigg' : <type 'str'>
=> str2 = 'sknxqilkiiggv' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 74
ACTION: str1 += 'g' 
str1 = 'pcgdqkpnmmnsyku' : <type 'str'>
=> str1 = 'pcgdqkpnmmnsykug' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 75
ACTION: str4 += 'e' 
str4 = 'ifzz' : <type 'str'>
=> str4 = 'ifzze' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 76
ACTION: str2 += 't' 
str2 = 'sknxqilkiiggv' : <type 'str'>
=> str2 = 'sknxqilkiiggvt' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 77
ACTION: str4 += 's' 
str4 = 'ifzze' : <type 'str'>
=> str4 = 'ifzzes' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 78
ACTION: str1 += 'm' 
str1 = 'pcgdqkpnmmnsykug' : <type 'str'>
=> str1 = 'pcgdqkpnmmnsykugm' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 79
ACTION: str4 += 'x' 
str4 = 'ifzzes' : <type 'str'>
=> str4 = 'ifzzesx' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 80
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path2 += "/" + component2                                               # STEP 81
ACTION: path2 += "/" + component2 
component2 = 'e' : <type 'str'>
path2 = '/Volumes/ramdisk/test/d/f' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/d/f/e' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 82
ACTION: str1 += 'u' 
str1 = 'pcgdqkpnmmnsykugm' : <type 'str'>
=> str1 = 'pcgdqkpnmmnsykugmu' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 83
ACTION: str2 += 's' 
str2 = 'sknxqilkiiggvt' : <type 'str'>
=> str2 = 'sknxqilkiiggvts' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 84
ACTION: str2 += 'm' 
str2 = 'sknxqilkiiggvts' : <type 'str'>
=> str2 = 'sknxqilkiiggvtsm' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 85
ACTION: str0 += 'q' 
str0 = 'aipxmmhemzqrdoas' : <type 'str'>
=> str0 = 'aipxmmhemzqrdoasq' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 86
ACTION: str2 += 'm' 
str2 = 'sknxqilkiiggvtsm' : <type 'str'>
=> str2 = 'sknxqilkiiggvtsmm' : <type 'str'>
==================================================
component2 = "delta"                                                    # STEP 87
ACTION: component2 = "delta" 
component2 = 'e' : <type 'str'>
=> component2 = 'delta' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 88
ACTION: str0 += 'q' 
str0 = 'aipxmmhemzqrdoasq' : <type 'str'>
=> str0 = 'aipxmmhemzqrdoasqq' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 89
ACTION: str1 += 'n' 
str1 = 'pcgdqkpnmmnsykugmu' : <type 'str'>
=> str1 = 'pcgdqkpnmmnsykugmun' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 90
ACTION: str1 += 'z' 
str1 = 'pcgdqkpnmmnsykugmun' : <type 'str'>
=> str1 = 'pcgdqkpnmmnsykugmunz' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 91
ACTION: str0 += 'p' 
str0 = 'aipxmmhemzqrdoasqq' : <type 'str'>
=> str0 = 'aipxmmhemzqrdoasqqp' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 92
ACTION: str1 += 'e' 
str1 = 'pcgdqkpnmmnsykugmunz' : <type 'str'>
=> str1 = 'pcgdqkpnmmnsykugmunze' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 93
ACTION: str4 += 'h' 
str4 = 'ifzzesx' : <type 'str'>
=> str4 = 'ifzzesxh' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 94
ACTION: str0 += 'v' 
str0 = 'aipxmmhemzqrdoasqqp' : <type 'str'>
=> str0 = 'aipxmmhemzqrdoasqqpv' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 95
ACTION: str2 += 'g' 
str2 = 'sknxqilkiiggvtsmm' : <type 'str'>
=> str2 = 'sknxqilkiiggvtsmmg' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 96
ACTION: str0 += 'c' 
str0 = 'aipxmmhemzqrdoasqqpv' : <type 'str'>
=> str0 = 'aipxmmhemzqrdoasqqpvc' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 97
ACTION: str0 += 'j' 
str0 = 'aipxmmhemzqrdoasqqpvc' : <type 'str'>
=> str0 = 'aipxmmhemzqrdoasqqpvcj' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 98
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
path0 += "/" + component1                                               # STEP 99
ACTION: path0 += "/" + component1 
component1 = 'h' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
str2 += 's'                                                            # STEP 100
ACTION: str2 += 's' 
str2 = 'sknxqilkiiggvtsmmg' : <type 'str'>
=> str2 = 'sknxqilkiiggvtsmmgs' : <type 'str'>
==================================================
str4 += 'u'                                                            # STEP 101
ACTION: str4 += 'u' 
str4 = 'ifzzesxh' : <type 'str'>
=> str4 = 'ifzzesxhu' : <type 'str'>
==================================================
str0 += 'h'                                                            # STEP 102
ACTION: str0 += 'h' 
str0 = 'aipxmmhemzqrdoasqqpvcj' : <type 'str'>
=> str0 = 'aipxmmhemzqrdoasqqpvcjh' : <type 'str'>
==================================================
str0 += 'o'                                                            # STEP 103
ACTION: str0 += 'o' 
str0 = 'aipxmmhemzqrdoasqqpvcjh' : <type 'str'>
=> str0 = 'aipxmmhemzqrdoasqqpvcjho' : <type 'str'>
==================================================
str2 += 'v'                                                            # STEP 104
ACTION: str2 += 'v' 
str2 = 'sknxqilkiiggvtsmmgs' : <type 'str'>
=> str2 = 'sknxqilkiiggvtsmmgsv' : <type 'str'>
==================================================
str2 += 'w'                                                            # STEP 105
ACTION: str2 += 'w' 
str2 = 'sknxqilkiiggvtsmmgsv' : <type 'str'>
=> str2 = 'sknxqilkiiggvtsmmgsvw' : <type 'str'>
==================================================
str2 += 'm'                                                            # STEP 106
ACTION: str2 += 'm' 
str2 = 'sknxqilkiiggvtsmmgsvw' : <type 'str'>
=> str2 = 'sknxqilkiiggvtsmmgsvwm' : <type 'str'>
==================================================
str2 += 'm'                                                            # STEP 107
ACTION: str2 += 'm' 
str2 = 'sknxqilkiiggvtsmmgsvwm' : <type 'str'>
=> str2 = 'sknxqilkiiggvtsmmgsvwmm' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 108
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024592d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 += 'd'                                                            # STEP 109
ACTION: str1 += 'd' 
str1 = 'pcgdqkpnmmnsykugmunze' : <type 'str'>
=> str1 = 'pcgdqkpnmmnsykugmunzed' : <type 'str'>
==================================================
stat2 = os0.lstat(path0)                                               # STEP 110
ACTION: stat2 = os0.lstat(path0) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024592d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/h' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: stat_REF2 = os_REF0.lstat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/h'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101fc6560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 25955, in act498
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0469148159027 TOTAL RUNTIME
2 EXECUTED
311 TOTAL TEST OPERATIONS
0.00522208213806 TIME SPENT EXECUTING TEST OPERATIONS
0.0141458511353 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000127077102661 TIME SPENT CHECKING PROPERTIES
0.00534915924072 TOTAL TIME SPENT RUNNING SUT
0.00597786903381 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
