Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59561.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1006c3320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 24253, in act475
    assert (type(raised) == type(refRaised))
Original test has 98 steps

SAVING TEST AS failure.59561.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "phi"                                                       # STEP 0
ACTION: component3 = "phi" 
component3 = None : <type 'NoneType'>
=> component3 = 'phi' : <type 'str'>
==================================================
component1 = "b"                                                         # STEP 1
ACTION: component1 = "b" 
component1 = None : <type 'NoneType'>
=> component1 = 'b' : <type 'str'>
==================================================
component4 = "g"                                                         # STEP 2
ACTION: component4 = "g" 
component4 = None : <type 'NoneType'>
=> component4 = 'g' : <type 'str'>
==================================================
component2 = "b"                                                         # STEP 3
ACTION: component2 = "b" 
component2 = None : <type 'NoneType'>
=> component2 = 'b' : <type 'str'>
==================================================
component0 = "epsilon"                                                   # STEP 4
ACTION: component0 = "epsilon" 
component0 = None : <type 'NoneType'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 5
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 8
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path2 += "/" + component4                                                # STEP 9
ACTION: path2 += "/" + component4 
component4 = 'g' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 10
ACTION: path4 += "/" + component2 
component2 = 'b' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
component2 = "beta"                                                     # STEP 11
ACTION: component2 = "beta" 
component2 = 'b' : <type 'str'>
=> component2 = 'beta' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 12
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component4 = "h"                                                        # STEP 13
ACTION: component4 = "h" 
component4 = 'g' : <type 'str'>
=> component4 = 'h' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 14
ACTION: str0 += 'v' 
str0 = '' : <type 'str'>
=> str0 = 'v' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 15
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str3 = ""                                                               # STEP 16
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 17
ACTION: str3 += 'c' 
str3 = '' : <type 'str'>
=> str3 = 'c' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 18
ACTION: str0 += 'x' 
str0 = 'v' : <type 'str'>
=> str0 = 'vx' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 19
ACTION: str0 += 'z' 
str0 = 'vx' : <type 'str'>
=> str0 = 'vxz' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 20
ACTION: str0 += 'n' 
str0 = 'vxz' : <type 'str'>
=> str0 = 'vxzn' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 21
ACTION: str0 += 'a' 
str0 = 'vxzn' : <type 'str'>
=> str0 = 'vxzna' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 22
ACTION: str0 += 'c' 
str0 = 'vxzna' : <type 'str'>
=> str0 = 'vxznac' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 23
ACTION: str3 += 'e' 
str3 = 'c' : <type 'str'>
=> str3 = 'ce' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 24
ACTION: str3 += 'l' 
str3 = 'ce' : <type 'str'>
=> str3 = 'cel' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 25
ACTION: str0 += 'h' 
str0 = 'vxznac' : <type 'str'>
=> str0 = 'vxznach' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 26
ACTION: str3 += 'u' 
str3 = 'cel' : <type 'str'>
=> str3 = 'celu' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 27
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str3 += 'u'                                                             # STEP 28
ACTION: str3 += 'u' 
str3 = 'celu' : <type 'str'>
=> str3 = 'celuu' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 29
ACTION: str0 += 'c' 
str0 = 'vxznach' : <type 'str'>
=> str0 = 'vxznachc' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 30
ACTION: str0 += " " 
str0 = 'vxznachc' : <type 'str'>
=> str0 = 'vxznachc ' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 31
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
bytes2 = 0                                                              # STEP 32
ACTION: bytes2 = 0 
bytes2 = 1 : <type 'int'>
=> bytes2 = 0 : <type 'int'>
==================================================
bytes3 = 0                                                              # STEP 33
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 34
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 35
ACTION: path2 += "/" + component1 
component1 = 'b' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 36
ACTION: str0 += 'y' 
str0 = 'vxznachc ' : <type 'str'>
=> str0 = 'vxznachc y' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 37
ACTION: str0 += 'k' 
str0 = 'vxznachc y' : <type 'str'>
=> str0 = 'vxznachc yk' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 38
ACTION: str0 += 'g' 
str0 = 'vxznachc yk' : <type 'str'>
=> str0 = 'vxznachc ykg' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 39
ACTION: str3 += 'l' 
str3 = 'celuu' : <type 'str'>
=> str3 = 'celuul' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 40
ACTION: path4 += "/" + component3 
component3 = 'phi' : <type 'str'>
path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/b/phi' : <type 'str'>
==================================================
component3 = "omega"                                                    # STEP 41
ACTION: component3 = "omega" 
component3 = 'phi' : <type 'str'>
=> component3 = 'omega' : <type 'str'>
==================================================
component1 = "f"                                                        # STEP 42
ACTION: component1 = "f" 
component1 = 'b' : <type 'str'>
=> component1 = 'f' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 43
ACTION: str3 += 'j' 
str3 = 'celuul' : <type 'str'>
=> str3 = 'celuulj' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 44
ACTION: bytes4 += 1 
bytes4 = 1 : <type 'int'>
=> bytes4 = 2 : <type 'int'>
==================================================
path4 += "/" + component3                                               # STEP 45
ACTION: path4 += "/" + component3 
component3 = 'omega' : <type 'str'>
path4 = '/Volumes/ramdisk/test/b/phi' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/b/phi/omega' : <type 'str'>
==================================================
component3 = "d"                                                        # STEP 46
ACTION: component3 = "d" 
component3 = 'omega' : <type 'str'>
=> component3 = 'd' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 47
ACTION: str0 += 'i' 
str0 = 'vxznachc ykg' : <type 'str'>
=> str0 = 'vxznachc ykgi' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 48
ACTION: str3 += 'i' 
str3 = 'celuulj' : <type 'str'>
=> str3 = 'celuulji' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 49
ACTION: str0 += 'm' 
str0 = 'vxznachc ykgi' : <type 'str'>
=> str0 = 'vxznachc ykgim' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 50
ACTION: str0 += 'w' 
str0 = 'vxznachc ykgim' : <type 'str'>
=> str0 = 'vxznachc ykgimw' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 51
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/b/phi/omega' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 52
ACTION: str3 += 'g' 
str3 = 'celuulji' : <type 'str'>
=> str3 = 'celuuljig' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 53
ACTION: str0 += 'z' 
str0 = 'vxznachc ykgimw' : <type 'str'>
=> str0 = 'vxznachc ykgimwz' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 54
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str3 += 'b'                                                             # STEP 55
ACTION: str3 += 'b' 
str3 = 'celuuljig' : <type 'str'>
=> str3 = 'celuuljigb' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 56
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str3 += 'h'                                                             # STEP 57
ACTION: str3 += 'h' 
str3 = 'celuuljigb' : <type 'str'>
=> str3 = 'celuuljigbh' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 58
ACTION: str3 += 'p' 
str3 = 'celuuljigbh' : <type 'str'>
=> str3 = 'celuuljigbhp' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 59
ACTION: str3 += 'g' 
str3 = 'celuuljigbhp' : <type 'str'>
=> str3 = 'celuuljigbhpg' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 60
ACTION: str0 += 'n' 
str0 = 'vxznachc ykgimwz' : <type 'str'>
=> str0 = 'vxznachc ykgimwzn' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 61
ACTION: str3 += 'i' 
str3 = 'celuuljigbhpg' : <type 'str'>
=> str3 = 'celuuljigbhpgi' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 62
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str3 += 'w'                                                             # STEP 63
ACTION: str3 += 'w' 
str3 = 'celuuljigbhpgi' : <type 'str'>
=> str3 = 'celuuljigbhpgiw' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 64
ACTION: path2 += "/" + component0 
component0 = 'epsilon' : <type 'str'>
path2 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/b/epsilon' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 65
ACTION: str3 += 'v' 
str3 = 'celuuljigbhpgiw' : <type 'str'>
=> str3 = 'celuuljigbhpgiwv' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 66
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/b/epsilon' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 67
ACTION: bytes4 = 0 
bytes4 = 2 : <type 'int'>
=> bytes4 = 0 : <type 'int'>
==================================================
str3 += 'o'                                                             # STEP 68
ACTION: str3 += 'o' 
str3 = 'celuuljigbhpgiwv' : <type 'str'>
=> str3 = 'celuuljigbhpgiwvo' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 69
ACTION: str0 += 'z' 
str0 = 'vxznachc ykgimwzn' : <type 'str'>
=> str0 = 'vxznachc ykgimwznz' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 70
ACTION: str3 += 'k' 
str3 = 'celuuljigbhpgiwvo' : <type 'str'>
=> str3 = 'celuuljigbhpgiwvok' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 71
ACTION: str0 += 'n' 
str0 = 'vxznachc ykgimwznz' : <type 'str'>
=> str0 = 'vxznachc ykgimwznzn' : <type 'str'>
==================================================
component0 = "alpha"                                                    # STEP 72
ACTION: component0 = "alpha" 
component0 = 'epsilon' : <type 'str'>
=> component0 = 'alpha' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 73
ACTION: str0 += 'k' 
str0 = 'vxznachc ykgimwznzn' : <type 'str'>
=> str0 = 'vxznachc ykgimwznznk' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 74
ACTION: str3 += 'e' 
str3 = 'celuuljigbhpgiwvok' : <type 'str'>
=> str3 = 'celuuljigbhpgiwvoke' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 75
ACTION: str0 += 'k' 
str0 = 'vxznachc ykgimwznznk' : <type 'str'>
=> str0 = 'vxznachc ykgimwznznkk' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 76
ACTION: path2 += "/" + component0 
component0 = 'alpha' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 77
ACTION: str0 += 'u' 
str0 = 'vxznachc ykgimwznznkk' : <type 'str'>
=> str0 = 'vxznachc ykgimwznznkku' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 78
ACTION: str3 += 'b' 
str3 = 'celuuljigbhpgiwvoke' : <type 'str'>
=> str3 = 'celuuljigbhpgiwvokeb' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 79
ACTION: bytes0 = 0 
bytes0 = 1 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
str3 += 'u'                                                             # STEP 80
ACTION: str3 += 'u' 
str3 = 'celuuljigbhpgiwvokeb' : <type 'str'>
=> str3 = 'celuuljigbhpgiwvokebu' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 81
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str3 += 'g'                                                             # STEP 82
ACTION: str3 += 'g' 
str3 = 'celuuljigbhpgiwvokebu' : <type 'str'>
=> str3 = 'celuuljigbhpgiwvokebug' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 83
ACTION: bytes3 = 0 
bytes3 = 1 : <type 'int'>
=> bytes3 = 0 : <type 'int'>
==================================================
bytes3 += 1                                                             # STEP 84
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 85
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104899150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.path.isabs(path4)                                          # STEP 86
ACTION: result = os0.path.isabs(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104899150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path4) 
==================================================
str0 += 'b'                                                             # STEP 87
ACTION: str0 += 'b' 
str0 = 'vxznachc ykgimwznznkku' : <type 'str'>
=> str0 = 'vxznachc ykgimwznznkkub' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 88
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 89
ACTION: bytes3 += 1 
bytes3 = 1 : <type 'int'>
=> bytes3 = 2 : <type 'int'>
==================================================
component0 = "alpha"                                                    # STEP 90
ACTION: component0 = "alpha" 
component0 = 'alpha' : <type 'str'>
==================================================
result = os0.path.isfile(path4)                                         # STEP 91
ACTION: result = os0.path.isfile(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104899150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path4) 
==================================================
str0 += 'n'                                                             # STEP 92
ACTION: str0 += 'n' 
str0 = 'vxznachc ykgimwznznkkub' : <type 'str'>
=> str0 = 'vxznachc ykgimwznznkkubn' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 93
ACTION: str1 += 'f' 
str1 = '' : <type 'str'>
=> str1 = 'f' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 94
ACTION: str0 += 'd' 
str0 = 'vxznachc ykgimwznznkkubn' : <type 'str'>
=> str0 = 'vxznachc ykgimwznznkkubnd' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 95
ACTION: str1 += " " 
str1 = 'f' : <type 'str'>
=> str1 = 'f ' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 96
ACTION: str1 += 'b' 
str1 = 'f ' : <type 'str'>
=> str1 = 'f b' : <type 'str'>
==================================================
stat2 = os0.stat(path2)                                                 # STEP 97
ACTION: stat2 = os0.stat(path2) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104899150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104e33050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 24253, in act475
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0513641834259 TOTAL RUNTIME
2 EXECUTED
298 TOTAL TEST OPERATIONS
0.00621676445007 TIME SPENT EXECUTING TEST OPERATIONS
0.0156142711639 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000134944915771 TIME SPENT CHECKING PROPERTIES
0.00635170936584 TOTAL TIME SPENT RUNNING SUT
0.00744390487671 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
