Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62280.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1054b65a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9541, in act263
    assert (type(raised) == type(refRaised))
Original test has 50 steps

SAVING TEST AS failure.62280.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "e"                                                         # STEP 0
ACTION: component2 = "e" 
component2 = None : <type 'NoneType'>
=> component2 = 'e' : <type 'str'>
==================================================
component4 = "delta"                                                     # STEP 1
ACTION: component4 = "delta" 
component4 = None : <type 'NoneType'>
=> component4 = 'delta' : <type 'str'>
==================================================
component0 = "g"                                                         # STEP 2
ACTION: component0 = "g" 
component0 = None : <type 'NoneType'>
=> component0 = 'g' : <type 'str'>
==================================================
component1 = "delta"                                                     # STEP 3
ACTION: component1 = "delta" 
component1 = None : <type 'NoneType'>
=> component1 = 'delta' : <type 'str'>
==================================================
component3 = "g"                                                         # STEP 4
ACTION: component3 = "g" 
component3 = None : <type 'NoneType'>
=> component3 = 'g' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 5
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'z'                                                              # STEP 6
ACTION: str0 += 'z' 
str0 = '' : <type 'str'>
=> str0 = 'z' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 7
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str0 += 'g'                                                              # STEP 8
ACTION: str0 += 'g' 
str0 = 'z' : <type 'str'>
=> str0 = 'zg' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 9
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 10
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 11
ACTION: path2 += "/" + component3 
component3 = 'g' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
stat1 = os0.lstat(path2)                                                # STEP 12
ACTION: stat1 = os0.lstat(path2) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
==================================================
stat3 = os0.lstat(path2)                                                # STEP 13
ACTION: stat3 = os0.lstat(path2) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
==================================================
os0.symlink(path3,path2)                                                # STEP 14
ACTION: os0.symlink(path3,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path3,path2) 
==================================================
str4 = ""                                                               # STEP 15
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
stat1 = os0.lstat(path2)                                                # STEP 16
ACTION: stat1 = os0.lstat(path2) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104642210> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path2) 
=> stat_REF1 = posix.stat_result(st_mode=41453, st_ino=17512878, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=21, st_atime=1507392659, st_mtime=1507392659, st_ctime=1507392659) : <type 'posix.stat_result'>
==================================================
result = os0.path.islink(path3)                                         # STEP 17
ACTION: result = os0.path.islink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path3) 
==================================================
result = os0.path.abspath(path2)                                        # STEP 18
ACTION: result = os0.path.abspath(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path2) 
==================================================
result = os0.path.isfile(path3)                                         # STEP 19
ACTION: result = os0.path.isfile(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path3) 
==================================================
component3 = "a"                                                        # STEP 20
ACTION: component3 = "a" 
component3 = 'g' : <type 'str'>
=> component3 = 'a' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 21
ACTION: str4 += 'e' 
str4 = '' : <type 'str'>
=> str4 = 'e' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 22
ACTION: str0 += 'b' 
str0 = 'zg' : <type 'str'>
=> str0 = 'zgb' : <type 'str'>
==================================================
os0.symlink(path3,path3)                                                # STEP 23
ACTION: os0.symlink(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.dirname(path2)                                        # STEP 24
ACTION: result = os0.path.dirname(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path2) 
==================================================
str4 += 'g'                                                             # STEP 25
ACTION: str4 += 'g' 
str4 = 'e' : <type 'str'>
=> str4 = 'eg' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 26
ACTION: path3 += "/" + component0 
component0 = 'g' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 27
ACTION: str4 += 'o' 
str4 = 'eg' : <type 'str'>
=> str4 = 'ego' : <type 'str'>
==================================================
result = os0.path.isdir(path3)                                          # STEP 28
ACTION: result = os0.path.isdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path3) 
==================================================
os0.rmdir(path2)                                                        # STEP 29
ACTION: os0.rmdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Cannot remove symlink: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: os_REF0.rmdir(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/g'
==================================================
str0 += 'h'                                                             # STEP 30
ACTION: str0 += 'h' 
str0 = 'zgb' : <type 'str'>
=> str0 = 'zgbh' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 31
ACTION: str4 += " " 
str4 = 'ego' : <type 'str'>
=> str4 = 'ego ' : <type 'str'>
==================================================
component0 = "f"                                                        # STEP 32
ACTION: component0 = "f" 
component0 = 'g' : <type 'str'>
=> component0 = 'f' : <type 'str'>
==================================================
result = os0.path.exists(path2)                                         # STEP 33
ACTION: result = os0.path.exists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path2) 
==================================================
str0 += 'c'                                                             # STEP 34
ACTION: str0 += 'c' 
str0 = 'zgbh' : <type 'str'>
=> str0 = 'zgbhc' : <type 'str'>
==================================================
result = os0.path.isfile(path2)                                         # STEP 35
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
os0.rmdir(path3)                                                        # STEP 36
ACTION: os0.rmdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Cannot remove symlink: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: os_REF0.rmdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/g'
==================================================
result = os0.path.lexists(path3)                                        # STEP 37
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
str0 += 'c'                                                             # STEP 38
ACTION: str0 += 'c' 
str0 = 'zgbhc' : <type 'str'>
=> str0 = 'zgbhcc' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 39
ACTION: str4 += 's' 
str4 = 'ego ' : <type 'str'>
=> str4 = 'ego s' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 40
ACTION: str0 += 'l' 
str0 = 'zgbhcc' : <type 'str'>
=> str0 = 'zgbhccl' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 41
ACTION: str0 += 'b' 
str0 = 'zgbhccl' : <type 'str'>
=> str0 = 'zgbhcclb' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 42
ACTION: str4 += 't' 
str4 = 'ego s' : <type 'str'>
=> str4 = 'ego st' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 43
ACTION: str0 += 'n' 
str0 = 'zgbhcclb' : <type 'str'>
=> str0 = 'zgbhcclbn' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 44
ACTION: str4 += 'k' 
str4 = 'ego st' : <type 'str'>
=> str4 = 'ego stk' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 45
ACTION: path3 += "/" + component0 
component0 = 'f' : <type 'str'>
path3 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g/f' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 46
ACTION: path2 += "/" + component4 
component4 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/g/delta' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 47
ACTION: str0 += 'k' 
str0 = 'zgbhcclbn' : <type 'str'>
=> str0 = 'zgbhcclbnk' : <type 'str'>
==================================================
component0 = "phi"                                                      # STEP 48
ACTION: component0 = "phi" 
component0 = 'f' : <type 'str'>
=> component0 = 'phi' : <type 'str'>
==================================================
os0.mkdir(path2)                                                        # STEP 49
ACTION: os0.mkdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105160110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: os_REF0.mkdir(path2) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105287440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9541, in act263
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0411360263824 TOTAL RUNTIME
1 EXECUTED
50 TOTAL TEST OPERATIONS
0.00775980949402 TIME SPENT EXECUTING TEST OPERATIONS
0.00399327278137 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.5749206543e-05 TIME SPENT CHECKING PROPERTIES
0.00778555870056 TOTAL TIME SPENT RUNNING SUT
0.00326800346375 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
