Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.60684.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AttributeError'>, AttributeError("'_FakeStatResult' object has no attribute 'AddEntry'",), <traceback object at 0x103377680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9799, in act268
    self.p_os[0].makedirs(self.p_path[2])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3662, in makedirs
    self.filesystem.MakeDirectories(dir_name, mode, exist_ok)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2385, in MakeDirectories
    self.CreateDirectory(dir_name, (mode & (~ self.umask)))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2075, in CreateDirectory
    current_dir.AddEntry(new_dir)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 564, in __getattr__
    return getattr(self.stat_result, item)
Original test has 34 steps

SAVING TEST AS failure.60684.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "c"                                                         # STEP 0
ACTION: component3 = "c" 
component3 = None : <type 'NoneType'>
=> component3 = 'c' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 1
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'k'                                                              # STEP 2
ACTION: str2 += 'k' 
str2 = '' : <type 'str'>
=> str2 = 'k' : <type 'str'>
==================================================
component2 = "delta"                                                     # STEP 3
ACTION: component2 = "delta" 
component2 = None : <type 'NoneType'>
=> component2 = 'delta' : <type 'str'>
==================================================
component1 = "b"                                                         # STEP 4
ACTION: component1 = "b" 
component1 = None : <type 'NoneType'>
=> component1 = 'b' : <type 'str'>
==================================================
component4 = "c"                                                         # STEP 5
ACTION: component4 = "c" 
component4 = None : <type 'NoneType'>
=> component4 = 'c' : <type 'str'>
==================================================
str2 += 'k'                                                              # STEP 6
ACTION: str2 += 'k' 
str2 = 'k' : <type 'str'>
=> str2 = 'kk' : <type 'str'>
==================================================
component0 = "alpha"                                                     # STEP 7
ACTION: component0 = "alpha" 
component0 = None : <type 'NoneType'>
=> component0 = 'alpha' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 8
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103603290> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str2 += 's'                                                              # STEP 9
ACTION: str2 += 's' 
str2 = 'kk' : <type 'str'>
=> str2 = 'kks' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 10
ACTION: str2 += 'y' 
str2 = 'kks' : <type 'str'>
=> str2 = 'kksy' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 11
ACTION: str2 += 'u' 
str2 = 'kksy' : <type 'str'>
=> str2 = 'kksyu' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 12
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str2 += 'c'                                                             # STEP 13
ACTION: str2 += 'c' 
str2 = 'kksyu' : <type 'str'>
=> str2 = 'kksyuc' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 14
ACTION: str2 = "" 
str2 = 'kksyuc' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 15
ACTION: str2 += 'j' 
str2 = '' : <type 'str'>
=> str2 = 'j' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 16
ACTION: str2 += 'w' 
str2 = 'j' : <type 'str'>
=> str2 = 'jw' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 18
ACTION: str2 += 'd' 
str2 = 'jw' : <type 'str'>
=> str2 = 'jwd' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 19
ACTION: str2 += 'h' 
str2 = 'jwd' : <type 'str'>
=> str2 = 'jwdh' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 20
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 21
ACTION: path2 += "/" + component2 
component2 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
result = os0.path.isdir(path4)                                          # STEP 22
ACTION: result = os0.path.isdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103603290> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path4) 
==================================================
stat4 = os0.stat(path2)                                                 # STEP 23
ACTION: stat4 = os0.stat(path2) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103603290> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/delta'
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 24
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
stat4 = os0.stat(path2)                                                 # STEP 25
ACTION: stat4 = os0.stat(path2) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103603290> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/delta'
==================================================
component2 = "d"                                                        # STEP 26
ACTION: component2 = "d" 
component2 = 'delta' : <type 'str'>
=> component2 = 'd' : <type 'str'>
==================================================
stat3 = os0.lstat(path2)                                                # STEP 27
ACTION: stat3 = os0.lstat(path2) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103603290> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/delta'
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                         # STEP 28
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103603290> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
str2 = ""                                                               # STEP 29
ACTION: str2 = "" 
str2 = 'jwdh' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
os0.link(path2,path4)                                                   # STEP 30
ACTION: os0.link(path2,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103603290> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path2,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
bytes2 = 0                                                              # STEP 31
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path2 += "/" + component1                                               # STEP 32
ACTION: path2 += "/" + component1 
component1 = 'b' : <type 'str'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/delta/b' : <type 'str'>
==================================================
os0.makedirs(path2)                                                     # STEP 33
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103603290> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.AttributeError'> '_FakeStatResult' object has no attribute 'AddEntry'
ERROR: (<type 'exceptions.AttributeError'>, AttributeError("'_FakeStatResult' object has no attribute 'AddEntry'",), <traceback object at 0x103325680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9799, in act268
    self.p_os[0].makedirs(self.p_path[2])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3662, in makedirs
    self.filesystem.MakeDirectories(dir_name, mode, exist_ok)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2385, in MakeDirectories
    self.CreateDirectory(dir_name, (mode & (~ self.umask)))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2075, in CreateDirectory
    current_dir.AddEntry(new_dir)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 564, in __getattr__
    return getattr(self.stat_result, item)
STOPPING TESTING DUE TO FAILED TEST
0.366947174072 TOTAL RUNTIME
7 EXECUTED
1234 TOTAL TEST OPERATIONS
0.266125440598 TIME SPENT EXECUTING TEST OPERATIONS
0.0531668663025 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000655651092529 TIME SPENT CHECKING PROPERTIES
0.26678109169 TOTAL TIME SPENT RUNNING SUT
0.0196769237518 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
