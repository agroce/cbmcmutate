Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.51313.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103f20c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22385, in act447
    assert (type(raised) == type(refRaised))
Original test has 44 steps

SAVING TEST AS failure.51313.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "beta"                                                      # STEP 0
ACTION: component4 = "beta" 
component4 = None : <type 'NoneType'>
=> component4 = 'beta' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 1
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'g'                                                              # STEP 2
ACTION: str1 += 'g' 
str1 = '' : <type 'str'>
=> str1 = 'g' : <type 'str'>
==================================================
str1 += 'y'                                                              # STEP 3
ACTION: str1 += 'y' 
str1 = 'g' : <type 'str'>
=> str1 = 'gy' : <type 'str'>
==================================================
component3 = "phi"                                                       # STEP 4
ACTION: component3 = "phi" 
component3 = None : <type 'NoneType'>
=> component3 = 'phi' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'o'                                                              # STEP 6
ACTION: str1 += 'o' 
str1 = 'gy' : <type 'str'>
=> str1 = 'gyo' : <type 'str'>
==================================================
str1 += 'q'                                                              # STEP 7
ACTION: str1 += 'q' 
str1 = 'gyo' : <type 'str'>
=> str1 = 'gyoq' : <type 'str'>
==================================================
str1 += 'p'                                                              # STEP 8
ACTION: str1 += 'p' 
str1 = 'gyoq' : <type 'str'>
=> str1 = 'gyoqp' : <type 'str'>
==================================================
component1 = "h"                                                         # STEP 9
ACTION: component1 = "h" 
component1 = None : <type 'NoneType'>
=> component1 = 'h' : <type 'str'>
==================================================
component2 = "f"                                                        # STEP 10
ACTION: component2 = "f" 
component2 = None : <type 'NoneType'>
=> component2 = 'f' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 11
ACTION: str1 = "" 
str1 = 'gyoqp' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 12
ACTION: str1 += 'w' 
str1 = '' : <type 'str'>
=> str1 = 'w' : <type 'str'>
==================================================
component0 = "c"                                                        # STEP 13
ACTION: component0 = "c" 
component0 = None : <type 'NoneType'>
=> component0 = 'c' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 14
ACTION: str1 += 'r' 
str1 = 'w' : <type 'str'>
=> str1 = 'wr' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 15
ACTION: path0 += "/" + component2 
component2 = 'f' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 16
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 18
ACTION: str4 += 'e' 
str4 = '' : <type 'str'>
=> str4 = 'e' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 19
ACTION: str1 += 'f' 
str1 = 'wr' : <type 'str'>
=> str1 = 'wrf' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 20
ACTION: str4 += 'k' 
str4 = 'e' : <type 'str'>
=> str4 = 'ek' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 21
ACTION: str1 += 's' 
str1 = 'wrf' : <type 'str'>
=> str1 = 'wrfs' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 22
ACTION: str4 += 'n' 
str4 = 'ek' : <type 'str'>
=> str4 = 'ekn' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 23
ACTION: str4 += 'z' 
str4 = 'ekn' : <type 'str'>
=> str4 = 'eknz' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 24
ACTION: str1 += 'd' 
str1 = 'wrfs' : <type 'str'>
=> str1 = 'wrfsd' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 25
ACTION: str4 += 'm' 
str4 = 'eknz' : <type 'str'>
=> str4 = 'eknzm' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 26
ACTION: str4 += 't' 
str4 = 'eknzm' : <type 'str'>
=> str4 = 'eknzmt' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 27
ACTION: str1 += 'a' 
str1 = 'wrfsd' : <type 'str'>
=> str1 = 'wrfsda' : <type 'str'>
==================================================
component2 = "e"                                                        # STEP 28
ACTION: component2 = "e" 
component2 = 'f' : <type 'str'>
=> component2 = 'e' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 29
ACTION: str4 += 'w' 
str4 = 'eknzmt' : <type 'str'>
=> str4 = 'eknzmtw' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 30
ACTION: str4 += 'b' 
str4 = 'eknzmtw' : <type 'str'>
=> str4 = 'eknzmtwb' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 31
ACTION: str1 += 'n' 
str1 = 'wrfsda' : <type 'str'>
=> str1 = 'wrfsdan' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 32
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 33
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 34
ACTION: str0 += 'o' 
str0 = '' : <type 'str'>
=> str0 = 'o' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 35
ACTION: str1 += 'l' 
str1 = 'wrfsdan' : <type 'str'>
=> str1 = 'wrfsdanl' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 36
ACTION: path4 += "/" + component1 
component1 = 'h' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 37
ACTION: str4 += 'q' 
str4 = 'eknzmtwb' : <type 'str'>
=> str4 = 'eknzmtwbq' : <type 'str'>
==================================================
component1 = "alpha"                                                    # STEP 38
ACTION: component1 = "alpha" 
component1 = 'h' : <type 'str'>
=> component1 = 'alpha' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 39
ACTION: str2 += 'l' 
str2 = '' : <type 'str'>
=> str2 = 'l' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 40
ACTION: str2 += 'a' 
str2 = 'l' : <type 'str'>
=> str2 = 'la' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 41
ACTION: str1 += 'w' 
str1 = 'wrfsdanl' : <type 'str'>
=> str1 = 'wrfsdanlw' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 42
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103f19390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
os0.remove(path4)                                                       # STEP 43
ACTION: os0.remove(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103f19390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/h' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.remove(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/h'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105cc09e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22385, in act447
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0307559967041 TOTAL RUNTIME
1 EXECUTED
44 TOTAL TEST OPERATIONS
0.00202298164368 TIME SPENT EXECUTING TEST OPERATIONS
0.00390625 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.86102294922e-05 TIME SPENT CHECKING PROPERTIES
0.00205159187317 TOTAL TIME SPENT RUNNING SUT
0.00425601005554 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
