Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59396.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10560dbd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20405, in act419
    assert (type(raised) == type(refRaised))
Original test has 52 steps

SAVING TEST AS failure.59396.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "phi"                                                       # STEP 0
ACTION: component2 = "phi" 
component2 = None : <type 'NoneType'>
=> component2 = 'phi' : <type 'str'>
==================================================
component1 = "c"                                                         # STEP 1
ACTION: component1 = "c" 
component1 = None : <type 'NoneType'>
=> component1 = 'c' : <type 'str'>
==================================================
component0 = "e"                                                         # STEP 2
ACTION: component0 = "e" 
component0 = None : <type 'NoneType'>
=> component0 = 'e' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 3
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += " "                                                              # STEP 4
ACTION: str1 += " " 
str1 = '' : <type 'str'>
=> str1 = ' ' : <type 'str'>
==================================================
str1 += 'c'                                                              # STEP 5
ACTION: str1 += 'c' 
str1 = ' ' : <type 'str'>
=> str1 = ' c' : <type 'str'>
==================================================
component4 = "delta"                                                     # STEP 6
ACTION: component4 = "delta" 
component4 = None : <type 'NoneType'>
=> component4 = 'delta' : <type 'str'>
==================================================
str1 += 'w'                                                              # STEP 7
ACTION: str1 += 'w' 
str1 = ' c' : <type 'str'>
=> str1 = ' cw' : <type 'str'>
==================================================
str1 += 'o'                                                              # STEP 8
ACTION: str1 += 'o' 
str1 = ' cw' : <type 'str'>
=> str1 = ' cwo' : <type 'str'>
==================================================
str1 += 'v'                                                              # STEP 9
ACTION: str1 += 'v' 
str1 = ' cwo' : <type 'str'>
=> str1 = ' cwov' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 10
ACTION: str1 += 'q' 
str1 = ' cwov' : <type 'str'>
=> str1 = ' cwovq' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 11
ACTION: str1 += 'p' 
str1 = ' cwovq' : <type 'str'>
=> str1 = ' cwovqp' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 12
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component3 = "h"                                                        # STEP 13
ACTION: component3 = "h" 
component3 = None : <type 'NoneType'>
=> component3 = 'h' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 14
ACTION: str1 += 'y' 
str1 = ' cwovqp' : <type 'str'>
=> str1 = ' cwovqpy' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 15
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str1 += 'f'                                                             # STEP 16
ACTION: str1 += 'f' 
str1 = ' cwovqpy' : <type 'str'>
=> str1 = ' cwovqpyf' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 17
ACTION: str1 += 'p' 
str1 = ' cwovqpyf' : <type 'str'>
=> str1 = ' cwovqpyfp' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 18
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105961e50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 = ""                                                               # STEP 19
ACTION: str1 = "" 
str1 = ' cwovqpyfp' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 20
ACTION: str1 += 'j' 
str1 = '' : <type 'str'>
=> str1 = 'j' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 21
ACTION: str1 += 'j' 
str1 = 'j' : <type 'str'>
=> str1 = 'jj' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 22
ACTION: str1 += 'm' 
str1 = 'jj' : <type 'str'>
=> str1 = 'jjm' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 23
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes0 += 1                                                             # STEP 24
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str1 += 'j'                                                             # STEP 25
ACTION: str1 += 'j' 
str1 = 'jjm' : <type 'str'>
=> str1 = 'jjmj' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 26
ACTION: str1 += 'x' 
str1 = 'jjmj' : <type 'str'>
=> str1 = 'jjmjx' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 27
ACTION: str1 += 't' 
str1 = 'jjmjx' : <type 'str'>
=> str1 = 'jjmjxt' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 28
ACTION: str1 += 'q' 
str1 = 'jjmjxt' : <type 'str'>
=> str1 = 'jjmjxtq' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 29
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 30
ACTION: str4 += 'l' 
str4 = '' : <type 'str'>
=> str4 = 'l' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 31
ACTION: bytes0 += 1 
bytes0 = 1 : <type 'int'>
=> bytes0 = 2 : <type 'int'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 32
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 33
ACTION: str4 += 'i' 
str4 = 'l' : <type 'str'>
=> str4 = 'li' : <type 'str'>
==================================================
os0.makedirs(path4)                                                     # STEP 34
ACTION: os0.makedirs(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105961e50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = os0.path.isabs(path4)                                          # STEP 35
ACTION: result = os0.path.isabs(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105961e50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path4) 
==================================================
str4 += 'w'                                                             # STEP 36
ACTION: str4 += 'w' 
str4 = 'li' : <type 'str'>
=> str4 = 'liw' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 37
ACTION: path4 += "/" + component0 
component0 = 'e' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 38
ACTION: str1 += 'e' 
str1 = 'jjmjxtq' : <type 'str'>
=> str1 = 'jjmjxtqe' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 39
ACTION: str4 += 'y' 
str4 = 'liw' : <type 'str'>
=> str4 = 'liwy' : <type 'str'>
==================================================
component0 = "d"                                                        # STEP 40
ACTION: component0 = "d" 
component0 = 'e' : <type 'str'>
=> component0 = 'd' : <type 'str'>
==================================================
fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 41
ACTION: fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105961e50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
result = os0.path.lexists(path4)                                        # STEP 42
ACTION: result = os0.path.lexists(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105961e50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path4) 
==================================================
str4 += 'p'                                                             # STEP 43
ACTION: str4 += 'p' 
str4 = 'liwy' : <type 'str'>
=> str4 = 'liwyp' : <type 'str'>
==================================================
stat3 = os0.lstat(path4)                                                # STEP 44
ACTION: stat3 = os0.lstat(path4) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105961e50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x105961d10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path4) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=13678257, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507338406, st_mtime=1507338406, st_ctime=1507338406) : <type 'posix.stat_result'>
==================================================
str4 += 'h'                                                             # STEP 45
ACTION: str4 += 'h' 
str4 = 'liwyp' : <type 'str'>
=> str4 = 'liwyph' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 46
ACTION: str1 += 's' 
str1 = 'jjmjxtqe' : <type 'str'>
=> str1 = 'jjmjxtqes' : <type 'str'>
==================================================
result = stat3.st_size                                                  # STEP 47
ACTION: result = stat3.st_size 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x105961d10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=13678257, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507338406, st_mtime=1507338406, st_ctime=1507338406) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF3.st_size 
==================================================
bytes0 += 1                                                             # STEP 48
ACTION: bytes0 += 1 
bytes0 = 2 : <type 'int'>
=> bytes0 = 3 : <type 'int'>
==================================================
str4 += 'i'                                                             # STEP 49
ACTION: str4 += 'i' 
str4 = 'liwyph' : <type 'str'>
=> str4 = 'liwyphi' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 50
ACTION: str4 += 'j' 
str4 = 'liwyphi' : <type 'str'>
=> str4 = 'liwyphij' : <type 'str'>
==================================================
os0.write(fd1,str1)                                                     # STEP 51
ACTION: os0.write(fd1,str1) 
str1 = 'jjmjxtqes' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105961e50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: os_REF0.write(fd_REF1,str1) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1053c4248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20405, in act419
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0563769340515 TOTAL RUNTIME
2 EXECUTED
252 TOTAL TEST OPERATIONS
0.00784969329834 TIME SPENT EXECUTING TEST OPERATIONS
0.0164964199066 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000119924545288 TIME SPENT CHECKING PROPERTIES
0.00796961784363 TOTAL TIME SPENT RUNNING SUT
0.00650405883789 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
