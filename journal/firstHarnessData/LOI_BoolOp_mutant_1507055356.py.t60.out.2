Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.63548.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('sequence item 0: expected string, NoneType found',), <traceback object at 0x104328c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1333, in NormalizeCase
    return components_to_path()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1301, in components_to_path
    normalized_path = sep.join(normalized_components)
Original test has 77 steps

SAVING TEST AS failure.63548.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "h"                                                         # STEP 0
ACTION: component2 = "h" 
component2 = None : <type 'NoneType'>
=> component2 = 'h' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 1
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
bytes3 = 0                                                               # STEP 2
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 3
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "gamma"                                                     # STEP 4
ACTION: component4 = "gamma" 
component4 = None : <type 'NoneType'>
=> component4 = 'gamma' : <type 'str'>
==================================================
component0 = "b"                                                         # STEP 5
ACTION: component0 = "b" 
component0 = None : <type 'NoneType'>
=> component0 = 'b' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 6
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 7
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'q'                                                              # STEP 8
ACTION: str3 += 'q' 
str3 = '' : <type 'str'>
=> str3 = 'q' : <type 'str'>
==================================================
component1 = "epsilon"                                                   # STEP 9
ACTION: component1 = "epsilon" 
component1 = None : <type 'NoneType'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 10
ACTION: str3 += 'v' 
str3 = 'q' : <type 'str'>
=> str3 = 'qv' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 11
ACTION: str0 += 'p' 
str0 = '' : <type 'str'>
=> str0 = 'p' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 12
ACTION: str0 += 'o' 
str0 = 'p' : <type 'str'>
=> str0 = 'po' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 13
ACTION: str0 += 'c' 
str0 = 'po' : <type 'str'>
=> str0 = 'poc' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 14
ACTION: str3 += 'i' 
str3 = 'qv' : <type 'str'>
=> str3 = 'qvi' : <type 'str'>
==================================================
component3 = "omega"                                                    # STEP 15
ACTION: component3 = "omega" 
component3 = None : <type 'NoneType'>
=> component3 = 'omega' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 16
ACTION: str0 += 'n' 
str0 = 'poc' : <type 'str'>
=> str0 = 'pocn' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 17
ACTION: str3 += 'j' 
str3 = 'qvi' : <type 'str'>
=> str3 = 'qvij' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 18
ACTION: path1 += "/" + component3 
component3 = 'omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 19
ACTION: str3 += 'w' 
str3 = 'qvij' : <type 'str'>
=> str3 = 'qvijw' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 20
ACTION: str0 += 'v' 
str0 = 'pocn' : <type 'str'>
=> str0 = 'pocnv' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 21
ACTION: str0 += 'd' 
str0 = 'pocnv' : <type 'str'>
=> str0 = 'pocnvd' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 22
ACTION: str0 += 'q' 
str0 = 'pocnvd' : <type 'str'>
=> str0 = 'pocnvdq' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 23
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 24
ACTION: str0 += 'l' 
str0 = 'pocnvdq' : <type 'str'>
=> str0 = 'pocnvdql' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 25
ACTION: str1 += 'n' 
str1 = '' : <type 'str'>
=> str1 = 'n' : <type 'str'>
==================================================
component3 = "h"                                                        # STEP 26
ACTION: component3 = "h" 
component3 = 'omega' : <type 'str'>
=> component3 = 'h' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 27
ACTION: str0 += 'j' 
str0 = 'pocnvdql' : <type 'str'>
=> str0 = 'pocnvdqlj' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 28
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 29
ACTION: str3 += 'h' 
str3 = 'qvijw' : <type 'str'>
=> str3 = 'qvijwh' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 30
ACTION: str0 += 'j' 
str0 = 'pocnvdqlj' : <type 'str'>
=> str0 = 'pocnvdqljj' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 31
ACTION: str0 += 'm' 
str0 = 'pocnvdqljj' : <type 'str'>
=> str0 = 'pocnvdqljjm' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 32
ACTION: path3 += "/" + component4 
component4 = 'gamma' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 33
ACTION: str1 += 'm' 
str1 = 'n' : <type 'str'>
=> str1 = 'nm' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 34
ACTION: str0 = "" 
str0 = 'pocnvdqljjm' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 35
ACTION: str0 += 'r' 
str0 = '' : <type 'str'>
=> str0 = 'r' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 36
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 37
ACTION: str3 += 'z' 
str3 = 'qvijwh' : <type 'str'>
=> str3 = 'qvijwhz' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 38
ACTION: str3 += 'd' 
str3 = 'qvijwhz' : <type 'str'>
=> str3 = 'qvijwhzd' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 39
ACTION: path2 += "/" + component2 
component2 = 'h' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 40
ACTION: str0 += 'o' 
str0 = 'r' : <type 'str'>
=> str0 = 'ro' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 41
ACTION: str1 += 'l' 
str1 = 'nm' : <type 'str'>
=> str1 = 'nml' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 42
ACTION: str3 += 'k' 
str3 = 'qvijwhzd' : <type 'str'>
=> str3 = 'qvijwhzdk' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 43
ACTION: str1 += 'z' 
str1 = 'nml' : <type 'str'>
=> str1 = 'nmlz' : <type 'str'>
==================================================
component4 = "a"                                                        # STEP 44
ACTION: component4 = "a" 
component4 = 'gamma' : <type 'str'>
=> component4 = 'a' : <type 'str'>
==================================================
component2 = "delta"                                                    # STEP 45
ACTION: component2 = "delta" 
component2 = 'h' : <type 'str'>
=> component2 = 'delta' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 46
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 47
ACTION: str1 += 'b' 
str1 = 'nmlz' : <type 'str'>
=> str1 = 'nmlzb' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 48
ACTION: path3 += "/" + component0 
component0 = 'b' : <type 'str'>
path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma/b' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 49
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
path1 += "/" + component0                                               # STEP 50
ACTION: path1 += "/" + component0 
component0 = 'b' : <type 'str'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/omega/b' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 51
ACTION: str3 += 'l' 
str3 = 'qvijwhzdk' : <type 'str'>
=> str3 = 'qvijwhzdkl' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 52
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str0 += 's'                                                             # STEP 53
ACTION: str0 += 's' 
str0 = 'ro' : <type 'str'>
=> str0 = 'ros' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 54
ACTION: path1 += "/" + component0 
component0 = 'b' : <type 'str'>
path1 = '/Volumes/ramdisk/test/omega/b' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/omega/b/b' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 55
ACTION: str0 += 'a' 
str0 = 'ros' : <type 'str'>
=> str0 = 'rosa' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 56
ACTION: path4 += "/" + component0 
component0 = 'b' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 57
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 58
ACTION: str3 += 'l' 
str3 = 'qvijwhzdkl' : <type 'str'>
=> str3 = 'qvijwhzdkll' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 59
ACTION: str3 += 't' 
str3 = 'qvijwhzdkll' : <type 'str'>
=> str3 = 'qvijwhzdkllt' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 60
ACTION: str4 += 'u' 
str4 = '' : <type 'str'>
=> str4 = 'u' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 61
ACTION: str1 += 'e' 
str1 = 'nmlzb' : <type 'str'>
=> str1 = 'nmlzbe' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 62
ACTION: str3 += 'v' 
str3 = 'qvijwhzdkllt' : <type 'str'>
=> str3 = 'qvijwhzdklltv' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 63
ACTION: str0 += 'p' 
str0 = 'rosa' : <type 'str'>
=> str0 = 'rosap' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 64
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 65
ACTION: str4 += 'f' 
str4 = 'u' : <type 'str'>
=> str4 = 'uf' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 66
ACTION: component0 = "omega" 
component0 = 'b' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 67
ACTION: str0 += 'r' 
str0 = 'rosap' : <type 'str'>
=> str0 = 'rosapr' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 68
ACTION: str3 = "" 
str3 = 'qvijwhzdklltv' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 69
ACTION: str0 += 'h' 
str0 = 'rosapr' : <type 'str'>
=> str0 = 'rosaprh' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 70
ACTION: path2 += "/" + component1 
component1 = 'epsilon' : <type 'str'>
path2 = '/Volumes/ramdisk/test/h' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/h/epsilon' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 71
ACTION: str0 += 'u' 
str0 = 'rosaprh' : <type 'str'>
=> str0 = 'rosaprhu' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 72
ACTION: str3 += " " 
str3 = '' : <type 'str'>
=> str3 = ' ' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 73
ACTION: str0 += 'o' 
str0 = 'rosaprhu' : <type 'str'>
=> str0 = 'rosaprhuo' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 74
ACTION: str4 += 'l' 
str4 = 'uf' : <type 'str'>
=> str4 = 'ufl' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 75
ACTION: str1 += 'g' 
str1 = 'nmlzbe' : <type 'str'>
=> str1 = 'nmlzbeg' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 76
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> sequence item 0: expected string, NoneType found
ERROR: (<type 'exceptions.TypeError'>, TypeError('sequence item 0: expected string, NoneType found',), <traceback object at 0x1043281b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1333, in NormalizeCase
    return components_to_path()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1301, in components_to_path
    normalized_path = sep.join(normalized_components)
STOPPING TESTING DUE TO FAILED TEST
0.0369648933411 TOTAL RUNTIME
2 EXECUTED
277 TOTAL TEST OPERATIONS
0.00387382507324 TIME SPENT EXECUTING TEST OPERATIONS
0.0100646018982 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000106811523438 TIME SPENT CHECKING PROPERTIES
0.00398063659668 TOTAL TIME SPENT RUNNING SUT
0.00514125823975 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
