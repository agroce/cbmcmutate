Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.58676.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103c23488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 29445, in act551
    assert (type(raised) == type(refRaised))
Original test has 35 steps

SAVING TEST AS failure.58676.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "delta"                                                     # STEP 0
ACTION: component1 = "delta" 
component1 = None : <type 'NoneType'>
=> component1 = 'delta' : <type 'str'>
==================================================
component2 = "delta"                                                     # STEP 1
ACTION: component2 = "delta" 
component2 = None : <type 'NoneType'>
=> component2 = 'delta' : <type 'str'>
==================================================
component0 = "c"                                                         # STEP 2
ACTION: component0 = "c" 
component0 = None : <type 'NoneType'>
=> component0 = 'c' : <type 'str'>
==================================================
component4 = "lambda"                                                    # STEP 3
ACTION: component4 = "lambda" 
component4 = None : <type 'NoneType'>
=> component4 = 'lambda' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 4
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path4 += "/" + component2                                                # STEP 5
ACTION: path4 += "/" + component2 
component2 = 'delta' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 6
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "c"                                                         # STEP 8
ACTION: component2 = "c" 
component2 = 'delta' : <type 'str'>
=> component2 = 'c' : <type 'str'>
==================================================
component3 = "lambda"                                                    # STEP 9
ACTION: component3 = "lambda" 
component3 = None : <type 'NoneType'>
=> component3 = 'lambda' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 10
ACTION: path3 += "/" + component2 
component2 = 'c' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 11
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
path3 += "/" + component1                                               # STEP 12
ACTION: path3 += "/" + component1 
component1 = 'delta' : <type 'str'>
path3 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/c/delta' : <type 'str'>
==================================================
component2 = "lambda"                                                   # STEP 13
ACTION: component2 = "lambda" 
component2 = 'c' : <type 'str'>
=> component2 = 'lambda' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 14
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 15
ACTION: str4 += 'c' 
str4 = '' : <type 'str'>
=> str4 = 'c' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 16
ACTION: path3 += "/" + component0 
component0 = 'c' : <type 'str'>
path3 = '/Volumes/ramdisk/test/c/delta' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/c/delta/c' : <type 'str'>
==================================================
component1 = "g"                                                        # STEP 17
ACTION: component1 = "g" 
component1 = 'delta' : <type 'str'>
=> component1 = 'g' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 18
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 19
ACTION: path0 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 20
ACTION: str4 += 't' 
str4 = 'c' : <type 'str'>
=> str4 = 'ct' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 21
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103ad4c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 22
ACTION: fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103ad4c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
component0 = "gamma"                                                    # STEP 23
ACTION: component0 = "gamma" 
component0 = 'c' : <type 'str'>
=> component0 = 'gamma' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 24
ACTION: str4 += 'e' 
str4 = 'ct' : <type 'str'>
=> str4 = 'cte' : <type 'str'>
==================================================
fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 25
ACTION: fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103ad4c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/delta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
=> fd_REF1 = 5 : <type 'int'>
==================================================
component2 = "phi"                                                      # STEP 26
ACTION: component2 = "phi" 
component2 = 'lambda' : <type 'str'>
=> component2 = 'phi' : <type 'str'>
==================================================
result = os0.path.isfile(path3)                                         # STEP 27
ACTION: result = os0.path.isfile(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103ad4c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/c/delta/c' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path3) 
==================================================
stat0 = os0.lstat(path4)                                                # STEP 28
ACTION: stat0 = os0.lstat(path4) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103ad4c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/delta' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103ce1dd0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path4) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=13043772, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507329317, st_mtime=1507329317, st_ctime=1507329317) : <type 'posix.stat_result'>
==================================================
stat3 = os0.fstat(fd1)                                                  # STEP 29
ACTION: stat3 = os0.fstat(fd1) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103ad4c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x106060210> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.fstat(fd_REF1) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=13043772, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507329317, st_mtime=1507329317, st_ctime=1507329317) : <type 'posix.stat_result'>
==================================================
path3 += "/" + component1                                               # STEP 30
ACTION: path3 += "/" + component1 
component1 = 'g' : <type 'str'>
path3 = '/Volumes/ramdisk/test/c/delta/c' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/c/delta/c/g' : <type 'str'>
==================================================
result = os0.path.isdir(path0)                                          # STEP 31
ACTION: result = os0.path.isdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103ad4c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path0) 
==================================================
str4 += 'f'                                                             # STEP 32
ACTION: str4 += 'f' 
str4 = 'cte' : <type 'str'>
=> str4 = 'ctef' : <type 'str'>
==================================================
os0.makedirs(path3)                                                     # STEP 33
ACTION: os0.makedirs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103ad4c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/c/delta/c/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path3) 
==================================================
os0.rename(path4,path3)                                                 # STEP 34
ACTION: os0.rename(path4,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103ad4c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/delta' : <type 'str'>
path3 = '/Volumes/ramdisk/test/c/delta/c/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.rename(path4,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103c2bab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 29445, in act551
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.519604921341 TOTAL RUNTIME
11 EXECUTED
2035 TOTAL TEST OPERATIONS
0.337776184082 TIME SPENT EXECUTING TEST OPERATIONS
0.105100154877 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00117135047913 TIME SPENT CHECKING PROPERTIES
0.338947534561 TOTAL TIME SPENT RUNNING SUT
0.0361125469208 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
