Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.64086.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unicode argument expected, got 'str'",), <traceback object at 0x103d76fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20575, in act422
    self.p_os[0].write(self.p_fd[1],self.p_str[4])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3349, in write
    file_handle._sync_io()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4187, in _sync_io
    self._io.write(contents)
Original test has 52 steps

SAVING TEST AS failure.64086.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "c"                                                         # STEP 0
ACTION: component4 = "c" 
component4 = None : <type 'NoneType'>
=> component4 = 'c' : <type 'str'>
==================================================
component3 = "lambda"                                                    # STEP 1
ACTION: component3 = "lambda" 
component3 = None : <type 'NoneType'>
=> component3 = 'lambda' : <type 'str'>
==================================================
component1 = "phi"                                                       # STEP 2
ACTION: component1 = "phi" 
component1 = None : <type 'NoneType'>
=> component1 = 'phi' : <type 'str'>
==================================================
component0 = "b"                                                         # STEP 3
ACTION: component0 = "b" 
component0 = None : <type 'NoneType'>
=> component0 = 'b' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 4
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 5
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component2 = "alpha"                                                     # STEP 6
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
str4 += 'm'                                                              # STEP 7
ACTION: str4 += 'm' 
str4 = '' : <type 'str'>
=> str4 = 'm' : <type 'str'>
==================================================
str0 += 'm'                                                              # STEP 8
ACTION: str0 += 'm' 
str0 = '' : <type 'str'>
=> str0 = 'm' : <type 'str'>
==================================================
str4 += " "                                                              # STEP 9
ACTION: str4 += " " 
str4 = 'm' : <type 'str'>
=> str4 = 'm ' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 10
ACTION: str0 += 'w' 
str0 = 'm' : <type 'str'>
=> str0 = 'mw' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 11
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 12
ACTION: str4 += 'z' 
str4 = 'm ' : <type 'str'>
=> str4 = 'm z' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 13
ACTION: str4 += 'f' 
str4 = 'm z' : <type 'str'>
=> str4 = 'm zf' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 14
ACTION: str0 += 'o' 
str0 = 'mw' : <type 'str'>
=> str0 = 'mwo' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 15
ACTION: str0 += 'd' 
str0 = 'mwo' : <type 'str'>
=> str0 = 'mwod' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 16
ACTION: str0 += 'c' 
str0 = 'mwod' : <type 'str'>
=> str0 = 'mwodc' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 17
ACTION: str4 += 'd' 
str4 = 'm zf' : <type 'str'>
=> str4 = 'm zfd' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 18
ACTION: str4 += 'm' 
str4 = 'm zfd' : <type 'str'>
=> str4 = 'm zfdm' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 19
ACTION: str2 += 'v' 
str2 = '' : <type 'str'>
=> str2 = 'v' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 20
ACTION: str2 += 'x' 
str2 = 'v' : <type 'str'>
=> str2 = 'vx' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 21
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 22
ACTION: str2 += 'l' 
str2 = 'vx' : <type 'str'>
=> str2 = 'vxl' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 23
ACTION: str0 += 'h' 
str0 = 'mwodc' : <type 'str'>
=> str0 = 'mwodch' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 24
ACTION: str0 += 'm' 
str0 = 'mwodch' : <type 'str'>
=> str0 = 'mwodchm' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 25
ACTION: str2 += 't' 
str2 = 'vxl' : <type 'str'>
=> str2 = 'vxlt' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 26
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103853210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
path1 += "/" + component3                                               # STEP 27
ACTION: path1 += "/" + component3 
component3 = 'lambda' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
stat0 = os0.stat(path1)                                                 # STEP 28
ACTION: stat0 = os0.stat(path1) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103853210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: stat_REF0 = os_REF0.stat(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda'
==================================================
str0 += 'o'                                                             # STEP 29
ACTION: str0 += 'o' 
str0 = 'mwodchm' : <type 'str'>
=> str0 = 'mwodchmo' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 30
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str4 += 'l'                                                             # STEP 31
ACTION: str4 += 'l' 
str4 = 'm zfdm' : <type 'str'>
=> str4 = 'm zfdml' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 32
ACTION: str4 += 'z' 
str4 = 'm zfdml' : <type 'str'>
=> str4 = 'm zfdmlz' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 33
ACTION: str2 += 'u' 
str2 = 'vxlt' : <type 'str'>
=> str2 = 'vxltu' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 34
ACTION: str4 += 'h' 
str4 = 'm zfdmlz' : <type 'str'>
=> str4 = 'm zfdmlzh' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 35
ACTION: str0 += 'l' 
str0 = 'mwodchmo' : <type 'str'>
=> str0 = 'mwodchmol' : <type 'str'>
==================================================
component3 = "d"                                                        # STEP 36
ACTION: component3 = "d" 
component3 = 'lambda' : <type 'str'>
=> component3 = 'd' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 37
ACTION: str0 += " " 
str0 = 'mwodchmol' : <type 'str'>
=> str0 = 'mwodchmol ' : <type 'str'>
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 38
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103853210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
str0 += 'a'                                                             # STEP 39
ACTION: str0 += 'a' 
str0 = 'mwodchmol ' : <type 'str'>
=> str0 = 'mwodchmol a' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 40
ACTION: str0 += 'v' 
str0 = 'mwodchmol a' : <type 'str'>
=> str0 = 'mwodchmol av' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 41
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes3 = 0                                                              # STEP 42
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str0 += 'u'                                                             # STEP 43
ACTION: str0 += 'u' 
str0 = 'mwodchmol av' : <type 'str'>
=> str0 = 'mwodchmol avu' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 44
ACTION: str2 += 's' 
str2 = 'vxltu' : <type 'str'>
=> str2 = 'vxltus' : <type 'str'>
==================================================
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 45
ACTION: fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103853210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
str4 += 'i'                                                             # STEP 46
ACTION: str4 += 'i' 
str4 = 'm zfdmlzh' : <type 'str'>
=> str4 = 'm zfdmlzhi' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 47
ACTION: str2 += 'a' 
str2 = 'vxltus' : <type 'str'>
=> str2 = 'vxltusa' : <type 'str'>
==================================================
stat1 = os0.lstat(path1)                                                # STEP 48
ACTION: stat1 = os0.lstat(path1) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103853210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10385f090> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path1) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=20079693, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507428666, st_mtime=1507428666, st_ctime=1507428666) : <type 'posix.stat_result'>
==================================================
stat2 = os0.stat(path1)                                                 # STEP 49
ACTION: stat2 = os0.stat(path1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103853210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103db1590> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path1) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=20079693, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507428666, st_mtime=1507428666, st_ctime=1507428666) : <type 'posix.stat_result'>
==================================================
str0 += 'v'                                                             # STEP 50
ACTION: str0 += 'v' 
str0 = 'mwodchmol avu' : <type 'str'>
=> str0 = 'mwodchmol avuv' : <type 'str'>
==================================================
os0.write(fd1,str4)                                                     # STEP 51
ACTION: os0.write(fd1,str4) 
str4 = 'm zfdmlzhi' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103853210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unicode argument expected, got 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unicode argument expected, got 'str'",), <traceback object at 0x101f84ef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20575, in act422
    self.p_os[0].write(self.p_fd[1],self.p_str[4])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3349, in write
    file_handle._sync_io()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4187, in _sync_io
    self._io.write(contents)
STOPPING TESTING DUE TO FAILED TEST
0.0599679946899 TOTAL RUNTIME
2 EXECUTED
252 TOTAL TEST OPERATIONS
0.0242297649384 TIME SPENT EXECUTING TEST OPERATIONS
0.0106718540192 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000106811523438 TIME SPENT CHECKING PROPERTIES
0.0243365764618 TOTAL TIME SPENT RUNNING SUT
0.00511384010315 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
