Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.48663.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(13, 'Permission Denied'), <traceback object at 0x1034e8710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2075, in CreateDirectory
    current_dir.AddEntry(new_dir)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 685, in AddEntry
    raise OSError(errno.EACCES, 'Permission Denied', self.GetPath())
Original test has 64 steps

SAVING TEST AS failure.48663.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "gamma"                                                     # STEP 0
ACTION: component0 = "gamma" 
component0 = None : <type 'NoneType'>
=> component0 = 'gamma' : <type 'str'>
==================================================
component2 = "c"                                                         # STEP 1
ACTION: component2 = "c" 
component2 = None : <type 'NoneType'>
=> component2 = 'c' : <type 'str'>
==================================================
component3 = "g"                                                         # STEP 2
ACTION: component3 = "g" 
component3 = None : <type 'NoneType'>
=> component3 = 'g' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 3
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
component4 = "g"                                                         # STEP 4
ACTION: component4 = "g" 
component4 = None : <type 'NoneType'>
=> component4 = 'g' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 5
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'e'                                                              # STEP 6
ACTION: str0 += 'e' 
str0 = '' : <type 'str'>
=> str0 = 'e' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 7
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'x'                                                              # STEP 8
ACTION: str3 += 'x' 
str3 = '' : <type 'str'>
=> str3 = 'x' : <type 'str'>
==================================================
str0 += 'g'                                                              # STEP 9
ACTION: str0 += 'g' 
str0 = 'e' : <type 'str'>
=> str0 = 'eg' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 10
ACTION: str0 += 'j' 
str0 = 'eg' : <type 'str'>
=> str0 = 'egj' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 11
ACTION: str0 += 'm' 
str0 = 'egj' : <type 'str'>
=> str0 = 'egjm' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 12
ACTION: str3 += 't' 
str3 = 'x' : <type 'str'>
=> str3 = 'xt' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 13
ACTION: str0 += 'j' 
str0 = 'egjm' : <type 'str'>
=> str0 = 'egjmj' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 14
ACTION: str0 += 'h' 
str0 = 'egjmj' : <type 'str'>
=> str0 = 'egjmjh' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 15
ACTION: str3 += 'c' 
str3 = 'xt' : <type 'str'>
=> str3 = 'xtc' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 16
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component1 = "f"                                                        # STEP 17
ACTION: component1 = "f" 
component1 = None : <type 'NoneType'>
=> component1 = 'f' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 18
ACTION: str0 += 't' 
str0 = 'egjmjh' : <type 'str'>
=> str0 = 'egjmjht' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 19
ACTION: str3 += 't' 
str3 = 'xtc' : <type 'str'>
=> str3 = 'xtct' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 20
ACTION: str0 += " " 
str0 = 'egjmjht' : <type 'str'>
=> str0 = 'egjmjht ' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 21
ACTION: str3 += 'x' 
str3 = 'xtct' : <type 'str'>
=> str3 = 'xtctx' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 22
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str0 += 'i'                                                             # STEP 23
ACTION: str0 += 'i' 
str0 = 'egjmjht ' : <type 'str'>
=> str0 = 'egjmjht i' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 24
ACTION: str3 += " " 
str3 = 'xtctx' : <type 'str'>
=> str3 = 'xtctx ' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 26
ACTION: str0 += 'x' 
str0 = 'egjmjht i' : <type 'str'>
=> str0 = 'egjmjht ix' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 27
ACTION: str0 += 'z' 
str0 = 'egjmjht ix' : <type 'str'>
=> str0 = 'egjmjht ixz' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 28
ACTION: str0 += 'c' 
str0 = 'egjmjht ixz' : <type 'str'>
=> str0 = 'egjmjht ixzc' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 29
ACTION: str3 += 'b' 
str3 = 'xtctx ' : <type 'str'>
=> str3 = 'xtctx b' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 30
ACTION: str3 += 'o' 
str3 = 'xtctx b' : <type 'str'>
=> str3 = 'xtctx bo' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 31
ACTION: str0 += 'g' 
str0 = 'egjmjht ixzc' : <type 'str'>
=> str0 = 'egjmjht ixzcg' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 32
ACTION: str3 += 'o' 
str3 = 'xtctx bo' : <type 'str'>
=> str3 = 'xtctx boo' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 33
ACTION: str0 += 'i' 
str0 = 'egjmjht ixzcg' : <type 'str'>
=> str0 = 'egjmjht ixzcgi' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 34
ACTION: str0 += 'y' 
str0 = 'egjmjht ixzcgi' : <type 'str'>
=> str0 = 'egjmjht ixzcgiy' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 35
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str3 += 'n'                                                             # STEP 36
ACTION: str3 += 'n' 
str3 = 'xtctx boo' : <type 'str'>
=> str3 = 'xtctx boon' : <type 'str'>
==================================================
path4 += "/" + component4                                               # STEP 37
ACTION: path4 += "/" + component4 
component4 = 'g' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 38
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 39
ACTION: str0 += 'd' 
str0 = 'egjmjht ixzcgiy' : <type 'str'>
=> str0 = 'egjmjht ixzcgiyd' : <type 'str'>
==================================================
component4 = "b"                                                        # STEP 40
ACTION: component4 = "b" 
component4 = 'g' : <type 'str'>
=> component4 = 'b' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 41
ACTION: str0 += 'l' 
str0 = 'egjmjht ixzcgiyd' : <type 'str'>
=> str0 = 'egjmjht ixzcgiydl' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 42
ACTION: str3 += 'd' 
str3 = 'xtctx boon' : <type 'str'>
=> str3 = 'xtctx boond' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 43
ACTION: str0 += 'h' 
str0 = 'egjmjht ixzcgiydl' : <type 'str'>
=> str0 = 'egjmjht ixzcgiydlh' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 44
ACTION: str0 += 'l' 
str0 = 'egjmjht ixzcgiydlh' : <type 'str'>
=> str0 = 'egjmjht ixzcgiydlhl' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 45
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 46
ACTION: str0 += " " 
str0 = 'egjmjht ixzcgiydlhl' : <type 'str'>
=> str0 = 'egjmjht ixzcgiydlhl ' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 47
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 48
ACTION: str3 += " " 
str3 = 'xtctx boond' : <type 'str'>
=> str3 = 'xtctx boond ' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 49
ACTION: str3 += 'o' 
str3 = 'xtctx boond ' : <type 'str'>
=> str3 = 'xtctx boond o' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 50
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes4 += 1                                                             # STEP 51
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str0 += 'i'                                                             # STEP 52
ACTION: str0 += 'i' 
str0 = 'egjmjht ixzcgiydlhl ' : <type 'str'>
=> str0 = 'egjmjht ixzcgiydlhl i' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 53
ACTION: path2 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
component0 = "epsilon"                                                  # STEP 54
ACTION: component0 = "epsilon" 
component0 = 'gamma' : <type 'str'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 55
ACTION: path2 += "/" + component3 
component3 = 'g' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma/g' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 56
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 57
ACTION: str0 += 'j' 
str0 = 'egjmjht ixzcgiydlhl i' : <type 'str'>
=> str0 = 'egjmjht ixzcgiydlhl ij' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 58
ACTION: str0 += 'o' 
str0 = 'egjmjht ixzcgiydlhl ij' : <type 'str'>
=> str0 = 'egjmjht ixzcgiydlhl ijo' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 59
ACTION: str0 += 's' 
str0 = 'egjmjht ixzcgiydlhl ijo' : <type 'str'>
=> str0 = 'egjmjht ixzcgiydlhl ijos' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 60
ACTION: str3 += 'd' 
str3 = 'xtctx boond o' : <type 'str'>
=> str3 = 'xtctx boond od' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 61
ACTION: str0 += 'k' 
str0 = 'egjmjht ixzcgiydlhl ijos' : <type 'str'>
=> str0 = 'egjmjht ixzcgiydlhl ijosk' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 62
ACTION: path4 += "/" + component1 
component1 = 'f' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 63
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 13] Permission Denied: '/'
ERROR: (<type 'exceptions.OSError'>, OSError(13, 'Permission Denied'), <traceback object at 0x1006c3368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2075, in CreateDirectory
    current_dir.AddEntry(new_dir)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 685, in AddEntry
    raise OSError(errno.EACCES, 'Permission Denied', self.GetPath())
STOPPING TESTING DUE TO FAILED TEST
0.0322179794312 TOTAL RUNTIME
1 EXECUTED
64 TOTAL TEST OPERATIONS
0.00193762779236 TIME SPENT EXECUTING TEST OPERATIONS
0.00396871566772 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.86102294922e-05 TIME SPENT CHECKING PROPERTIES
0.00196623802185 TOTAL TIME SPENT RUNNING SUT
0.00306510925293 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
