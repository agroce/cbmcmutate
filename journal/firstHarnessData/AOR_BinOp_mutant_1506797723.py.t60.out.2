Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.36358.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("'FakeOsModule' object is not iterable",), <traceback object at 0x1035c1d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 24, in newFakeOS
    fakeOS = pyfakefs.fake_filesystem.FakeOsModule(fs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1717, in __init__
    self.path = FakePathModule(self.filesystem, self)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1464, in __init__
    self._os_path.os, self.os = os_module
Original test has 38 steps

SAVING TEST AS failure.36358.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "phi"                                                       # STEP 0
ACTION: component2 = "phi" 
component2 = None : <type 'NoneType'>
=> component2 = 'phi' : <type 'str'>
==================================================
component1 = "a"                                                         # STEP 1
ACTION: component1 = "a" 
component1 = None : <type 'NoneType'>
=> component1 = 'a' : <type 'str'>
==================================================
component4 = "c"                                                         # STEP 2
ACTION: component4 = "c" 
component4 = None : <type 'NoneType'>
=> component4 = 'c' : <type 'str'>
==================================================
component3 = "delta"                                                     # STEP 3
ACTION: component3 = "delta" 
component3 = None : <type 'NoneType'>
=> component3 = 'delta' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "b"                                                         # STEP 5
ACTION: component0 = "b" 
component0 = None : <type 'NoneType'>
=> component0 = 'b' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 7
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str3 = ""                                                                # STEP 8
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'c'                                                              # STEP 9
ACTION: str3 += 'c' 
str3 = '' : <type 'str'>
=> str3 = 'c' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 10
ACTION: str3 += 'u' 
str3 = 'c' : <type 'str'>
=> str3 = 'cu' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 11
ACTION: str3 += 'a' 
str3 = 'cu' : <type 'str'>
=> str3 = 'cua' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 12
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 13
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
path1 += "/" + component0                                               # STEP 14
ACTION: path1 += "/" + component0 
component0 = 'b' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 15
ACTION: str2 += 'i' 
str2 = '' : <type 'str'>
=> str2 = 'i' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 16
ACTION: str3 += 'r' 
str3 = 'cua' : <type 'str'>
=> str3 = 'cuar' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 17
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component0 = "a"                                                        # STEP 18
ACTION: component0 = "a" 
component0 = 'b' : <type 'str'>
=> component0 = 'a' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 19
ACTION: str2 += 'i' 
str2 = 'i' : <type 'str'>
=> str2 = 'ii' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 20
ACTION: path1 += "/" + component4 
component4 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/b/c' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 21
ACTION: str2 += 'w' 
str2 = 'ii' : <type 'str'>
=> str2 = 'iiw' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 22
ACTION: str2 += 'e' 
str2 = 'iiw' : <type 'str'>
=> str2 = 'iiwe' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 23
ACTION: str2 += 's' 
str2 = 'iiwe' : <type 'str'>
=> str2 = 'iiwes' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 24
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str3 += 'p'                                                             # STEP 25
ACTION: str3 += 'p' 
str3 = 'cuar' : <type 'str'>
=> str3 = 'cuarp' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 26
ACTION: bytes0 = 0 
bytes0 = 1 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
str2 += 't'                                                             # STEP 27
ACTION: str2 += 't' 
str2 = 'iiwes' : <type 'str'>
=> str2 = 'iiwest' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 28
ACTION: path3 += "/" + component1 
component1 = 'a' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 29
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
component4 = "alpha"                                                    # STEP 30
ACTION: component4 = "alpha" 
component4 = 'c' : <type 'str'>
=> component4 = 'alpha' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 31
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str2 += 'q'                                                             # STEP 32
ACTION: str2 += 'q' 
str2 = 'iiwest' : <type 'str'>
=> str2 = 'iiwestq' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 33
ACTION: str2 += 'f' 
str2 = 'iiwestq' : <type 'str'>
=> str2 = 'iiwestqf' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 34
ACTION: path1 += "/" + component2 
component2 = 'phi' : <type 'str'>
path1 = '/Volumes/ramdisk/test/b/c' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/b/c/phi' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 35
ACTION: str2 += 'b' 
str2 = 'iiwestqf' : <type 'str'>
=> str2 = 'iiwestqfb' : <type 'str'>
==================================================
component1 = "h"                                                        # STEP 36
ACTION: component1 = "h" 
component1 = 'a' : <type 'str'>
=> component1 = 'h' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 37
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> 'FakeOsModule' object is not iterable
ERROR: (<type 'exceptions.TypeError'>, TypeError("'FakeOsModule' object is not iterable",), <traceback object at 0x1006c3368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 24, in newFakeOS
    fakeOS = pyfakefs.fake_filesystem.FakeOsModule(fs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1717, in __init__
    self.path = FakePathModule(self.filesystem, self)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1464, in __init__
    self._os_path.os, self.os = os_module
STOPPING TESTING DUE TO FAILED TEST
0.0249991416931 TOTAL RUNTIME
1 EXECUTED
38 TOTAL TEST OPERATIONS
0.00109553337097 TIME SPENT EXECUTING TEST OPERATIONS
0.00288987159729 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.59876251221e-05 TIME SPENT CHECKING PROPERTIES
0.00112152099609 TOTAL TIME SPENT RUNNING SUT
0.00375199317932 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
