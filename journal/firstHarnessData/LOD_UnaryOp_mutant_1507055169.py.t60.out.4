Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.66773.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(17, 'Directory exists in fake filesystem'), <traceback object at 0x102c688c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2057, in CreateDirectory
    raise OSError(errno.EEXIST, 'Directory exists in fake filesystem', directory_path)
Original test has 41 steps

SAVING TEST AS failure.66773.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "phi"                                                       # STEP 0
ACTION: component4 = "phi" 
component4 = None : <type 'NoneType'>
=> component4 = 'phi' : <type 'str'>
==================================================
component1 = "e"                                                         # STEP 1
ACTION: component1 = "e" 
component1 = None : <type 'NoneType'>
=> component1 = 'e' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "d"                                                         # STEP 3
ACTION: component2 = "d" 
component2 = None : <type 'NoneType'>
=> component2 = 'd' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 4
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 5
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
path4 += "/" + component1                                                # STEP 6
ACTION: path4 += "/" + component1 
component1 = 'e' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
component0 = "phi"                                                       # STEP 7
ACTION: component0 = "phi" 
component0 = None : <type 'NoneType'>
=> component0 = 'phi' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 10
ACTION: path2 += "/" + component0 
component0 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
component1 = "lambda"                                                   # STEP 11
ACTION: component1 = "lambda" 
component1 = 'e' : <type 'str'>
=> component1 = 'lambda' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 12
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
component0 = "alpha"                                                    # STEP 13
ACTION: component0 = "alpha" 
component0 = 'phi' : <type 'str'>
=> component0 = 'alpha' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 14
ACTION: path2 += "/" + component3 
component3 = 'a' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/a' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 15
ACTION: path0 += "/" + component1 
component1 = 'lambda' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
component1 = "epsilon"                                                  # STEP 16
ACTION: component1 = "epsilon" 
component1 = 'lambda' : <type 'str'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 17
ACTION: str1 += 'i' 
str1 = '' : <type 'str'>
=> str1 = 'i' : <type 'str'>
==================================================
component3 = "epsilon"                                                  # STEP 18
ACTION: component3 = "epsilon" 
component3 = 'a' : <type 'str'>
=> component3 = 'epsilon' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 19
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str2 = ""                                                               # STEP 20
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 21
ACTION: str2 += 's' 
str2 = '' : <type 'str'>
=> str2 = 's' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 22
ACTION: path4 += "/" + component0 
component0 = 'alpha' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 23
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "beta"                                                     # STEP 24
ACTION: component0 = "beta" 
component0 = 'alpha' : <type 'str'>
=> component0 = 'beta' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 25
ACTION: str1 += 'q' 
str1 = 'i' : <type 'str'>
=> str1 = 'iq' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 26
ACTION: path2 += "/" + component3 
component3 = 'epsilon' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi/a' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/a/epsilon' : <type 'str'>
==================================================
component3 = "d"                                                        # STEP 27
ACTION: component3 = "d" 
component3 = 'epsilon' : <type 'str'>
=> component3 = 'd' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 28
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str2 += 'z'                                                             # STEP 29
ACTION: str2 += 'z' 
str2 = 's' : <type 'str'>
=> str2 = 'sz' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 30
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 31
ACTION: str1 += 'f' 
str1 = 'iq' : <type 'str'>
=> str1 = 'iqf' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 32
ACTION: str0 += 'z' 
str0 = '' : <type 'str'>
=> str0 = 'z' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 33
ACTION: str1 += 'f' 
str1 = 'iqf' : <type 'str'>
=> str1 = 'iqff' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 34
ACTION: path0 += "/" + component4 
component4 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 35
ACTION: component4 = "beta" 
component4 = 'phi' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 36
ACTION: str2 += 'u' 
str2 = 'sz' : <type 'str'>
=> str2 = 'szu' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 37
ACTION: str1 += 'm' 
str1 = 'iqff' : <type 'str'>
=> str1 = 'iqffm' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 38
ACTION: path2 += "/" + component2 
component2 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi/a/epsilon' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/a/epsilon/d' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 39
ACTION: str2 += 'b' 
str2 = 'szu' : <type 'str'>
=> str2 = 'szub' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 40
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/'
ERROR: (<type 'exceptions.OSError'>, OSError(17, 'Directory exists in fake filesystem'), <traceback object at 0x1031c8518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2057, in CreateDirectory
    raise OSError(errno.EEXIST, 'Directory exists in fake filesystem', directory_path)
STOPPING TESTING DUE TO FAILED TEST
0.0625541210175 TOTAL RUNTIME
3 EXECUTED
441 TOTAL TEST OPERATIONS
0.00745010375977 TIME SPENT EXECUTING TEST OPERATIONS
0.0237011909485 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000190734863281 TIME SPENT CHECKING PROPERTIES
0.00764083862305 TOTAL TIME SPENT RUNNING SUT
0.00888586044312 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
