Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.53469.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10360c560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15121, in act347
    assert (type(raised) == type(refRaised))
Original test has 46 steps

SAVING TEST AS failure.53469.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "gamma"                                                     # STEP 0
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
component2 = "c"                                                         # STEP 1
ACTION: component2 = "c" 
component2 = None : <type 'NoneType'>
=> component2 = 'c' : <type 'str'>
==================================================
component3 = "epsilon"                                                   # STEP 2
ACTION: component3 = "epsilon" 
component3 = None : <type 'NoneType'>
=> component3 = 'epsilon' : <type 'str'>
==================================================
component4 = "lambda"                                                    # STEP 3
ACTION: component4 = "lambda" 
component4 = None : <type 'NoneType'>
=> component4 = 'lambda' : <type 'str'>
==================================================
component0 = "alpha"                                                     # STEP 4
ACTION: component0 = "alpha" 
component0 = None : <type 'NoneType'>
=> component0 = 'alpha' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 5
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str4 = ""                                                                # STEP 6
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'v'                                                              # STEP 7
ACTION: str4 += 'v' 
str4 = '' : <type 'str'>
=> str4 = 'v' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'z'                                                              # STEP 9
ACTION: str4 += 'z' 
str4 = 'v' : <type 'str'>
=> str4 = 'vz' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 10
ACTION: path1 += "/" + component4 
component4 = 'lambda' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 11
ACTION: str4 += 'i' 
str4 = 'vz' : <type 'str'>
=> str4 = 'vzi' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 12
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 13
ACTION: str4 += 'h' 
str4 = 'vzi' : <type 'str'>
=> str4 = 'vzih' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 14
ACTION: str4 += 'y' 
str4 = 'vzih' : <type 'str'>
=> str4 = 'vzihy' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 15
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 16
ACTION: str4 += 'l' 
str4 = 'vzihy' : <type 'str'>
=> str4 = 'vzihyl' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 17
ACTION: path1 += "/" + component3 
component3 = 'epsilon' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 18
ACTION: path4 += "/" + component3 
component3 = 'epsilon' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
component3 = "b"                                                        # STEP 19
ACTION: component3 = "b" 
component3 = 'epsilon' : <type 'str'>
=> component3 = 'b' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 20
ACTION: str4 += 'p' 
str4 = 'vzihyl' : <type 'str'>
=> str4 = 'vzihylp' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 21
ACTION: str4 = "" 
str4 = 'vzihylp' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 22
ACTION: path4 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/epsilon/gamma' : <type 'str'>
==================================================
component1 = "beta"                                                     # STEP 23
ACTION: component1 = "beta" 
component1 = 'gamma' : <type 'str'>
=> component1 = 'beta' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 24
ACTION: str4 += 'o' 
str4 = '' : <type 'str'>
=> str4 = 'o' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 25
ACTION: str4 += 'c' 
str4 = 'o' : <type 'str'>
=> str4 = 'oc' : <type 'str'>
==================================================
component4 = "b"                                                        # STEP 26
ACTION: component4 = "b" 
component4 = 'lambda' : <type 'str'>
=> component4 = 'b' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 27
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/epsilon/gamma' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 28
ACTION: str4 += 'o' 
str4 = 'oc' : <type 'str'>
=> str4 = 'oco' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 29
ACTION: str4 += 'o' 
str4 = 'oco' : <type 'str'>
=> str4 = 'ocoo' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 30
ACTION: str4 += 'h' 
str4 = 'ocoo' : <type 'str'>
=> str4 = 'ocooh' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 31
ACTION: path1 += "/" + component1 
component1 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon/beta' : <type 'str'>
==================================================
component1 = "alpha"                                                    # STEP 32
ACTION: component1 = "alpha" 
component1 = 'beta' : <type 'str'>
=> component1 = 'alpha' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 33
ACTION: str4 += " " 
str4 = 'ocooh' : <type 'str'>
=> str4 = 'ocooh ' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 34
ACTION: str4 += " " 
str4 = 'ocooh ' : <type 'str'>
=> str4 = 'ocooh  ' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 35
ACTION: str4 = "" 
str4 = 'ocooh  ' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 36
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
bytes0 += 1                                                             # STEP 37
ACTION: bytes0 += 1 
bytes0 = 1 : <type 'int'>
=> bytes0 = 2 : <type 'int'>
==================================================
path1 += "/" + component1                                               # STEP 38
ACTION: path1 += "/" + component1 
component1 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test/epsilon/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon/beta/alpha' : <type 'str'>
==================================================
component1 = "g"                                                        # STEP 39
ACTION: component1 = "g" 
component1 = 'alpha' : <type 'str'>
=> component1 = 'g' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 40
ACTION: path1 += "/" + component3 
component3 = 'b' : <type 'str'>
path1 = '/Volumes/ramdisk/test/epsilon/beta/alpha' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon/beta/alpha/b' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 41
ACTION: str4 += 'r' 
str4 = '' : <type 'str'>
=> str4 = 'r' : <type 'str'>
==================================================
component3 = "c"                                                        # STEP 42
ACTION: component3 = "c" 
component3 = 'b' : <type 'str'>
=> component3 = 'c' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 43
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103652150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
stat4 = os0.lstat(path1)                                                # STEP 44
ACTION: stat4 = os0.lstat(path1) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103652150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/epsilon/beta/alpha/b' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/epsilon/beta/alpha/b'
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon/beta/alpha/b'
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 45
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103652150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/epsilon/beta/alpha/b' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon/beta/alpha/b'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104bc23b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15121, in act347
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.031359910965 TOTAL RUNTIME
1 EXECUTED
46 TOTAL TEST OPERATIONS
0.0020866394043 TIME SPENT EXECUTING TEST OPERATIONS
0.00378084182739 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.3365020752e-05 TIME SPENT CHECKING PROPERTIES
0.00211000442505 TOTAL TIME SPENT RUNNING SUT
0.00334191322327 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
