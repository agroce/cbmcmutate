Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59782.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104151d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20545, in act421
    assert (type(raised) == type(refRaised))
Original test has 107 steps

SAVING TEST AS failure.59782.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "e"                                                         # STEP 0
ACTION: component3 = "e" 
component3 = None : <type 'NoneType'>
=> component3 = 'e' : <type 'str'>
==================================================
component4 = "phi"                                                       # STEP 1
ACTION: component4 = "phi" 
component4 = None : <type 'NoneType'>
=> component4 = 'phi' : <type 'str'>
==================================================
component1 = "epsilon"                                                   # STEP 2
ACTION: component1 = "epsilon" 
component1 = None : <type 'NoneType'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
component0 = "gamma"                                                     # STEP 3
ACTION: component0 = "gamma" 
component0 = None : <type 'NoneType'>
=> component0 = 'gamma' : <type 'str'>
==================================================
component2 = "omega"                                                     # STEP 4
ACTION: component2 = "omega" 
component2 = None : <type 'NoneType'>
=> component2 = 'omega' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 5
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'e'                                                              # STEP 6
ACTION: str3 += 'e' 
str3 = '' : <type 'str'>
=> str3 = 'e' : <type 'str'>
==================================================
str3 += 'p'                                                              # STEP 7
ACTION: str3 += 'p' 
str3 = 'e' : <type 'str'>
=> str3 = 'ep' : <type 'str'>
==================================================
str3 += 'p'                                                              # STEP 8
ACTION: str3 += 'p' 
str3 = 'ep' : <type 'str'>
=> str3 = 'epp' : <type 'str'>
==================================================
str3 += 'v'                                                              # STEP 9
ACTION: str3 += 'v' 
str3 = 'epp' : <type 'str'>
=> str3 = 'eppv' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 10
ACTION: str3 += 'q' 
str3 = 'eppv' : <type 'str'>
=> str3 = 'eppvq' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 11
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 12
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 13
ACTION: str0 += 'h' 
str0 = '' : <type 'str'>
=> str0 = 'h' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 14
ACTION: str3 += 'q' 
str3 = 'eppvq' : <type 'str'>
=> str3 = 'eppvqq' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 15
ACTION: str0 += 'o' 
str0 = 'h' : <type 'str'>
=> str0 = 'ho' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 16
ACTION: str3 += 'j' 
str3 = 'eppvqq' : <type 'str'>
=> str3 = 'eppvqqj' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 17
ACTION: str3 += 't' 
str3 = 'eppvqqj' : <type 'str'>
=> str3 = 'eppvqqjt' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 18
ACTION: str0 += 'w' 
str0 = 'ho' : <type 'str'>
=> str0 = 'how' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 19
ACTION: str0 += " " 
str0 = 'how' : <type 'str'>
=> str0 = 'how ' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 20
ACTION: str0 += 'e' 
str0 = 'how ' : <type 'str'>
=> str0 = 'how e' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 21
ACTION: str3 += 'd' 
str3 = 'eppvqqjt' : <type 'str'>
=> str3 = 'eppvqqjtd' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 22
ACTION: str0 += 'r' 
str0 = 'how e' : <type 'str'>
=> str0 = 'how er' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 23
ACTION: str0 += 'b' 
str0 = 'how er' : <type 'str'>
=> str0 = 'how erb' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 24
ACTION: path1 += "/" + component2 
component2 = 'omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 25
ACTION: str3 += 'y' 
str3 = 'eppvqqjtd' : <type 'str'>
=> str3 = 'eppvqqjtdy' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 26
ACTION: str3 += 'r' 
str3 = 'eppvqqjtdy' : <type 'str'>
=> str3 = 'eppvqqjtdyr' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 27
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 28
ACTION: str0 += 'm' 
str0 = 'how erb' : <type 'str'>
=> str0 = 'how erbm' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 29
ACTION: str0 += 'x' 
str0 = 'how erbm' : <type 'str'>
=> str0 = 'how erbmx' : <type 'str'>
==================================================
component2 = "beta"                                                     # STEP 30
ACTION: component2 = "beta" 
component2 = 'omega' : <type 'str'>
=> component2 = 'beta' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 31
ACTION: str3 += 'j' 
str3 = 'eppvqqjtdyr' : <type 'str'>
=> str3 = 'eppvqqjtdyrj' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 32
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 33
ACTION: str1 += 'a' 
str1 = '' : <type 'str'>
=> str1 = 'a' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 34
ACTION: str1 += 'k' 
str1 = 'a' : <type 'str'>
=> str1 = 'ak' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 35
ACTION: str0 += 'l' 
str0 = 'how erbmx' : <type 'str'>
=> str0 = 'how erbmxl' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 36
ACTION: str3 += " " 
str3 = 'eppvqqjtdyrj' : <type 'str'>
=> str3 = 'eppvqqjtdyrj ' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 37
ACTION: str1 += 'u' 
str1 = 'ak' : <type 'str'>
=> str1 = 'aku' : <type 'str'>
==================================================
str0 += 'f'                                                             # STEP 38
ACTION: str0 += 'f' 
str0 = 'how erbmxl' : <type 'str'>
=> str0 = 'how erbmxlf' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 39
ACTION: str3 = "" 
str3 = 'eppvqqjtdyrj ' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 40
ACTION: path1 += "/" + component2 
component2 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/omega/beta' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 41
ACTION: str3 += 'e' 
str3 = '' : <type 'str'>
=> str3 = 'e' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 42
ACTION: str1 += 'v' 
str1 = 'aku' : <type 'str'>
=> str1 = 'akuv' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 43
ACTION: str1 += 'n' 
str1 = 'akuv' : <type 'str'>
=> str1 = 'akuvn' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 44
ACTION: str1 += 'm' 
str1 = 'akuvn' : <type 'str'>
=> str1 = 'akuvnm' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 45
ACTION: str0 = "" 
str0 = 'how erbmxlf' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 46
ACTION: str1 += 'm' 
str1 = 'akuvnm' : <type 'str'>
=> str1 = 'akuvnmm' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 47
ACTION: str1 += 'f' 
str1 = 'akuvnmm' : <type 'str'>
=> str1 = 'akuvnmmf' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 48
ACTION: str1 += " " 
str1 = 'akuvnmmf' : <type 'str'>
=> str1 = 'akuvnmmf ' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 49
ACTION: str0 += 'p' 
str0 = '' : <type 'str'>
=> str0 = 'p' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 50
ACTION: str3 += 'c' 
str3 = 'e' : <type 'str'>
=> str3 = 'ec' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 51
ACTION: path0 += "/" + component2 
component2 = 'beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
component2 = "d"                                                        # STEP 52
ACTION: component2 = "d" 
component2 = 'beta' : <type 'str'>
=> component2 = 'd' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 53
ACTION: str3 += 'l' 
str3 = 'ec' : <type 'str'>
=> str3 = 'ecl' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 54
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 += " "                                                             # STEP 55
ACTION: str1 += " " 
str1 = 'akuvnmmf ' : <type 'str'>
=> str1 = 'akuvnmmf  ' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 56
ACTION: str0 += 'r' 
str0 = 'p' : <type 'str'>
=> str0 = 'pr' : <type 'str'>
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 57
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/beta'
==================================================
str1 += 'm'                                                             # STEP 58
ACTION: str1 += 'm' 
str1 = 'akuvnmmf  ' : <type 'str'>
=> str1 = 'akuvnmmf  m' : <type 'str'>
==================================================
os0.makedirs(path1)                                                     # STEP 59
ACTION: os0.makedirs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path1) 
==================================================
str3 += 'q'                                                             # STEP 60
ACTION: str3 += 'q' 
str3 = 'ecl' : <type 'str'>
=> str3 = 'eclq' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 61
ACTION: str3 += 's' 
str3 = 'eclq' : <type 'str'>
=> str3 = 'eclqs' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 62
ACTION: str1 += 'f' 
str1 = 'akuvnmmf  m' : <type 'str'>
=> str1 = 'akuvnmmf  mf' : <type 'str'>
==================================================
fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 63
ACTION: fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
str1 += 'g'                                                             # STEP 64
ACTION: str1 += 'g' 
str1 = 'akuvnmmf  mf' : <type 'str'>
=> str1 = 'akuvnmmf  mfg' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 65
ACTION: str0 += 'w' 
str0 = 'pr' : <type 'str'>
=> str0 = 'prw' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 66
ACTION: str0 += 'w' 
str0 = 'prw' : <type 'str'>
=> str0 = 'prww' : <type 'str'>
==================================================
stat3 = os0.fstat(fd1)                                                  # STEP 67
ACTION: stat3 = os0.fstat(fd1) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10270a5d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.fstat(fd_REF1) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=14237372, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507346292, st_mtime=1507346292, st_ctime=1507346292) : <type 'posix.stat_result'>
==================================================
result = os0.readlink(path0)                                            # STEP 68
ACTION: result = os0.readlink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: result_REF = os_REF0.readlink(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test/beta'
==================================================
result = os0.path.exists(path0)                                         # STEP 69
ACTION: result = os0.path.exists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path0) 
==================================================
os0.close(fd1)                                                          # STEP 70
ACTION: os0.close(fd1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.close(fd_REF1) 
==================================================
os0.removedirs(path1)                                                   # STEP 71
ACTION: os0.removedirs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.removedirs(path1) 
==================================================
str1 += 'g'                                                             # STEP 72
ACTION: str1 += 'g' 
str1 = 'akuvnmmf  mfg' : <type 'str'>
=> str1 = 'akuvnmmf  mfgg' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 73
ACTION: str1 += 'n' 
str1 = 'akuvnmmf  mfgg' : <type 'str'>
=> str1 = 'akuvnmmf  mfggn' : <type 'str'>
==================================================
result = os0.path.abspath(path1)                                        # STEP 74
ACTION: result = os0.path.abspath(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path1) 
==================================================
str1 += 'y'                                                             # STEP 75
ACTION: str1 += 'y' 
str1 = 'akuvnmmf  mfggn' : <type 'str'>
=> str1 = 'akuvnmmf  mfggny' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 76
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 77
ACTION: str1 += 'i' 
str1 = 'akuvnmmf  mfggny' : <type 'str'>
=> str1 = 'akuvnmmf  mfggnyi' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 78
ACTION: str0 += 'b' 
str0 = 'prww' : <type 'str'>
=> str0 = 'prwwb' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 79
ACTION: str1 += 'o' 
str1 = 'akuvnmmf  mfggnyi' : <type 'str'>
=> str1 = 'akuvnmmf  mfggnyio' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 80
ACTION: str3 += " " 
str3 = 'eclqs' : <type 'str'>
=> str3 = 'eclqs ' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 81
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/omega/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 82
ACTION: str1 += 'v' 
str1 = 'akuvnmmf  mfggnyio' : <type 'str'>
=> str1 = 'akuvnmmf  mfggnyiov' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 83
ACTION: str0 += 's' 
str0 = 'prwwb' : <type 'str'>
=> str0 = 'prwwbs' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 84
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
result = os0.path.exists(path0)                                         # STEP 85
ACTION: result = os0.path.exists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path0) 
==================================================
result = os0.path.isfile(path1)                                         # STEP 86
ACTION: result = os0.path.isfile(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path1) 
==================================================
str3 += 'l'                                                             # STEP 87
ACTION: str3 += 'l' 
str3 = 'eclqs ' : <type 'str'>
=> str3 = 'eclqs l' : <type 'str'>
==================================================
os0.link(path3,path1)                                                   # STEP 88
ACTION: os0.link(path3,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path3,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.lexists(path3)                                        # STEP 89
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
result = os0.readlink(path1)                                            # STEP 90
ACTION: result = os0.readlink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
str3 += 'k'                                                             # STEP 91
ACTION: str3 += 'k' 
str3 = 'eclqs l' : <type 'str'>
=> str3 = 'eclqs lk' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 92
ACTION: str1 += 'b' 
str1 = 'akuvnmmf  mfggnyiov' : <type 'str'>
=> str1 = 'akuvnmmf  mfggnyiovb' : <type 'str'>
==================================================
result = os0.readlink(path3)                                            # STEP 93
ACTION: result = os0.readlink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
result = os0.path.dirname(path3)                                        # STEP 94
ACTION: result = os0.path.dirname(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path3) 
==================================================
str1 += 'v'                                                             # STEP 95
ACTION: str1 += 'v' 
str1 = 'akuvnmmf  mfggnyiovb' : <type 'str'>
=> str1 = 'akuvnmmf  mfggnyiovbv' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 96
ACTION: str0 += 'y' 
str0 = 'prwwbs' : <type 'str'>
=> str0 = 'prwwbsy' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 97
ACTION: str1 += 'c' 
str1 = 'akuvnmmf  mfggnyiovbv' : <type 'str'>
=> str1 = 'akuvnmmf  mfggnyiovbvc' : <type 'str'>
==================================================
result = stat3.st_nlink                                                 # STEP 98
ACTION: result = stat3.st_nlink 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10270a5d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=14237372, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507346292, st_mtime=1507346292, st_ctime=1507346292) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF3.st_nlink 
==================================================
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 99
ACTION: fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
os0.remove(path1)                                                      # STEP 100
ACTION: os0.remove(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
str1 += 'x'                                                            # STEP 101
ACTION: str1 += 'x' 
str1 = 'akuvnmmf  mfggnyiovbvc' : <type 'str'>
=> str1 = 'akuvnmmf  mfggnyiovbvcx' : <type 'str'>
==================================================
str0 += 'r'                                                            # STEP 102
ACTION: str0 += 'r' 
str0 = 'prwwbsy' : <type 'str'>
=> str0 = 'prwwbsyr' : <type 'str'>
==================================================
os0.link(path3,path0)                                                  # STEP 103
ACTION: os0.link(path3,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: os_REF0.link(path3,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str1 += 'r'                                                            # STEP 104
ACTION: str1 += 'r' 
str1 = 'akuvnmmf  mfggnyiovbvcx' : <type 'str'>
=> str1 = 'akuvnmmf  mfggnyiovbvcxr' : <type 'str'>
==================================================
result = stat3.st_size                                                 # STEP 105
ACTION: result = stat3.st_size 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10270a5d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=14237372, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507346292, st_mtime=1507346292, st_ctime=1507346292) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF3.st_size 
==================================================
os0.write(fd1,str3)                                                    # STEP 106
ACTION: os0.write(fd1,str3) 
str3 = 'eclqs lk' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10273f3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for writing.
REFERENCE ACTION: os_REF0.write(fd_REF1,str3) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1023a23b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20545, in act421
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.384562969208 TOTAL RUNTIME
6 EXECUTED
1107 TOTAL TEST OPERATIONS
0.282593250275 TIME SPENT EXECUTING TEST OPERATIONS
0.0474469661713 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000523328781128 TIME SPENT CHECKING PROPERTIES
0.283116579056 TOTAL TIME SPENT RUNNING SUT
0.0154159069061 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
