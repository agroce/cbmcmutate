Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.64804.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('integer division or modulo by zero',), <traceback object at 0x1023b6b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 16191, in act362
    self.p_fd[0] = self.p_os[0].open(self.p_path[1], os.O_CREAT)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4566, in Call
    file_object = self.filesystem.CreateFileInternally(real_path, create_missing_dirs=False, apply_umask=True, raw_io=self.raw_io)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2214, in CreateFileInternally
    self.AddObject(parent_directory, file_object, error_class)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1904, in AddObject
    target_directory.AddEntry(file_object)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 703, in AddEntry
    self.filesystem.ChangeDiskUsage(path_object.GetSize(), path_object.name, self.st_dev)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1072, in ChangeDiskUsage
    mount_point['used_size'] //= usage_change
Original test has 81 steps

SAVING TEST AS failure.64804.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "epsilon"                                                   # STEP 0
ACTION: component0 = "epsilon" 
component0 = None : <type 'NoneType'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
component1 = "e"                                                         # STEP 1
ACTION: component1 = "e" 
component1 = None : <type 'NoneType'>
=> component1 = 'e' : <type 'str'>
==================================================
component4 = "c"                                                         # STEP 2
ACTION: component4 = "c" 
component4 = None : <type 'NoneType'>
=> component4 = 'c' : <type 'str'>
==================================================
component2 = "gamma"                                                     # STEP 3
ACTION: component2 = "gamma" 
component2 = None : <type 'NoneType'>
=> component2 = 'gamma' : <type 'str'>
==================================================
component3 = "omega"                                                     # STEP 4
ACTION: component3 = "omega" 
component3 = None : <type 'NoneType'>
=> component3 = 'omega' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 5
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 6
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
bytes0 += 1                                                              # STEP 7
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str3 += 'q'                                                              # STEP 8
ACTION: str3 += 'q' 
str3 = '' : <type 'str'>
=> str3 = 'q' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 9
ACTION: bytes0 = 0 
bytes0 = 1 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
str3 += 'l'                                                             # STEP 10
ACTION: str3 += 'l' 
str3 = 'q' : <type 'str'>
=> str3 = 'ql' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 11
ACTION: str3 += 'p' 
str3 = 'ql' : <type 'str'>
=> str3 = 'qlp' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 12
ACTION: str3 += 'o' 
str3 = 'qlp' : <type 'str'>
=> str3 = 'qlpo' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 13
ACTION: str3 += 'd' 
str3 = 'qlpo' : <type 'str'>
=> str3 = 'qlpod' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 14
ACTION: str3 = "" 
str3 = 'qlpod' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 15
ACTION: str3 += 'd' 
str3 = '' : <type 'str'>
=> str3 = 'd' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 16
ACTION: str3 += 'h' 
str3 = 'd' : <type 'str'>
=> str3 = 'dh' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 18
ACTION: str3 = "" 
str3 = 'dh' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 19
ACTION: path4 += "/" + component3 
component3 = 'omega' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 20
ACTION: str3 += 't' 
str3 = '' : <type 'str'>
=> str3 = 't' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 21
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
component3 = "beta"                                                     # STEP 22
ACTION: component3 = "beta" 
component3 = 'omega' : <type 'str'>
=> component3 = 'beta' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 23
ACTION: str3 += 'w' 
str3 = 't' : <type 'str'>
=> str3 = 'tw' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 24
ACTION: str3 += 'h' 
str3 = 'tw' : <type 'str'>
=> str3 = 'twh' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 25
ACTION: str3 += 'k' 
str3 = 'twh' : <type 'str'>
=> str3 = 'twhk' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 26
ACTION: str3 += 'x' 
str3 = 'twhk' : <type 'str'>
=> str3 = 'twhkx' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 27
ACTION: str1 += 'b' 
str1 = '' : <type 'str'>
=> str1 = 'b' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 28
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 29
ACTION: str3 += 'z' 
str3 = 'twhkx' : <type 'str'>
=> str3 = 'twhkxz' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 30
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str1 += 'e'                                                             # STEP 31
ACTION: str1 += 'e' 
str1 = 'b' : <type 'str'>
=> str1 = 'be' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 32
ACTION: str3 += 'f' 
str3 = 'twhkxz' : <type 'str'>
=> str3 = 'twhkxzf' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 33
ACTION: str3 += 'r' 
str3 = 'twhkxzf' : <type 'str'>
=> str3 = 'twhkxzfr' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 34
ACTION: str1 += 'f' 
str1 = 'be' : <type 'str'>
=> str1 = 'bef' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 35
ACTION: str3 += 'd' 
str3 = 'twhkxzfr' : <type 'str'>
=> str3 = 'twhkxzfrd' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 36
ACTION: str1 += 'b' 
str1 = 'bef' : <type 'str'>
=> str1 = 'befb' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 37
ACTION: str3 += 'b' 
str3 = 'twhkxzfrd' : <type 'str'>
=> str3 = 'twhkxzfrdb' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 38
ACTION: str1 += 'q' 
str1 = 'befb' : <type 'str'>
=> str1 = 'befbq' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 39
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 40
ACTION: path2 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 41
ACTION: path2 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma/gamma' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 42
ACTION: str3 += 'p' 
str3 = 'twhkxzfrdb' : <type 'str'>
=> str3 = 'twhkxzfrdbp' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 43
ACTION: path2 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma/gamma/gamma' : <type 'str'>
==================================================
component2 = "f"                                                        # STEP 44
ACTION: component2 = "f" 
component2 = 'gamma' : <type 'str'>
=> component2 = 'f' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 45
ACTION: str3 += 'd' 
str3 = 'twhkxzfrdbp' : <type 'str'>
=> str3 = 'twhkxzfrdbpd' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 46
ACTION: path2 += "/" + component1 
component1 = 'e' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma/gamma/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma/gamma/gamma/e' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 47
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 48
ACTION: str1 += 'r' 
str1 = 'befbq' : <type 'str'>
=> str1 = 'befbqr' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 49
ACTION: str1 += 'n' 
str1 = 'befbqr' : <type 'str'>
=> str1 = 'befbqrn' : <type 'str'>
==================================================
component1 = "lambda"                                                   # STEP 50
ACTION: component1 = "lambda" 
component1 = 'e' : <type 'str'>
=> component1 = 'lambda' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 51
ACTION: str1 += 'm' 
str1 = 'befbqrn' : <type 'str'>
=> str1 = 'befbqrnm' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 52
ACTION: str1 += 'q' 
str1 = 'befbqrnm' : <type 'str'>
=> str1 = 'befbqrnmq' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 53
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 54
ACTION: str3 += 'o' 
str3 = 'twhkxzfrdbpd' : <type 'str'>
=> str3 = 'twhkxzfrdbpdo' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 55
ACTION: str1 += 'r' 
str1 = 'befbqrnmq' : <type 'str'>
=> str1 = 'befbqrnmqr' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 56
ACTION: str3 += " " 
str3 = 'twhkxzfrdbpdo' : <type 'str'>
=> str3 = 'twhkxzfrdbpdo ' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 57
ACTION: str1 += 'u' 
str1 = 'befbqrnmqr' : <type 'str'>
=> str1 = 'befbqrnmqru' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 58
ACTION: path2 += "/" + component0 
component0 = 'epsilon' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma/gamma/gamma/e' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma/gamma/gamma/e/epsilon' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 59
ACTION: str1 += 's' 
str1 = 'befbqrnmqru' : <type 'str'>
=> str1 = 'befbqrnmqrus' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 60
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/gamma/gamma/gamma/e/epsilon' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 61
ACTION: str3 += " " 
str3 = 'twhkxzfrdbpdo ' : <type 'str'>
=> str3 = 'twhkxzfrdbpdo  ' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 62
ACTION: str3 += 'k' 
str3 = 'twhkxzfrdbpdo  ' : <type 'str'>
=> str3 = 'twhkxzfrdbpdo  k' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 63
ACTION: str3 += 'u' 
str3 = 'twhkxzfrdbpdo  k' : <type 'str'>
=> str3 = 'twhkxzfrdbpdo  ku' : <type 'str'>
==================================================
component0 = "a"                                                        # STEP 64
ACTION: component0 = "a" 
component0 = 'epsilon' : <type 'str'>
=> component0 = 'a' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 65
ACTION: str3 += 'c' 
str3 = 'twhkxzfrdbpdo  ku' : <type 'str'>
=> str3 = 'twhkxzfrdbpdo  kuc' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 66
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102681290> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str3 += 'm'                                                             # STEP 67
ACTION: str3 += 'm' 
str3 = 'twhkxzfrdbpdo  kuc' : <type 'str'>
=> str3 = 'twhkxzfrdbpdo  kucm' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 68
ACTION: str1 += 'j' 
str1 = 'befbqrnmqrus' : <type 'str'>
=> str1 = 'befbqrnmqrusj' : <type 'str'>
==================================================
os0.link(path2,path1)                                                   # STEP 69
ACTION: os0.link(path2,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102681290> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path2,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str1 += 'i'                                                             # STEP 70
ACTION: str1 += 'i' 
str1 = 'befbqrnmqrusj' : <type 'str'>
=> str1 = 'befbqrnmqrusji' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 71
ACTION: str3 += 'j' 
str3 = 'twhkxzfrdbpdo  kucm' : <type 'str'>
=> str3 = 'twhkxzfrdbpdo  kucmj' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 72
ACTION: str1 += 't' 
str1 = 'befbqrnmqrusji' : <type 'str'>
=> str1 = 'befbqrnmqrusjit' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 73
ACTION: str1 += 'w' 
str1 = 'befbqrnmqrusjit' : <type 'str'>
=> str1 = 'befbqrnmqrusjitw' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 74
ACTION: str1 += 'u' 
str1 = 'befbqrnmqrusjitw' : <type 'str'>
=> str1 = 'befbqrnmqrusjitwu' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 75
ACTION: path1 += "/" + component1 
component1 = 'lambda' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 76
ACTION: str1 += 'r' 
str1 = 'befbqrnmqrusjitwu' : <type 'str'>
=> str1 = 'befbqrnmqrusjitwur' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 77
ACTION: path2 += "/" + component3 
component3 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
component3 = "beta"                                                     # STEP 78
ACTION: component3 = "beta" 
component3 = 'beta' : <type 'str'>
==================================================
component1 = "a"                                                        # STEP 79
ACTION: component1 = "a" 
component1 = 'lambda' : <type 'str'>
=> component1 = 'a' : <type 'str'>
==================================================
fd0 = os0.open(path1, os.O_CREAT)                                       # STEP 80
ACTION: fd0 = os0.open(path1, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102681290> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.ZeroDivisionError'> integer division or modulo by zero
ERROR: (<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('integer division or modulo by zero',), <traceback object at 0x1004dee60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 16191, in act362
    self.p_fd[0] = self.p_os[0].open(self.p_path[1], os.O_CREAT)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4566, in Call
    file_object = self.filesystem.CreateFileInternally(real_path, create_missing_dirs=False, apply_umask=True, raw_io=self.raw_io)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2214, in CreateFileInternally
    self.AddObject(parent_directory, file_object, error_class)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1904, in AddObject
    target_directory.AddEntry(file_object)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 703, in AddEntry
    self.filesystem.ChangeDiskUsage(path_object.GetSize(), path_object.name, self.st_dev)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1072, in ChangeDiskUsage
    mount_point['used_size'] //= usage_change
STOPPING TESTING DUE TO FAILED TEST
0.0418770313263 TOTAL RUNTIME
1 EXECUTED
81 TOTAL TEST OPERATIONS
0.00479364395142 TIME SPENT EXECUTING TEST OPERATIONS
0.00538516044617 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
5.14984130859e-05 TIME SPENT CHECKING PROPERTIES
0.0048451423645 TOTAL TIME SPENT RUNNING SUT
0.00369691848755 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
