Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.65732.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10237dc68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22353, in act447
    self.p_os[0].remove(self.p_path[4])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3569, in remove
    self.filesystem.RemoveFile(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2485, in RemoveFile
    self.RemoveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2036, in RemoveObject
    target_directory.RemoveEntry(basename)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 740, in RemoveEntry
    assert (entry.st_nlink >= 0)
Original test has 58 steps

SAVING TEST AS failure.65732.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
component4 = "epsilon"                                                   # STEP 1
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
component3 = "e"                                                         # STEP 2
ACTION: component3 = "e" 
component3 = None : <type 'NoneType'>
=> component3 = 'e' : <type 'str'>
==================================================
component0 = "h"                                                         # STEP 3
ACTION: component0 = "h" 
component0 = None : <type 'NoneType'>
=> component0 = 'h' : <type 'str'>
==================================================
component1 = "g"                                                         # STEP 4
ACTION: component1 = "g" 
component1 = None : <type 'NoneType'>
=> component1 = 'g' : <type 'str'>
==================================================
component2 = "omega"                                                     # STEP 5
ACTION: component2 = "omega" 
component2 = None : <type 'NoneType'>
=> component2 = 'omega' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 6
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str0 = ""                                                                # STEP 7
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 8
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 9
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 10
ACTION: str2 += 'w' 
str2 = '' : <type 'str'>
=> str2 = 'w' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 11
ACTION: str2 += 'w' 
str2 = 'w' : <type 'str'>
=> str2 = 'ww' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 12
ACTION: str0 += 'o' 
str0 = '' : <type 'str'>
=> str0 = 'o' : <type 'str'>
==================================================
os0.remove(path2)                                                       # STEP 13
ACTION: os0.remove(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
str2 += 'y'                                                             # STEP 14
ACTION: str2 += 'y' 
str2 = 'ww' : <type 'str'>
=> str2 = 'wwy' : <type 'str'>
==================================================
result = os0.path.isabs(path2)                                          # STEP 15
ACTION: result = os0.path.isabs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path2) 
==================================================
str0 += 't'                                                             # STEP 16
ACTION: str0 += 't' 
str0 = 'o' : <type 'str'>
=> str0 = 'ot' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 17
ACTION: str0 += 'u' 
str0 = 'ot' : <type 'str'>
=> str0 = 'otu' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 18
ACTION: str0 += 'q' 
str0 = 'otu' : <type 'str'>
=> str0 = 'otuq' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 19
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 20
ACTION: str2 += 'h' 
str2 = 'wwy' : <type 'str'>
=> str2 = 'wwyh' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 21
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 22
ACTION: str2 += " " 
str2 = 'wwyh' : <type 'str'>
=> str2 = 'wwyh ' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 23
ACTION: str2 += 'd' 
str2 = 'wwyh ' : <type 'str'>
=> str2 = 'wwyh d' : <type 'str'>
==================================================
result = os0.path.exists(path4)                                         # STEP 24
ACTION: result = os0.path.exists(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path4) 
==================================================
str0 += 'm'                                                             # STEP 25
ACTION: str0 += 'm' 
str0 = 'otuq' : <type 'str'>
=> str0 = 'otuqm' : <type 'str'>
==================================================
result = sorted(os0.listdir(path2))                                     # STEP 26
ACTION: result = sorted(os0.listdir(path2)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path2)) 
==================================================
str2 += 'h'                                                             # STEP 27
ACTION: str2 += 'h' 
str2 = 'wwyh d' : <type 'str'>
=> str2 = 'wwyh dh' : <type 'str'>
==================================================
result = sorted(os0.listdir(path2))                                     # STEP 28
ACTION: result = sorted(os0.listdir(path2)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path2)) 
==================================================
result = os0.path.abspath(path4)                                        # STEP 29
ACTION: result = os0.path.abspath(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path4) 
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 30
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.exists(path2)                                         # STEP 31
ACTION: result = os0.path.exists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path2) 
==================================================
result = os0.path.isfile(path4)                                         # STEP 32
ACTION: result = os0.path.isfile(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path4) 
==================================================
str0 += 'm'                                                             # STEP 33
ACTION: str0 += 'm' 
str0 = 'otuqm' : <type 'str'>
=> str0 = 'otuqmm' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 34
ACTION: str1 += 'w' 
str1 = '' : <type 'str'>
=> str1 = 'w' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 35
ACTION: path4 += "/" + component3 
component3 = 'e' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 36
ACTION: str0 += 't' 
str0 = 'otuqmm' : <type 'str'>
=> str0 = 'otuqmmt' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 37
ACTION: str0 += 'x' 
str0 = 'otuqmmt' : <type 'str'>
=> str0 = 'otuqmmtx' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 38
ACTION: str1 += 'a' 
str1 = 'w' : <type 'str'>
=> str1 = 'wa' : <type 'str'>
==================================================
stat2 = os0.stat(path4)                                                 # STEP 39
ACTION: stat2 = os0.stat(path4) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/e'
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/e'
==================================================
str0 += 'm'                                                             # STEP 40
ACTION: str0 += 'm' 
str0 = 'otuqmmtx' : <type 'str'>
=> str0 = 'otuqmmtxm' : <type 'str'>
==================================================
result = os0.path.abspath(path2)                                        # STEP 41
ACTION: result = os0.path.abspath(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path2) 
==================================================
fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 42
ACTION: fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
str2 += 'p'                                                             # STEP 43
ACTION: str2 += 'p' 
str2 = 'wwyh dh' : <type 'str'>
=> str2 = 'wwyh dhp' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 44
ACTION: str2 += 'e' 
str2 = 'wwyh dhp' : <type 'str'>
=> str2 = 'wwyh dhpe' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 45
ACTION: str0 += 'w' 
str0 = 'otuqmmtxm' : <type 'str'>
=> str0 = 'otuqmmtxmw' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 46
ACTION: str1 += 't' 
str1 = 'wa' : <type 'str'>
=> str1 = 'wat' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 47
ACTION: str2 += 'i' 
str2 = 'wwyh dhpe' : <type 'str'>
=> str2 = 'wwyh dhpei' : <type 'str'>
==================================================
component3 = "gamma"                                                    # STEP 48
ACTION: component3 = "gamma" 
component3 = 'e' : <type 'str'>
=> component3 = 'gamma' : <type 'str'>
==================================================
result = os0.path.abspath(path4)                                        # STEP 49
ACTION: result = os0.path.abspath(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path4) 
==================================================
str2 += 'q'                                                             # STEP 50
ACTION: str2 += 'q' 
str2 = 'wwyh dhpei' : <type 'str'>
=> str2 = 'wwyh dhpeiq' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 51
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str0 += 'o'                                                             # STEP 52
ACTION: str0 += 'o' 
str0 = 'otuqmmtxmw' : <type 'str'>
=> str0 = 'otuqmmtxmwo' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 53
ACTION: str2 += 'p' 
str2 = 'wwyh dhpeiq' : <type 'str'>
=> str2 = 'wwyh dhpeiqp' : <type 'str'>
==================================================
stat4 = os0.stat(path4)                                                 # STEP 54
ACTION: stat4 = os0.stat(path4) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10253c950> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path4) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=22245953, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507459051, st_mtime=1507459051, st_ctime=1507459051) : <type 'posix.stat_result'>
==================================================
result = os0.path.isfile(path4)                                         # STEP 55
ACTION: result = os0.path.isfile(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path4) 
==================================================
result = os0.path.isfile(path2)                                         # STEP 56
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
os0.remove(path4)                                                       # STEP 57
ACTION: os0.remove(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1022c9e90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.AssertionError'> 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1024f1cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22353, in act447
    self.p_os[0].remove(self.p_path[4])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3569, in remove
    self.filesystem.RemoveFile(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2485, in RemoveFile
    self.RemoveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2036, in RemoveObject
    target_directory.RemoveEntry(basename)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 740, in RemoveEntry
    assert (entry.st_nlink >= 0)
STOPPING TESTING DUE TO FAILED TEST
0.0431520938873 TOTAL RUNTIME
1 EXECUTED
58 TOTAL TEST OPERATIONS
0.0129835605621 TIME SPENT EXECUTING TEST OPERATIONS
0.00407934188843 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.8133392334e-05 TIME SPENT CHECKING PROPERTIES
0.0130116939545 TOTAL TIME SPENT RUNNING SUT
0.00349307060242 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
