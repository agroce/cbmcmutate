Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62105.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("can't multiply sequence by non-int of type 'list'",), <traceback object at 0x10308f560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 29716, in act556
    result = self.p_os[0].path.exists(self.p_path[3])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2749, in exists
    return self.filesystem.Exists(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1758, in ResolvePath
    path_components = (target_components * path_components)
Original test has 70 steps

SAVING TEST AS failure.62105.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "epsilon"                                                   # STEP 0
ACTION: component1 = "epsilon" 
component1 = None : <type 'NoneType'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
component4 = "lambda"                                                    # STEP 1
ACTION: component4 = "lambda" 
component4 = None : <type 'NoneType'>
=> component4 = 'lambda' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 2
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
component2 = "c"                                                         # STEP 3
ACTION: component2 = "c" 
component2 = None : <type 'NoneType'>
=> component2 = 'c' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 4
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
bytes2 = 0                                                               # STEP 5
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
bytes4 += 1                                                              # STEP 6
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
component0 = "beta"                                                      # STEP 7
ACTION: component0 = "beta" 
component0 = None : <type 'NoneType'>
=> component0 = 'beta' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 8
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes1 += 1                                                              # STEP 9
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 10
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d0f50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
bytes2 += 1                                                             # STEP 11
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str2 = ""                                                               # STEP 12
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 13
ACTION: str2 += 'd' 
str2 = '' : <type 'str'>
=> str2 = 'd' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 14
ACTION: str2 += 'c' 
str2 = 'd' : <type 'str'>
=> str2 = 'dc' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 15
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 16
ACTION: bytes4 = 0 
bytes4 = 1 : <type 'int'>
=> bytes4 = 0 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 18
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
os0.makedirs(path3)                                                     # STEP 19
ACTION: os0.makedirs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d0f50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
str2 += 's'                                                             # STEP 20
ACTION: str2 += 's' 
str2 = 'dc' : <type 'str'>
=> str2 = 'dcs' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 21
ACTION: str3 += 'g' 
str3 = '' : <type 'str'>
=> str3 = 'g' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 22
ACTION: str4 += 'b' 
str4 = '' : <type 'str'>
=> str4 = 'b' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 23
ACTION: str4 += 'b' 
str4 = 'b' : <type 'str'>
=> str4 = 'bb' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 24
ACTION: str3 = "" 
str3 = 'g' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 25
ACTION: str3 += 't' 
str3 = '' : <type 'str'>
=> str3 = 't' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 26
ACTION: str4 += 'm' 
str4 = 'bb' : <type 'str'>
=> str4 = 'bbm' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 27
ACTION: str2 += 'j' 
str2 = 'dcs' : <type 'str'>
=> str2 = 'dcsj' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 28
ACTION: str2 += 'u' 
str2 = 'dcsj' : <type 'str'>
=> str2 = 'dcsju' : <type 'str'>
==================================================
result = os0.path.isabs(path3)                                          # STEP 29
ACTION: result = os0.path.isabs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d0f50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path3) 
==================================================
str3 += " "                                                             # STEP 30
ACTION: str3 += " " 
str3 = 't' : <type 'str'>
=> str3 = 't ' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 31
ACTION: str3 += 'y' 
str3 = 't ' : <type 'str'>
=> str3 = 't y' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 32
ACTION: str4 += 'r' 
str4 = 'bbm' : <type 'str'>
=> str4 = 'bbmr' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 33
ACTION: str2 += 'u' 
str2 = 'dcsju' : <type 'str'>
=> str2 = 'dcsjuu' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 34
ACTION: str4 += 'e' 
str4 = 'bbmr' : <type 'str'>
=> str4 = 'bbmre' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 35
ACTION: str2 += 'z' 
str2 = 'dcsjuu' : <type 'str'>
=> str2 = 'dcsjuuz' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 36
ACTION: str3 += 'b' 
str3 = 't y' : <type 'str'>
=> str3 = 't yb' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 37
ACTION: str2 += 'b' 
str2 = 'dcsjuuz' : <type 'str'>
=> str2 = 'dcsjuuzb' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 38
ACTION: str3 += 't' 
str3 = 't yb' : <type 'str'>
=> str3 = 't ybt' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 39
ACTION: str3 += 'n' 
str3 = 't ybt' : <type 'str'>
=> str3 = 't ybtn' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 40
ACTION: str4 += 'n' 
str4 = 'bbmre' : <type 'str'>
=> str4 = 'bbmren' : <type 'str'>
==================================================
result = os0.path.dirname(path3)                                        # STEP 41
ACTION: result = os0.path.dirname(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d0f50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path3) 
==================================================
str4 += 's'                                                             # STEP 42
ACTION: str4 += 's' 
str4 = 'bbmren' : <type 'str'>
=> str4 = 'bbmrens' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 43
ACTION: str4 += 'd' 
str4 = 'bbmrens' : <type 'str'>
=> str4 = 'bbmrensd' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 44
ACTION: str3 += 'u' 
str3 = 't ybtn' : <type 'str'>
=> str3 = 't ybtnu' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 45
ACTION: path3 += "/" + component4 
component4 = 'lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 46
ACTION: str2 += " " 
str2 = 'dcsjuuzb' : <type 'str'>
=> str2 = 'dcsjuuzb ' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 47
ACTION: str4 += 'h' 
str4 = 'bbmrensd' : <type 'str'>
=> str4 = 'bbmrensdh' : <type 'str'>
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 48
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d0f50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
str4 += 'o'                                                             # STEP 49
ACTION: str4 += 'o' 
str4 = 'bbmrensdh' : <type 'str'>
=> str4 = 'bbmrensdho' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 50
ACTION: str2 += 'g' 
str2 = 'dcsjuuzb ' : <type 'str'>
=> str2 = 'dcsjuuzb g' : <type 'str'>
==================================================
component4 = "a"                                                        # STEP 51
ACTION: component4 = "a" 
component4 = 'lambda' : <type 'str'>
=> component4 = 'a' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 52
ACTION: str4 += 'd' 
str4 = 'bbmrensdho' : <type 'str'>
=> str4 = 'bbmrensdhod' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 53
ACTION: str4 += 'm' 
str4 = 'bbmrensdhod' : <type 'str'>
=> str4 = 'bbmrensdhodm' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 54
ACTION: str3 += 'k' 
str3 = 't ybtnu' : <type 'str'>
=> str3 = 't ybtnuk' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 55
ACTION: str3 += 'g' 
str3 = 't ybtnuk' : <type 'str'>
=> str3 = 't ybtnukg' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 56
ACTION: str4 += 't' 
str4 = 'bbmrensdhodm' : <type 'str'>
=> str4 = 'bbmrensdhodmt' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND)                        # STEP 57
ACTION: fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d0f50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_WRONLY | os.O_APPEND) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
result = os0.path.isfile(path3)                                         # STEP 58
ACTION: result = os0.path.isfile(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d0f50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path3) 
==================================================
str4 += 'v'                                                             # STEP 59
ACTION: str4 += 'v' 
str4 = 'bbmrensdhodmt' : <type 'str'>
=> str4 = 'bbmrensdhodmtv' : <type 'str'>
==================================================
os0.remove(path3)                                                       # STEP 60
ACTION: os0.remove(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d0f50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.remove(path3) 
==================================================
str3 += 'a'                                                             # STEP 61
ACTION: str3 += 'a' 
str3 = 't ybtnukg' : <type 'str'>
=> str3 = 't ybtnukga' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 62
ACTION: str3 += 'd' 
str3 = 't ybtnukga' : <type 'str'>
=> str3 = 't ybtnukgad' : <type 'str'>
==================================================
os0.symlink(path3,path3)                                                # STEP 63
ACTION: os0.symlink(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d0f50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path3,path3) 
==================================================
stat0 = os0.fstat(fd1)                                                  # STEP 64
ACTION: stat0 = os0.fstat(fd1) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d0f50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10347d090> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.fstat(fd_REF1) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=17233223, st_dev=16777224, st_nlink=0, st_uid=501, st_gid=20, st_size=0, st_atime=1507388753, st_mtime=1507388753, st_ctime=1507388753) : <type 'posix.stat_result'>
==================================================
str0 = ""                                                               # STEP 65
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 66
ACTION: bytes1 = 0 
bytes1 = 1 : <type 'int'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes0 = 0                                                              # STEP 67
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
bytes2 += 1                                                             # STEP 68
ACTION: bytes2 += 1 
bytes2 = 1 : <type 'int'>
=> bytes2 = 2 : <type 'int'>
==================================================
result = os0.path.exists(path3)                                         # STEP 69
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020d0f50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> can't multiply sequence by non-int of type 'list'
ERROR: (<type 'exceptions.TypeError'>, TypeError("can't multiply sequence by non-int of type 'list'",), <traceback object at 0x1024f3758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 29716, in act556
    result = self.p_os[0].path.exists(self.p_path[3])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2749, in exists
    return self.filesystem.Exists(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1758, in ResolvePath
    path_components = (target_components * path_components)
STOPPING TESTING DUE TO FAILED TEST
0.0388171672821 TOTAL RUNTIME
1 EXECUTED
70 TOTAL TEST OPERATIONS
0.0060670375824 TIME SPENT EXECUTING TEST OPERATIONS
0.0052227973938 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.17096710205e-05 TIME SPENT CHECKING PROPERTIES
0.00609874725342 TOTAL TIME SPENT RUNNING SUT
0.00354409217834 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
