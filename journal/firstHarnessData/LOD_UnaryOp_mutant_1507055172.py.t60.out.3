Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62616.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (/Volumes/ramdisk) ',), <traceback object at 0x1020c32d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31984, in act593
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 32 steps

SAVING TEST AS failure.62616.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path2 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "gamma"                                                     # STEP 1
ACTION: component4 = "gamma" 
component4 = None : <type 'NoneType'>
=> component4 = 'gamma' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 2
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
component1 = "gamma"                                                     # STEP 3
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 4
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'i'                                                              # STEP 5
ACTION: str1 += 'i' 
str1 = '' : <type 'str'>
=> str1 = 'i' : <type 'str'>
==================================================
component2 = "h"                                                         # STEP 6
ACTION: component2 = "h" 
component2 = None : <type 'NoneType'>
=> component2 = 'h' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 7
ACTION: str1 = "" 
str1 = 'i' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'w'                                                              # STEP 8
ACTION: str1 += 'w' 
str1 = '' : <type 'str'>
=> str1 = 'w' : <type 'str'>
==================================================
component3 = "d"                                                         # STEP 9
ACTION: component3 = "d" 
component3 = None : <type 'NoneType'>
=> component3 = 'd' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 10
ACTION: path2 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 11
ACTION: path2 += "/" + component3 
component3 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma/d' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 12
ACTION: path2 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma/d' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma/d/gamma' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 13
ACTION: str1 += 'c' 
str1 = 'w' : <type 'str'>
=> str1 = 'wc' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 14
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 15
ACTION: str2 += 'x' 
str2 = '' : <type 'str'>
=> str2 = 'x' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 16
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c6ec10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 17
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c6ec10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma/d/gamma' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/gamma/d/gamma'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma/d/gamma'
==================================================
str2 += 'v'                                                             # STEP 18
ACTION: str2 += 'v' 
str2 = 'x' : <type 'str'>
=> str2 = 'xv' : <type 'str'>
==================================================
component0 = "gamma"                                                    # STEP 19
ACTION: component0 = "gamma" 
component0 = None : <type 'NoneType'>
=> component0 = 'gamma' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_CREAT)                                       # STEP 20
ACTION: fd1 = os0.open(path2, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c6ec10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma/d/gamma' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Object already exists in fake filesystem: '/'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma/d/gamma'
==================================================
stat0 = os0.stat(path2)                                                 # STEP 21
ACTION: stat0 = os0.stat(path2) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c6ec10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma/d/gamma' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/gamma/d/gamma'
REFERENCE ACTION: stat_REF0 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma/d/gamma'
==================================================
result = os0.path.isfile(path0)                                         # STEP 22
ACTION: result = os0.path.isfile(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c6ec10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path0) 
==================================================
str1 += 'k'                                                             # STEP 23
ACTION: str1 += 'k' 
str1 = 'wc' : <type 'str'>
=> str1 = 'wck' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 24
ACTION: str1 += 'm' 
str1 = 'wck' : <type 'str'>
=> str1 = 'wckm' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 25
ACTION: str1 += 'r' 
str1 = 'wckm' : <type 'str'>
=> str1 = 'wckmr' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 26
ACTION: str1 += 'u' 
str1 = 'wckmr' : <type 'str'>
=> str1 = 'wckmru' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 27
ACTION: str2 += 'j' 
str2 = 'xv' : <type 'str'>
=> str2 = 'xvj' : <type 'str'>
==================================================
component1 = "epsilon"                                                  # STEP 28
ACTION: component1 = "epsilon" 
component1 = 'gamma' : <type 'str'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
stat3 = os0.stat(path2)                                                 # STEP 29
ACTION: stat3 = os0.stat(path2) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c6ec10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma/d/gamma' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/gamma/d/gamma'
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma/d/gamma'
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                         # STEP 30
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c6ec10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma/d/gamma' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Object already exists in fake filesystem: '/'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma/d/gamma'
==================================================
result = os0.path.dirname(path0)                                        # STEP 31
ACTION: result = os0.path.dirname(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c6ec10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path0) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (/Volumes/ramdisk) ',), <traceback object at 0x102f254d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31984, in act593
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
0.0266041755676 TOTAL RUNTIME
1 EXECUTED
32 TOTAL TEST OPERATIONS
0.00373530387878 TIME SPENT EXECUTING TEST OPERATIONS
0.00168800354004 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.31130218506e-05 TIME SPENT CHECKING PROPERTIES
0.00374841690063 TOTAL TIME SPENT RUNNING SUT
0.00321483612061 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
