Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.50558.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102b80a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15787, in act356
    assert (type(raised) == type(refRaised))
Original test has 31 steps

SAVING TEST AS failure.50558.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "c"                                                         # STEP 0
ACTION: component1 = "c" 
component1 = None : <type 'NoneType'>
=> component1 = 'c' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 1
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b74150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
component2 = "a"                                                         # STEP 2
ACTION: component2 = "a" 
component2 = None : <type 'NoneType'>
=> component2 = 'a' : <type 'str'>
==================================================
component4 = "b"                                                         # STEP 3
ACTION: component4 = "b" 
component4 = None : <type 'NoneType'>
=> component4 = 'b' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 4
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component3 = "g"                                                         # STEP 5
ACTION: component3 = "g" 
component3 = None : <type 'NoneType'>
=> component3 = 'g' : <type 'str'>
==================================================
str3 += 'q'                                                              # STEP 6
ACTION: str3 += 'q' 
str3 = '' : <type 'str'>
=> str3 = 'q' : <type 'str'>
==================================================
component0 = "omega"                                                     # STEP 7
ACTION: component0 = "omega" 
component0 = None : <type 'NoneType'>
=> component0 = 'omega' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = sorted(os0.listdir(path0))                                      # STEP 9
ACTION: result = sorted(os0.listdir(path0)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b74150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path0)) 
==================================================
str3 += 'r'                                                             # STEP 10
ACTION: str3 += 'r' 
str3 = 'q' : <type 'str'>
=> str3 = 'qr' : <type 'str'>
==================================================
os0.mkdir(path0)                                                        # STEP 11
ACTION: os0.mkdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b74150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk'
REFERENCE ACTION: os_REF0.mkdir(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
path0 += "/" + component4                                               # STEP 12
ACTION: path0 += "/" + component4 
component4 = 'b' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
result = os0.path.dirname(path0)                                        # STEP 13
ACTION: result = os0.path.dirname(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b74150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path0) 
==================================================
str3 += 'j'                                                             # STEP 14
ACTION: str3 += 'j' 
str3 = 'qr' : <type 'str'>
=> str3 = 'qrj' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 15
ACTION: str3 += 'r' 
str3 = 'qrj' : <type 'str'>
=> str3 = 'qrjr' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 16
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str1 = ""                                                               # STEP 17
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 18
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component4 = "b"                                                        # STEP 19
ACTION: component4 = "b" 
component4 = 'b' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 20
ACTION: str0 += 'b' 
str0 = '' : <type 'str'>
=> str0 = 'b' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 21
ACTION: str1 += " " 
str1 = '' : <type 'str'>
=> str1 = ' ' : <type 'str'>
==================================================
result = os0.path.dirname(path0)                                        # STEP 22
ACTION: result = os0.path.dirname(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b74150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path0) 
==================================================
str1 += " "                                                             # STEP 23
ACTION: str1 += " " 
str1 = ' ' : <type 'str'>
=> str1 = '  ' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 24
ACTION: str1 += 'a' 
str1 = '  ' : <type 'str'>
=> str1 = '  a' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 25
ACTION: str3 += 'k' 
str3 = 'qrjr' : <type 'str'>
=> str3 = 'qrjrk' : <type 'str'>
==================================================
fd1 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 26
ACTION: fd1 = os0.open(path0, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b74150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/b'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_WRONLY | os.O_APPEND) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/b'
==================================================
str1 += 'v'                                                             # STEP 27
ACTION: str1 += 'v' 
str1 = '  a' : <type 'str'>
=> str1 = '  av' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 28
ACTION: str1 += 'j' 
str1 = '  av' : <type 'str'>
=> str1 = '  avj' : <type 'str'>
==================================================
result = os0.readlink(path0)                                            # STEP 29
ACTION: result = os0.readlink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b74150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake path does not exist: '/Volumes/ramdisk/test/b'
REFERENCE ACTION: result_REF = os_REF0.readlink(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/b'
==================================================
fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 30
ACTION: fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b74150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1038c9518>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15787, in act356
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0280599594116 TOTAL RUNTIME
1 EXECUTED
31 TOTAL TEST OPERATIONS
0.00270628929138 TIME SPENT EXECUTING TEST OPERATIONS
0.00182938575745 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.19209289551e-05 TIME SPENT CHECKING PROPERTIES
0.00271821022034 TOTAL TIME SPENT RUNNING SUT
0.00354194641113 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
