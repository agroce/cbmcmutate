Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.56452.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103117c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 10005, in act271
    assert (type(raised) == type(refRaised))
Original test has 38 steps

SAVING TEST AS failure.56452.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "f"                                                         # STEP 1
ACTION: component2 = "f" 
component2 = None : <type 'NoneType'>
=> component2 = 'f' : <type 'str'>
==================================================
component3 = "g"                                                         # STEP 2
ACTION: component3 = "g" 
component3 = None : <type 'NoneType'>
=> component3 = 'g' : <type 'str'>
==================================================
component4 = "a"                                                         # STEP 3
ACTION: component4 = "a" 
component4 = None : <type 'NoneType'>
=> component4 = 'a' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 5
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component0 = "d"                                                         # STEP 6
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 7
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'y'                                                              # STEP 8
ACTION: str0 += 'y' 
str0 = '' : <type 'str'>
=> str0 = 'y' : <type 'str'>
==================================================
component1 = "delta"                                                     # STEP 9
ACTION: component1 = "delta" 
component1 = None : <type 'NoneType'>
=> component1 = 'delta' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 10
ACTION: str0 += 'r' 
str0 = 'y' : <type 'str'>
=> str0 = 'yr' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 11
ACTION: str0 += 'h' 
str0 = 'yr' : <type 'str'>
=> str0 = 'yrh' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 12
ACTION: str0 += 'z' 
str0 = 'yrh' : <type 'str'>
=> str0 = 'yrhz' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 13
ACTION: str0 += 'u' 
str0 = 'yrhz' : <type 'str'>
=> str0 = 'yrhzu' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 14
ACTION: str0 += 'z' 
str0 = 'yrhzu' : <type 'str'>
=> str0 = 'yrhzuz' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 15
ACTION: path0 += "/" + component4 
component4 = 'a' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 16
ACTION: str0 += 'o' 
str0 = 'yrhzuz' : <type 'str'>
=> str0 = 'yrhzuzo' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 17
ACTION: str0 += 'q' 
str0 = 'yrhzuzo' : <type 'str'>
=> str0 = 'yrhzuzoq' : <type 'str'>
==================================================
component4 = "alpha"                                                    # STEP 18
ACTION: component4 = "alpha" 
component4 = 'a' : <type 'str'>
=> component4 = 'alpha' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 19
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101be8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
path0 += "/" + component3                                               # STEP 20
ACTION: path0 += "/" + component3 
component3 = 'g' : <type 'str'>
path0 = '/Volumes/ramdisk/test/a' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/a/g' : <type 'str'>
==================================================
result = os0.path.lexists(path3)                                        # STEP 21
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101be8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
component3 = "alpha"                                                    # STEP 22
ACTION: component3 = "alpha" 
component3 = 'g' : <type 'str'>
=> component3 = 'alpha' : <type 'str'>
==================================================
os0.makedirs(path0)                                                     # STEP 23
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101be8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/a/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path0) 
==================================================
str0 += 'l'                                                             # STEP 24
ACTION: str0 += 'l' 
str0 = 'yrhzuzoq' : <type 'str'>
=> str0 = 'yrhzuzoql' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 25
ACTION: str0 += 'u' 
str0 = 'yrhzuzoql' : <type 'str'>
=> str0 = 'yrhzuzoqlu' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 26
ACTION: path0 += "/" + component0 
component0 = 'd' : <type 'str'>
path0 = '/Volumes/ramdisk/test/a/g' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/a/g/d' : <type 'str'>
==================================================
result = os0.path.lexists(path3)                                        # STEP 27
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101be8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
stat4 = os0.stat(path0)                                                 # STEP 28
ACTION: stat4 = os0.stat(path0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101be8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/a/g/d' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/a/g/d'
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/a/g/d'
==================================================
bytes3 += 1                                                             # STEP 29
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 30
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.exists(path0)                                         # STEP 31
ACTION: result = os0.path.exists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101be8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/a/g/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path0) 
==================================================
result = os0.path.abspath(path0)                                        # STEP 32
ACTION: result = os0.path.abspath(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101be8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/a/g/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path0) 
==================================================
result = os0.path.isfile(path0)                                         # STEP 33
ACTION: result = os0.path.isfile(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101be8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/a/g/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path0) 
==================================================
result = os0.path.isdir(path3)                                          # STEP 34
ACTION: result = os0.path.isdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101be8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path3) 
==================================================
os0.makedirs(path3)                                                     # STEP 35
ACTION: os0.makedirs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101be8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
path0 += "/" + component0                                               # STEP 36
ACTION: path0 += "/" + component0 
component0 = 'd' : <type 'str'>
path0 = '/Volumes/ramdisk/test/a/g/d' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/a/g/d/d' : <type 'str'>
==================================================
os0.symlink(path0,path0)                                                # STEP 37
ACTION: os0.symlink(path0,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101be8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/a/g/d/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path0,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101e94170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 10005, in act271
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0393269062042 TOTAL RUNTIME
1 EXECUTED
38 TOTAL TEST OPERATIONS
0.00499272346497 TIME SPENT EXECUTING TEST OPERATIONS
0.0031304359436 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.81198120117e-05 TIME SPENT CHECKING PROPERTIES
0.00501084327698 TOTAL TIME SPENT RUNNING SUT
0.00501704216003 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
