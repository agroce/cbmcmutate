Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.48093.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('integer division or modulo by zero',), <traceback object at 0x102d78290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 16339, in act364
    self.p_fd[0] = self.p_os[0].open(self.p_path[3], os.O_CREAT)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4566, in Call
    file_object = self.filesystem.CreateFileInternally(real_path, create_missing_dirs=False, apply_umask=True, raw_io=self.raw_io)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2225, in CreateFileInternally
    file_object._set_initial_contents(contents)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 462, in _set_initial_contents
    self.filesystem.ChangeDiskUsage((st_size / current_size), self.name, self.st_dev)
Original test has 31 steps

SAVING TEST AS failure.48093.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "delta"                                                     # STEP 0
ACTION: component3 = "delta" 
component3 = None : <type 'NoneType'>
=> component3 = 'delta' : <type 'str'>
==================================================
component1 = "g"                                                         # STEP 1
ACTION: component1 = "g" 
component1 = None : <type 'NoneType'>
=> component1 = 'g' : <type 'str'>
==================================================
component4 = "gamma"                                                     # STEP 2
ACTION: component4 = "gamma" 
component4 = None : <type 'NoneType'>
=> component4 = 'gamma' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 3
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "c"                                                         # STEP 4
ACTION: component0 = "c" 
component0 = None : <type 'NoneType'>
=> component0 = 'c' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component3                                                # STEP 6
ACTION: path2 += "/" + component3 
component3 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
component3 = "gamma"                                                     # STEP 7
ACTION: component3 = "gamma" 
component3 = 'delta' : <type 'str'>
=> component3 = 'gamma' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "alpha"                                                     # STEP 9
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 10
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 11
ACTION: str3 += 'g' 
str3 = '' : <type 'str'>
=> str3 = 'g' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 12
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 13
ACTION: path0 += "/" + component4 
component4 = 'gamma' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 14
ACTION: str3 += 'j' 
str3 = 'g' : <type 'str'>
=> str3 = 'gj' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 15
ACTION: str3 += 'g' 
str3 = 'gj' : <type 'str'>
=> str3 = 'gjg' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 16
ACTION: path0 += "/" + component1 
component1 = 'g' : <type 'str'>
path0 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/gamma/g' : <type 'str'>
==================================================
component4 = "d"                                                        # STEP 17
ACTION: component4 = "d" 
component4 = 'gamma' : <type 'str'>
=> component4 = 'd' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 18
ACTION: str3 += 'h' 
str3 = 'gjg' : <type 'str'>
=> str3 = 'gjgh' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 19
ACTION: str3 += 'm' 
str3 = 'gjgh' : <type 'str'>
=> str3 = 'gjghm' : <type 'str'>
==================================================
component1 = "phi"                                                      # STEP 20
ACTION: component1 = "phi" 
component1 = 'g' : <type 'str'>
=> component1 = 'phi' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 21
ACTION: path2 += "/" + component1 
component1 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/delta/phi' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 22
ACTION: path3 += "/" + component4 
component4 = 'd' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 23
ACTION: str3 += 'b' 
str3 = 'gjghm' : <type 'str'>
=> str3 = 'gjghmb' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 24
ACTION: str3 += 'z' 
str3 = 'gjghmb' : <type 'str'>
=> str3 = 'gjghmbz' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 25
ACTION: str3 += 'x' 
str3 = 'gjghmbz' : <type 'str'>
=> str3 = 'gjghmbzx' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 26
ACTION: str3 += 'b' 
str3 = 'gjghmbzx' : <type 'str'>
=> str3 = 'gjghmbzxb' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 27
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102f4fd90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
stat2 = os0.lstat(path2)                                                # STEP 28
ACTION: stat2 = os0.lstat(path2) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102f4fd90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta/phi' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/delta/phi'
REFERENCE ACTION: stat_REF2 = os_REF0.lstat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/delta/phi'
==================================================
fd1 = os0.open(path0, os.O_RDONLY)                                      # STEP 29
ACTION: fd1 = os0.open(path0, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102f4fd90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/gamma/g' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma/g'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma/g'
==================================================
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 30
ACTION: fd0 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102f4fd90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/d' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.ZeroDivisionError'> integer division or modulo by zero
ERROR: (<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('integer division or modulo by zero',), <traceback object at 0x10340edd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 16339, in act364
    self.p_fd[0] = self.p_os[0].open(self.p_path[3], os.O_CREAT)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4566, in Call
    file_object = self.filesystem.CreateFileInternally(real_path, create_missing_dirs=False, apply_umask=True, raw_io=self.raw_io)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2225, in CreateFileInternally
    file_object._set_initial_contents(contents)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 462, in _set_initial_contents
    self.filesystem.ChangeDiskUsage((st_size / current_size), self.name, self.st_dev)
STOPPING TESTING DUE TO FAILED TEST
0.0246520042419 TOTAL RUNTIME
1 EXECUTED
31 TOTAL TEST OPERATIONS
0.00236058235168 TIME SPENT EXECUTING TEST OPERATIONS
0.00296378135681 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
8.82148742676e-06 TIME SPENT CHECKING PROPERTIES
0.00236940383911 TOTAL TIME SPENT RUNNING SUT
0.00340604782104 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
