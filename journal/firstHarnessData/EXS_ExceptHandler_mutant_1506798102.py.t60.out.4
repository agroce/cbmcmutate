Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.36352.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("'FakeOsModule' object is not iterable",), <traceback object at 0x103760cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 24, in newFakeOS
    fakeOS = pyfakefs.fake_filesystem.FakeOsModule(fs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1717, in __init__
    self.path = FakePathModule(self.filesystem, self)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1464, in __init__
    self._os_path.os, self.os = os_module
Original test has 70 steps

SAVING TEST AS failure.36352.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "alpha"                                                     # STEP 0
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
component4 = "e"                                                         # STEP 1
ACTION: component4 = "e" 
component4 = None : <type 'NoneType'>
=> component4 = 'e' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "d"                                                         # STEP 3
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 4
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'h'                                                              # STEP 5
ACTION: str2 += 'h' 
str2 = '' : <type 'str'>
=> str2 = 'h' : <type 'str'>
==================================================
str2 += 'i'                                                              # STEP 6
ACTION: str2 += 'i' 
str2 = 'h' : <type 'str'>
=> str2 = 'hi' : <type 'str'>
==================================================
str2 += 'o'                                                              # STEP 7
ACTION: str2 += 'o' 
str2 = 'hi' : <type 'str'>
=> str2 = 'hio' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 8
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component1 = "delta"                                                     # STEP 9
ACTION: component1 = "delta" 
component1 = None : <type 'NoneType'>
=> component1 = 'delta' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 10
ACTION: str0 += 'l' 
str0 = '' : <type 'str'>
=> str0 = 'l' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 11
ACTION: str2 += 'n' 
str2 = 'hio' : <type 'str'>
=> str2 = 'hion' : <type 'str'>
==================================================
str0 += 'f'                                                             # STEP 12
ACTION: str0 += 'f' 
str0 = 'l' : <type 'str'>
=> str0 = 'lf' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 13
ACTION: str0 += 'c' 
str0 = 'lf' : <type 'str'>
=> str0 = 'lfc' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 14
ACTION: str2 += 'q' 
str2 = 'hion' : <type 'str'>
=> str2 = 'hionq' : <type 'str'>
==================================================
component2 = "g"                                                        # STEP 15
ACTION: component2 = "g" 
component2 = None : <type 'NoneType'>
=> component2 = 'g' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 16
ACTION: str0 += 't' 
str0 = 'lfc' : <type 'str'>
=> str0 = 'lfct' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 17
ACTION: str0 += 'o' 
str0 = 'lfct' : <type 'str'>
=> str0 = 'lfcto' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 18
ACTION: path4 += "/" + component2 
component2 = 'g' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 19
ACTION: str2 += 'h' 
str2 = 'hionq' : <type 'str'>
=> str2 = 'hionqh' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 20
ACTION: str2 += 'q' 
str2 = 'hionqh' : <type 'str'>
=> str2 = 'hionqhq' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 21
ACTION: str0 += 'h' 
str0 = 'lfcto' : <type 'str'>
=> str0 = 'lfctoh' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 22
ACTION: str2 += 'j' 
str2 = 'hionqhq' : <type 'str'>
=> str2 = 'hionqhqj' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 23
ACTION: str2 += 'p' 
str2 = 'hionqhqj' : <type 'str'>
=> str2 = 'hionqhqjp' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 24
ACTION: str2 += 'x' 
str2 = 'hionqhqjp' : <type 'str'>
=> str2 = 'hionqhqjpx' : <type 'str'>
==================================================
component2 = "epsilon"                                                  # STEP 25
ACTION: component2 = "epsilon" 
component2 = 'g' : <type 'str'>
=> component2 = 'epsilon' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 26
ACTION: str2 += " " 
str2 = 'hionqhqjpx' : <type 'str'>
=> str2 = 'hionqhqjpx ' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 27
ACTION: str2 = "" 
str2 = 'hionqhqjpx ' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 28
ACTION: str2 += 'h' 
str2 = '' : <type 'str'>
=> str2 = 'h' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 29
ACTION: str2 += 'm' 
str2 = 'h' : <type 'str'>
=> str2 = 'hm' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 30
ACTION: str2 += 'p' 
str2 = 'hm' : <type 'str'>
=> str2 = 'hmp' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 31
ACTION: str2 += 'n' 
str2 = 'hmp' : <type 'str'>
=> str2 = 'hmpn' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 32
ACTION: str2 += 'e' 
str2 = 'hmpn' : <type 'str'>
=> str2 = 'hmpne' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 33
ACTION: str0 += 'e' 
str0 = 'lfctoh' : <type 'str'>
=> str0 = 'lfctohe' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 34
ACTION: str0 += 'y' 
str0 = 'lfctohe' : <type 'str'>
=> str0 = 'lfctohey' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 35
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 36
ACTION: str2 += 'n' 
str2 = 'hmpne' : <type 'str'>
=> str2 = 'hmpnen' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 37
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str2 += 'x'                                                             # STEP 38
ACTION: str2 += 'x' 
str2 = 'hmpnen' : <type 'str'>
=> str2 = 'hmpnenx' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 39
ACTION: str2 += 'j' 
str2 = 'hmpnenx' : <type 'str'>
=> str2 = 'hmpnenxj' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 40
ACTION: str0 += 'g' 
str0 = 'lfctohey' : <type 'str'>
=> str0 = 'lfctoheyg' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 41
ACTION: path4 += "/" + component0 
component0 = 'd' : <type 'str'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/g/d' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 42
ACTION: component0 = "omega" 
component0 = 'd' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 43
ACTION: str0 += 'y' 
str0 = 'lfctoheyg' : <type 'str'>
=> str0 = 'lfctoheygy' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 44
ACTION: str2 += 'd' 
str2 = 'hmpnenxj' : <type 'str'>
=> str2 = 'hmpnenxjd' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 45
ACTION: str2 += 'm' 
str2 = 'hmpnenxjd' : <type 'str'>
=> str2 = 'hmpnenxjdm' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 46
ACTION: str2 += 's' 
str2 = 'hmpnenxjdm' : <type 'str'>
=> str2 = 'hmpnenxjdms' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 47
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str0 += 'y'                                                             # STEP 48
ACTION: str0 += 'y' 
str0 = 'lfctoheygy' : <type 'str'>
=> str0 = 'lfctoheygyy' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 49
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str0 += 'k'                                                             # STEP 50
ACTION: str0 += 'k' 
str0 = 'lfctoheygyy' : <type 'str'>
=> str0 = 'lfctoheygyyk' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 51
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str0 += 'e'                                                             # STEP 52
ACTION: str0 += 'e' 
str0 = 'lfctoheygyyk' : <type 'str'>
=> str0 = 'lfctoheygyyke' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 53
ACTION: str0 += 'z' 
str0 = 'lfctoheygyyke' : <type 'str'>
=> str0 = 'lfctoheygyykez' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 54
ACTION: str0 += 'd' 
str0 = 'lfctoheygyykez' : <type 'str'>
=> str0 = 'lfctoheygyykezd' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 55
ACTION: str2 += 'f' 
str2 = 'hmpnenxjdms' : <type 'str'>
=> str2 = 'hmpnenxjdmsf' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 56
ACTION: str0 += 'o' 
str0 = 'lfctoheygyykezd' : <type 'str'>
=> str0 = 'lfctoheygyykezdo' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 57
ACTION: str0 += " " 
str0 = 'lfctoheygyykezdo' : <type 'str'>
=> str0 = 'lfctoheygyykezdo ' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 58
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 59
ACTION: path2 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 60
ACTION: str0 += 'c' 
str0 = 'lfctoheygyykezdo ' : <type 'str'>
=> str0 = 'lfctoheygyykezdo c' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 61
ACTION: str2 += 'u' 
str2 = 'hmpnenxjdmsf' : <type 'str'>
=> str2 = 'hmpnenxjdmsfu' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 62
ACTION: str0 += 'm' 
str0 = 'lfctoheygyykezdo c' : <type 'str'>
=> str0 = 'lfctoheygyykezdo cm' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 63
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 64
ACTION: str3 += 'h' 
str3 = '' : <type 'str'>
=> str3 = 'h' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 65
ACTION: str0 += 'p' 
str0 = 'lfctoheygyykezdo cm' : <type 'str'>
=> str0 = 'lfctoheygyykezdo cmp' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 66
ACTION: str0 += 'x' 
str0 = 'lfctoheygyykezdo cmp' : <type 'str'>
=> str0 = 'lfctoheygyykezdo cmpx' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 67
ACTION: str0 += 'n' 
str0 = 'lfctoheygyykezdo cmpx' : <type 'str'>
=> str0 = 'lfctoheygyykezdo cmpxn' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 68
ACTION: str3 += 'j' 
str3 = 'h' : <type 'str'>
=> str3 = 'hj' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 69
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> 'FakeOsModule' object is not iterable
ERROR: (<type 'exceptions.TypeError'>, TypeError("'FakeOsModule' object is not iterable",), <traceback object at 0x1055e4998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 24, in newFakeOS
    fakeOS = pyfakefs.fake_filesystem.FakeOsModule(fs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1717, in __init__
    self.path = FakePathModule(self.filesystem, self)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1464, in __init__
    self._os_path.os, self.os = os_module
STOPPING TESTING DUE TO FAILED TEST
0.044153213501 TOTAL RUNTIME
2 EXECUTED
270 TOTAL TEST OPERATIONS
0.0044150352478 TIME SPENT EXECUTING TEST OPERATIONS
0.0130858421326 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000119686126709 TIME SPENT CHECKING PROPERTIES
0.00453472137451 TOTAL TIME SPENT RUNNING SUT
0.00669002532959 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
