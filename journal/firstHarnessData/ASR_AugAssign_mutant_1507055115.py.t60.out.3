Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62444.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('integer division or modulo by zero',), <traceback object at 0x1031fb320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15895, in act358
    self.p_fd[1] = self.p_os[0].open(self.p_path[2], os.O_CREAT | os.O_WRONLY | os.O_EXCL)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4566, in Call
    file_object = self.filesystem.CreateFileInternally(real_path, create_missing_dirs=False, apply_umask=True, raw_io=self.raw_io)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2214, in CreateFileInternally
    self.AddObject(parent_directory, file_object, error_class)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1904, in AddObject
    target_directory.AddEntry(file_object)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 703, in AddEntry
    self.filesystem.ChangeDiskUsage(path_object.GetSize(), path_object.name, self.st_dev)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1072, in ChangeDiskUsage
    mount_point['used_size'] /= usage_change
Original test has 99 steps

SAVING TEST AS failure.62444.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "phi"                                                       # STEP 0
ACTION: component0 = "phi" 
component0 = None : <type 'NoneType'>
=> component0 = 'phi' : <type 'str'>
==================================================
component4 = "beta"                                                      # STEP 1
ACTION: component4 = "beta" 
component4 = None : <type 'NoneType'>
=> component4 = 'beta' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 2
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
component2 = "phi"                                                       # STEP 3
ACTION: component2 = "phi" 
component2 = None : <type 'NoneType'>
=> component2 = 'phi' : <type 'str'>
==================================================
str2 += 'w'                                                              # STEP 4
ACTION: str2 += 'w' 
str2 = '' : <type 'str'>
=> str2 = 'w' : <type 'str'>
==================================================
str2 += 'c'                                                              # STEP 5
ACTION: str2 += 'c' 
str2 = 'w' : <type 'str'>
=> str2 = 'wc' : <type 'str'>
==================================================
component3 = "phi"                                                       # STEP 6
ACTION: component3 = "phi" 
component3 = None : <type 'NoneType'>
=> component3 = 'phi' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 7
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component1 = "e"                                                         # STEP 8
ACTION: component1 = "e" 
component1 = None : <type 'NoneType'>
=> component1 = 'e' : <type 'str'>
==================================================
str2 += 'j'                                                              # STEP 9
ACTION: str2 += 'j' 
str2 = 'wc' : <type 'str'>
=> str2 = 'wcj' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 10
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 11
ACTION: str3 += 'v' 
str3 = '' : <type 'str'>
=> str3 = 'v' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 12
ACTION: str2 += 'm' 
str2 = 'wcj' : <type 'str'>
=> str2 = 'wcjm' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 13
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str3 += 'd'                                                             # STEP 14
ACTION: str3 += 'd' 
str3 = 'v' : <type 'str'>
=> str3 = 'vd' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 15
ACTION: str3 += 'r' 
str3 = 'vd' : <type 'str'>
=> str3 = 'vdr' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 16
ACTION: str2 += 'p' 
str2 = 'wcjm' : <type 'str'>
=> str2 = 'wcjmp' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 17
ACTION: str2 += 'j' 
str2 = 'wcjmp' : <type 'str'>
=> str2 = 'wcjmpj' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 18
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 19
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str3 += 'x'                                                             # STEP 20
ACTION: str3 += 'x' 
str3 = 'vdr' : <type 'str'>
=> str3 = 'vdrx' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 21
ACTION: str3 += 'n' 
str3 = 'vdrx' : <type 'str'>
=> str3 = 'vdrxn' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 22
ACTION: str2 += 'y' 
str2 = 'wcjmpj' : <type 'str'>
=> str2 = 'wcjmpjy' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 23
ACTION: str2 += 'g' 
str2 = 'wcjmpjy' : <type 'str'>
=> str2 = 'wcjmpjyg' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 24
ACTION: str3 += 'c' 
str3 = 'vdrxn' : <type 'str'>
=> str3 = 'vdrxnc' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 25
ACTION: str2 += 'h' 
str2 = 'wcjmpjyg' : <type 'str'>
=> str2 = 'wcjmpjygh' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 26
ACTION: str3 += 'h' 
str3 = 'vdrxnc' : <type 'str'>
=> str3 = 'vdrxnch' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 27
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path2 += "/" + component0                                               # STEP 28
ACTION: path2 += "/" + component0 
component0 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 29
ACTION: str3 += 'u' 
str3 = 'vdrxnch' : <type 'str'>
=> str3 = 'vdrxnchu' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 30
ACTION: path2 += "/" + component2 
component2 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/phi' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 31
ACTION: str3 += 'o' 
str3 = 'vdrxnchu' : <type 'str'>
=> str3 = 'vdrxnchuo' : <type 'str'>
==================================================
component0 = "d"                                                        # STEP 32
ACTION: component0 = "d" 
component0 = 'phi' : <type 'str'>
=> component0 = 'd' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 33
ACTION: str3 += 't' 
str3 = 'vdrxnchuo' : <type 'str'>
=> str3 = 'vdrxnchuot' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 34
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
component2 = "beta"                                                     # STEP 35
ACTION: component2 = "beta" 
component2 = 'phi' : <type 'str'>
=> component2 = 'beta' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 36
ACTION: str3 += 'f' 
str3 = 'vdrxnchuot' : <type 'str'>
=> str3 = 'vdrxnchuotf' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 37
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str2 += 'n'                                                             # STEP 38
ACTION: str2 += 'n' 
str2 = 'wcjmpjygh' : <type 'str'>
=> str2 = 'wcjmpjyghn' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 39
ACTION: str3 += 's' 
str3 = 'vdrxnchuotf' : <type 'str'>
=> str3 = 'vdrxnchuotfs' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 40
ACTION: str3 += 'q' 
str3 = 'vdrxnchuotfs' : <type 'str'>
=> str3 = 'vdrxnchuotfsq' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 41
ACTION: str3 += 'y' 
str3 = 'vdrxnchuotfsq' : <type 'str'>
=> str3 = 'vdrxnchuotfsqy' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 42
ACTION: str3 += 'r' 
str3 = 'vdrxnchuotfsqy' : <type 'str'>
=> str3 = 'vdrxnchuotfsqyr' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 43
ACTION: str3 += 'w' 
str3 = 'vdrxnchuotfsqyr' : <type 'str'>
=> str3 = 'vdrxnchuotfsqyrw' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 44
ACTION: str2 += 'h' 
str2 = 'wcjmpjyghn' : <type 'str'>
=> str2 = 'wcjmpjyghnh' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 45
ACTION: str3 += 'v' 
str3 = 'vdrxnchuotfsqyrw' : <type 'str'>
=> str3 = 'vdrxnchuotfsqyrwv' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 46
ACTION: bytes0 += 1 
bytes0 = 1 : <type 'int'>
=> bytes0 = 2 : <type 'int'>
==================================================
str2 += 'x'                                                             # STEP 47
ACTION: str2 += 'x' 
str2 = 'wcjmpjyghnh' : <type 'str'>
=> str2 = 'wcjmpjyghnhx' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 48
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str2 += 'r'                                                             # STEP 49
ACTION: str2 += 'r' 
str2 = 'wcjmpjyghnhx' : <type 'str'>
=> str2 = 'wcjmpjyghnhxr' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 50
ACTION: str3 += 'f' 
str3 = 'vdrxnchuotfsqyrwv' : <type 'str'>
=> str3 = 'vdrxnchuotfsqyrwvf' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 51
ACTION: path2 += "/" + component0 
component0 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi/phi' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/phi/d' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 52
ACTION: str2 += 'i' 
str2 = 'wcjmpjyghnhxr' : <type 'str'>
=> str2 = 'wcjmpjyghnhxri' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 53
ACTION: bytes1 += 1 
bytes1 = 1 : <type 'int'>
=> bytes1 = 2 : <type 'int'>
==================================================
str2 += 'n'                                                             # STEP 54
ACTION: str2 += 'n' 
str2 = 'wcjmpjyghnhxri' : <type 'str'>
=> str2 = 'wcjmpjyghnhxrin' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 55
ACTION: component0 = "omega" 
component0 = 'd' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 56
ACTION: str3 += 'h' 
str3 = 'vdrxnchuotfsqyrwvf' : <type 'str'>
=> str3 = 'vdrxnchuotfsqyrwvfh' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 57
ACTION: str2 += 'z' 
str2 = 'wcjmpjyghnhxrin' : <type 'str'>
=> str2 = 'wcjmpjyghnhxrinz' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 58
ACTION: str2 += 'u' 
str2 = 'wcjmpjyghnhxrinz' : <type 'str'>
=> str2 = 'wcjmpjyghnhxrinzu' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 59
ACTION: str3 += 'a' 
str3 = 'vdrxnchuotfsqyrwvfh' : <type 'str'>
=> str3 = 'vdrxnchuotfsqyrwvfha' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 60
ACTION: str2 += 'i' 
str2 = 'wcjmpjyghnhxrinzu' : <type 'str'>
=> str2 = 'wcjmpjyghnhxrinzui' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 61
ACTION: str2 += 'l' 
str2 = 'wcjmpjyghnhxrinzui' : <type 'str'>
=> str2 = 'wcjmpjyghnhxrinzuil' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 62
ACTION: str3 = "" 
str3 = 'vdrxnchuotfsqyrwvfha' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 63
ACTION: str3 += 'n' 
str3 = '' : <type 'str'>
=> str3 = 'n' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 64
ACTION: str2 += 'z' 
str2 = 'wcjmpjyghnhxrinzuil' : <type 'str'>
=> str2 = 'wcjmpjyghnhxrinzuilz' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 65
ACTION: str3 = "" 
str3 = 'n' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 66
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 67
ACTION: str3 += 'e' 
str3 = '' : <type 'str'>
=> str3 = 'e' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 68
ACTION: str2 += 'p' 
str2 = 'wcjmpjyghnhxrinzuilz' : <type 'str'>
=> str2 = 'wcjmpjyghnhxrinzuilzp' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 69
ACTION: str3 += 'c' 
str3 = 'e' : <type 'str'>
=> str3 = 'ec' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 70
ACTION: str3 += " " 
str3 = 'ec' : <type 'str'>
=> str3 = 'ec ' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 71
ACTION: str3 += 'z' 
str3 = 'ec ' : <type 'str'>
=> str3 = 'ec z' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 72
ACTION: str2 += 'a' 
str2 = 'wcjmpjyghnhxrinzuilzp' : <type 'str'>
=> str2 = 'wcjmpjyghnhxrinzuilzpa' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 73
ACTION: str0 += 't' 
str0 = '' : <type 'str'>
=> str0 = 't' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 74
ACTION: str2 += 'e' 
str2 = 'wcjmpjyghnhxrinzuilzpa' : <type 'str'>
=> str2 = 'wcjmpjyghnhxrinzuilzpae' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 75
ACTION: path2 += "/" + component3 
component3 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi/phi/d' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/phi/d/phi' : <type 'str'>
==================================================
component3 = "h"                                                        # STEP 76
ACTION: component3 = "h" 
component3 = 'phi' : <type 'str'>
=> component3 = 'h' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 77
ACTION: str0 += 'r' 
str0 = 't' : <type 'str'>
=> str0 = 'tr' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 78
ACTION: bytes4 += 1 
bytes4 = 1 : <type 'int'>
=> bytes4 = 2 : <type 'int'>
==================================================
path2 += "/" + component3                                               # STEP 79
ACTION: path2 += "/" + component3 
component3 = 'h' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi/phi/d/phi' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/phi/d/phi/h' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 80
ACTION: str3 = "" 
str3 = 'ec z' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 81
ACTION: str2 += 's' 
str2 = 'wcjmpjyghnhxrinzuilzpae' : <type 'str'>
=> str2 = 'wcjmpjyghnhxrinzuilzpaes' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 82
ACTION: str3 += " " 
str3 = '' : <type 'str'>
=> str3 = ' ' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 83
ACTION: str2 += 'a' 
str2 = 'wcjmpjyghnhxrinzuilzpaes' : <type 'str'>
=> str2 = 'wcjmpjyghnhxrinzuilzpaesa' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 84
ACTION: str0 += 'l' 
str0 = 'tr' : <type 'str'>
=> str0 = 'trl' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 85
ACTION: str3 += 'i' 
str3 = ' ' : <type 'str'>
=> str3 = ' i' : <type 'str'>
==================================================
component3 = "f"                                                        # STEP 86
ACTION: component3 = "f" 
component3 = 'h' : <type 'str'>
=> component3 = 'f' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 87
ACTION: str3 += 'v' 
str3 = ' i' : <type 'str'>
=> str3 = ' iv' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 88
ACTION: str2 += 'r' 
str2 = 'wcjmpjyghnhxrinzuilzpaesa' : <type 'str'>
=> str2 = 'wcjmpjyghnhxrinzuilzpaesar' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 89
ACTION: str3 += 'k' 
str3 = ' iv' : <type 'str'>
=> str3 = ' ivk' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 90
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103250350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
os0.makedirs(path2)                                                     # STEP 91
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103250350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/phi/phi/d/phi/h' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path2) 
==================================================
stat2 = os0.lstat(path2)                                                # STEP 92
ACTION: stat2 = os0.lstat(path2) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103250350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/phi/phi/d/phi/h' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103275cd0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.lstat(path2) 
=> stat_REF2 = posix.stat_result(st_mode=16877, st_ino=17744803, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507395929, st_mtime=1507395929, st_ctime=1507395929) : <type 'posix.stat_result'>
==================================================
path2 += "/" + component0                                               # STEP 93
ACTION: path2 += "/" + component0 
component0 = 'omega' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi/phi/d/phi/h' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/phi/d/phi/h/omega' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 94
ACTION: str0 += 'd' 
str0 = 'trl' : <type 'str'>
=> str0 = 'trld' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 95
ACTION: str3 += 'e' 
str3 = ' ivk' : <type 'str'>
=> str3 = ' ivke' : <type 'str'>
==================================================
result = os0.path.islink(path2)                                         # STEP 96
ACTION: result = os0.path.islink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103250350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/phi/phi/d/phi/h/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path2) 
==================================================
str2 += 'j'                                                             # STEP 97
ACTION: str2 += 'j' 
str2 = 'wcjmpjyghnhxrinzuilzpaesar' : <type 'str'>
=> str2 = 'wcjmpjyghnhxrinzuilzpaesarj' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 98
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103250350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/phi/phi/d/phi/h/omega' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.ZeroDivisionError'> integer division or modulo by zero
ERROR: (<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('integer division or modulo by zero',), <traceback object at 0x1030aac20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15895, in act358
    self.p_fd[1] = self.p_os[0].open(self.p_path[2], os.O_CREAT | os.O_WRONLY | os.O_EXCL)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4566, in Call
    file_object = self.filesystem.CreateFileInternally(real_path, create_missing_dirs=False, apply_umask=True, raw_io=self.raw_io)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2214, in CreateFileInternally
    self.AddObject(parent_directory, file_object, error_class)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1904, in AddObject
    target_directory.AddEntry(file_object)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 703, in AddEntry
    self.filesystem.ChangeDiskUsage(path_object.GetSize(), path_object.name, self.st_dev)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1072, in ChangeDiskUsage
    mount_point['used_size'] /= usage_change
STOPPING TESTING DUE TO FAILED TEST
0.0421040058136 TOTAL RUNTIME
1 EXECUTED
99 TOTAL TEST OPERATIONS
0.00445318222046 TIME SPENT EXECUTING TEST OPERATIONS
0.0064389705658 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.33921813965e-05 TIME SPENT CHECKING PROPERTIES
0.00449657440186 TOTAL TIME SPENT RUNNING SUT
0.00396990776062 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
