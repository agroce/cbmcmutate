Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.57918.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102fd9170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 14899, in act344
    assert (type(raised) == type(refRaised))
Original test has 59 steps

SAVING TEST AS failure.57918.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path1 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 1
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component3 = "alpha"                                                     # STEP 2
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
component4 = "beta"                                                      # STEP 3
ACTION: component4 = "beta" 
component4 = None : <type 'NoneType'>
=> component4 = 'beta' : <type 'str'>
==================================================
str4 += 's'                                                              # STEP 4
ACTION: str4 += 's' 
str4 = '' : <type 'str'>
=> str4 = 's' : <type 'str'>
==================================================
component0 = "epsilon"                                                   # STEP 5
ACTION: component0 = "epsilon" 
component0 = None : <type 'NoneType'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 6
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
component1 = "b"                                                         # STEP 7
ACTION: component1 = "b" 
component1 = None : <type 'NoneType'>
=> component1 = 'b' : <type 'str'>
==================================================
path1 += "/" + component0                                                # STEP 8
ACTION: path1 += "/" + component0 
component0 = 'epsilon' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
component2 = "h"                                                         # STEP 9
ACTION: component2 = "h" 
component2 = None : <type 'NoneType'>
=> component2 = 'h' : <type 'str'>
==================================================
component0 = "alpha"                                                    # STEP 10
ACTION: component0 = "alpha" 
component0 = 'epsilon' : <type 'str'>
=> component0 = 'alpha' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 11
ACTION: str4 += 'x' 
str4 = 's' : <type 'str'>
=> str4 = 'sx' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 12
ACTION: str4 += 'f' 
str4 = 'sx' : <type 'str'>
=> str4 = 'sxf' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 13
ACTION: str4 += 'b' 
str4 = 'sxf' : <type 'str'>
=> str4 = 'sxfb' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 14
ACTION: str4 += 'e' 
str4 = 'sxfb' : <type 'str'>
=> str4 = 'sxfbe' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 15
ACTION: str4 += 'b' 
str4 = 'sxfbe' : <type 'str'>
=> str4 = 'sxfbeb' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 16
ACTION: str4 += 'f' 
str4 = 'sxfbeb' : <type 'str'>
=> str4 = 'sxfbebf' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 17
ACTION: str4 += 'c' 
str4 = 'sxfbebf' : <type 'str'>
=> str4 = 'sxfbebfc' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 18
ACTION: path1 += "/" + component0 
component0 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon/alpha' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 19
ACTION: str4 += 'p' 
str4 = 'sxfbebfc' : <type 'str'>
=> str4 = 'sxfbebfcp' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 20
ACTION: component0 = "omega" 
component0 = 'alpha' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 21
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 22
ACTION: str3 += 'k' 
str3 = '' : <type 'str'>
=> str3 = 'k' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 23
ACTION: str3 += 'u' 
str3 = 'k' : <type 'str'>
=> str3 = 'ku' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 24
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 26
ACTION: str4 += 'f' 
str4 = 'sxfbebfcp' : <type 'str'>
=> str4 = 'sxfbebfcpf' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 27
ACTION: str3 += 'h' 
str3 = 'ku' : <type 'str'>
=> str3 = 'kuh' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 28
ACTION: path1 += "/" + component1 
component1 = 'b' : <type 'str'>
path1 = '/Volumes/ramdisk/test/epsilon/alpha' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon/alpha/b' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 29
ACTION: str3 += 'c' 
str3 = 'kuh' : <type 'str'>
=> str3 = 'kuhc' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 30
ACTION: str3 += 'o' 
str3 = 'kuhc' : <type 'str'>
=> str3 = 'kuhco' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 31
ACTION: str4 += 'f' 
str4 = 'sxfbebfcpf' : <type 'str'>
=> str4 = 'sxfbebfcpff' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 32
ACTION: str3 += 'e' 
str3 = 'kuhco' : <type 'str'>
=> str3 = 'kuhcoe' : <type 'str'>
==================================================
component1 = "c"                                                        # STEP 33
ACTION: component1 = "c" 
component1 = 'b' : <type 'str'>
=> component1 = 'c' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 34
ACTION: str3 += 'r' 
str3 = 'kuhcoe' : <type 'str'>
=> str3 = 'kuhcoer' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 35
ACTION: str3 += " " 
str3 = 'kuhcoer' : <type 'str'>
=> str3 = 'kuhcoer ' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 36
ACTION: path1 += "/" + component1 
component1 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test/epsilon/alpha/b' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon/alpha/b/c' : <type 'str'>
==================================================
component1 = "phi"                                                      # STEP 37
ACTION: component1 = "phi" 
component1 = 'c' : <type 'str'>
=> component1 = 'phi' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 38
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 39
ACTION: str4 += 'p' 
str4 = 'sxfbebfcpff' : <type 'str'>
=> str4 = 'sxfbebfcpffp' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 40
ACTION: str4 += 'f' 
str4 = 'sxfbebfcpffp' : <type 'str'>
=> str4 = 'sxfbebfcpffpf' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 41
ACTION: str4 += 'u' 
str4 = 'sxfbebfcpffpf' : <type 'str'>
=> str4 = 'sxfbebfcpffpfu' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 42
ACTION: path1 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test/epsilon/alpha/b/c' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon/alpha/b/c/alpha' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 43
ACTION: str4 += 'd' 
str4 = 'sxfbebfcpffpfu' : <type 'str'>
=> str4 = 'sxfbebfcpffpfud' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 44
ACTION: bytes2 = 0 
bytes2 = 1 : <type 'int'>
=> bytes2 = 0 : <type 'int'>
==================================================
str3 += 'e'                                                             # STEP 45
ACTION: str3 += 'e' 
str3 = 'kuhcoer ' : <type 'str'>
=> str3 = 'kuhcoer e' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 46
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
bytes1 = 0                                                              # STEP 47
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str3 += 'c'                                                             # STEP 48
ACTION: str3 += 'c' 
str3 = 'kuhcoer e' : <type 'str'>
=> str3 = 'kuhcoer ec' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 49
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 50
ACTION: str3 += 'f' 
str3 = 'kuhcoer ec' : <type 'str'>
=> str3 = 'kuhcoer ecf' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 51
ACTION: str3 += 'w' 
str3 = 'kuhcoer ecf' : <type 'str'>
=> str3 = 'kuhcoer ecfw' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 52
ACTION: str4 += 'x' 
str4 = 'sxfbebfcpffpfud' : <type 'str'>
=> str4 = 'sxfbebfcpffpfudx' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 53
ACTION: path1 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test/epsilon/alpha/b/c/alpha' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon/alpha/b/c/alpha/alpha' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 54
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033cdfd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
component3 = "epsilon"                                                  # STEP 55
ACTION: component3 = "epsilon" 
component3 = 'alpha' : <type 'str'>
=> component3 = 'epsilon' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 56
ACTION: str4 += 'q' 
str4 = 'sxfbebfcpffpfudx' : <type 'str'>
=> str4 = 'sxfbebfcpffpfudxq' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 57
ACTION: path3 += "/" + component0 
component0 = 'omega' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 58
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033cdfd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY) 
=> fd_REF0 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104458d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 14899, in act344
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0534019470215 TOTAL RUNTIME
2 EXECUTED
259 TOTAL TEST OPERATIONS
0.0113372802734 TIME SPENT EXECUTING TEST OPERATIONS
0.0126531124115 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
9.60826873779e-05 TIME SPENT CHECKING PROPERTIES
0.0114333629608 TOTAL TIME SPENT RUNNING SUT
0.00595283508301 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
