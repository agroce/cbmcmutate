Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.55408.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (False) == (True) ',), <traceback object at 0x1006c32d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 30829, in act574
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 58 steps

SAVING TEST AS failure.55408.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "delta"                                                     # STEP 0
ACTION: component0 = "delta" 
component0 = None : <type 'NoneType'>
=> component0 = 'delta' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 1
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
component4 = "d"                                                         # STEP 2
ACTION: component4 = "d" 
component4 = None : <type 'NoneType'>
=> component4 = 'd' : <type 'str'>
==================================================
component2 = "e"                                                         # STEP 3
ACTION: component2 = "e" 
component2 = None : <type 'NoneType'>
=> component2 = 'e' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 4
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
component1 = "alpha"                                                     # STEP 5
ACTION: component1 = "alpha" 
component1 = None : <type 'NoneType'>
=> component1 = 'alpha' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.dirname(path3)                                         # STEP 7
ACTION: result = os0.path.dirname(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path3) 
==================================================
result = os0.path.dirname(path3)                                         # STEP 8
ACTION: result = os0.path.dirname(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path3) 
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 9
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 10
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 11
ACTION: str0 += 'y' 
str0 = '' : <type 'str'>
=> str0 = 'y' : <type 'str'>
==================================================
os0.mkdir(path3)                                                        # STEP 12
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
bytes2 = 0                                                              # STEP 13
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str0 += 'y'                                                             # STEP 14
ACTION: str0 += 'y' 
str0 = 'y' : <type 'str'>
=> str0 = 'yy' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 15
ACTION: str0 += 'i' 
str0 = 'yy' : <type 'str'>
=> str0 = 'yyi' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 16
ACTION: str0 += 't' 
str0 = 'yyi' : <type 'str'>
=> str0 = 'yyit' : <type 'str'>
==================================================
result = os0.path.lexists(path3)                                        # STEP 17
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
str1 = ""                                                               # STEP 18
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 19
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str1 += 'k'                                                             # STEP 20
ACTION: str1 += 'k' 
str1 = '' : <type 'str'>
=> str1 = 'k' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 21
ACTION: str0 += 'n' 
str0 = 'yyit' : <type 'str'>
=> str0 = 'yyitn' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 22
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 23
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 24
ACTION: str2 += 'g' 
str2 = '' : <type 'str'>
=> str2 = 'g' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 25
ACTION: str2 += 'e' 
str2 = 'g' : <type 'str'>
=> str2 = 'ge' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 26
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 27
ACTION: str0 += 'i' 
str0 = 'yyitn' : <type 'str'>
=> str0 = 'yyitni' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 28
ACTION: str2 += 'k' 
str2 = 'ge' : <type 'str'>
=> str2 = 'gek' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 29
ACTION: str0 = "" 
str0 = 'yyitni' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 30
ACTION: str0 += " " 
str0 = '' : <type 'str'>
=> str0 = ' ' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 31
ACTION: str1 += 'h' 
str1 = 'k' : <type 'str'>
=> str1 = 'kh' : <type 'str'>
==================================================
result = os0.path.lexists(path3)                                        # STEP 32
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
str0 += 'x'                                                             # STEP 33
ACTION: str0 += 'x' 
str0 = ' ' : <type 'str'>
=> str0 = ' x' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 34
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 35
ACTION: str2 += 'z' 
str2 = 'gek' : <type 'str'>
=> str2 = 'gekz' : <type 'str'>
==================================================
os0.link(path0,path3)                                                   # STEP 36
ACTION: os0.link(path0,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path0,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
bytes4 = 0                                                              # STEP 37
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str1 += 'r'                                                             # STEP 38
ACTION: str1 += 'r' 
str1 = 'kh' : <type 'str'>
=> str1 = 'khr' : <type 'str'>
==================================================
os0.symlink(path1,path2)                                                # STEP 39
ACTION: os0.symlink(path1,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path1,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.exists(path1)                                         # STEP 40
ACTION: result = os0.path.exists(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path1) 
==================================================
str2 += 'p'                                                             # STEP 41
ACTION: str2 += 'p' 
str2 = 'gekz' : <type 'str'>
=> str2 = 'gekzp' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 42
ACTION: str2 += 'u' 
str2 = 'gekzp' : <type 'str'>
=> str2 = 'gekzpu' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 43
ACTION: str1 += 'p' 
str1 = 'khr' : <type 'str'>
=> str1 = 'khrp' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 44
ACTION: str0 += 'e' 
str0 = ' x' : <type 'str'>
=> str0 = ' xe' : <type 'str'>
==================================================
result = os0.readlink(path1)                                            # STEP 45
ACTION: result = os0.readlink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
str0 += 'p'                                                             # STEP 46
ACTION: str0 += 'p' 
str0 = ' xe' : <type 'str'>
=> str0 = ' xep' : <type 'str'>
==================================================
os0.link(path2,path0)                                                   # STEP 47
ACTION: os0.link(path2,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path2,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
path3 += "/" + component4                                               # STEP 48
ACTION: path3 += "/" + component4 
component4 = 'd' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
component4 = "g"                                                        # STEP 49
ACTION: component4 = "g" 
component4 = 'd' : <type 'str'>
=> component4 = 'g' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 50
ACTION: str2 += 'i' 
str2 = 'gekzpu' : <type 'str'>
=> str2 = 'gekzpui' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 51
ACTION: fd0 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/d' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
str1 += 'w'                                                             # STEP 52
ACTION: str1 += 'w' 
str1 = 'khrp' : <type 'str'>
=> str1 = 'khrpw' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 53
ACTION: str0 = "" 
str0 = ' xep' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 54
ACTION: str2 += 'w' 
str2 = 'gekzpui' : <type 'str'>
=> str2 = 'gekzpuiw' : <type 'str'>
==================================================
stat4 = os0.fstat(fd0)                                                  # STEP 55
ACTION: stat4 = os0.fstat(fd0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1029f9ad0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.fstat(fd_REF0) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=9737307, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507282598, st_mtime=1507282598, st_ctime=1507282598) : <type 'posix.stat_result'>
==================================================
result = os0.path.islink(path0)                                         # STEP 56
ACTION: result = os0.path.islink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path0) 
==================================================
result = os0.path.isabs(path1)                                          # STEP 57
ACTION: result = os0.path.isabs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102872150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path1) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (False) == (True) ',), <traceback object at 0x10276eb48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 30829, in act574
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
0.0398740768433 TOTAL RUNTIME
1 EXECUTED
58 TOTAL TEST OPERATIONS
0.00829529762268 TIME SPENT EXECUTING TEST OPERATIONS
0.00360679626465 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.09944152832e-05 TIME SPENT CHECKING PROPERTIES
0.00832629203796 TOTAL TIME SPENT RUNNING SUT
0.00301098823547 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
