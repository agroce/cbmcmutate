Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.47962.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for -: 'str' and 'str'",), <traceback object at 0x1045c6290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 11563, in act296
    self.p_os[0].link(self.p_path[0],self.p_path[0])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3862, in link
    self.filesystem.CreateHardLink(oldpath, newpath)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2269, in CreateHardLink
    (new_parent_directory, new_basename) = self.SplitPath(new_path_normalized)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1390, in SplitPath
    return ((drive - sep.join(path_components)), basename)
Original test has 12 steps

SAVING TEST AS failure.47962.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes2 = 0                                                               # STEP 0
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
component2 = "omega"                                                     # STEP 1
ACTION: component2 = "omega" 
component2 = None : <type 'NoneType'>
=> component2 = 'omega' : <type 'str'>
==================================================
component1 = "f"                                                         # STEP 2
ACTION: component1 = "f" 
component1 = None : <type 'NoneType'>
=> component1 = 'f' : <type 'str'>
==================================================
component3 = "beta"                                                      # STEP 3
ACTION: component3 = "beta" 
component3 = None : <type 'NoneType'>
=> component3 = 'beta' : <type 'str'>
==================================================
component4 = "d"                                                         # STEP 4
ACTION: component4 = "d" 
component4 = None : <type 'NoneType'>
=> component4 = 'd' : <type 'str'>
==================================================
component0 = "f"                                                         # STEP 5
ACTION: component0 = "f" 
component0 = None : <type 'NoneType'>
=> component0 = 'f' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes2 += 1                                                              # STEP 7
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
bytes2 = 0                                                               # STEP 8
ACTION: bytes2 = 0 
bytes2 = 1 : <type 'int'>
=> bytes2 = 0 : <type 'int'>
==================================================
path0 += "/" + component2                                                # STEP 9
ACTION: path0 += "/" + component2 
component2 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 10
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1045f6210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
os0.link(path0,path0)                                                   # STEP 11
ACTION: os0.link(path0,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1045f6210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unsupported operand type(s) for -: 'str' and 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for -: 'str' and 'str'",), <traceback object at 0x1054015f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 11563, in act296
    self.p_os[0].link(self.p_path[0],self.p_path[0])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3862, in link
    self.filesystem.CreateHardLink(oldpath, newpath)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2269, in CreateHardLink
    (new_parent_directory, new_basename) = self.SplitPath(new_path_normalized)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1390, in SplitPath
    return ((drive - sep.join(path_components)), basename)
STOPPING TESTING DUE TO FAILED TEST
0.0211088657379 TOTAL RUNTIME
1 EXECUTED
12 TOTAL TEST OPERATIONS
0.000649929046631 TIME SPENT EXECUTING TEST OPERATIONS
0.00152182579041 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
5.24520874023e-06 TIME SPENT CHECKING PROPERTIES
0.000655174255371 TOTAL TIME SPENT RUNNING SUT
0.00327110290527 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
