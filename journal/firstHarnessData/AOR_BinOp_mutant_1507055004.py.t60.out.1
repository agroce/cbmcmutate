Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.63898.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("can't multiply sequence by non-int of type 'str'",), <traceback object at 0x102c88098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1766, in ResolvePath
    return _ComponentsToPath(resolved_components)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1662, in _ComponentsToPath
    path = (sep * path)
Original test has 31 steps

SAVING TEST AS failure.63898.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "e"                                                         # STEP 0
ACTION: component3 = "e" 
component3 = None : <type 'NoneType'>
=> component3 = 'e' : <type 'str'>
==================================================
component4 = "h"                                                         # STEP 1
ACTION: component4 = "h" 
component4 = None : <type 'NoneType'>
=> component4 = 'h' : <type 'str'>
==================================================
component0 = "d"                                                         # STEP 2
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
component1 = "f"                                                         # STEP 3
ACTION: component1 = "f" 
component1 = None : <type 'NoneType'>
=> component1 = 'f' : <type 'str'>
==================================================
component2 = "phi"                                                       # STEP 4
ACTION: component2 = "phi" 
component2 = None : <type 'NoneType'>
=> component2 = 'phi' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component3                                                # STEP 7
ACTION: path2 += "/" + component3 
component3 = 'e' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 8
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 9
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 10
ACTION: str4 += 'w' 
str4 = '' : <type 'str'>
=> str4 = 'w' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 11
ACTION: str2 += 'h' 
str2 = '' : <type 'str'>
=> str2 = 'h' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 12
ACTION: path2 += "/" + component2 
component2 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test/e' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/e/phi' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 13
ACTION: str2 += 'm' 
str2 = 'h' : <type 'str'>
=> str2 = 'hm' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 14
ACTION: str2 += 'i' 
str2 = 'hm' : <type 'str'>
=> str2 = 'hmi' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 15
ACTION: str4 += 'o' 
str4 = 'w' : <type 'str'>
=> str4 = 'wo' : <type 'str'>
==================================================
component2 = "beta"                                                     # STEP 16
ACTION: component2 = "beta" 
component2 = 'phi' : <type 'str'>
=> component2 = 'beta' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/e/phi' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 18
ACTION: str4 += 'k' 
str4 = 'wo' : <type 'str'>
=> str4 = 'wok' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 19
ACTION: str2 += 'x' 
str2 = 'hmi' : <type 'str'>
=> str2 = 'hmix' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 20
ACTION: path2 += "/" + component0 
component0 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
component3 = "alpha"                                                    # STEP 21
ACTION: component3 = "alpha" 
component3 = 'e' : <type 'str'>
=> component3 = 'alpha' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 22
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 23
ACTION: str2 += 'q' 
str2 = 'hmix' : <type 'str'>
=> str2 = 'hmixq' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 24
ACTION: path4 += "/" + component2 
component2 = 'beta' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 25
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 26
ACTION: component0 = "omega" 
component0 = 'd' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
component2 = "f"                                                        # STEP 27
ACTION: component2 = "f" 
component2 = 'beta' : <type 'str'>
=> component2 = 'f' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 28
ACTION: path2 += "/" + component1 
component1 = 'f' : <type 'str'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/d/f' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 29
ACTION: str4 += 'd' 
str4 = 'wok' : <type 'str'>
=> str4 = 'wokd' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 30
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> can't multiply sequence by non-int of type 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("can't multiply sequence by non-int of type 'str'",), <traceback object at 0x102a1e050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1766, in ResolvePath
    return _ComponentsToPath(resolved_components)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1662, in _ComponentsToPath
    path = (sep * path)
STOPPING TESTING DUE TO FAILED TEST
0.0539691448212 TOTAL RUNTIME
3 EXECUTED
431 TOTAL TEST OPERATIONS
0.00626444816589 TIME SPENT EXECUTING TEST OPERATIONS
0.021463394165 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000216484069824 TIME SPENT CHECKING PROPERTIES
0.00648093223572 TOTAL TIME SPENT RUNNING SUT
0.00800561904907 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
