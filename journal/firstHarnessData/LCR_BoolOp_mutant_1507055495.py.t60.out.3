Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59869.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1030b3050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1313, in NormalizeCase
    path_components = self.GetPathComponents(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1544, in GetPathComponents
    assert (drive and path_components)
Original test has 94 steps

SAVING TEST AS failure.59869.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "omega"                                                     # STEP 0
ACTION: component3 = "omega" 
component3 = None : <type 'NoneType'>
=> component3 = 'omega' : <type 'str'>
==================================================
component4 = "a"                                                         # STEP 1
ACTION: component4 = "a" 
component4 = None : <type 'NoneType'>
=> component4 = 'a' : <type 'str'>
==================================================
component1 = "delta"                                                     # STEP 2
ACTION: component1 = "delta" 
component1 = None : <type 'NoneType'>
=> component1 = 'delta' : <type 'str'>
==================================================
component0 = "gamma"                                                     # STEP 3
ACTION: component0 = "gamma" 
component0 = None : <type 'NoneType'>
=> component0 = 'gamma' : <type 'str'>
==================================================
component2 = "delta"                                                     # STEP 4
ACTION: component2 = "delta" 
component2 = None : <type 'NoneType'>
=> component2 = 'delta' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 5
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 6
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'p'                                                              # STEP 8
ACTION: str3 += 'p' 
str3 = '' : <type 'str'>
=> str3 = 'p' : <type 'str'>
==================================================
str3 += 't'                                                              # STEP 9
ACTION: str3 += 't' 
str3 = 'p' : <type 'str'>
=> str3 = 'pt' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 10
ACTION: str3 += 'x' 
str3 = 'pt' : <type 'str'>
=> str3 = 'ptx' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 11
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
bytes2 = 0                                                              # STEP 12
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 14
ACTION: str4 += 'e' 
str4 = '' : <type 'str'>
=> str4 = 'e' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 15
ACTION: str4 += 'l' 
str4 = 'e' : <type 'str'>
=> str4 = 'el' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 16
ACTION: path2 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 17
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 18
ACTION: str3 += 'y' 
str3 = 'ptx' : <type 'str'>
=> str3 = 'ptxy' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 19
ACTION: str1 += 'u' 
str1 = '' : <type 'str'>
=> str1 = 'u' : <type 'str'>
==================================================
component0 = "alpha"                                                    # STEP 20
ACTION: component0 = "alpha" 
component0 = 'gamma' : <type 'str'>
=> component0 = 'alpha' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 21
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str3 += 'a'                                                             # STEP 22
ACTION: str3 += 'a' 
str3 = 'ptxy' : <type 'str'>
=> str3 = 'ptxya' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 23
ACTION: str1 += 'e' 
str1 = 'u' : <type 'str'>
=> str1 = 'ue' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 24
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 25
ACTION: str2 += 'j' 
str2 = '' : <type 'str'>
=> str2 = 'j' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 26
ACTION: str4 += 'm' 
str4 = 'el' : <type 'str'>
=> str4 = 'elm' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 27
ACTION: str2 += 'm' 
str2 = 'j' : <type 'str'>
=> str2 = 'jm' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 28
ACTION: str3 += 'z' 
str3 = 'ptxya' : <type 'str'>
=> str3 = 'ptxyaz' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 29
ACTION: str1 += 'q' 
str1 = 'ue' : <type 'str'>
=> str1 = 'ueq' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 30
ACTION: str3 += 'y' 
str3 = 'ptxyaz' : <type 'str'>
=> str3 = 'ptxyazy' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 31
ACTION: str3 += 'c' 
str3 = 'ptxyazy' : <type 'str'>
=> str3 = 'ptxyazyc' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 32
ACTION: str3 += 'r' 
str3 = 'ptxyazyc' : <type 'str'>
=> str3 = 'ptxyazycr' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 33
ACTION: str1 += 'z' 
str1 = 'ueq' : <type 'str'>
=> str1 = 'ueqz' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 34
ACTION: str1 += 'u' 
str1 = 'ueqz' : <type 'str'>
=> str1 = 'ueqzu' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 35
ACTION: str1 += 'd' 
str1 = 'ueqzu' : <type 'str'>
=> str1 = 'ueqzud' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 36
ACTION: str4 += 'j' 
str4 = 'elm' : <type 'str'>
=> str4 = 'elmj' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 37
ACTION: str3 += 'b' 
str3 = 'ptxyazycr' : <type 'str'>
=> str3 = 'ptxyazycrb' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 38
ACTION: str4 += 'i' 
str4 = 'elmj' : <type 'str'>
=> str4 = 'elmji' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 39
ACTION: str2 += 'v' 
str2 = 'jm' : <type 'str'>
=> str2 = 'jmv' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 40
ACTION: str3 += 'o' 
str3 = 'ptxyazycrb' : <type 'str'>
=> str3 = 'ptxyazycrbo' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 41
ACTION: str2 += 'i' 
str2 = 'jmv' : <type 'str'>
=> str2 = 'jmvi' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 42
ACTION: str3 += " " 
str3 = 'ptxyazycrbo' : <type 'str'>
=> str3 = 'ptxyazycrbo ' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 43
ACTION: path4 += "/" + component3 
component3 = 'omega' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
component3 = "omega"                                                    # STEP 44
ACTION: component3 = "omega" 
component3 = 'omega' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 45
ACTION: str4 += 'h' 
str4 = 'elmji' : <type 'str'>
=> str4 = 'elmjih' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 46
ACTION: str3 += 'k' 
str3 = 'ptxyazycrbo ' : <type 'str'>
=> str3 = 'ptxyazycrbo k' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 47
ACTION: str3 += 'j' 
str3 = 'ptxyazycrbo k' : <type 'str'>
=> str3 = 'ptxyazycrbo kj' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 48
ACTION: str1 += 'p' 
str1 = 'ueqzud' : <type 'str'>
=> str1 = 'ueqzudp' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 49
ACTION: str4 += 'o' 
str4 = 'elmjih' : <type 'str'>
=> str4 = 'elmjiho' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 50
ACTION: str3 += 'i' 
str3 = 'ptxyazycrbo kj' : <type 'str'>
=> str3 = 'ptxyazycrbo kji' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 51
ACTION: str1 += 'r' 
str1 = 'ueqzudp' : <type 'str'>
=> str1 = 'ueqzudpr' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 52
ACTION: str1 += 't' 
str1 = 'ueqzudpr' : <type 'str'>
=> str1 = 'ueqzudprt' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 53
ACTION: str3 += 'r' 
str3 = 'ptxyazycrbo kji' : <type 'str'>
=> str3 = 'ptxyazycrbo kjir' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 54
ACTION: str4 += 'i' 
str4 = 'elmjiho' : <type 'str'>
=> str4 = 'elmjihoi' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 55
ACTION: str2 += 'x' 
str2 = 'jmvi' : <type 'str'>
=> str2 = 'jmvix' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 56
ACTION: str4 += 'a' 
str4 = 'elmjihoi' : <type 'str'>
=> str4 = 'elmjihoia' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 57
ACTION: str2 += " " 
str2 = 'jmvix' : <type 'str'>
=> str2 = 'jmvix ' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 58
ACTION: str1 += 'e' 
str1 = 'ueqzudprt' : <type 'str'>
=> str1 = 'ueqzudprte' : <type 'str'>
==================================================
path4 += "/" + component4                                               # STEP 59
ACTION: path4 += "/" + component4 
component4 = 'a' : <type 'str'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega/a' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 60
ACTION: str1 += 'w' 
str1 = 'ueqzudprte' : <type 'str'>
=> str1 = 'ueqzudprtew' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 61
ACTION: str4 += 'u' 
str4 = 'elmjihoia' : <type 'str'>
=> str4 = 'elmjihoiau' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 62
ACTION: str4 = "" 
str4 = 'elmjihoiau' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 63
ACTION: str1 += 'h' 
str1 = 'ueqzudprtew' : <type 'str'>
=> str1 = 'ueqzudprtewh' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 64
ACTION: str3 += 'b' 
str3 = 'ptxyazycrbo kjir' : <type 'str'>
=> str3 = 'ptxyazycrbo kjirb' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 65
ACTION: str3 += 'z' 
str3 = 'ptxyazycrbo kjirb' : <type 'str'>
=> str3 = 'ptxyazycrbo kjirbz' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 66
ACTION: str1 += 'o' 
str1 = 'ueqzudprtewh' : <type 'str'>
=> str1 = 'ueqzudprtewho' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 67
ACTION: str1 += 'j' 
str1 = 'ueqzudprtewho' : <type 'str'>
=> str1 = 'ueqzudprtewhoj' : <type 'str'>
==================================================
component4 = "omega"                                                    # STEP 68
ACTION: component4 = "omega" 
component4 = 'a' : <type 'str'>
=> component4 = 'omega' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 69
ACTION: path4 += "/" + component2 
component2 = 'delta' : <type 'str'>
path4 = '/Volumes/ramdisk/test/omega/a' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega/a/delta' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 70
ACTION: str4 += 'w' 
str4 = '' : <type 'str'>
=> str4 = 'w' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 71
ACTION: str3 += 's' 
str3 = 'ptxyazycrbo kjirbz' : <type 'str'>
=> str3 = 'ptxyazycrbo kjirbzs' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 72
ACTION: str3 += 'a' 
str3 = 'ptxyazycrbo kjirbzs' : <type 'str'>
=> str3 = 'ptxyazycrbo kjirbzsa' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 73
ACTION: str2 += 'd' 
str2 = 'jmvix ' : <type 'str'>
=> str2 = 'jmvix d' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 74
ACTION: str2 += 'd' 
str2 = 'jmvix d' : <type 'str'>
=> str2 = 'jmvix dd' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 75
ACTION: str4 += 'v' 
str4 = 'w' : <type 'str'>
=> str4 = 'wv' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 76
ACTION: str2 += 'f' 
str2 = 'jmvix dd' : <type 'str'>
=> str2 = 'jmvix ddf' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 77
ACTION: str2 += " " 
str2 = 'jmvix ddf' : <type 'str'>
=> str2 = 'jmvix ddf ' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 78
ACTION: str2 += 'x' 
str2 = 'jmvix ddf ' : <type 'str'>
=> str2 = 'jmvix ddf x' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 79
ACTION: str1 += 'r' 
str1 = 'ueqzudprtewhoj' : <type 'str'>
=> str1 = 'ueqzudprtewhojr' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 80
ACTION: str3 += 'k' 
str3 = 'ptxyazycrbo kjirbzsa' : <type 'str'>
=> str3 = 'ptxyazycrbo kjirbzsak' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 81
ACTION: str2 += 'k' 
str2 = 'jmvix ddf x' : <type 'str'>
=> str2 = 'jmvix ddf xk' : <type 'str'>
==================================================
component2 = "b"                                                        # STEP 82
ACTION: component2 = "b" 
component2 = 'delta' : <type 'str'>
=> component2 = 'b' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 83
ACTION: str3 += 'j' 
str3 = 'ptxyazycrbo kjirbzsak' : <type 'str'>
=> str3 = 'ptxyazycrbo kjirbzsakj' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 84
ACTION: str3 = "" 
str3 = 'ptxyazycrbo kjirbzsakj' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 85
ACTION: path4 += "/" + component3 
component3 = 'omega' : <type 'str'>
path4 = '/Volumes/ramdisk/test/omega/a/delta' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega/a/delta/omega' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 86
ACTION: str4 += 'g' 
str4 = 'wv' : <type 'str'>
=> str4 = 'wvg' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 87
ACTION: str1 += 'q' 
str1 = 'ueqzudprtewhojr' : <type 'str'>
=> str1 = 'ueqzudprtewhojrq' : <type 'str'>
==================================================
component3 = "omega"                                                    # STEP 88
ACTION: component3 = "omega" 
component3 = 'omega' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 89
ACTION: str3 += 'h' 
str3 = '' : <type 'str'>
=> str3 = 'h' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 90
ACTION: str1 += 'p' 
str1 = 'ueqzudprtewhojrq' : <type 'str'>
=> str1 = 'ueqzudprtewhojrqp' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 91
ACTION: path2 += "/" + component1 
component1 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma/delta' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 92
ACTION: str1 += 's' 
str1 = 'ueqzudprtewhojrqp' : <type 'str'>
=> str1 = 'ueqzudprtewhojrqps' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 93
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.AssertionError'> 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1005aa3b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1313, in NormalizeCase
    path_components = self.GetPathComponents(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1544, in GetPathComponents
    assert (drive and path_components)
STOPPING TESTING DUE TO FAILED TEST
0.0284819602966 TOTAL RUNTIME
1 EXECUTED
94 TOTAL TEST OPERATIONS
0.00158476829529 TIME SPENT EXECUTING TEST OPERATIONS
0.00437140464783 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.00543212891e-05 TIME SPENT CHECKING PROPERTIES
0.00162482261658 TOTAL TIME SPENT RUNNING SUT
0.0037670135498 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
