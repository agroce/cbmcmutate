Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.64772.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10267a9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9599, in act264
    assert (type(raised) == type(refRaised))
Original test has 185 steps

SAVING TEST AS failure.64772.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "beta"                                                      # STEP 0
ACTION: component4 = "beta" 
component4 = None : <type 'NoneType'>
=> component4 = 'beta' : <type 'str'>
==================================================
component3 = "h"                                                         # STEP 1
ACTION: component3 = "h" 
component3 = None : <type 'NoneType'>
=> component3 = 'h' : <type 'str'>
==================================================
component1 = "beta"                                                      # STEP 2
ACTION: component1 = "beta" 
component1 = None : <type 'NoneType'>
=> component1 = 'beta' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 3
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component0 = "b"                                                         # STEP 4
ACTION: component0 = "b" 
component0 = None : <type 'NoneType'>
=> component0 = 'b' : <type 'str'>
==================================================
str4 += 'c'                                                              # STEP 5
ACTION: str4 += 'c' 
str4 = '' : <type 'str'>
=> str4 = 'c' : <type 'str'>
==================================================
str4 += 'x'                                                              # STEP 6
ACTION: str4 += 'x' 
str4 = 'c' : <type 'str'>
=> str4 = 'cx' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 7
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'e'                                                              # STEP 8
ACTION: str2 += 'e' 
str2 = '' : <type 'str'>
=> str2 = 'e' : <type 'str'>
==================================================
component2 = "a"                                                         # STEP 9
ACTION: component2 = "a" 
component2 = None : <type 'NoneType'>
=> component2 = 'a' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 10
ACTION: str2 += 'v' 
str2 = 'e' : <type 'str'>
=> str2 = 'ev' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 11
ACTION: str4 += 'n' 
str4 = 'cx' : <type 'str'>
=> str4 = 'cxn' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 12
ACTION: str2 += 'f' 
str2 = 'ev' : <type 'str'>
=> str2 = 'evf' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 13
ACTION: str2 += 'x' 
str2 = 'evf' : <type 'str'>
=> str2 = 'evfx' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 14
ACTION: str2 += 'o' 
str2 = 'evfx' : <type 'str'>
=> str2 = 'evfxo' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 15
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str2 += 'p'                                                             # STEP 16
ACTION: str2 += 'p' 
str2 = 'evfxo' : <type 'str'>
=> str2 = 'evfxop' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 17
ACTION: str2 += 'w' 
str2 = 'evfxop' : <type 'str'>
=> str2 = 'evfxopw' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 18
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 19
ACTION: str4 += 'l' 
str4 = 'cxn' : <type 'str'>
=> str4 = 'cxnl' : <type 'str'>
==================================================
result = os0.path.abspath(path3)                                        # STEP 20
ACTION: result = os0.path.abspath(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path3) 
==================================================
str2 += 'o'                                                             # STEP 21
ACTION: str2 += 'o' 
str2 = 'evfxopw' : <type 'str'>
=> str2 = 'evfxopwo' : <type 'str'>
==================================================
result = os0.path.islink(path3)                                         # STEP 22
ACTION: result = os0.path.islink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path3) 
==================================================
str2 += 'n'                                                             # STEP 23
ACTION: str2 += 'n' 
str2 = 'evfxopwo' : <type 'str'>
=> str2 = 'evfxopwon' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 24
ACTION: str4 = "" 
str4 = 'cxnl' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 25
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 26
ACTION: path3 += "/" + component1 
component1 = 'beta' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
fd1 = os0.open(path3, os.O_RDONLY)                                      # STEP 27
ACTION: fd1 = os0.open(path3, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
==================================================
stat4 = os0.lstat(path3)                                                # STEP 28
ACTION: stat4 = os0.lstat(path3) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
==================================================
bytes2 = 0                                                              # STEP 29
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
result = os0.path.isfile(path3)                                         # STEP 30
ACTION: result = os0.path.isfile(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path3) 
==================================================
str0 += 'n'                                                             # STEP 31
ACTION: str0 += 'n' 
str0 = '' : <type 'str'>
=> str0 = 'n' : <type 'str'>
==================================================
result = os0.path.abspath(path3)                                        # STEP 32
ACTION: result = os0.path.abspath(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path3) 
==================================================
result = os0.path.isabs(path3)                                          # STEP 33
ACTION: result = os0.path.isabs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path3) 
==================================================
str2 += 'a'                                                             # STEP 34
ACTION: str2 += 'a' 
str2 = 'evfxopwon' : <type 'str'>
=> str2 = 'evfxopwona' : <type 'str'>
==================================================
os0.symlink(path3,path3)                                                # STEP 35
ACTION: os0.symlink(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path3,path3) 
==================================================
component1 = "omega"                                                    # STEP 36
ACTION: component1 = "omega" 
component1 = 'beta' : <type 'str'>
=> component1 = 'omega' : <type 'str'>
==================================================
fd1 = os0.open(path3, os.O_CREAT)                                       # STEP 37
ACTION: fd1 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
==================================================
path3 += "/" + component3                                               # STEP 38
ACTION: path3 += "/" + component3 
component3 = 'h' : <type 'str'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/beta/h' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 39
ACTION: str0 += 'i' 
str0 = 'n' : <type 'str'>
=> str0 = 'ni' : <type 'str'>
==================================================
fd1 = os0.open(path3, os.O_RDONLY)                                      # STEP 40
ACTION: fd1 = os0.open(path3, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h'
==================================================
str2 += 'w'                                                             # STEP 41
ACTION: str2 += 'w' 
str2 = 'evfxopwona' : <type 'str'>
=> str2 = 'evfxopwonaw' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 42
ACTION: str2 += 'a' 
str2 = 'evfxopwonaw' : <type 'str'>
=> str2 = 'evfxopwonawa' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 43
ACTION: str0 += 'm' 
str0 = 'ni' : <type 'str'>
=> str0 = 'nim' : <type 'str'>
==================================================
os0.makedirs(path3)                                                     # STEP 44
ACTION: os0.makedirs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: os_REF0.makedirs(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h'
==================================================
result = os0.path.isabs(path3)                                          # STEP 45
ACTION: result = os0.path.isabs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path3) 
==================================================
stat2 = os0.lstat(path3)                                                # STEP 46
ACTION: stat2 = os0.lstat(path3) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: stat_REF2 = os_REF0.lstat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h'
==================================================
component3 = "f"                                                        # STEP 47
ACTION: component3 = "f" 
component3 = 'h' : <type 'str'>
=> component3 = 'f' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 48
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 49
ACTION: str0 += 'g' 
str0 = 'nim' : <type 'str'>
=> str0 = 'nimg' : <type 'str'>
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 50
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h'
==================================================
str0 += 'k'                                                             # STEP 51
ACTION: str0 += 'k' 
str0 = 'nimg' : <type 'str'>
=> str0 = 'nimgk' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 52
ACTION: str4 += 'd' 
str4 = '' : <type 'str'>
=> str4 = 'd' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 53
ACTION: path3 += "/" + component1 
component1 = 'omega' : <type 'str'>
path3 = '/Volumes/ramdisk/test/beta/h' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 54
ACTION: str2 += 'o' 
str2 = 'evfxopwonawa' : <type 'str'>
=> str2 = 'evfxopwonawao' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 55
ACTION: str4 += 'x' 
str4 = 'd' : <type 'str'>
=> str4 = 'dx' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 56
ACTION: str0 += 'v' 
str0 = 'nimgk' : <type 'str'>
=> str0 = 'nimgkv' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 57
ACTION: str0 += 'i' 
str0 = 'nimgkv' : <type 'str'>
=> str0 = 'nimgkvi' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 58
ACTION: str4 += 'o' 
str4 = 'dx' : <type 'str'>
=> str4 = 'dxo' : <type 'str'>
==================================================
result = sorted(os0.listdir(path3))                                     # STEP 59
ACTION: result = sorted(os0.listdir(path3)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path3)) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega'
==================================================
fd1 = os0.open(path3, os.O_RDWR)                                        # STEP 60
ACTION: fd1 = os0.open(path3, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega'
==================================================
str1 += 'x'                                                             # STEP 61
ACTION: str1 += 'x' 
str1 = '' : <type 'str'>
=> str1 = 'x' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 62
ACTION: str2 += 'j' 
str2 = 'evfxopwonawao' : <type 'str'>
=> str2 = 'evfxopwonawaoj' : <type 'str'>
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 63
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega'
==================================================
result = os0.path.isabs(path3)                                          # STEP 64
ACTION: result = os0.path.isabs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path3) 
==================================================
str0 += 'b'                                                             # STEP 65
ACTION: str0 += 'b' 
str0 = 'nimgkvi' : <type 'str'>
=> str0 = 'nimgkvib' : <type 'str'>
==================================================
result = os0.path.exists(path3)                                         # STEP 66
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
stat0 = os0.lstat(path3)                                                # STEP 67
ACTION: stat0 = os0.lstat(path3) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega'
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 68
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega'
==================================================
str1 += 'v'                                                             # STEP 69
ACTION: str1 += 'v' 
str1 = 'x' : <type 'str'>
=> str1 = 'xv' : <type 'str'>
==================================================
os0.rmdir(path3)                                                        # STEP 70
ACTION: os0.rmdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: os_REF0.rmdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega'
==================================================
str0 += 'l'                                                             # STEP 71
ACTION: str0 += 'l' 
str0 = 'nimgkvib' : <type 'str'>
=> str0 = 'nimgkvibl' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 72
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega'
==================================================
result = os0.path.lexists(path3)                                        # STEP 73
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
str0 += 'j'                                                             # STEP 74
ACTION: str0 += 'j' 
str0 = 'nimgkvibl' : <type 'str'>
=> str0 = 'nimgkviblj' : <type 'str'>
==================================================
os0.makedirs(path3)                                                     # STEP 75
ACTION: os0.makedirs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: os_REF0.makedirs(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h'
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 76
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 77
ACTION: str4 += 'y' 
str4 = 'dxo' : <type 'str'>
=> str4 = 'dxoy' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 78
ACTION: str1 += 'u' 
str1 = 'xv' : <type 'str'>
=> str1 = 'xvu' : <type 'str'>
==================================================
os0.remove(path2)                                                       # STEP 79
ACTION: os0.remove(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
str3 = ""                                                               # STEP 80
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
os0.rmdir(path3)                                                        # STEP 81
ACTION: os0.rmdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: os_REF0.rmdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega'
==================================================
result = os0.readlink(path2)                                            # STEP 82
ACTION: result = os0.readlink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
str4 += 'f'                                                             # STEP 83
ACTION: str4 += 'f' 
str4 = 'dxoy' : <type 'str'>
=> str4 = 'dxoyf' : <type 'str'>
==================================================
component1 = "lambda"                                                   # STEP 84
ACTION: component1 = "lambda" 
component1 = 'omega' : <type 'str'>
=> component1 = 'lambda' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 85
ACTION: str2 = "" 
str2 = 'evfxopwonawaoj' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 86
ACTION: str3 += 'j' 
str3 = '' : <type 'str'>
=> str3 = 'j' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 87
ACTION: str2 += 'e' 
str2 = '' : <type 'str'>
=> str2 = 'e' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 88
ACTION: str1 += 'h' 
str1 = 'xvu' : <type 'str'>
=> str1 = 'xvuh' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 89
ACTION: str1 += 'x' 
str1 = 'xvuh' : <type 'str'>
=> str1 = 'xvuhx' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 90
ACTION: str0 += 'v' 
str0 = 'nimgkviblj' : <type 'str'>
=> str0 = 'nimgkvibljv' : <type 'str'>
==================================================
result = os0.path.isfile(path2)                                         # STEP 91
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
str4 += 'y'                                                             # STEP 92
ACTION: str4 += 'y' 
str4 = 'dxoyf' : <type 'str'>
=> str4 = 'dxoyfy' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 93
ACTION: str4 += 'q' 
str4 = 'dxoyfy' : <type 'str'>
=> str4 = 'dxoyfyq' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 94
ACTION: str4 += 'u' 
str4 = 'dxoyfyq' : <type 'str'>
=> str4 = 'dxoyfyqu' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 95
ACTION: str0 += 'r' 
str0 = 'nimgkvibljv' : <type 'str'>
=> str0 = 'nimgkvibljvr' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 96
ACTION: str0 += 't' 
str0 = 'nimgkvibljvr' : <type 'str'>
=> str0 = 'nimgkvibljvrt' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 97
ACTION: str2 += 'm' 
str2 = 'e' : <type 'str'>
=> str2 = 'em' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 98
ACTION: str1 += 'e' 
str1 = 'xvuhx' : <type 'str'>
=> str1 = 'xvuhxe' : <type 'str'>
==================================================
result = sorted(os0.listdir(path3))                                     # STEP 99
ACTION: result = sorted(os0.listdir(path3)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path3)) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega'
==================================================
str2 += 'l'                                                            # STEP 100
ACTION: str2 += 'l' 
str2 = 'em' : <type 'str'>
=> str2 = 'eml' : <type 'str'>
==================================================
str1 += 'd'                                                            # STEP 101
ACTION: str1 += 'd' 
str1 = 'xvuhxe' : <type 'str'>
=> str1 = 'xvuhxed' : <type 'str'>
==================================================
str2 += 'd'                                                            # STEP 102
ACTION: str2 += 'd' 
str2 = 'eml' : <type 'str'>
=> str2 = 'emld' : <type 'str'>
==================================================
path3 += "/" + component4                                              # STEP 103
ACTION: path3 += "/" + component4 
component4 = 'beta' : <type 'str'>
path3 = '/Volumes/ramdisk/test/beta/h/omega' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/beta/h/omega/beta' : <type 'str'>
==================================================
str3 += 'm'                                                            # STEP 104
ACTION: str3 += 'm' 
str3 = 'j' : <type 'str'>
=> str3 = 'jm' : <type 'str'>
==================================================
str4 += 'd'                                                            # STEP 105
ACTION: str4 += 'd' 
str4 = 'dxoyfyqu' : <type 'str'>
=> str4 = 'dxoyfyqud' : <type 'str'>
==================================================
str1 += 'u'                                                            # STEP 106
ACTION: str1 += 'u' 
str1 = 'xvuhxed' : <type 'str'>
=> str1 = 'xvuhxedu' : <type 'str'>
==================================================
str3 += 'p'                                                            # STEP 107
ACTION: str3 += 'p' 
str3 = 'jm' : <type 'str'>
=> str3 = 'jmp' : <type 'str'>
==================================================
fd1 = os0.open(path3, os.O_CREAT)                                      # STEP 108
ACTION: fd1 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega/beta'
==================================================
str0 += 'd'                                                            # STEP 109
ACTION: str0 += 'd' 
str0 = 'nimgkvibljvrt' : <type 'str'>
=> str0 = 'nimgkvibljvrtd' : <type 'str'>
==================================================
result = os0.path.isfile(path2)                                        # STEP 110
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
stat2 = os0.stat(path3)                                                # STEP 111
ACTION: stat2 = os0.stat(path3) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega/beta' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega/beta'
==================================================
bytes1 = 0                                                             # STEP 112
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
component4 = "delta"                                                   # STEP 113
ACTION: component4 = "delta" 
component4 = 'beta' : <type 'str'>
=> component4 = 'delta' : <type 'str'>
==================================================
result = os0.path.isabs(path2)                                         # STEP 114
ACTION: result = os0.path.isabs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path2) 
==================================================
os0.rmdir(path3)                                                       # STEP 115
ACTION: os0.rmdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: os_REF0.rmdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega/beta'
==================================================
result = os0.path.isabs(path3)                                         # STEP 116
ACTION: result = os0.path.isabs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path3) 
==================================================
stat3 = os0.stat(path3)                                                # STEP 117
ACTION: stat3 = os0.stat(path3) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega/beta' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega/beta'
==================================================
result = os0.path.exists(path3)                                        # STEP 118
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
str4 += 'a'                                                            # STEP 119
ACTION: str4 += 'a' 
str4 = 'dxoyfyqud' : <type 'str'>
=> str4 = 'dxoyfyquda' : <type 'str'>
==================================================
str2 += 't'                                                            # STEP 120
ACTION: str2 += 't' 
str2 = 'emld' : <type 'str'>
=> str2 = 'emldt' : <type 'str'>
==================================================
str4 += 'l'                                                            # STEP 121
ACTION: str4 += 'l' 
str4 = 'dxoyfyquda' : <type 'str'>
=> str4 = 'dxoyfyqudal' : <type 'str'>
==================================================
result = os0.path.lexists(path2)                                       # STEP 122
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
str1 += 'h'                                                            # STEP 123
ACTION: str1 += 'h' 
str1 = 'xvuhxedu' : <type 'str'>
=> str1 = 'xvuhxeduh' : <type 'str'>
==================================================
str4 += " "                                                            # STEP 124
ACTION: str4 += " " 
str4 = 'dxoyfyqudal' : <type 'str'>
=> str4 = 'dxoyfyqudal ' : <type 'str'>
==================================================
stat3 = os0.lstat(path3)                                               # STEP 125
ACTION: stat3 = os0.lstat(path3) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega/beta' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega/beta'
==================================================
str4 += 'o'                                                            # STEP 126
ACTION: str4 += 'o' 
str4 = 'dxoyfyqudal ' : <type 'str'>
=> str4 = 'dxoyfyqudal o' : <type 'str'>
==================================================
bytes4 = 0                                                             # STEP 127
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str2 += 's'                                                            # STEP 128
ACTION: str2 += 's' 
str2 = 'emldt' : <type 'str'>
=> str2 = 'emldts' : <type 'str'>
==================================================
os0.mkdir(path2)                                                       # STEP 129
ACTION: os0.mkdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Empty directory name
REFERENCE ACTION: os_REF0.mkdir(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
fd0 = os0.open(path3, os.O_RDWR)                                       # STEP 130
ACTION: fd0 = os0.open(path3, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega/beta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega/beta'
==================================================
result = os0.path.abspath(path2)                                       # STEP 131
ACTION: result = os0.path.abspath(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path2) 
==================================================
str3 += 'k'                                                            # STEP 132
ACTION: str3 += 'k' 
str3 = 'jmp' : <type 'str'>
=> str3 = 'jmpk' : <type 'str'>
==================================================
str0 += 'j'                                                            # STEP 133
ACTION: str0 += 'j' 
str0 = 'nimgkvibljvrtd' : <type 'str'>
=> str0 = 'nimgkvibljvrtdj' : <type 'str'>
==================================================
str1 += 'd'                                                            # STEP 134
ACTION: str1 += 'd' 
str1 = 'xvuhxeduh' : <type 'str'>
=> str1 = 'xvuhxeduhd' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                        # STEP 135
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega/beta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega/beta'
==================================================
str0 += 'i'                                                            # STEP 136
ACTION: str0 += 'i' 
str0 = 'nimgkvibljvrtdj' : <type 'str'>
=> str0 = 'nimgkvibljvrtdji' : <type 'str'>
==================================================
result = os0.path.lexists(path3)                                       # STEP 137
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                        # STEP 138
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega/beta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta/h/omega/beta'
==================================================
str4 += 'y'                                                            # STEP 139
ACTION: str4 += 'y' 
str4 = 'dxoyfyqudal o' : <type 'str'>
=> str4 = 'dxoyfyqudal oy' : <type 'str'>
==================================================
str0 += 'e'                                                            # STEP 140
ACTION: str0 += 'e' 
str0 = 'nimgkvibljvrtdji' : <type 'str'>
=> str0 = 'nimgkvibljvrtdjie' : <type 'str'>
==================================================
str1 += 'w'                                                            # STEP 141
ACTION: str1 += 'w' 
str1 = 'xvuhxeduhd' : <type 'str'>
=> str1 = 'xvuhxeduhdw' : <type 'str'>
==================================================
str3 += 'h'                                                            # STEP 142
ACTION: str3 += 'h' 
str3 = 'jmpk' : <type 'str'>
=> str3 = 'jmpkh' : <type 'str'>
==================================================
result = os0.path.isfile(path2)                                        # STEP 143
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
str0 += 'q'                                                            # STEP 144
ACTION: str0 += 'q' 
str0 = 'nimgkvibljvrtdjie' : <type 'str'>
=> str0 = 'nimgkvibljvrtdjieq' : <type 'str'>
==================================================
str3 += 'c'                                                            # STEP 145
ACTION: str3 += 'c' 
str3 = 'jmpkh' : <type 'str'>
=> str3 = 'jmpkhc' : <type 'str'>
==================================================
os0.symlink(path3,path3)                                               # STEP 146
ACTION: os0.symlink(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta/h/omega/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: os_REF0.symlink(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links
==================================================
path3 = "/Volumes/ramdisk/test"                                        # STEP 147
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/beta/h/omega/beta' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.dirname(path3)                                       # STEP 148
ACTION: result = os0.path.dirname(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path3) 
==================================================
str2 += 'i'                                                            # STEP 149
ACTION: str2 += 'i' 
str2 = 'emldts' : <type 'str'>
=> str2 = 'emldtsi' : <type 'str'>
==================================================
bytes3 = 0                                                             # STEP 150
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str2 = ""                                                              # STEP 151
ACTION: str2 = "" 
str2 = 'emldtsi' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str3 += 'b'                                                            # STEP 152
ACTION: str3 += 'b' 
str3 = 'jmpkhc' : <type 'str'>
=> str3 = 'jmpkhcb' : <type 'str'>
==================================================
str1 += 'z'                                                            # STEP 153
ACTION: str1 += 'z' 
str1 = 'xvuhxeduhdw' : <type 'str'>
=> str1 = 'xvuhxeduhdwz' : <type 'str'>
==================================================
str1 += 'a'                                                            # STEP 154
ACTION: str1 += 'a' 
str1 = 'xvuhxeduhdwz' : <type 'str'>
=> str1 = 'xvuhxeduhdwza' : <type 'str'>
==================================================
result = os0.path.isabs(path3)                                         # STEP 155
ACTION: result = os0.path.isabs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path3) 
==================================================
str3 += 'a'                                                            # STEP 156
ACTION: str3 += 'a' 
str3 = 'jmpkhcb' : <type 'str'>
=> str3 = 'jmpkhcba' : <type 'str'>
==================================================
str2 += 'f'                                                            # STEP 157
ACTION: str2 += 'f' 
str2 = '' : <type 'str'>
=> str2 = 'f' : <type 'str'>
==================================================
str2 += 'k'                                                            # STEP 158
ACTION: str2 += 'k' 
str2 = 'f' : <type 'str'>
=> str2 = 'fk' : <type 'str'>
==================================================
result = os0.readlink(path3)                                           # STEP 159
ACTION: result = os0.readlink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
str1 += 'f'                                                            # STEP 160
ACTION: str1 += 'f' 
str1 = 'xvuhxeduhdwza' : <type 'str'>
=> str1 = 'xvuhxeduhdwzaf' : <type 'str'>
==================================================
str3 += 'b'                                                            # STEP 161
ACTION: str3 += 'b' 
str3 = 'jmpkhcba' : <type 'str'>
=> str3 = 'jmpkhcbab' : <type 'str'>
==================================================
str4 += 's'                                                            # STEP 162
ACTION: str4 += 's' 
str4 = 'dxoyfyqudal oy' : <type 'str'>
=> str4 = 'dxoyfyqudal oys' : <type 'str'>
==================================================
str2 += 'o'                                                            # STEP 163
ACTION: str2 += 'o' 
str2 = 'fk' : <type 'str'>
=> str2 = 'fko' : <type 'str'>
==================================================
str1 += 'p'                                                            # STEP 164
ACTION: str1 += 'p' 
str1 = 'xvuhxeduhdwzaf' : <type 'str'>
=> str1 = 'xvuhxeduhdwzafp' : <type 'str'>
==================================================
result = os0.path.lexists(path3)                                       # STEP 165
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
result = os0.path.lexists(path2)                                       # STEP 166
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
str4 += 'g'                                                            # STEP 167
ACTION: str4 += 'g' 
str4 = 'dxoyfyqudal oys' : <type 'str'>
=> str4 = 'dxoyfyqudal oysg' : <type 'str'>
==================================================
os0.symlink(path3,path3)                                               # STEP 168
ACTION: os0.symlink(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str4 += 'i'                                                            # STEP 169
ACTION: str4 += 'i' 
str4 = 'dxoyfyqudal oysg' : <type 'str'>
=> str4 = 'dxoyfyqudal oysgi' : <type 'str'>
==================================================
str1 += 'w'                                                            # STEP 170
ACTION: str1 += 'w' 
str1 = 'xvuhxeduhdwzafp' : <type 'str'>
=> str1 = 'xvuhxeduhdwzafpw' : <type 'str'>
==================================================
str4 += 'v'                                                            # STEP 171
ACTION: str4 += 'v' 
str4 = 'dxoyfyqudal oysgi' : <type 'str'>
=> str4 = 'dxoyfyqudal oysgiv' : <type 'str'>
==================================================
path2 += "/" + component1                                              # STEP 172
ACTION: path2 += "/" + component1 
component1 = 'lambda' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
str0 += 'i'                                                            # STEP 173
ACTION: str0 += 'i' 
str0 = 'nimgkvibljvrtdjieq' : <type 'str'>
=> str0 = 'nimgkvibljvrtdjieqi' : <type 'str'>
==================================================
path3 += "/" + component1                                              # STEP 174
ACTION: path3 += "/" + component1 
component1 = 'lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
str2 += 'n'                                                            # STEP 175
ACTION: str2 += 'n' 
str2 = 'fko' : <type 'str'>
=> str2 = 'fkon' : <type 'str'>
==================================================
os0.link(path3,path3)                                                  # STEP 176
ACTION: os0.link(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: os_REF0.link(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
stat4 = os0.stat(path3)                                                # STEP 177
ACTION: stat4 = os0.stat(path3) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda'
==================================================
str1 += 'g'                                                            # STEP 178
ACTION: str1 += 'g' 
str1 = 'xvuhxeduhdwzafpw' : <type 'str'>
=> str1 = 'xvuhxeduhdwzafpwg' : <type 'str'>
==================================================
str4 += 'i'                                                            # STEP 179
ACTION: str4 += 'i' 
str4 = 'dxoyfyqudal oysgiv' : <type 'str'>
=> str4 = 'dxoyfyqudal oysgivi' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_RDONLY)                                     # STEP 180
ACTION: fd1 = os0.open(path2, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda'
==================================================
os0.rmdir(path2)                                                       # STEP 181
ACTION: os0.rmdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: os_REF0.rmdir(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda'
==================================================
path1 = "/Volumes/ramdisk/test"                                        # STEP 182
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'f'                                                            # STEP 183
ACTION: str0 += 'f' 
str0 = 'nimgkvibljvrtdjieqi' : <type 'str'>
=> str0 = 'nimgkvibljvrtdjieqif' : <type 'str'>
==================================================
os0.mkdir(path3)                                                       # STEP 184
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102612390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Empty directory name
REFERENCE ACTION: os_REF0.mkdir(path3) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1022b8128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9599, in act264
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.613997936249 TOTAL RUNTIME
12 EXECUTED
2385 TOTAL TEST OPERATIONS
0.327121019363 TIME SPENT EXECUTING TEST OPERATIONS
0.0997741222382 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00111532211304 TIME SPENT CHECKING PROPERTIES
0.328236341476 TOTAL TIME SPENT RUNNING SUT
0.0355808734894 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
