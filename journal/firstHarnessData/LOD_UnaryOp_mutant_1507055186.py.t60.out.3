Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.66668.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (False) == (True) ',), <traceback object at 0x1022d5998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 29569, in act553
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 85 steps

SAVING TEST AS failure.66668.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "alpha"                                                     # STEP 0
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
component1 = "c"                                                         # STEP 1
ACTION: component1 = "c" 
component1 = None : <type 'NoneType'>
=> component1 = 'c' : <type 'str'>
==================================================
component4 = "delta"                                                     # STEP 2
ACTION: component4 = "delta" 
component4 = None : <type 'NoneType'>
=> component4 = 'delta' : <type 'str'>
==================================================
component3 = "c"                                                         # STEP 3
ACTION: component3 = "c" 
component3 = None : <type 'NoneType'>
=> component3 = 'c' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 4
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "b"                                                         # STEP 5
ACTION: component0 = "b" 
component0 = None : <type 'NoneType'>
=> component0 = 'b' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 6
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'b'                                                              # STEP 7
ACTION: str2 += 'b' 
str2 = '' : <type 'str'>
=> str2 = 'b' : <type 'str'>
==================================================
str2 += 's'                                                              # STEP 8
ACTION: str2 += 's' 
str2 = 'b' : <type 'str'>
=> str2 = 'bs' : <type 'str'>
==================================================
str2 += 'e'                                                              # STEP 9
ACTION: str2 += 'e' 
str2 = 'bs' : <type 'str'>
=> str2 = 'bse' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 10
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes1 += 1                                                             # STEP 11
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str2 += 'b'                                                             # STEP 12
ACTION: str2 += 'b' 
str2 = 'bse' : <type 'str'>
=> str2 = 'bseb' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 13
ACTION: str2 += 'p' 
str2 = 'bseb' : <type 'str'>
=> str2 = 'bsebp' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 14
ACTION: str2 += 'b' 
str2 = 'bsebp' : <type 'str'>
=> str2 = 'bsebpb' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 15
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 16
ACTION: str0 += 'r' 
str0 = '' : <type 'str'>
=> str0 = 'r' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 17
ACTION: str0 = "" 
str0 = 'r' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 18
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path4 += "/" + component2                                               # STEP 19
ACTION: path4 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
component2 = "lambda"                                                   # STEP 20
ACTION: component2 = "lambda" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'lambda' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 21
ACTION: str0 += 'd' 
str0 = '' : <type 'str'>
=> str0 = 'd' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 22
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 23
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str2 += " "                                                             # STEP 24
ACTION: str2 += " " 
str2 = 'bsebpb' : <type 'str'>
=> str2 = 'bsebpb ' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 25
ACTION: str2 += 'k' 
str2 = 'bsebpb ' : <type 'str'>
=> str2 = 'bsebpb k' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 26
ACTION: str1 += 'm' 
str1 = '' : <type 'str'>
=> str1 = 'm' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 27
ACTION: str1 += 'y' 
str1 = 'm' : <type 'str'>
=> str1 = 'my' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 28
ACTION: str1 += 'e' 
str1 = 'my' : <type 'str'>
=> str1 = 'mye' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 29
ACTION: str1 += 's' 
str1 = 'mye' : <type 'str'>
=> str1 = 'myes' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 30
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 31
ACTION: str0 += 'e' 
str0 = 'd' : <type 'str'>
=> str0 = 'de' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 32
ACTION: str1 = "" 
str1 = 'myes' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 33
ACTION: str1 += 'o' 
str1 = '' : <type 'str'>
=> str1 = 'o' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 34
ACTION: str0 += 'q' 
str0 = 'de' : <type 'str'>
=> str0 = 'deq' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 35
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str0 += 'a'                                                             # STEP 36
ACTION: str0 += 'a' 
str0 = 'deq' : <type 'str'>
=> str0 = 'deqa' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 37
ACTION: str1 += 'e' 
str1 = 'o' : <type 'str'>
=> str1 = 'oe' : <type 'str'>
==================================================
path4 += "/" + component4                                               # STEP 38
ACTION: path4 += "/" + component4 
component4 = 'delta' : <type 'str'>
path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/alpha/delta' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 39
ACTION: str2 += 't' 
str2 = 'bsebpb k' : <type 'str'>
=> str2 = 'bsebpb kt' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 40
ACTION: path4 += "/" + component1 
component1 = 'c' : <type 'str'>
path4 = '/Volumes/ramdisk/test/alpha/delta' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/alpha/delta/c' : <type 'str'>
==================================================
component1 = "b"                                                        # STEP 41
ACTION: component1 = "b" 
component1 = 'c' : <type 'str'>
=> component1 = 'b' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 42
ACTION: str2 += 'l' 
str2 = 'bsebpb kt' : <type 'str'>
=> str2 = 'bsebpb ktl' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 43
ACTION: str2 += 'z' 
str2 = 'bsebpb ktl' : <type 'str'>
=> str2 = 'bsebpb ktlz' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 44
ACTION: str0 += 's' 
str0 = 'deqa' : <type 'str'>
=> str0 = 'deqas' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 45
ACTION: str2 += 'a' 
str2 = 'bsebpb ktlz' : <type 'str'>
=> str2 = 'bsebpb ktlza' : <type 'str'>
==================================================
component4 = "f"                                                        # STEP 46
ACTION: component4 = "f" 
component4 = 'delta' : <type 'str'>
=> component4 = 'f' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 47
ACTION: str1 += 'p' 
str1 = 'oe' : <type 'str'>
=> str1 = 'oep' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 48
ACTION: bytes1 = 0 
bytes1 = 1 : <type 'int'>
=> bytes1 = 0 : <type 'int'>
==================================================
str1 += 'u'                                                             # STEP 49
ACTION: str1 += 'u' 
str1 = 'oep' : <type 'str'>
=> str1 = 'oepu' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 50
ACTION: str2 += 'b' 
str2 = 'bsebpb ktlza' : <type 'str'>
=> str2 = 'bsebpb ktlzab' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 51
ACTION: str1 += 'e' 
str1 = 'oepu' : <type 'str'>
=> str1 = 'oepue' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 52
ACTION: str1 += 'l' 
str1 = 'oepue' : <type 'str'>
=> str1 = 'oepuel' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 53
ACTION: bytes0 = 0 
bytes0 = 1 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
str0 += 'p'                                                             # STEP 54
ACTION: str0 += 'p' 
str0 = 'deqas' : <type 'str'>
=> str0 = 'deqasp' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 55
ACTION: str0 += 'y' 
str0 = 'deqasp' : <type 'str'>
=> str0 = 'deqaspy' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 56
ACTION: str0 += " " 
str0 = 'deqaspy' : <type 'str'>
=> str0 = 'deqaspy ' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 57
ACTION: str0 += 'k' 
str0 = 'deqaspy ' : <type 'str'>
=> str0 = 'deqaspy k' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 58
ACTION: str1 += 'g' 
str1 = 'oepuel' : <type 'str'>
=> str1 = 'oepuelg' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 59
ACTION: str1 += 'a' 
str1 = 'oepuelg' : <type 'str'>
=> str1 = 'oepuelga' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 60
ACTION: str2 += 'p' 
str2 = 'bsebpb ktlzab' : <type 'str'>
=> str2 = 'bsebpb ktlzabp' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 61
ACTION: str2 += 'l' 
str2 = 'bsebpb ktlzabp' : <type 'str'>
=> str2 = 'bsebpb ktlzabpl' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 62
ACTION: str0 += 's' 
str0 = 'deqaspy k' : <type 'str'>
=> str0 = 'deqaspy ks' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 63
ACTION: str1 += 'r' 
str1 = 'oepuelga' : <type 'str'>
=> str1 = 'oepuelgar' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 64
ACTION: str2 += 'j' 
str2 = 'bsebpb ktlzabpl' : <type 'str'>
=> str2 = 'bsebpb ktlzabplj' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 65
ACTION: str2 += 'z' 
str2 = 'bsebpb ktlzabplj' : <type 'str'>
=> str2 = 'bsebpb ktlzabpljz' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 66
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 67
ACTION: str1 += 'l' 
str1 = 'oepuelgar' : <type 'str'>
=> str1 = 'oepuelgarl' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 68
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str1 += 'p'                                                             # STEP 69
ACTION: str1 += 'p' 
str1 = 'oepuelgarl' : <type 'str'>
=> str1 = 'oepuelgarlp' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 70
ACTION: str0 += 'e' 
str0 = 'deqaspy ks' : <type 'str'>
=> str0 = 'deqaspy kse' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 71
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/alpha/delta/c' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 72
ACTION: str1 += 'b' 
str1 = 'oepuelgarlp' : <type 'str'>
=> str1 = 'oepuelgarlpb' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 73
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102211090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str0 += 'r'                                                             # STEP 74
ACTION: str0 += 'r' 
str0 = 'deqaspy kse' : <type 'str'>
=> str0 = 'deqaspy kser' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 75
ACTION: str1 += 'i' 
str1 = 'oepuelgarlpb' : <type 'str'>
=> str1 = 'oepuelgarlpbi' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 76
ACTION: path0 += "/" + component0 
component0 = 'b' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
os0.mkdir(path4)                                                        # STEP 77
ACTION: os0.mkdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102211090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = os0.path.lexists(path1)                                        # STEP 78
ACTION: result = os0.path.lexists(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102211090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path1) 
==================================================
os0.symlink(path4,path0)                                                # STEP 79
ACTION: os0.symlink(path4,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102211090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path4,path0) 
==================================================
str2 += 'k'                                                             # STEP 80
ACTION: str2 += 'k' 
str2 = 'bsebpb ktlzabpljz' : <type 'str'>
=> str2 = 'bsebpb ktlzabpljzk' : <type 'str'>
==================================================
os0.symlink(path4,path0)                                                # STEP 81
ACTION: os0.symlink(path4,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102211090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/b'
REFERENCE ACTION: os_REF0.symlink(path4,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.abspath(path0)                                        # STEP 82
ACTION: result = os0.path.abspath(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102211090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path0) 
==================================================
result = os0.path.dirname(path1)                                        # STEP 83
ACTION: result = os0.path.dirname(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102211090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path1) 
==================================================
result = os0.path.exists(path0)                                         # STEP 84
ACTION: result = os0.path.exists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102211090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path0) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (False) == (True) ',), <traceback object at 0x103bd2bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 29569, in act553
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
0.0866730213165 TOTAL RUNTIME
2 EXECUTED
285 TOTAL TEST OPERATIONS
0.0428559780121 TIME SPENT EXECUTING TEST OPERATIONS
0.0140447616577 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00014066696167 TIME SPENT CHECKING PROPERTIES
0.0429966449738 TOTAL TIME SPENT RUNNING SUT
0.00630307197571 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
