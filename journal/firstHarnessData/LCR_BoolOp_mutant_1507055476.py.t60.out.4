Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.53805.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101fb5098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 10771, in act283
    assert (type(raised) == type(refRaised))
Original test has 51 steps

SAVING TEST AS failure.53805.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "gamma"                                                     # STEP 0
ACTION: component0 = "gamma" 
component0 = None : <type 'NoneType'>
=> component0 = 'gamma' : <type 'str'>
==================================================
component3 = "c"                                                         # STEP 1
ACTION: component3 = "c" 
component3 = None : <type 'NoneType'>
=> component3 = 'c' : <type 'str'>
==================================================
component4 = "delta"                                                     # STEP 2
ACTION: component4 = "delta" 
component4 = None : <type 'NoneType'>
=> component4 = 'delta' : <type 'str'>
==================================================
component2 = "omega"                                                     # STEP 3
ACTION: component2 = "omega" 
component2 = None : <type 'NoneType'>
=> component2 = 'omega' : <type 'str'>
==================================================
component1 = "lambda"                                                    # STEP 4
ACTION: component1 = "lambda" 
component1 = None : <type 'NoneType'>
=> component1 = 'lambda' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 5
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 7
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 9
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 10
ACTION: path4 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
component0 = "c"                                                        # STEP 11
ACTION: component0 = "c" 
component0 = 'gamma' : <type 'str'>
=> component0 = 'c' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 12
ACTION: path0 += "/" + component2 
component2 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
component2 = "f"                                                        # STEP 13
ACTION: component2 = "f" 
component2 = 'omega' : <type 'str'>
=> component2 = 'f' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 14
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
path0 += "/" + component0                                               # STEP 15
ACTION: path0 += "/" + component0 
component0 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/omega/c' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 16
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/omega/c' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "c"                                                        # STEP 17
ACTION: component0 = "c" 
component0 = 'c' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 18
ACTION: path0 += "/" + component3 
component3 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 19
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 20
ACTION: path2 += "/" + component0 
component0 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 21
ACTION: component0 = "omega" 
component0 = 'c' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 22
ACTION: path0 += "/" + component1 
component1 = 'lambda' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
component1 = "b"                                                        # STEP 23
ACTION: component1 = "b" 
component1 = 'lambda' : <type 'str'>
=> component1 = 'b' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 24
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 25
ACTION: path2 += "/" + component4 
component4 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/delta' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 26
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "lambda"                                                   # STEP 27
ACTION: component4 = "lambda" 
component4 = 'delta' : <type 'str'>
=> component4 = 'lambda' : <type 'str'>
==================================================
component3 = "e"                                                        # STEP 28
ACTION: component3 = "e" 
component3 = 'c' : <type 'str'>
=> component3 = 'e' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 29
ACTION: path2 += "/" + component4 
component4 = 'lambda' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c/delta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/delta/lambda' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 30
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component4 = "delta"                                                    # STEP 31
ACTION: component4 = "delta" 
component4 = 'lambda' : <type 'str'>
=> component4 = 'delta' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 32
ACTION: str4 += 's' 
str4 = '' : <type 'str'>
=> str4 = 's' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 33
ACTION: path0 += "/" + component1 
component1 = 'b' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 34
ACTION: path0 += "/" + component1 
component1 = 'b' : <type 'str'>
path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/b/b' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 35
ACTION: str4 += 'p' 
str4 = 's' : <type 'str'>
=> str4 = 'sp' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 36
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/c/delta/lambda' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component1 = "f"                                                        # STEP 37
ACTION: component1 = "f" 
component1 = 'b' : <type 'str'>
=> component1 = 'f' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 38
ACTION: path2 += "/" + component3 
component3 = 'e' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 39
ACTION: str4 += 'n' 
str4 = 'sp' : <type 'str'>
=> str4 = 'spn' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 40
ACTION: path0 += "/" + component0 
component0 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test/b/b' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/b/b/omega' : <type 'str'>
==================================================
component0 = "phi"                                                      # STEP 41
ACTION: component0 = "phi" 
component0 = 'omega' : <type 'str'>
=> component0 = 'phi' : <type 'str'>
==================================================
component3 = "d"                                                        # STEP 42
ACTION: component3 = "d" 
component3 = 'e' : <type 'str'>
=> component3 = 'd' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 43
ACTION: path0 += "/" + component4 
component4 = 'delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/b/b/omega' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/b/b/omega/delta' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 44
ACTION: str4 += 'o' 
str4 = 'spn' : <type 'str'>
=> str4 = 'spno' : <type 'str'>
==================================================
component4 = "a"                                                        # STEP 45
ACTION: component4 = "a" 
component4 = 'delta' : <type 'str'>
=> component4 = 'a' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 46
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 47
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b11110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str3 = ""                                                               # STEP 48
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
os0.rmdir(path4)                                                        # STEP 49
ACTION: os0.rmdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b11110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '//Volumes/ramdisk/test/gamma'
REFERENCE ACTION: os_REF0.rmdir(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma'
==================================================
os0.symlink(path2,path2)                                                # STEP 50
ACTION: os0.symlink(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b11110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '//Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path2,path2) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102b836c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 10771, in act283
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.033579826355 TOTAL RUNTIME
1 EXECUTED
51 TOTAL TEST OPERATIONS
0.00220894813538 TIME SPENT EXECUTING TEST OPERATIONS
0.00436472892761 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.16960906982e-05 TIME SPENT CHECKING PROPERTIES
0.00223064422607 TOTAL TIME SPENT RUNNING SUT
0.00335717201233 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
