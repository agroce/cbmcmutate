Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.36394.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("'FakeOsModule' object is not iterable",), <traceback object at 0x1042b03f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 24, in newFakeOS
    fakeOS = pyfakefs.fake_filesystem.FakeOsModule(fs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1717, in __init__
    self.path = FakePathModule(self.filesystem, self)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1464, in __init__
    self._os_path.os, self.os = os_module
Original test has 19 steps

SAVING TEST AS failure.36394.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str4 = ""                                                                # STEP 0
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component1 = "g"                                                         # STEP 1
ACTION: component1 = "g" 
component1 = None : <type 'NoneType'>
=> component1 = 'g' : <type 'str'>
==================================================
component0 = "e"                                                         # STEP 2
ACTION: component0 = "e" 
component0 = None : <type 'NoneType'>
=> component0 = 'e' : <type 'str'>
==================================================
str4 += 'w'                                                              # STEP 3
ACTION: str4 += 'w' 
str4 = '' : <type 'str'>
=> str4 = 'w' : <type 'str'>
==================================================
component3 = "e"                                                         # STEP 4
ACTION: component3 = "e" 
component3 = None : <type 'NoneType'>
=> component3 = 'e' : <type 'str'>
==================================================
str4 += " "                                                              # STEP 5
ACTION: str4 += " " 
str4 = 'w' : <type 'str'>
=> str4 = 'w ' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 6
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component4 = "c"                                                         # STEP 7
ACTION: component4 = "c" 
component4 = None : <type 'NoneType'>
=> component4 = 'c' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 8
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component2 = "f"                                                         # STEP 9
ACTION: component2 = "f" 
component2 = None : <type 'NoneType'>
=> component2 = 'f' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 10
ACTION: str4 = "" 
str4 = 'w ' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 11
ACTION: str4 += 'v' 
str4 = '' : <type 'str'>
=> str4 = 'v' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 12
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str3 += 'u'                                                             # STEP 13
ACTION: str3 += 'u' 
str3 = '' : <type 'str'>
=> str3 = 'u' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 14
ACTION: str4 += 'y' 
str4 = 'v' : <type 'str'>
=> str4 = 'vy' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 15
ACTION: str3 += 's' 
str3 = 'u' : <type 'str'>
=> str3 = 'us' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 16
ACTION: str3 += 'h' 
str3 = 'us' : <type 'str'>
=> str3 = 'ush' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 17
ACTION: str4 += 'r' 
str4 = 'vy' : <type 'str'>
=> str4 = 'vyr' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 18
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> 'FakeOsModule' object is not iterable
ERROR: (<type 'exceptions.TypeError'>, TypeError("'FakeOsModule' object is not iterable",), <traceback object at 0x103f49ef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 24, in newFakeOS
    fakeOS = pyfakefs.fake_filesystem.FakeOsModule(fs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1717, in __init__
    self.path = FakePathModule(self.filesystem, self)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1464, in __init__
    self._os_path.os, self.os = os_module
STOPPING TESTING DUE TO FAILED TEST
0.0212481021881 TOTAL RUNTIME
1 EXECUTED
19 TOTAL TEST OPERATIONS
0.000882863998413 TIME SPENT EXECUTING TEST OPERATIONS
0.00127530097961 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
9.05990600586e-06 TIME SPENT CHECKING PROPERTIES
0.000891923904419 TOTAL TIME SPENT RUNNING SUT
0.00418996810913 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
