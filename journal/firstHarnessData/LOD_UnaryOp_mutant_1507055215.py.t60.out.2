Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.49882.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102cd21b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9599, in act264
    assert (type(raised) == type(refRaised))
Original test has 37 steps

SAVING TEST AS failure.49882.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes3 = 0                                                               # STEP 0
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component1 = "gamma"                                                     # STEP 1
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
component0 = "a"                                                         # STEP 2
ACTION: component0 = "a" 
component0 = None : <type 'NoneType'>
=> component0 = 'a' : <type 'str'>
==================================================
component4 = "delta"                                                     # STEP 3
ACTION: component4 = "delta" 
component4 = None : <type 'NoneType'>
=> component4 = 'delta' : <type 'str'>
==================================================
component2 = "g"                                                         # STEP 4
ACTION: component2 = "g" 
component2 = None : <type 'NoneType'>
=> component2 = 'g' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 5
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component3 = "lambda"                                                    # STEP 6
ACTION: component3 = "lambda" 
component3 = None : <type 'NoneType'>
=> component3 = 'lambda' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'c'                                                              # STEP 8
ACTION: str3 += 'c' 
str3 = '' : <type 'str'>
=> str3 = 'c' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 10
ACTION: str3 += 'g' 
str3 = 'c' : <type 'str'>
=> str3 = 'cg' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 11
ACTION: str3 += 'y' 
str3 = 'cg' : <type 'str'>
=> str3 = 'cgy' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 12
ACTION: str3 += 'r' 
str3 = 'cgy' : <type 'str'>
=> str3 = 'cgyr' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 13
ACTION: str3 += 'a' 
str3 = 'cgyr' : <type 'str'>
=> str3 = 'cgyra' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 14
ACTION: path3 += "/" + component2 
component2 = 'g' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 15
ACTION: path3 += "/" + component0 
component0 = 'a' : <type 'str'>
path3 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g/a' : <type 'str'>
==================================================
component2 = "lambda"                                                   # STEP 16
ACTION: component2 = "lambda" 
component2 = 'g' : <type 'str'>
=> component2 = 'lambda' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/g/a' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 18
ACTION: str3 += 'x' 
str3 = 'cgyra' : <type 'str'>
=> str3 = 'cgyrax' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 19
ACTION: path3 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 20
ACTION: path3 += "/" + component0 
component0 = 'a' : <type 'str'>
path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma/a' : <type 'str'>
==================================================
component0 = "gamma"                                                    # STEP 21
ACTION: component0 = "gamma" 
component0 = 'a' : <type 'str'>
=> component0 = 'gamma' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 22
ACTION: str3 += 't' 
str3 = 'cgyrax' : <type 'str'>
=> str3 = 'cgyraxt' : <type 'str'>
==================================================
component1 = "g"                                                        # STEP 23
ACTION: component1 = "g" 
component1 = 'gamma' : <type 'str'>
=> component1 = 'g' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 24
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/gamma/a' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 25
ACTION: str3 += 'y' 
str3 = 'cgyraxt' : <type 'str'>
=> str3 = 'cgyraxty' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 26
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
bytes1 = 0                                                              # STEP 27
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 28
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102f53f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str3 += 'k'                                                             # STEP 29
ACTION: str3 += 'k' 
str3 = 'cgyraxty' : <type 'str'>
=> str3 = 'cgyraxtyk' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 30
ACTION: path3 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
result = os0.readlink(path3)                                            # STEP 31
ACTION: result = os0.readlink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102f53f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake path does not exist: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: result_REF = os_REF0.readlink(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda'
==================================================
str3 += 'v'                                                             # STEP 32
ACTION: str3 += 'v' 
str3 = 'cgyraxtyk' : <type 'str'>
=> str3 = 'cgyraxtykv' : <type 'str'>
==================================================
stat2 = os0.stat(path3)                                                 # STEP 33
ACTION: stat2 = os0.stat(path3) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102f53f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda'
==================================================
str3 += 'k'                                                             # STEP 34
ACTION: str3 += 'k' 
str3 = 'cgyraxtykv' : <type 'str'>
=> str3 = 'cgyraxtykvk' : <type 'str'>
==================================================
fd1 = os0.open(path3, os.O_RDWR)                                        # STEP 35
ACTION: fd1 = os0.open(path3, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102f53f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda'
==================================================
os0.mkdir(path3)                                                        # STEP 36
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102f53f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Empty directory name
REFERENCE ACTION: os_REF0.mkdir(path3) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102f8eab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9599, in act264
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.467643022537 TOTAL RUNTIME
7 EXECUTED
1237 TOTAL TEST OPERATIONS
0.368800640106 TIME SPENT EXECUTING TEST OPERATIONS
0.0542306900024 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000590562820435 TIME SPENT CHECKING PROPERTIES
0.369391202927 TOTAL TIME SPENT RUNNING SUT
0.0190939903259 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
