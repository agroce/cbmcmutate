Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.56595.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10393e758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21411, in act433
    assert (type(raised) == type(refRaised))
Original test has 31 steps

SAVING TEST AS failure.56595.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "lambda"                                                    # STEP 0
ACTION: component2 = "lambda" 
component2 = None : <type 'NoneType'>
=> component2 = 'lambda' : <type 'str'>
==================================================
component0 = "a"                                                         # STEP 1
ACTION: component0 = "a" 
component0 = None : <type 'NoneType'>
=> component0 = 'a' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "epsilon"                                                   # STEP 3
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
component3 = "beta"                                                      # STEP 4
ACTION: component3 = "beta" 
component3 = None : <type 'NoneType'>
=> component3 = 'beta' : <type 'str'>
==================================================
component1 = "a"                                                         # STEP 5
ACTION: component1 = "a" 
component1 = None : <type 'NoneType'>
=> component1 = 'a' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 6
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'p'                                                              # STEP 7
ACTION: str0 += 'p' 
str0 = '' : <type 'str'>
=> str0 = 'p' : <type 'str'>
==================================================
str0 += 'h'                                                              # STEP 8
ACTION: str0 += 'h' 
str0 = 'p' : <type 'str'>
=> str0 = 'ph' : <type 'str'>
==================================================
str0 += 'f'                                                              # STEP 9
ACTION: str0 += 'f' 
str0 = 'ph' : <type 'str'>
=> str0 = 'phf' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 10
ACTION: str0 += 'o' 
str0 = 'phf' : <type 'str'>
=> str0 = 'phfo' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 11
ACTION: str0 += 'l' 
str0 = 'phfo' : <type 'str'>
=> str0 = 'phfol' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 12
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103f25310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 14
ACTION: path2 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                         # STEP 15
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103f25310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
str0 += 'x'                                                             # STEP 16
ACTION: str0 += 'x' 
str0 = 'phfol' : <type 'str'>
=> str0 = 'phfolx' : <type 'str'>
==================================================
os0.mkdir(path2)                                                        # STEP 17
ACTION: os0.mkdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103f25310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: os_REF0.mkdir(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/epsilon'
==================================================
os0.remove(path2)                                                       # STEP 18
ACTION: os0.remove(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103f25310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.remove(path2) 
==================================================
result = os0.readlink(path4)                                            # STEP 19
ACTION: result = os0.readlink(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103f25310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
bytes3 = 0                                                              # STEP 20
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component4 = "c"                                                        # STEP 21
ACTION: component4 = "c" 
component4 = 'epsilon' : <type 'str'>
=> component4 = 'c' : <type 'str'>
==================================================
result = os0.path.getsize(path2)                                        # STEP 22
ACTION: result = os0.path.getsize(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103f25310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon'
==================================================
str0 += 'c'                                                             # STEP 23
ACTION: str0 += 'c' 
str0 = 'phfolx' : <type 'str'>
=> str0 = 'phfolxc' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 24
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
result = os0.path.exists(path4)                                         # STEP 25
ACTION: result = os0.path.exists(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103f25310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path4) 
==================================================
path2 += "/" + component3                                               # STEP 26
ACTION: path2 += "/" + component3 
component3 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon/beta' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 27
ACTION: path2 += "/" + component0 
component0 = 'a' : <type 'str'>
path2 = '/Volumes/ramdisk/test/epsilon/beta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon/beta/a' : <type 'str'>
==================================================
os0.link(path2,path2)                                                   # STEP 28
ACTION: os0.link(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103f25310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon/beta/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/epsilon/beta'
REFERENCE ACTION: os_REF0.link(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
stat1 = os0.stat(path2)                                                 # STEP 29
ACTION: stat1 = os0.stat(path2) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103f25310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon/beta/a' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/epsilon/beta/a'
REFERENCE ACTION: stat_REF1 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon/beta/a'
==================================================
stat0 = os0.fstat(fd0)                                                  # STEP 30
ACTION: stat0 = os0.fstat(fd0) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103f25310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor: 1
REFERENCE ACTION: stat_REF0 = os_REF0.fstat(fd_REF0) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=11181654, st_dev=16777224, st_nlink=0, st_uid=501, st_gid=20, st_size=0, st_atime=1507303052, st_mtime=1507303052, st_ctime=1507303052) : <type 'posix.stat_result'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1054dfb48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21411, in act433
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0337319374084 TOTAL RUNTIME
1 EXECUTED
31 TOTAL TEST OPERATIONS
0.00516128540039 TIME SPENT EXECUTING TEST OPERATIONS
0.003014087677 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.21729278564e-05 TIME SPENT CHECKING PROPERTIES
0.00518345832825 TOTAL TIME SPENT RUNNING SUT
0.00374817848206 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
