Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.57924.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x100edb200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 16749, in act369
    assert (type(raised) == type(refRaised))
Original test has 33 steps

SAVING TEST AS failure.57924.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "omega"                                                     # STEP 0
ACTION: component2 = "omega" 
component2 = None : <type 'NoneType'>
=> component2 = 'omega' : <type 'str'>
==================================================
component0 = "h"                                                         # STEP 1
ACTION: component0 = "h" 
component0 = None : <type 'NoneType'>
=> component0 = 'h' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "epsilon"                                                   # STEP 3
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 4
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component1 = "delta"                                                     # STEP 5
ACTION: component1 = "delta" 
component1 = None : <type 'NoneType'>
=> component1 = 'delta' : <type 'str'>
==================================================
component3 = "epsilon"                                                   # STEP 6
ACTION: component3 = "epsilon" 
component3 = None : <type 'NoneType'>
=> component3 = 'epsilon' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 7
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path0 += "/" + component1                                                # STEP 8
ACTION: path0 += "/" + component1 
component1 = 'delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 9
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component1 = "a"                                                        # STEP 10
ACTION: component1 = "a" 
component1 = 'delta' : <type 'str'>
=> component1 = 'a' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 11
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 12
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
bytes2 += 1                                                             # STEP 13
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
bytes4 += 1                                                             # STEP 14
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str4 += 'l'                                                             # STEP 15
ACTION: str4 += 'l' 
str4 = '' : <type 'str'>
=> str4 = 'l' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 16
ACTION: str4 += 'p' 
str4 = 'l' : <type 'str'>
=> str4 = 'lp' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 17
ACTION: str4 += 'i' 
str4 = 'lp' : <type 'str'>
=> str4 = 'lpi' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 18
ACTION: str4 += 'v' 
str4 = 'lpi' : <type 'str'>
=> str4 = 'lpiv' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 19
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 20
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 21
ACTION: str4 += 'm' 
str4 = 'lpiv' : <type 'str'>
=> str4 = 'lpivm' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 22
ACTION: path3 += "/" + component1 
component1 = 'a' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 23
ACTION: str4 += 'f' 
str4 = 'lpivm' : <type 'str'>
=> str4 = 'lpivmf' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 24
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str4 += 'k'                                                             # STEP 25
ACTION: str4 += 'k' 
str4 = 'lpivmf' : <type 'str'>
=> str4 = 'lpivmfk' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 26
ACTION: str4 += 'g' 
str4 = 'lpivmfk' : <type 'str'>
=> str4 = 'lpivmfkg' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 27
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 28
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102392c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
stat1 = os0.lstat(path3)                                                # STEP 29
ACTION: stat1 = os0.lstat(path3) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102392c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/a'
==================================================
str4 += 't'                                                             # STEP 30
ACTION: str4 += 't' 
str4 = 'lpivmfkg' : <type 'str'>
=> str4 = 'lpivmfkgt' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 31
ACTION: str4 += 'g' 
str4 = 'lpivmfkgt' : <type 'str'>
=> str4 = 'lpivmfkgtg' : <type 'str'>
==================================================
fd1 = os0.open(path3, os.O_CREAT)                                       # STEP 32
ACTION: fd1 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102392c90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT) 
=> fd_REF1 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10264a1b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 16749, in act369
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0540299415588 TOTAL RUNTIME
2 EXECUTED
233 TOTAL TEST OPERATIONS
0.00616979598999 TIME SPENT EXECUTING TEST OPERATIONS
0.0174908638 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000121593475342 TIME SPENT CHECKING PROPERTIES
0.00629138946533 TOTAL TIME SPENT RUNNING SUT
0.00680088996887 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
