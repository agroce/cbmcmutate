Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.64586.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103cbc5a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 13937, in act331
    assert (type(raised) == type(refRaised))
Original test has 67 steps

SAVING TEST AS failure.64586.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "g"                                                         # STEP 0
ACTION: component3 = "g" 
component3 = None : <type 'NoneType'>
=> component3 = 'g' : <type 'str'>
==================================================
component1 = "alpha"                                                     # STEP 1
ACTION: component1 = "alpha" 
component1 = None : <type 'NoneType'>
=> component1 = 'alpha' : <type 'str'>
==================================================
component2 = "b"                                                         # STEP 2
ACTION: component2 = "b" 
component2 = None : <type 'NoneType'>
=> component2 = 'b' : <type 'str'>
==================================================
component0 = "phi"                                                       # STEP 3
ACTION: component0 = "phi" 
component0 = None : <type 'NoneType'>
=> component0 = 'phi' : <type 'str'>
==================================================
component4 = "lambda"                                                    # STEP 4
ACTION: component4 = "lambda" 
component4 = None : <type 'NoneType'>
=> component4 = 'lambda' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 5
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 6
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 += 't'                                                              # STEP 7
ACTION: str3 += 't' 
str3 = '' : <type 'str'>
=> str3 = 't' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'q'                                                              # STEP 9
ACTION: str3 += 'q' 
str3 = 't' : <type 'str'>
=> str3 = 'tq' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 10
ACTION: str3 += 'j' 
str3 = 'tq' : <type 'str'>
=> str3 = 'tqj' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 11
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
os0.mkdir(path0)                                                        # STEP 12
ACTION: os0.mkdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = sorted(os0.listdir(path0))                                     # STEP 13
ACTION: result = sorted(os0.listdir(path0)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path0)) 
==================================================
str3 += 'e'                                                             # STEP 14
ACTION: str3 += 'e' 
str3 = 'tqj' : <type 'str'>
=> str3 = 'tqje' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 15
ACTION: str3 += 'o' 
str3 = 'tqje' : <type 'str'>
=> str3 = 'tqjeo' : <type 'str'>
==================================================
result = os0.path.abspath(path0)                                        # STEP 16
ACTION: result = os0.path.abspath(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path0) 
==================================================
os0.symlink(path0,path0)                                                # STEP 17
ACTION: os0.symlink(path0,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path0,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.isabs(path0)                                          # STEP 18
ACTION: result = os0.path.isabs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path0) 
==================================================
bytes1 = 0                                                              # STEP 19
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes3 += 1                                                             # STEP 20
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str3 += 'o'                                                             # STEP 21
ACTION: str3 += 'o' 
str3 = 'tqjeo' : <type 'str'>
=> str3 = 'tqjeoo' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 22
ACTION: bytes3 = 0 
bytes3 = 1 : <type 'int'>
=> bytes3 = 0 : <type 'int'>
==================================================
path0 += "/" + component1                                               # STEP 23
ACTION: path0 += "/" + component1 
component1 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
os0.symlink(path0,path0)                                                # STEP 24
ACTION: os0.symlink(path0,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path0,path0) 
==================================================
str3 += 'f'                                                             # STEP 25
ACTION: str3 += 'f' 
str3 = 'tqjeoo' : <type 'str'>
=> str3 = 'tqjeoof' : <type 'str'>
==================================================
result = os0.path.isabs(path0)                                          # STEP 26
ACTION: result = os0.path.isabs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path0) 
==================================================
stat4 = os0.stat(path0)                                                 # STEP 27
ACTION: stat4 = os0.stat(path0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/alpha'
==================================================
str3 += 'l'                                                             # STEP 28
ACTION: str3 += 'l' 
str3 = 'tqjeoof' : <type 'str'>
=> str3 = 'tqjeoofl' : <type 'str'>
==================================================
fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 29
ACTION: fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/alpha'
==================================================
str3 += 'y'                                                             # STEP 30
ACTION: str3 += 'y' 
str3 = 'tqjeoofl' : <type 'str'>
=> str3 = 'tqjeoofly' : <type 'str'>
==================================================
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 31
ACTION: fd0 = os0.open(path0, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path0, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/alpha'
==================================================
result = os0.path.isdir(path0)                                          # STEP 32
ACTION: result = os0.path.isdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path0) 
==================================================
stat4 = os0.lstat(path0)                                                # STEP 33
ACTION: stat4 = os0.lstat(path0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1023d98d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path0) 
=> stat_REF4 = posix.stat_result(st_mode=41453, st_ino=20762986, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=27, st_atime=1507438055, st_mtime=1507438055, st_ctime=1507438055) : <type 'posix.stat_result'>
==================================================
fd1 = os0.open(path0, os.O_RDWR)                                        # STEP 34
ACTION: fd1 = os0.open(path0, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/alpha'
==================================================
str3 += 'k'                                                             # STEP 35
ACTION: str3 += 'k' 
str3 = 'tqjeoofly' : <type 'str'>
=> str3 = 'tqjeooflyk' : <type 'str'>
==================================================
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 36
ACTION: fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/alpha'
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 37
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = stat4.st_size                                                  # STEP 38
ACTION: result = stat4.st_size 
stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1023d98d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF4 = posix.stat_result(st_mode=41453, st_ino=20762986, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=27, st_atime=1507438055, st_mtime=1507438055, st_ctime=1507438055) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF4.st_size 
==================================================
result = os0.path.exists(path0)                                         # STEP 39
ACTION: result = os0.path.exists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path0) 
==================================================
component1 = "a"                                                        # STEP 40
ACTION: component1 = "a" 
component1 = 'alpha' : <type 'str'>
=> component1 = 'a' : <type 'str'>
==================================================
result = os0.path.isfile(path0)                                         # STEP 41
ACTION: result = os0.path.isfile(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path0) 
==================================================
result = os0.path.islink(path0)                                         # STEP 42
ACTION: result = os0.path.islink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path0) 
==================================================
str3 += 'a'                                                             # STEP 43
ACTION: str3 += 'a' 
str3 = 'tqjeooflyk' : <type 'str'>
=> str3 = 'tqjeooflyka' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 44
ACTION: str3 += 'q' 
str3 = 'tqjeooflyka' : <type 'str'>
=> str3 = 'tqjeooflykaq' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 45
ACTION: str3 += 'k' 
str3 = 'tqjeooflykaq' : <type 'str'>
=> str3 = 'tqjeooflykaqk' : <type 'str'>
==================================================
os0.mkdir(path0)                                                        # STEP 46
ACTION: os0.mkdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
str3 += 's'                                                             # STEP 47
ACTION: str3 += 's' 
str3 = 'tqjeooflykaqk' : <type 'str'>
=> str3 = 'tqjeooflykaqks' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 48
ACTION: str3 += 'l' 
str3 = 'tqjeooflykaqks' : <type 'str'>
=> str3 = 'tqjeooflykaqksl' : <type 'str'>
==================================================
os0.mkdir(path0)                                                        # STEP 49
ACTION: os0.mkdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
str3 += 'f'                                                             # STEP 50
ACTION: str3 += 'f' 
str3 = 'tqjeooflykaqksl' : <type 'str'>
=> str3 = 'tqjeooflykaqkslf' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 51
ACTION: str3 += 't' 
str3 = 'tqjeooflykaqkslf' : <type 'str'>
=> str3 = 'tqjeooflykaqkslft' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 52
ACTION: str3 += 't' 
str3 = 'tqjeooflykaqkslft' : <type 'str'>
=> str3 = 'tqjeooflykaqkslftt' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 53
ACTION: str3 += 's' 
str3 = 'tqjeooflykaqkslftt' : <type 'str'>
=> str3 = 'tqjeooflykaqkslftts' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 54
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 55
ACTION: str3 += 'w' 
str3 = 'tqjeooflykaqkslftts' : <type 'str'>
=> str3 = 'tqjeooflykaqkslfttsw' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 56
ACTION: str2 += 'e' 
str2 = '' : <type 'str'>
=> str2 = 'e' : <type 'str'>
==================================================
result = os0.path.isabs(path0)                                          # STEP 57
ACTION: result = os0.path.isabs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path0) 
==================================================
result = stat4.st_nlink                                                 # STEP 58
ACTION: result = stat4.st_nlink 
stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1023d98d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF4 = posix.stat_result(st_mode=41453, st_ino=20762986, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=27, st_atime=1507438055, st_mtime=1507438055, st_ctime=1507438055) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF4.st_nlink 
==================================================
str4 = ""                                                               # STEP 59
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 60
ACTION: str3 += 'o' 
str3 = 'tqjeooflykaqkslfttsw' : <type 'str'>
=> str3 = 'tqjeooflykaqkslfttswo' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 61
ACTION: str2 += 'h' 
str2 = 'e' : <type 'str'>
=> str2 = 'eh' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 62
ACTION: str4 += 'b' 
str4 = '' : <type 'str'>
=> str4 = 'b' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 63
ACTION: path0 += "/" + component4 
component4 = 'lambda' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 64
ACTION: str3 += 'v' 
str3 = 'tqjeooflykaqkslfttswo' : <type 'str'>
=> str3 = 'tqjeooflykaqkslfttswov' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 65
ACTION: str4 += 'w' 
str4 = 'b' : <type 'str'>
=> str4 = 'bw' : <type 'str'>
==================================================
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 66
ACTION: fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103986f90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF0 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101c7b368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 13937, in act331
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.116814851761 TOTAL RUNTIME
3 EXECUTED
467 TOTAL TEST OPERATIONS
0.0296320915222 TIME SPENT EXECUTING TEST OPERATIONS
0.0296132564545 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000247955322266 TIME SPENT CHECKING PROPERTIES
0.0298800468445 TOTAL TIME SPENT RUNNING SUT
0.0161428451538 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
