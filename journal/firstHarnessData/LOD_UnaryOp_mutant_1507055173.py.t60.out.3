Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.55498.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (/Volumes/ramdisk/test/c) ',), <traceback object at 0x1006c3320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 32104, in act595
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 90 steps

SAVING TEST AS failure.55498.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "d"                                                         # STEP 0
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
component1 = "phi"                                                       # STEP 1
ACTION: component1 = "phi" 
component1 = None : <type 'NoneType'>
=> component1 = 'phi' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "phi"                                                       # STEP 3
ACTION: component2 = "phi" 
component2 = None : <type 'NoneType'>
=> component2 = 'phi' : <type 'str'>
==================================================
component3 = "c"                                                         # STEP 4
ACTION: component3 = "c" 
component3 = None : <type 'NoneType'>
=> component3 = 'c' : <type 'str'>
==================================================
component4 = "epsilon"                                                   # STEP 5
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 6
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 += "/" + component1                                                # STEP 8
ACTION: path0 += "/" + component1 
component1 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 9
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component1 = "alpha"                                                    # STEP 10
ACTION: component1 = "alpha" 
component1 = 'phi' : <type 'str'>
=> component1 = 'alpha' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 11
ACTION: path2 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
component4 = "gamma"                                                    # STEP 12
ACTION: component4 = "gamma" 
component4 = 'epsilon' : <type 'str'>
=> component4 = 'gamma' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 13
ACTION: path2 += "/" + component0 
component0 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon/d' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 14
ACTION: str3 += 'i' 
str3 = '' : <type 'str'>
=> str3 = 'i' : <type 'str'>
==================================================
component0 = "g"                                                        # STEP 15
ACTION: component0 = "g" 
component0 = 'd' : <type 'str'>
=> component0 = 'g' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 16
ACTION: path2 += "/" + component1 
component1 = 'alpha' : <type 'str'>
path2 = '/Volumes/ramdisk/test/epsilon/d' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon/d/alpha' : <type 'str'>
==================================================
component1 = "omega"                                                    # STEP 17
ACTION: component1 = "omega" 
component1 = 'alpha' : <type 'str'>
=> component1 = 'omega' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 18
ACTION: str3 += 'p' 
str3 = 'i' : <type 'str'>
=> str3 = 'ip' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 19
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 20
ACTION: str0 += 'k' 
str0 = '' : <type 'str'>
=> str0 = 'k' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 21
ACTION: str0 += 'c' 
str0 = 'k' : <type 'str'>
=> str0 = 'kc' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 22
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/epsilon/d/alpha' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 23
ACTION: str0 += 'r' 
str0 = 'kc' : <type 'str'>
=> str0 = 'kcr' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 24
ACTION: str0 += 'l' 
str0 = 'kcr' : <type 'str'>
=> str0 = 'kcrl' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 25
ACTION: str0 += 'm' 
str0 = 'kcrl' : <type 'str'>
=> str0 = 'kcrlm' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 26
ACTION: str0 += 'n' 
str0 = 'kcrlm' : <type 'str'>
=> str0 = 'kcrlmn' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 27
ACTION: path2 += "/" + component3 
component3 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 28
ACTION: str3 += 'm' 
str3 = 'ip' : <type 'str'>
=> str3 = 'ipm' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 29
ACTION: path0 += "/" + component0 
component0 = 'g' : <type 'str'>
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi/g' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 30
ACTION: str0 += 'u' 
str0 = 'kcrlmn' : <type 'str'>
=> str0 = 'kcrlmnu' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 31
ACTION: str3 += 'x' 
str3 = 'ipm' : <type 'str'>
=> str3 = 'ipmx' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 32
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 33
ACTION: str3 += 'v' 
str3 = 'ipmx' : <type 'str'>
=> str3 = 'ipmxv' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 34
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/phi/g' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 35
ACTION: str3 += 't' 
str3 = 'ipmxv' : <type 'str'>
=> str3 = 'ipmxvt' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 36
ACTION: str0 += 'g' 
str0 = 'kcrlmnu' : <type 'str'>
=> str0 = 'kcrlmnug' : <type 'str'>
==================================================
component0 = "e"                                                        # STEP 37
ACTION: component0 = "e" 
component0 = 'g' : <type 'str'>
=> component0 = 'e' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 38
ACTION: str3 += 'j' 
str3 = 'ipmxvt' : <type 'str'>
=> str3 = 'ipmxvtj' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 39
ACTION: path0 += "/" + component0 
component0 = 'e' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 40
ACTION: str3 += 'y' 
str3 = 'ipmxvtj' : <type 'str'>
=> str3 = 'ipmxvtjy' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 41
ACTION: str0 += 'x' 
str0 = 'kcrlmnug' : <type 'str'>
=> str0 = 'kcrlmnugx' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 42
ACTION: str0 += " " 
str0 = 'kcrlmnugx' : <type 'str'>
=> str0 = 'kcrlmnugx ' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 43
ACTION: str0 += 'j' 
str0 = 'kcrlmnugx ' : <type 'str'>
=> str0 = 'kcrlmnugx j' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 44
ACTION: str2 += 'r' 
str2 = '' : <type 'str'>
=> str2 = 'r' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 45
ACTION: str2 += 'i' 
str2 = 'r' : <type 'str'>
=> str2 = 'ri' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 46
ACTION: str0 += 'd' 
str0 = 'kcrlmnugx j' : <type 'str'>
=> str0 = 'kcrlmnugx jd' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 47
ACTION: path0 += "/" + component1 
component1 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test/e' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/e/omega' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 48
ACTION: str3 += 'f' 
str3 = 'ipmxvtjy' : <type 'str'>
=> str3 = 'ipmxvtjyf' : <type 'str'>
==================================================
component1 = "gamma"                                                    # STEP 49
ACTION: component1 = "gamma" 
component1 = 'omega' : <type 'str'>
=> component1 = 'gamma' : <type 'str'>
==================================================
component3 = "epsilon"                                                  # STEP 50
ACTION: component3 = "epsilon" 
component3 = 'c' : <type 'str'>
=> component3 = 'epsilon' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 51
ACTION: str2 += 'l' 
str2 = 'ri' : <type 'str'>
=> str2 = 'ril' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 52
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str2 += 'v'                                                             # STEP 53
ACTION: str2 += 'v' 
str2 = 'ril' : <type 'str'>
=> str2 = 'rilv' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 54
ACTION: str0 += 'k' 
str0 = 'kcrlmnugx jd' : <type 'str'>
=> str0 = 'kcrlmnugx jdk' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 55
ACTION: str0 += 'q' 
str0 = 'kcrlmnugx jdk' : <type 'str'>
=> str0 = 'kcrlmnugx jdkq' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 56
ACTION: str2 = "" 
str2 = 'rilv' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 57
ACTION: str0 += 't' 
str0 = 'kcrlmnugx jdkq' : <type 'str'>
=> str0 = 'kcrlmnugx jdkqt' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 58
ACTION: str2 += 'p' 
str2 = '' : <type 'str'>
=> str2 = 'p' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 59
ACTION: str0 += 'e' 
str0 = 'kcrlmnugx jdkqt' : <type 'str'>
=> str0 = 'kcrlmnugx jdkqte' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 60
ACTION: str3 += " " 
str3 = 'ipmxvtjyf' : <type 'str'>
=> str3 = 'ipmxvtjyf ' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 61
ACTION: str0 += 'g' 
str0 = 'kcrlmnugx jdkqte' : <type 'str'>
=> str0 = 'kcrlmnugx jdkqteg' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 62
ACTION: str3 += 'z' 
str3 = 'ipmxvtjyf ' : <type 'str'>
=> str3 = 'ipmxvtjyf z' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 63
ACTION: str3 += 'x' 
str3 = 'ipmxvtjyf z' : <type 'str'>
=> str3 = 'ipmxvtjyf zx' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 64
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 65
ACTION: str3 += 'k' 
str3 = 'ipmxvtjyf zx' : <type 'str'>
=> str3 = 'ipmxvtjyf zxk' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 66
ACTION: str1 += 'n' 
str1 = '' : <type 'str'>
=> str1 = 'n' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 67
ACTION: str3 += 'b' 
str3 = 'ipmxvtjyf zxk' : <type 'str'>
=> str3 = 'ipmxvtjyf zxkb' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 68
ACTION: str1 += 'b' 
str1 = 'n' : <type 'str'>
=> str1 = 'nb' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 69
ACTION: str3 += 'c' 
str3 = 'ipmxvtjyf zxkb' : <type 'str'>
=> str3 = 'ipmxvtjyf zxkbc' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 70
ACTION: str0 += 'w' 
str0 = 'kcrlmnugx jdkqteg' : <type 'str'>
=> str0 = 'kcrlmnugx jdkqtegw' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 71
ACTION: str1 += 'h' 
str1 = 'nb' : <type 'str'>
=> str1 = 'nbh' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 72
ACTION: str1 += 'u' 
str1 = 'nbh' : <type 'str'>
=> str1 = 'nbhu' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 73
ACTION: str2 += 'c' 
str2 = 'p' : <type 'str'>
=> str2 = 'pc' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 74
ACTION: str1 += 'n' 
str1 = 'nbhu' : <type 'str'>
=> str1 = 'nbhun' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 75
ACTION: str3 += 'i' 
str3 = 'ipmxvtjyf zxkbc' : <type 'str'>
=> str3 = 'ipmxvtjyf zxkbci' : <type 'str'>
==================================================
component0 = "b"                                                        # STEP 76
ACTION: component0 = "b" 
component0 = 'e' : <type 'str'>
=> component0 = 'b' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 77
ACTION: path2 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/gamma' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 78
ACTION: str2 += 'v' 
str2 = 'pc' : <type 'str'>
=> str2 = 'pcv' : <type 'str'>
==================================================
component1 = "a"                                                        # STEP 79
ACTION: component1 = "a" 
component1 = 'gamma' : <type 'str'>
=> component1 = 'a' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 80
ACTION: str1 += 'f' 
str1 = 'nbhun' : <type 'str'>
=> str1 = 'nbhunf' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 81
ACTION: str3 += 'o' 
str3 = 'ipmxvtjyf zxkbci' : <type 'str'>
=> str3 = 'ipmxvtjyf zxkbcio' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 82
ACTION: str2 += 'g' 
str2 = 'pcv' : <type 'str'>
=> str2 = 'pcvg' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 83
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102699190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str0 += 'u'                                                             # STEP 84
ACTION: str0 += 'u' 
str0 = 'kcrlmnugx jdkqtegw' : <type 'str'>
=> str0 = 'kcrlmnugx jdkqtegwu' : <type 'str'>
==================================================
os0.link(path2,path2)                                                   # STEP 85
ACTION: os0.link(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102699190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/c/gamma'
REFERENCE ACTION: os_REF0.link(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
str2 += 'y'                                                             # STEP 86
ACTION: str2 += 'y' 
str2 = 'pcvg' : <type 'str'>
=> str2 = 'pcvgy' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 87
ACTION: str1 += " " 
str1 = 'nbhunf' : <type 'str'>
=> str1 = 'nbhunf ' : <type 'str'>
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 88
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102699190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c/gamma' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/c/gamma'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/c/gamma'
==================================================
result = os0.path.dirname(path2)                                        # STEP 89
ACTION: result = os0.path.dirname(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102699190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path2) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (/Volumes/ramdisk/test/c) ',), <traceback object at 0x10268ba70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 32104, in act595
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
0.0334761142731 TOTAL RUNTIME
1 EXECUTED
90 TOTAL TEST OPERATIONS
0.00283122062683 TIME SPENT EXECUTING TEST OPERATIONS
0.00478100776672 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.71932983398e-05 TIME SPENT CHECKING PROPERTIES
0.00286841392517 TOTAL TIME SPENT RUNNING SUT
0.00312185287476 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
