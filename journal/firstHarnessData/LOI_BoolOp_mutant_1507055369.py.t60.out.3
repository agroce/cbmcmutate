Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.54034.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('an integer is required',), <traceback object at 0x1028c3248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1704, in ResolvePath
    return self.GetOpenFile(file_path).GetObject().GetPath()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1209, in GetOpenFile
    raise TypeError('an integer is required')
Original test has 109 steps

SAVING TEST AS failure.54034.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "beta"                                                      # STEP 0
ACTION: component4 = "beta" 
component4 = None : <type 'NoneType'>
=> component4 = 'beta' : <type 'str'>
==================================================
component1 = "delta"                                                     # STEP 1
ACTION: component1 = "delta" 
component1 = None : <type 'NoneType'>
=> component1 = 'delta' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 2
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component0 = "omega"                                                     # STEP 3
ACTION: component0 = "omega" 
component0 = None : <type 'NoneType'>
=> component0 = 'omega' : <type 'str'>
==================================================
component3 = "delta"                                                     # STEP 4
ACTION: component3 = "delta" 
component3 = None : <type 'NoneType'>
=> component3 = 'delta' : <type 'str'>
==================================================
component2 = "b"                                                         # STEP 5
ACTION: component2 = "b" 
component2 = None : <type 'NoneType'>
=> component2 = 'b' : <type 'str'>
==================================================
str3 += 'k'                                                              # STEP 6
ACTION: str3 += 'k' 
str3 = '' : <type 'str'>
=> str3 = 'k' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'b'                                                              # STEP 8
ACTION: str3 += 'b' 
str3 = 'k' : <type 'str'>
=> str3 = 'kb' : <type 'str'>
==================================================
str3 += 'q'                                                              # STEP 9
ACTION: str3 += 'q' 
str3 = 'kb' : <type 'str'>
=> str3 = 'kbq' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 10
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 11
ACTION: str3 += 'q' 
str3 = 'kbq' : <type 'str'>
=> str3 = 'kbqq' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 12
ACTION: str1 += 'd' 
str1 = '' : <type 'str'>
=> str1 = 'd' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 13
ACTION: str1 += 'c' 
str1 = 'd' : <type 'str'>
=> str1 = 'dc' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 14
ACTION: str3 += 'a' 
str3 = 'kbqq' : <type 'str'>
=> str3 = 'kbqqa' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 15
ACTION: str3 += 'u' 
str3 = 'kbqqa' : <type 'str'>
=> str3 = 'kbqqau' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 16
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
path1 += "/" + component1                                               # STEP 17
ACTION: path1 += "/" + component1 
component1 = 'delta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 18
ACTION: path1 += "/" + component4 
component4 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/delta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/delta/beta' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 19
ACTION: str1 += 'e' 
str1 = 'dc' : <type 'str'>
=> str1 = 'dce' : <type 'str'>
==================================================
component1 = "delta"                                                    # STEP 20
ACTION: component1 = "delta" 
component1 = 'delta' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 21
ACTION: str1 += 'c' 
str1 = 'dce' : <type 'str'>
=> str1 = 'dcec' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 22
ACTION: str3 += 'r' 
str3 = 'kbqqau' : <type 'str'>
=> str3 = 'kbqqaur' : <type 'str'>
==================================================
component4 = "phi"                                                      # STEP 23
ACTION: component4 = "phi" 
component4 = 'beta' : <type 'str'>
=> component4 = 'phi' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 24
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 25
ACTION: path1 += "/" + component2 
component2 = 'b' : <type 'str'>
path1 = '/Volumes/ramdisk/test/delta/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/delta/beta/b' : <type 'str'>
==================================================
component2 = "lambda"                                                   # STEP 26
ACTION: component2 = "lambda" 
component2 = 'b' : <type 'str'>
=> component2 = 'lambda' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 27
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 28
ACTION: str1 += 'w' 
str1 = 'dcec' : <type 'str'>
=> str1 = 'dcecw' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 29
ACTION: str3 += 'p' 
str3 = 'kbqqaur' : <type 'str'>
=> str3 = 'kbqqaurp' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 30
ACTION: str1 += 's' 
str1 = 'dcecw' : <type 'str'>
=> str1 = 'dcecws' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 31
ACTION: str2 += 'l' 
str2 = '' : <type 'str'>
=> str2 = 'l' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 32
ACTION: str0 += 'j' 
str0 = '' : <type 'str'>
=> str0 = 'j' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 33
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str1 += 'g'                                                             # STEP 34
ACTION: str1 += 'g' 
str1 = 'dcecws' : <type 'str'>
=> str1 = 'dcecwsg' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 35
ACTION: str1 += 'd' 
str1 = 'dcecwsg' : <type 'str'>
=> str1 = 'dcecwsgd' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 36
ACTION: str1 += 's' 
str1 = 'dcecwsgd' : <type 'str'>
=> str1 = 'dcecwsgds' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 37
ACTION: str1 += 'f' 
str1 = 'dcecwsgds' : <type 'str'>
=> str1 = 'dcecwsgdsf' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 38
ACTION: str1 += 'y' 
str1 = 'dcecwsgdsf' : <type 'str'>
=> str1 = 'dcecwsgdsfy' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 39
ACTION: str0 += 'h' 
str0 = 'j' : <type 'str'>
=> str0 = 'jh' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 40
ACTION: str3 += 'n' 
str3 = 'kbqqaurp' : <type 'str'>
=> str3 = 'kbqqaurpn' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 41
ACTION: str3 += 'r' 
str3 = 'kbqqaurpn' : <type 'str'>
=> str3 = 'kbqqaurpnr' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 42
ACTION: str0 += 'k' 
str0 = 'jh' : <type 'str'>
=> str0 = 'jhk' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 43
ACTION: str0 += 'j' 
str0 = 'jhk' : <type 'str'>
=> str0 = 'jhkj' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 44
ACTION: str0 += 'k' 
str0 = 'jhkj' : <type 'str'>
=> str0 = 'jhkjk' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 45
ACTION: str0 += 'a' 
str0 = 'jhkjk' : <type 'str'>
=> str0 = 'jhkjka' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 46
ACTION: str2 += 'b' 
str2 = 'l' : <type 'str'>
=> str2 = 'lb' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 47
ACTION: str2 += 'g' 
str2 = 'lb' : <type 'str'>
=> str2 = 'lbg' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 48
ACTION: str2 += 'u' 
str2 = 'lbg' : <type 'str'>
=> str2 = 'lbgu' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 49
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str2 += 'y'                                                             # STEP 50
ACTION: str2 += 'y' 
str2 = 'lbgu' : <type 'str'>
=> str2 = 'lbguy' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 51
ACTION: str2 += 'x' 
str2 = 'lbguy' : <type 'str'>
=> str2 = 'lbguyx' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 52
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 53
ACTION: str1 += 'k' 
str1 = 'dcecwsgdsfy' : <type 'str'>
=> str1 = 'dcecwsgdsfyk' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 54
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/delta/beta/b' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 55
ACTION: str3 += 'q' 
str3 = 'kbqqaurpnr' : <type 'str'>
=> str3 = 'kbqqaurpnrq' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 56
ACTION: str2 += 'a' 
str2 = 'lbguyx' : <type 'str'>
=> str2 = 'lbguyxa' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 57
ACTION: str2 += 'x' 
str2 = 'lbguyxa' : <type 'str'>
=> str2 = 'lbguyxax' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 58
ACTION: str3 += 'g' 
str3 = 'kbqqaurpnrq' : <type 'str'>
=> str3 = 'kbqqaurpnrqg' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 59
ACTION: str3 += 't' 
str3 = 'kbqqaurpnrqg' : <type 'str'>
=> str3 = 'kbqqaurpnrqgt' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 60
ACTION: str3 += 'm' 
str3 = 'kbqqaurpnrqgt' : <type 'str'>
=> str3 = 'kbqqaurpnrqgtm' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 61
ACTION: str2 += 's' 
str2 = 'lbguyxax' : <type 'str'>
=> str2 = 'lbguyxaxs' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 62
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str1 += 'm'                                                             # STEP 63
ACTION: str1 += 'm' 
str1 = 'dcecwsgdsfyk' : <type 'str'>
=> str1 = 'dcecwsgdsfykm' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 64
ACTION: str1 += 'h' 
str1 = 'dcecwsgdsfykm' : <type 'str'>
=> str1 = 'dcecwsgdsfykmh' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 65
ACTION: str2 += 'b' 
str2 = 'lbguyxaxs' : <type 'str'>
=> str2 = 'lbguyxaxsb' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 66
ACTION: str0 += 'b' 
str0 = 'jhkjka' : <type 'str'>
=> str0 = 'jhkjkab' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 67
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str2 += 'v'                                                             # STEP 68
ACTION: str2 += 'v' 
str2 = 'lbguyxaxsb' : <type 'str'>
=> str2 = 'lbguyxaxsbv' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 69
ACTION: str3 += 'h' 
str3 = 'kbqqaurpnrqgtm' : <type 'str'>
=> str3 = 'kbqqaurpnrqgtmh' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 70
ACTION: path1 += "/" + component4 
component4 = 'phi' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 71
ACTION: str1 += 'g' 
str1 = 'dcecwsgdsfykmh' : <type 'str'>
=> str1 = 'dcecwsgdsfykmhg' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 72
ACTION: str3 += " " 
str3 = 'kbqqaurpnrqgtmh' : <type 'str'>
=> str3 = 'kbqqaurpnrqgtmh ' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 73
ACTION: str1 += 'd' 
str1 = 'dcecwsgdsfykmhg' : <type 'str'>
=> str1 = 'dcecwsgdsfykmhgd' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 74
ACTION: str0 += 'q' 
str0 = 'jhkjkab' : <type 'str'>
=> str0 = 'jhkjkabq' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 75
ACTION: str2 += 'c' 
str2 = 'lbguyxaxsbv' : <type 'str'>
=> str2 = 'lbguyxaxsbvc' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 76
ACTION: str3 += 'm' 
str3 = 'kbqqaurpnrqgtmh ' : <type 'str'>
=> str3 = 'kbqqaurpnrqgtmh m' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 77
ACTION: str3 += 't' 
str3 = 'kbqqaurpnrqgtmh m' : <type 'str'>
=> str3 = 'kbqqaurpnrqgtmh mt' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 78
ACTION: str2 += 'g' 
str2 = 'lbguyxaxsbvc' : <type 'str'>
=> str2 = 'lbguyxaxsbvcg' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 79
ACTION: str2 += 'b' 
str2 = 'lbguyxaxsbvcg' : <type 'str'>
=> str2 = 'lbguyxaxsbvcgb' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 80
ACTION: str1 += 'z' 
str1 = 'dcecwsgdsfykmhgd' : <type 'str'>
=> str1 = 'dcecwsgdsfykmhgdz' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 81
ACTION: str2 += 'i' 
str2 = 'lbguyxaxsbvcgb' : <type 'str'>
=> str2 = 'lbguyxaxsbvcgbi' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 82
ACTION: str0 += 'm' 
str0 = 'jhkjkabq' : <type 'str'>
=> str0 = 'jhkjkabqm' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 83
ACTION: str3 += 'l' 
str3 = 'kbqqaurpnrqgtmh mt' : <type 'str'>
=> str3 = 'kbqqaurpnrqgtmh mtl' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 84
ACTION: bytes1 = 0 
bytes1 = 1 : <type 'int'>
=> bytes1 = 0 : <type 'int'>
==================================================
path1 += "/" + component3                                               # STEP 85
ACTION: path1 += "/" + component3 
component3 = 'delta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/phi/delta' : <type 'str'>
==================================================
component4 = "gamma"                                                    # STEP 86
ACTION: component4 = "gamma" 
component4 = 'phi' : <type 'str'>
=> component4 = 'gamma' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 87
ACTION: str1 += 'm' 
str1 = 'dcecwsgdsfykmhgdz' : <type 'str'>
=> str1 = 'dcecwsgdsfykmhgdzm' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 88
ACTION: str1 += 'm' 
str1 = 'dcecwsgdsfykmhgdzm' : <type 'str'>
=> str1 = 'dcecwsgdsfykmhgdzmm' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 89
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 90
ACTION: str1 += 'e' 
str1 = 'dcecwsgdsfykmhgdzmm' : <type 'str'>
=> str1 = 'dcecwsgdsfykmhgdzmme' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 91
ACTION: str2 += 'q' 
str2 = 'lbguyxaxsbvcgbi' : <type 'str'>
=> str2 = 'lbguyxaxsbvcgbiq' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 92
ACTION: str3 += 'w' 
str3 = 'kbqqaurpnrqgtmh mtl' : <type 'str'>
=> str3 = 'kbqqaurpnrqgtmh mtlw' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 93
ACTION: str3 += " " 
str3 = 'kbqqaurpnrqgtmh mtlw' : <type 'str'>
=> str3 = 'kbqqaurpnrqgtmh mtlw ' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 94
ACTION: str1 += 'p' 
str1 = 'dcecwsgdsfykmhgdzmme' : <type 'str'>
=> str1 = 'dcecwsgdsfykmhgdzmmep' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 95
ACTION: path1 += "/" + component1 
component1 = 'delta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/phi/delta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/phi/delta/delta' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 96
ACTION: str1 += 'l' 
str1 = 'dcecwsgdsfykmhgdzmmep' : <type 'str'>
=> str1 = 'dcecwsgdsfykmhgdzmmepl' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 97
ACTION: str3 += 'l' 
str3 = 'kbqqaurpnrqgtmh mtlw ' : <type 'str'>
=> str3 = 'kbqqaurpnrqgtmh mtlw l' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 98
ACTION: str3 += 'w' 
str3 = 'kbqqaurpnrqgtmh mtlw l' : <type 'str'>
=> str3 = 'kbqqaurpnrqgtmh mtlw lw' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 99
ACTION: str3 += 'g' 
str3 = 'kbqqaurpnrqgtmh mtlw lw' : <type 'str'>
=> str3 = 'kbqqaurpnrqgtmh mtlw lwg' : <type 'str'>
==================================================
path3 += "/" + component1                                              # STEP 100
ACTION: path3 += "/" + component1 
component1 = 'delta' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
path1 += "/" + component0                                              # STEP 101
ACTION: path1 += "/" + component0 
component0 = 'omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test/phi/delta/delta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/phi/delta/delta/omega' : <type 'str'>
==================================================
str3 += 'v'                                                            # STEP 102
ACTION: str3 += 'v' 
str3 = 'kbqqaurpnrqgtmh mtlw lwg' : <type 'str'>
=> str3 = 'kbqqaurpnrqgtmh mtlw lwgv' : <type 'str'>
==================================================
str2 += 'm'                                                            # STEP 103
ACTION: str2 += 'm' 
str2 = 'lbguyxaxsbvcgbiq' : <type 'str'>
=> str2 = 'lbguyxaxsbvcgbiqm' : <type 'str'>
==================================================
component0 = "f"                                                       # STEP 104
ACTION: component0 = "f" 
component0 = 'omega' : <type 'str'>
=> component0 = 'f' : <type 'str'>
==================================================
str1 += 'l'                                                            # STEP 105
ACTION: str1 += 'l' 
str1 = 'dcecwsgdsfykmhgdzmmepl' : <type 'str'>
=> str1 = 'dcecwsgdsfykmhgdzmmepll' : <type 'str'>
==================================================
str1 += 'g'                                                            # STEP 106
ACTION: str1 += 'g' 
str1 = 'dcecwsgdsfykmhgdzmmepll' : <type 'str'>
=> str1 = 'dcecwsgdsfykmhgdzmmepllg' : <type 'str'>
==================================================
str1 += 'r'                                                            # STEP 107
ACTION: str1 += 'r' 
str1 = 'dcecwsgdsfykmhgdzmmepllg' : <type 'str'>
=> str1 = 'dcecwsgdsfykmhgdzmmepllgr' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 108
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> an integer is required
ERROR: (<type 'exceptions.TypeError'>, TypeError('an integer is required',), <traceback object at 0x105487f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1704, in ResolvePath
    return self.GetOpenFile(file_path).GetObject().GetPath()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1209, in GetOpenFile
    raise TypeError('an integer is required')
STOPPING TESTING DUE TO FAILED TEST
0.0502460002899 TOTAL RUNTIME
2 EXECUTED
309 TOTAL TEST OPERATIONS
0.00557661056519 TIME SPENT EXECUTING TEST OPERATIONS
0.0133607387543 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000144004821777 TIME SPENT CHECKING PROPERTIES
0.00572061538696 TOTAL TIME SPENT RUNNING SUT
0.00626587867737 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
