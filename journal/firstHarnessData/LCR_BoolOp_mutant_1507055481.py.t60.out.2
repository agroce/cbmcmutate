Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59178.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('sequence item 0: expected string, NoneType found',), <traceback object at 0x103efeb00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1333, in NormalizeCase
    return components_to_path()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1301, in components_to_path
    normalized_path = sep.join(normalized_components)
Original test has 60 steps

SAVING TEST AS failure.59178.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str4 = ""                                                                # STEP 0
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'r'                                                              # STEP 1
ACTION: str4 += 'r' 
str4 = '' : <type 'str'>
=> str4 = 'r' : <type 'str'>
==================================================
str4 += 'y'                                                              # STEP 2
ACTION: str4 += 'y' 
str4 = 'r' : <type 'str'>
=> str4 = 'ry' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 3
ACTION: str4 = "" 
str4 = 'ry' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'm'                                                              # STEP 4
ACTION: str4 += 'm' 
str4 = '' : <type 'str'>
=> str4 = 'm' : <type 'str'>
==================================================
component0 = "e"                                                         # STEP 5
ACTION: component0 = "e" 
component0 = None : <type 'NoneType'>
=> component0 = 'e' : <type 'str'>
==================================================
str4 += 'w'                                                              # STEP 6
ACTION: str4 += 'w' 
str4 = 'm' : <type 'str'>
=> str4 = 'mw' : <type 'str'>
==================================================
component3 = "alpha"                                                     # STEP 7
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
str4 += 'v'                                                              # STEP 8
ACTION: str4 += 'v' 
str4 = 'mw' : <type 'str'>
=> str4 = 'mwv' : <type 'str'>
==================================================
component4 = "alpha"                                                     # STEP 9
ACTION: component4 = "alpha" 
component4 = None : <type 'NoneType'>
=> component4 = 'alpha' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 10
ACTION: str4 += " " 
str4 = 'mwv' : <type 'str'>
=> str4 = 'mwv ' : <type 'str'>
==================================================
component2 = "g"                                                        # STEP 11
ACTION: component2 = "g" 
component2 = None : <type 'NoneType'>
=> component2 = 'g' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 12
ACTION: str4 += 'j' 
str4 = 'mwv ' : <type 'str'>
=> str4 = 'mwv j' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 13
ACTION: str4 += 'a' 
str4 = 'mwv j' : <type 'str'>
=> str4 = 'mwv ja' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 14
ACTION: str4 += 'o' 
str4 = 'mwv ja' : <type 'str'>
=> str4 = 'mwv jao' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 15
ACTION: str4 += 'o' 
str4 = 'mwv jao' : <type 'str'>
=> str4 = 'mwv jaoo' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 16
ACTION: str4 += 'v' 
str4 = 'mwv jaoo' : <type 'str'>
=> str4 = 'mwv jaoov' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 17
ACTION: str4 += 'm' 
str4 = 'mwv jaoov' : <type 'str'>
=> str4 = 'mwv jaoovm' : <type 'str'>
==================================================
component1 = "h"                                                        # STEP 18
ACTION: component1 = "h" 
component1 = None : <type 'NoneType'>
=> component1 = 'h' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 19
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 20
ACTION: str4 += 'u' 
str4 = 'mwv jaoovm' : <type 'str'>
=> str4 = 'mwv jaoovmu' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 21
ACTION: str4 += 's' 
str4 = 'mwv jaoovmu' : <type 'str'>
=> str4 = 'mwv jaoovmus' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 22
ACTION: str4 += " " 
str4 = 'mwv jaoovmus' : <type 'str'>
=> str4 = 'mwv jaoovmus ' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 23
ACTION: str4 += 'l' 
str4 = 'mwv jaoovmus ' : <type 'str'>
=> str4 = 'mwv jaoovmus l' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 24
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 26
ACTION: str4 += 'g' 
str4 = 'mwv jaoovmus l' : <type 'str'>
=> str4 = 'mwv jaoovmus lg' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 27
ACTION: str4 += 'v' 
str4 = 'mwv jaoovmus lg' : <type 'str'>
=> str4 = 'mwv jaoovmus lgv' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 28
ACTION: str0 += 's' 
str0 = '' : <type 'str'>
=> str0 = 's' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 29
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str0 += 'v'                                                             # STEP 30
ACTION: str0 += 'v' 
str0 = 's' : <type 'str'>
=> str0 = 'sv' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 31
ACTION: str0 += 'k' 
str0 = 'sv' : <type 'str'>
=> str0 = 'svk' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 32
ACTION: str0 += 'g' 
str0 = 'svk' : <type 'str'>
=> str0 = 'svkg' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 33
ACTION: path3 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str0 += 'f'                                                             # STEP 34
ACTION: str0 += 'f' 
str0 = 'svkg' : <type 'str'>
=> str0 = 'svkgf' : <type 'str'>
==================================================
component3 = "e"                                                        # STEP 35
ACTION: component3 = "e" 
component3 = 'alpha' : <type 'str'>
=> component3 = 'e' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 36
ACTION: str4 += 'v' 
str4 = 'mwv jaoovmus lgv' : <type 'str'>
=> str4 = 'mwv jaoovmus lgvv' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 37
ACTION: str0 += 'r' 
str0 = 'svkgf' : <type 'str'>
=> str0 = 'svkgfr' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 38
ACTION: str0 += 'n' 
str0 = 'svkgfr' : <type 'str'>
=> str0 = 'svkgfrn' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 39
ACTION: str0 += 'x' 
str0 = 'svkgfrn' : <type 'str'>
=> str0 = 'svkgfrnx' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 40
ACTION: str4 += 's' 
str4 = 'mwv jaoovmus lgvv' : <type 'str'>
=> str4 = 'mwv jaoovmus lgvvs' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 41
ACTION: str0 += 'l' 
str0 = 'svkgfrnx' : <type 'str'>
=> str0 = 'svkgfrnxl' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 42
ACTION: str4 += 'u' 
str4 = 'mwv jaoovmus lgvvs' : <type 'str'>
=> str4 = 'mwv jaoovmus lgvvsu' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 43
ACTION: path3 += "/" + component0 
component0 = 'e' : <type 'str'>
path3 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/alpha/e' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 44
ACTION: str4 += 'l' 
str4 = 'mwv jaoovmus lgvvsu' : <type 'str'>
=> str4 = 'mwv jaoovmus lgvvsul' : <type 'str'>
==================================================
component0 = "b"                                                        # STEP 45
ACTION: component0 = "b" 
component0 = 'e' : <type 'str'>
=> component0 = 'b' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 46
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 47
ACTION: str4 += 'b' 
str4 = 'mwv jaoovmus lgvvsul' : <type 'str'>
=> str4 = 'mwv jaoovmus lgvvsulb' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 48
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/alpha/e' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 49
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
bytes2 = 0                                                              # STEP 50
ACTION: bytes2 = 0 
bytes2 = 1 : <type 'int'>
=> bytes2 = 0 : <type 'int'>
==================================================
str4 += 'e'                                                             # STEP 51
ACTION: str4 += 'e' 
str4 = 'mwv jaoovmus lgvvsulb' : <type 'str'>
=> str4 = 'mwv jaoovmus lgvvsulbe' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 52
ACTION: str0 += " " 
str0 = 'svkgfrnxl' : <type 'str'>
=> str0 = 'svkgfrnxl ' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 53
ACTION: str4 += 'p' 
str4 = 'mwv jaoovmus lgvvsulbe' : <type 'str'>
=> str4 = 'mwv jaoovmus lgvvsulbep' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 54
ACTION: path3 += "/" + component1 
component1 = 'h' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 55
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 56
ACTION: str3 += " " 
str3 = '' : <type 'str'>
=> str3 = ' ' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 57
ACTION: str3 += 'g' 
str3 = ' ' : <type 'str'>
=> str3 = ' g' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 58
ACTION: str4 += 'g' 
str4 = 'mwv jaoovmus lgvvsulbep' : <type 'str'>
=> str4 = 'mwv jaoovmus lgvvsulbepg' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 59
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> sequence item 0: expected string, NoneType found
ERROR: (<type 'exceptions.TypeError'>, TypeError('sequence item 0: expected string, NoneType found',), <traceback object at 0x103b70bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1333, in NormalizeCase
    return components_to_path()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1301, in components_to_path
    normalized_path = sep.join(normalized_components)
STOPPING TESTING DUE TO FAILED TEST
0.0254061222076 TOTAL RUNTIME
1 EXECUTED
60 TOTAL TEST OPERATIONS
0.00116658210754 TIME SPENT EXECUTING TEST OPERATIONS
0.00323581695557 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.47955322266e-05 TIME SPENT CHECKING PROPERTIES
0.00119137763977 TOTAL TIME SPENT RUNNING SUT
0.00316786766052 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
