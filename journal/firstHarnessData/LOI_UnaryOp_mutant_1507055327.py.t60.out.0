Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.65882.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (w) ',), <traceback object at 0x103a05488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21262, in act431
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 104 steps

SAVING TEST AS failure.65882.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "beta"                                                      # STEP 0
ACTION: component4 = "beta" 
component4 = None : <type 'NoneType'>
=> component4 = 'beta' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 1
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 2
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component1 = "phi"                                                       # STEP 3
ACTION: component1 = "phi" 
component1 = None : <type 'NoneType'>
=> component1 = 'phi' : <type 'str'>
==================================================
component2 = "lambda"                                                    # STEP 4
ACTION: component2 = "lambda" 
component2 = None : <type 'NoneType'>
=> component2 = 'lambda' : <type 'str'>
==================================================
component0 = "d"                                                         # STEP 5
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 6
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
bytes1 = 0                                                               # STEP 7
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
component3 = "g"                                                         # STEP 8
ACTION: component3 = "g" 
component3 = None : <type 'NoneType'>
=> component3 = 'g' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 9
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 10
ACTION: path4 += "/" + component3 
component3 = 'g' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
component3 = "phi"                                                      # STEP 11
ACTION: component3 = "phi" 
component3 = 'g' : <type 'str'>
=> component3 = 'phi' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 12
ACTION: path2 += "/" + component4 
component4 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 13
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 14
ACTION: component4 = "beta" 
component4 = 'beta' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 15
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str0 += 'w'                                                             # STEP 16
ACTION: str0 += 'w' 
str0 = '' : <type 'str'>
=> str0 = 'w' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 17
ACTION: str0 += 'm' 
str0 = 'w' : <type 'str'>
=> str0 = 'wm' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 18
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
path2 += "/" + component4                                               # STEP 19
ACTION: path2 += "/" + component4 
component4 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 20
ACTION: str0 += 'x' 
str0 = 'wm' : <type 'str'>
=> str0 = 'wmx' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 21
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str0 += 'n'                                                             # STEP 22
ACTION: str0 += 'n' 
str0 = 'wmx' : <type 'str'>
=> str0 = 'wmxn' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 23
ACTION: str0 += 'h' 
str0 = 'wmxn' : <type 'str'>
=> str0 = 'wmxnh' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 24
ACTION: str0 += 'q' 
str0 = 'wmxnh' : <type 'str'>
=> str0 = 'wmxnhq' : <type 'str'>
==================================================
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 25
ACTION: fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
stat2 = os0.fstat(fd0)                                                  # STEP 26
ACTION: stat2 = os0.fstat(fd0) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10342b810> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF0) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=22466251, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507462085, st_mtime=1507462085, st_ctime=1507462085) : <type 'posix.stat_result'>
==================================================
bytes0 += 1                                                             # STEP 27
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
fd1 = os0.open(path2, os.O_CREAT)                                       # STEP 28
ACTION: fd1 = os0.open(path2, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/beta'
==================================================
stat1 = os0.lstat(path4)                                                # STEP 29
ACTION: stat1 = os0.lstat(path4) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1044d0bd0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path4) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=22466251, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507462085, st_mtime=1507462085, st_ctime=1507462085) : <type 'posix.stat_result'>
==================================================
os0.makedirs(path2)                                                     # STEP 30
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path2) 
==================================================
str0 += " "                                                             # STEP 31
ACTION: str0 += " " 
str0 = 'wmxnhq' : <type 'str'>
=> str0 = 'wmxnhq ' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 32
ACTION: path2 += "/" + component4 
component4 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta/beta/beta' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 33
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF1 = 5 : <type 'int'>
==================================================
stat0 = os0.fstat(fd0)                                                  # STEP 34
ACTION: stat0 = os0.fstat(fd0) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103049950> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.fstat(fd_REF0) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=22466251, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507462085, st_mtime=1507462085, st_ctime=1507462085) : <type 'posix.stat_result'>
==================================================
str0 += 'o'                                                             # STEP 35
ACTION: str0 += 'o' 
str0 = 'wmxnhq ' : <type 'str'>
=> str0 = 'wmxnhq o' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 36
ACTION: str0 += " " 
str0 = 'wmxnhq o' : <type 'str'>
=> str0 = 'wmxnhq o ' : <type 'str'>
==================================================
result = os0.read(fd1,bytes0)                                           # STEP 37
ACTION: result = os0.read(fd1,bytes0) 
bytes0 = 1 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
result = os0.path.getsize(path4)                                        # STEP 38
ACTION: result = os0.path.getsize(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path4) 
==================================================
result = os0.read(fd0,bytes2)                                           # STEP 39
ACTION: result = os0.read(fd0,bytes2) 
bytes2 = 1 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
bytes4 = 0                                                              # STEP 40
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str0 += 'k'                                                             # STEP 41
ACTION: str0 += 'k' 
str0 = 'wmxnhq o ' : <type 'str'>
=> str0 = 'wmxnhq o k' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 42
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
os0.makedirs(path4)                                                     # STEP 43
ACTION: os0.makedirs(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: os_REF0.makedirs(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/g'
==================================================
result = os0.path.lexists(path2)                                        # STEP 44
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
str0 += 'a'                                                             # STEP 45
ACTION: str0 += 'a' 
str0 = 'wmxnhq o k' : <type 'str'>
=> str0 = 'wmxnhq o ka' : <type 'str'>
==================================================
component4 = "phi"                                                      # STEP 46
ACTION: component4 = "phi" 
component4 = 'beta' : <type 'str'>
=> component4 = 'phi' : <type 'str'>
==================================================
result = os0.path.islink(path4)                                         # STEP 47
ACTION: result = os0.path.islink(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path4) 
==================================================
bytes0 = 0                                                              # STEP 48
ACTION: bytes0 = 0 
bytes0 = 1 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
str2 += 'w'                                                             # STEP 49
ACTION: str2 += 'w' 
str2 = '' : <type 'str'>
=> str2 = 'w' : <type 'str'>
==================================================
os0.write(fd0,str2)                                                     # STEP 50
ACTION: os0.write(fd0,str2) 
str2 = 'w' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF0,str2) 
==================================================
os0.rmdir(path2)                                                        # STEP 51
ACTION: os0.rmdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Fake os module: not a directory: '/Volumes/ramdisk/test/beta/beta/beta'
REFERENCE ACTION: os_REF0.rmdir(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/beta/beta/beta'
==================================================
str2 += 'i'                                                             # STEP 52
ACTION: str2 += 'i' 
str2 = 'w' : <type 'str'>
=> str2 = 'wi' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 53
ACTION: str0 += 'y' 
str0 = 'wmxnhq o ka' : <type 'str'>
=> str0 = 'wmxnhq o kay' : <type 'str'>
==================================================
stat3 = os0.stat(path4)                                                 # STEP 54
ACTION: stat3 = os0.stat(path4) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103049d50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path4) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=22466251, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=1, st_atime=1507462085, st_mtime=1507462085, st_ctime=1507462085) : <type 'posix.stat_result'>
==================================================
os0.write(fd1,str0)                                                     # STEP 55
ACTION: os0.write(fd1,str0) 
str0 = 'wmxnhq o kay' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF1,str0) 
==================================================
result = os0.path.lexists(path2)                                        # STEP 56
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 57
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 58
ACTION: str0 += 's' 
str0 = 'wmxnhq o kay' : <type 'str'>
=> str0 = 'wmxnhq o kays' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 59
ACTION: str0 += 'b' 
str0 = 'wmxnhq o kays' : <type 'str'>
=> str0 = 'wmxnhq o kaysb' : <type 'str'>
==================================================
str0 += 'f'                                                             # STEP 60
ACTION: str0 += 'f' 
str0 = 'wmxnhq o kaysb' : <type 'str'>
=> str0 = 'wmxnhq o kaysbf' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 61
ACTION: str0 += 'g' 
str0 = 'wmxnhq o kaysbf' : <type 'str'>
=> str0 = 'wmxnhq o kaysbfg' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 62
ACTION: str2 += 'p' 
str2 = 'wi' : <type 'str'>
=> str2 = 'wip' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 63
ACTION: str2 += 'f' 
str2 = 'wip' : <type 'str'>
=> str2 = 'wipf' : <type 'str'>
==================================================
os0.symlink(path4,path2)                                                # STEP 64
ACTION: os0.symlink(path4,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta/beta/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/beta/beta/beta'
REFERENCE ACTION: os_REF0.symlink(path4,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
stat4 = os0.stat(path2)                                                 # STEP 65
ACTION: stat4 = os0.stat(path2) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta/beta' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103049550> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path2) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=22466254, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=12, st_atime=1507462085, st_mtime=1507462085, st_ctime=1507462085) : <type 'posix.stat_result'>
==================================================
os0.symlink(path4,path2)                                                # STEP 66
ACTION: os0.symlink(path4,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta/beta/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/beta/beta/beta'
REFERENCE ACTION: os_REF0.symlink(path4,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.link(path4,path2)                                                   # STEP 67
ACTION: os0.link(path4,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta/beta/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/beta/beta/beta'
REFERENCE ACTION: os_REF0.link(path4,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.isdir(path4)                                          # STEP 68
ACTION: result = os0.path.isdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path4) 
==================================================
str2 += 'f'                                                             # STEP 69
ACTION: str2 += 'f' 
str2 = 'wipf' : <type 'str'>
=> str2 = 'wipff' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 70
ACTION: bytes2 += 1 
bytes2 = 1 : <type 'int'>
=> bytes2 = 2 : <type 'int'>
==================================================
os0.close(fd1)                                                          # STEP 71
ACTION: os0.close(fd1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
REFERENCE ACTION: os_REF0.close(fd_REF1) 
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 72
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_RDWR)                                        # STEP 73
ACTION: fd1 = os0.open(path2, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta/beta' : <type 'str'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_RDWR) 
==================================================
bytes0 += 1                                                             # STEP 74
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
path4 += "/" + component3                                               # STEP 75
ACTION: path4 += "/" + component3 
component3 = 'phi' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
result = stat4.st_nlink                                                 # STEP 76
ACTION: result = stat4.st_nlink 
stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103049550> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF4 = posix.stat_result(st_mode=33261, st_ino=22466254, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=12, st_atime=1507462085, st_mtime=1507462085, st_ctime=1507462085) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF4.st_nlink 
==================================================
bytes3 += 1                                                             # STEP 77
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
component3 = "delta"                                                    # STEP 78
ACTION: component3 = "delta" 
component3 = 'phi' : <type 'str'>
=> component3 = 'delta' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 79
ACTION: path2 += "/" + component0 
component0 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta/beta/beta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta/beta/beta/d' : <type 'str'>
==================================================
os0.link(path2,path1)                                                   # STEP 80
ACTION: os0.link(path2,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta/beta/d' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path2,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory
==================================================
str0 += 'e'                                                             # STEP 81
ACTION: str0 += 'e' 
str0 = 'wmxnhq o kaysbfg' : <type 'str'>
=> str0 = 'wmxnhq o kaysbfge' : <type 'str'>
==================================================
os0.removedirs(path1)                                                   # STEP 82
ACTION: os0.removedirs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 66] Fake Directory not empty: 'test'
REFERENCE ACTION: os_REF0.removedirs(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 66] Directory not empty: '/Volumes/ramdisk/test'
==================================================
component0 = "epsilon"                                                  # STEP 83
ACTION: component0 = "epsilon" 
component0 = 'd' : <type 'str'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 84
ACTION: bytes0 = 0 
bytes0 = 1 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
result = os0.path.lexists(path1)                                        # STEP 85
ACTION: result = os0.path.lexists(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path1) 
==================================================
result = os0.path.isfile(path4)                                         # STEP 86
ACTION: result = os0.path.isfile(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path4) 
==================================================
result = os0.path.isfile(path2)                                         # STEP 87
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/beta/beta/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
str2 += 'z'                                                             # STEP 88
ACTION: str2 += 'z' 
str2 = 'wipff' : <type 'str'>
=> str2 = 'wipffz' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 89
ACTION: path1 += "/" + component1 
component1 = 'phi' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
result = stat4.st_size                                                  # STEP 90
ACTION: result = stat4.st_size 
stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103049550> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF4 = posix.stat_result(st_mode=33261, st_ino=22466254, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=12, st_atime=1507462085, st_mtime=1507462085, st_ctime=1507462085) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF4.st_size 
==================================================
str2 += 'h'                                                             # STEP 91
ACTION: str2 += 'h' 
str2 = 'wipffz' : <type 'str'>
=> str2 = 'wipffzh' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 92
ACTION: path4 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path4 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/phi/lambda' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 93
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
os0.link(path1,path1)                                                   # STEP 94
ACTION: os0.link(path1,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/phi'
REFERENCE ACTION: os_REF0.link(path1,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
os0.symlink(path1,path1)                                                # STEP 95
ACTION: os0.symlink(path1,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path1,path1) 
==================================================
str0 += 'c'                                                             # STEP 96
ACTION: str0 += 'c' 
str0 = 'wmxnhq o kaysbfge' : <type 'str'>
=> str0 = 'wmxnhq o kaysbfgec' : <type 'str'>
==================================================
stat4 = os0.fstat(fd1)                                                  # STEP 97
ACTION: stat4 = os0.fstat(fd1) 
stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103049550> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
stat_REF4 = posix.stat_result(st_mode=33261, st_ino=22466254, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=12, st_atime=1507462085, st_mtime=1507462085, st_ctime=1507462085) : <type 'posix.stat_result'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1044d0f10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.fstat(fd_REF1) 
==================================================
result = os0.read(fd0,bytes2)                                           # STEP 98
ACTION: result = os0.read(fd0,bytes2) 
bytes2 = 2 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
component1 = "d"                                                        # STEP 99
ACTION: component1 = "d" 
component1 = 'phi' : <type 'str'>
=> component1 = 'd' : <type 'str'>
==================================================
os0.rmdir(path4)                                                       # STEP 100
ACTION: os0.rmdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/phi/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/phi'
REFERENCE ACTION: os_REF0.rmdir(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/phi/lambda'
==================================================
str2 += 'k'                                                            # STEP 101
ACTION: str2 += 'k' 
str2 = 'wipffzh' : <type 'str'>
=> str2 = 'wipffzhk' : <type 'str'>
==================================================
os0.link(path1,path2)                                                  # STEP 102
ACTION: os0.link(path1,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta/beta/beta/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/phi'
REFERENCE ACTION: os_REF0.link(path1,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links
==================================================
result = os0.read(fd1,bytes3)                                          # STEP 103
ACTION: result = os0.read(fd1,bytes3) 
bytes3 = 1 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033dff90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes3) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (w) ',), <traceback object at 0x103495d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21262, in act431
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
11.1450982094 TOTAL RUNTIME
219 EXECUTED
43704 TOTAL TEST OPERATIONS
8.32124185562 TIME SPENT EXECUTING TEST OPERATIONS
1.8753027916 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0226490497589 TIME SPENT CHECKING PROPERTIES
8.34389090538 TOTAL TIME SPENT RUNNING SUT
0.607527017593 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
