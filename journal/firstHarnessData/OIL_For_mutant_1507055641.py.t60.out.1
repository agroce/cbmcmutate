Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59986.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(17, 'Directory exists in fake filesystem'), <traceback object at 0x1038f28c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22, in newFakeOS
    fs.CreateDirectory('/Volumes/ramdisk')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2059, in CreateDirectory
    raise OSError(errno.EEXIST, 'Directory exists in fake filesystem', directory_path)
Original test has 146 steps

SAVING TEST AS failure.59986.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "alpha"                                                     # STEP 0
ACTION: component1 = "alpha" 
component1 = None : <type 'NoneType'>
=> component1 = 'alpha' : <type 'str'>
==================================================
component3 = "alpha"                                                     # STEP 1
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
component2 = "delta"                                                     # STEP 2
ACTION: component2 = "delta" 
component2 = None : <type 'NoneType'>
=> component2 = 'delta' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 3
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component0 = "h"                                                         # STEP 4
ACTION: component0 = "h" 
component0 = None : <type 'NoneType'>
=> component0 = 'h' : <type 'str'>
==================================================
component4 = "e"                                                         # STEP 5
ACTION: component4 = "e" 
component4 = None : <type 'NoneType'>
=> component4 = 'e' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 6
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += " "                                                              # STEP 7
ACTION: str3 += " " 
str3 = '' : <type 'str'>
=> str3 = ' ' : <type 'str'>
==================================================
str3 += 'm'                                                              # STEP 8
ACTION: str3 += 'm' 
str3 = ' ' : <type 'str'>
=> str3 = ' m' : <type 'str'>
==================================================
str3 += 'o'                                                              # STEP 9
ACTION: str3 += 'o' 
str3 = ' m' : <type 'str'>
=> str3 = ' mo' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 10
ACTION: str3 += 'l' 
str3 = ' mo' : <type 'str'>
=> str3 = ' mol' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 11
ACTION: str3 += 'j' 
str3 = ' mol' : <type 'str'>
=> str3 = ' molj' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 12
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 14
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 15
ACTION: str3 += 's' 
str3 = ' molj' : <type 'str'>
=> str3 = ' moljs' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 16
ACTION: str3 += 'l' 
str3 = ' moljs' : <type 'str'>
=> str3 = ' moljsl' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 17
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str3 += 'k'                                                             # STEP 18
ACTION: str3 += 'k' 
str3 = ' moljsl' : <type 'str'>
=> str3 = ' moljslk' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 19
ACTION: str3 += 'e' 
str3 = ' moljslk' : <type 'str'>
=> str3 = ' moljslke' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 20
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 21
ACTION: path4 += "/" + component0 
component0 = 'h' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 22
ACTION: str2 += 'z' 
str2 = '' : <type 'str'>
=> str2 = 'z' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 23
ACTION: str2 += " " 
str2 = 'z' : <type 'str'>
=> str2 = 'z ' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 24
ACTION: str2 += 'l' 
str2 = 'z ' : <type 'str'>
=> str2 = 'z l' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 25
ACTION: str2 += 'r' 
str2 = 'z l' : <type 'str'>
=> str2 = 'z lr' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 26
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 27
ACTION: str3 += 'w' 
str3 = ' moljslke' : <type 'str'>
=> str3 = ' moljslkew' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 28
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component0 = "phi"                                                      # STEP 29
ACTION: component0 = "phi" 
component0 = 'h' : <type 'str'>
=> component0 = 'phi' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 30
ACTION: str4 += 's' 
str4 = '' : <type 'str'>
=> str4 = 's' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 31
ACTION: str3 += 'h' 
str3 = ' moljslkew' : <type 'str'>
=> str3 = ' moljslkewh' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 32
ACTION: str3 += 'o' 
str3 = ' moljslkewh' : <type 'str'>
=> str3 = ' moljslkewho' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 33
ACTION: str3 += 'f' 
str3 = ' moljslkewho' : <type 'str'>
=> str3 = ' moljslkewhof' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 34
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str2 += 'n'                                                             # STEP 35
ACTION: str2 += 'n' 
str2 = 'z lr' : <type 'str'>
=> str2 = 'z lrn' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 36
ACTION: str4 += " " 
str4 = 's' : <type 'str'>
=> str4 = 's ' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 37
ACTION: str3 += 'q' 
str3 = ' moljslkewhof' : <type 'str'>
=> str3 = ' moljslkewhofq' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 38
ACTION: str4 += 'r' 
str4 = 's ' : <type 'str'>
=> str4 = 's r' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 39
ACTION: str4 += 'e' 
str4 = 's r' : <type 'str'>
=> str4 = 's re' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 40
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str3 += 'n'                                                             # STEP 41
ACTION: str3 += 'n' 
str3 = ' moljslkewhofq' : <type 'str'>
=> str3 = ' moljslkewhofqn' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 42
ACTION: str2 += 'm' 
str2 = 'z lrn' : <type 'str'>
=> str2 = 'z lrnm' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 43
ACTION: str4 = "" 
str4 = 's re' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 44
ACTION: str2 += 'l' 
str2 = 'z lrnm' : <type 'str'>
=> str2 = 'z lrnml' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 45
ACTION: str3 += 'k' 
str3 = ' moljslkewhofqn' : <type 'str'>
=> str3 = ' moljslkewhofqnk' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 46
ACTION: str4 += 'x' 
str4 = '' : <type 'str'>
=> str4 = 'x' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 47
ACTION: str3 += 'o' 
str3 = ' moljslkewhofqnk' : <type 'str'>
=> str3 = ' moljslkewhofqnko' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 48
ACTION: str3 += 'v' 
str3 = ' moljslkewhofqnko' : <type 'str'>
=> str3 = ' moljslkewhofqnkov' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 49
ACTION: str3 += 'v' 
str3 = ' moljslkewhofqnkov' : <type 'str'>
=> str3 = ' moljslkewhofqnkovv' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 50
ACTION: str2 += 's' 
str2 = 'z lrnml' : <type 'str'>
=> str2 = 'z lrnmls' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 51
ACTION: str2 += 'p' 
str2 = 'z lrnmls' : <type 'str'>
=> str2 = 'z lrnmlsp' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 52
ACTION: path4 += "/" + component0 
component0 = 'phi' : <type 'str'>
path4 = '/Volumes/ramdisk/test/h' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/h/phi' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 53
ACTION: bytes0 = 0 
bytes0 = 1 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
component0 = "c"                                                        # STEP 54
ACTION: component0 = "c" 
component0 = 'phi' : <type 'str'>
=> component0 = 'c' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 55
ACTION: str4 += 'r' 
str4 = 'x' : <type 'str'>
=> str4 = 'xr' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 56
ACTION: str4 += 'n' 
str4 = 'xr' : <type 'str'>
=> str4 = 'xrn' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 57
ACTION: str3 += 'g' 
str3 = ' moljslkewhofqnkovv' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvg' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 58
ACTION: path3 += "/" + component4 
component4 = 'e' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 59
ACTION: path4 += "/" + component0 
component0 = 'c' : <type 'str'>
path4 = '/Volumes/ramdisk/test/h/phi' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/h/phi/c' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 60
ACTION: str3 += 'p' 
str3 = ' moljslkewhofqnkovvg' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvgp' : <type 'str'>
==================================================
component4 = "e"                                                        # STEP 61
ACTION: component4 = "e" 
component4 = 'e' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 62
ACTION: str4 += " " 
str4 = 'xrn' : <type 'str'>
=> str4 = 'xrn ' : <type 'str'>
==================================================
component0 = "f"                                                        # STEP 63
ACTION: component0 = "f" 
component0 = 'c' : <type 'str'>
=> component0 = 'f' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 64
ACTION: str2 += 'p' 
str2 = 'z lrnmlsp' : <type 'str'>
=> str2 = 'z lrnmlspp' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 65
ACTION: str2 += 'r' 
str2 = 'z lrnmlspp' : <type 'str'>
=> str2 = 'z lrnmlsppr' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 66
ACTION: str4 += 'v' 
str4 = 'xrn ' : <type 'str'>
=> str4 = 'xrn v' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 67
ACTION: str4 += 'y' 
str4 = 'xrn v' : <type 'str'>
=> str4 = 'xrn vy' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 68
ACTION: path0 += "/" + component1 
component1 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 69
ACTION: str4 += 'f' 
str4 = 'xrn vy' : <type 'str'>
=> str4 = 'xrn vyf' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 70
ACTION: str4 += 'e' 
str4 = 'xrn vyf' : <type 'str'>
=> str4 = 'xrn vyfe' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 71
ACTION: str3 += 'p' 
str3 = ' moljslkewhofqnkovvgp' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvgpp' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 72
ACTION: str2 += 'i' 
str2 = 'z lrnmlsppr' : <type 'str'>
=> str2 = 'z lrnmlsppri' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 73
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 74
ACTION: str3 += 'h' 
str3 = ' moljslkewhofqnkovvgpp' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvgpph' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 75
ACTION: str3 += 'r' 
str3 = ' moljslkewhofqnkovvgpph' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvgpphr' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 76
ACTION: str4 += 'k' 
str4 = 'xrn vyfe' : <type 'str'>
=> str4 = 'xrn vyfek' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 77
ACTION: str2 += 'd' 
str2 = 'z lrnmlsppri' : <type 'str'>
=> str2 = 'z lrnmlspprid' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 78
ACTION: str2 += 'k' 
str2 = 'z lrnmlspprid' : <type 'str'>
=> str2 = 'z lrnmlsppridk' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 79
ACTION: str1 += 'y' 
str1 = '' : <type 'str'>
=> str1 = 'y' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 80
ACTION: str1 += " " 
str1 = 'y' : <type 'str'>
=> str1 = 'y ' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 81
ACTION: str3 += 'e' 
str3 = ' moljslkewhofqnkovvgpphr' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvgpphre' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 82
ACTION: str2 += 'o' 
str2 = 'z lrnmlsppridk' : <type 'str'>
=> str2 = 'z lrnmlsppridko' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 83
ACTION: str2 += 'w' 
str2 = 'z lrnmlsppridko' : <type 'str'>
=> str2 = 'z lrnmlsppridkow' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 84
ACTION: str4 += 'y' 
str4 = 'xrn vyfek' : <type 'str'>
=> str4 = 'xrn vyfeky' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 85
ACTION: str1 += 'r' 
str1 = 'y ' : <type 'str'>
=> str1 = 'y r' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 86
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 87
ACTION: str4 += 'j' 
str4 = 'xrn vyfeky' : <type 'str'>
=> str4 = 'xrn vyfekyj' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 88
ACTION: path3 += "/" + component0 
component0 = 'f' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
component0 = "alpha"                                                    # STEP 89
ACTION: component0 = "alpha" 
component0 = 'f' : <type 'str'>
=> component0 = 'alpha' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 90
ACTION: str3 += 'b' 
str3 = ' moljslkewhofqnkovvgpphre' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvgpphreb' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 91
ACTION: str2 += 't' 
str2 = 'z lrnmlsppridkow' : <type 'str'>
=> str2 = 'z lrnmlsppridkowt' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 92
ACTION: str1 += 'r' 
str1 = 'y r' : <type 'str'>
=> str1 = 'y rr' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 93
ACTION: str2 += 'c' 
str2 = 'z lrnmlsppridkowt' : <type 'str'>
=> str2 = 'z lrnmlsppridkowtc' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 94
ACTION: str3 += 's' 
str3 = ' moljslkewhofqnkovvgpphreb' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvgpphrebs' : <type 'str'>
==================================================
component1 = "h"                                                        # STEP 95
ACTION: component1 = "h" 
component1 = 'alpha' : <type 'str'>
=> component1 = 'h' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 96
ACTION: str2 += 'r' 
str2 = 'z lrnmlsppridkowtc' : <type 'str'>
=> str2 = 'z lrnmlsppridkowtcr' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 97
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 98
ACTION: str1 += 'a' 
str1 = 'y rr' : <type 'str'>
=> str1 = 'y rra' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 99
ACTION: str2 += 'y' 
str2 = 'z lrnmlsppridkowtcr' : <type 'str'>
=> str2 = 'z lrnmlsppridkowtcry' : <type 'str'>
==================================================
str2 += 'w'                                                            # STEP 100
ACTION: str2 += 'w' 
str2 = 'z lrnmlsppridkowtcry' : <type 'str'>
=> str2 = 'z lrnmlsppridkowtcryw' : <type 'str'>
==================================================
str1 += 't'                                                            # STEP 101
ACTION: str1 += 't' 
str1 = 'y rra' : <type 'str'>
=> str1 = 'y rrat' : <type 'str'>
==================================================
path3 += "/" + component1                                              # STEP 102
ACTION: path3 += "/" + component1 
component1 = 'h' : <type 'str'>
path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f/h' : <type 'str'>
==================================================
str1 += 'o'                                                            # STEP 103
ACTION: str1 += 'o' 
str1 = 'y rrat' : <type 'str'>
=> str1 = 'y rrato' : <type 'str'>
==================================================
bytes1 += 1                                                            # STEP 104
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str3 += 'z'                                                            # STEP 105
ACTION: str3 += 'z' 
str3 = ' moljslkewhofqnkovvgpphrebs' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvgpphrebsz' : <type 'str'>
==================================================
str3 += 'w'                                                            # STEP 106
ACTION: str3 += 'w' 
str3 = ' moljslkewhofqnkovvgpphrebsz' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvgpphrebszw' : <type 'str'>
==================================================
str1 += " "                                                            # STEP 107
ACTION: str1 += " " 
str1 = 'y rrato' : <type 'str'>
=> str1 = 'y rrato ' : <type 'str'>
==================================================
str2 += 'h'                                                            # STEP 108
ACTION: str2 += 'h' 
str2 = 'z lrnmlsppridkowtcryw' : <type 'str'>
=> str2 = 'z lrnmlsppridkowtcrywh' : <type 'str'>
==================================================
str4 += 'b'                                                            # STEP 109
ACTION: str4 += 'b' 
str4 = 'xrn vyfekyj' : <type 'str'>
=> str4 = 'xrn vyfekyjb' : <type 'str'>
==================================================
str3 += 'r'                                                            # STEP 110
ACTION: str3 += 'r' 
str3 = ' moljslkewhofqnkovvgpphrebszw' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvgpphrebszwr' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                        # STEP 111
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/h/phi/c' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'f'                                                            # STEP 112
ACTION: str4 += 'f' 
str4 = 'xrn vyfekyjb' : <type 'str'>
=> str4 = 'xrn vyfekyjbf' : <type 'str'>
==================================================
str1 += 'w'                                                            # STEP 113
ACTION: str1 += 'w' 
str1 = 'y rrato ' : <type 'str'>
=> str1 = 'y rrato w' : <type 'str'>
==================================================
component1 = "epsilon"                                                 # STEP 114
ACTION: component1 = "epsilon" 
component1 = 'h' : <type 'str'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
str2 += 'j'                                                            # STEP 115
ACTION: str2 += 'j' 
str2 = 'z lrnmlsppridkowtcrywh' : <type 'str'>
=> str2 = 'z lrnmlsppridkowtcrywhj' : <type 'str'>
==================================================
str3 += 'k'                                                            # STEP 116
ACTION: str3 += 'k' 
str3 = ' moljslkewhofqnkovvgpphrebszwr' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvgpphrebszwrk' : <type 'str'>
==================================================
str4 += 'e'                                                            # STEP 117
ACTION: str4 += 'e' 
str4 = 'xrn vyfekyjbf' : <type 'str'>
=> str4 = 'xrn vyfekyjbfe' : <type 'str'>
==================================================
str2 += 'z'                                                            # STEP 118
ACTION: str2 += 'z' 
str2 = 'z lrnmlsppridkowtcrywhj' : <type 'str'>
=> str2 = 'z lrnmlsppridkowtcrywhjz' : <type 'str'>
==================================================
str4 += 'k'                                                            # STEP 119
ACTION: str4 += 'k' 
str4 = 'xrn vyfekyjbfe' : <type 'str'>
=> str4 = 'xrn vyfekyjbfek' : <type 'str'>
==================================================
path2 += "/" + component1                                              # STEP 120
ACTION: path2 += "/" + component1 
component1 = 'epsilon' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
path0 += "/" + component0                                              # STEP 121
ACTION: path0 += "/" + component0 
component0 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/alpha/alpha' : <type 'str'>
==================================================
str2 = ""                                                              # STEP 122
ACTION: str2 = "" 
str2 = 'z lrnmlsppridkowtcrywhjz' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str4 += 'h'                                                            # STEP 123
ACTION: str4 += 'h' 
str4 = 'xrn vyfekyjbfek' : <type 'str'>
=> str4 = 'xrn vyfekyjbfekh' : <type 'str'>
==================================================
path0 += "/" + component0                                              # STEP 124
ACTION: path0 += "/" + component0 
component0 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test/alpha/alpha' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/alpha/alpha/alpha' : <type 'str'>
==================================================
str3 += 'q'                                                            # STEP 125
ACTION: str3 += 'q' 
str3 = ' moljslkewhofqnkovvgpphrebszwrk' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvgpphrebszwrkq' : <type 'str'>
==================================================
str2 += 'f'                                                            # STEP 126
ACTION: str2 += 'f' 
str2 = '' : <type 'str'>
=> str2 = 'f' : <type 'str'>
==================================================
component1 = "d"                                                       # STEP 127
ACTION: component1 = "d" 
component1 = 'epsilon' : <type 'str'>
=> component1 = 'd' : <type 'str'>
==================================================
str1 += 'v'                                                            # STEP 128
ACTION: str1 += 'v' 
str1 = 'y rrato w' : <type 'str'>
=> str1 = 'y rrato wv' : <type 'str'>
==================================================
str3 += 'r'                                                            # STEP 129
ACTION: str3 += 'r' 
str3 = ' moljslkewhofqnkovvgpphrebszwrkq' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvgpphrebszwrkqr' : <type 'str'>
==================================================
str4 += 'o'                                                            # STEP 130
ACTION: str4 += 'o' 
str4 = 'xrn vyfekyjbfekh' : <type 'str'>
=> str4 = 'xrn vyfekyjbfekho' : <type 'str'>
==================================================
str2 += 'x'                                                            # STEP 131
ACTION: str2 += 'x' 
str2 = 'f' : <type 'str'>
=> str2 = 'fx' : <type 'str'>
==================================================
str4 += 'n'                                                            # STEP 132
ACTION: str4 += 'n' 
str4 = 'xrn vyfekyjbfekho' : <type 'str'>
=> str4 = 'xrn vyfekyjbfekhon' : <type 'str'>
==================================================
str4 += 'n'                                                            # STEP 133
ACTION: str4 += 'n' 
str4 = 'xrn vyfekyjbfekhon' : <type 'str'>
=> str4 = 'xrn vyfekyjbfekhonn' : <type 'str'>
==================================================
str2 += 'o'                                                            # STEP 134
ACTION: str2 += 'o' 
str2 = 'fx' : <type 'str'>
=> str2 = 'fxo' : <type 'str'>
==================================================
str4 += 'c'                                                            # STEP 135
ACTION: str4 += 'c' 
str4 = 'xrn vyfekyjbfekhonn' : <type 'str'>
=> str4 = 'xrn vyfekyjbfekhonnc' : <type 'str'>
==================================================
str4 += 'q'                                                            # STEP 136
ACTION: str4 += 'q' 
str4 = 'xrn vyfekyjbfekhonnc' : <type 'str'>
=> str4 = 'xrn vyfekyjbfekhonncq' : <type 'str'>
==================================================
str2 += " "                                                            # STEP 137
ACTION: str2 += " " 
str2 = 'fxo' : <type 'str'>
=> str2 = 'fxo ' : <type 'str'>
==================================================
str2 += 'n'                                                            # STEP 138
ACTION: str2 += 'n' 
str2 = 'fxo ' : <type 'str'>
=> str2 = 'fxo n' : <type 'str'>
==================================================
path3 += "/" + component0                                              # STEP 139
ACTION: path3 += "/" + component0 
component0 = 'alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test/f/h' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f/h/alpha' : <type 'str'>
==================================================
path3 += "/" + component2                                              # STEP 140
ACTION: path3 += "/" + component2 
component2 = 'delta' : <type 'str'>
path3 = '/Volumes/ramdisk/test/f/h/alpha' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f/h/alpha/delta' : <type 'str'>
==================================================
str2 += 'g'                                                            # STEP 141
ACTION: str2 += 'g' 
str2 = 'fxo n' : <type 'str'>
=> str2 = 'fxo ng' : <type 'str'>
==================================================
str4 += 'z'                                                            # STEP 142
ACTION: str4 += 'z' 
str4 = 'xrn vyfekyjbfekhonncq' : <type 'str'>
=> str4 = 'xrn vyfekyjbfekhonncqz' : <type 'str'>
==================================================
str1 += 'o'                                                            # STEP 143
ACTION: str1 += 'o' 
str1 = 'y rrato wv' : <type 'str'>
=> str1 = 'y rrato wvo' : <type 'str'>
==================================================
str3 += 'h'                                                            # STEP 144
ACTION: str3 += 'h' 
str3 = ' moljslkewhofqnkovvgpphrebszwrkqr' : <type 'str'>
=> str3 = ' moljslkewhofqnkovvgpphrebszwrkqrh' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 145
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk'
ERROR: (<type 'exceptions.OSError'>, OSError(17, 'Directory exists in fake filesystem'), <traceback object at 0x1006c33b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22, in newFakeOS
    fs.CreateDirectory('/Volumes/ramdisk')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2059, in CreateDirectory
    raise OSError(errno.EEXIST, 'Directory exists in fake filesystem', directory_path)
STOPPING TESTING DUE TO FAILED TEST
0.0356049537659 TOTAL RUNTIME
1 EXECUTED
146 TOTAL TEST OPERATIONS
0.00247430801392 TIME SPENT EXECUTING TEST OPERATIONS
0.00676488876343 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
6.17504119873e-05 TIME SPENT CHECKING PROPERTIES
0.0025360584259 TOTAL TIME SPENT RUNNING SUT
0.00366187095642 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
