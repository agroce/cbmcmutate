Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.48398.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('str() takes at most 1 argument (3 given)',), <traceback object at 0x103deb050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17, in newFakeOS
    fs = pyfakefs.fake_filesystem.FakeFilesystem()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 863, in __init__
    self.root = FakeDirectory(self.path_separator, filesystem=self)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 649, in __init__
    FakeFile.__init__(self, name, (stat.S_IFDIR | perm_bits), {}, filesystem=filesystem)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 368, in __init__
    self._byte_contents = self._encode_contents(contents)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 440, in _encode_contents
    contents = bytes(contents, (self.encoding or locale.getpreferredencoding(False)), self.errors)
Original test has 180 steps

SAVING TEST AS failure.48398.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component3 = "phi"                                                       # STEP 1
ACTION: component3 = "phi" 
component3 = None : <type 'NoneType'>
=> component3 = 'phi' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 2
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component2 = "phi"                                                       # STEP 3
ACTION: component2 = "phi" 
component2 = None : <type 'NoneType'>
=> component2 = 'phi' : <type 'str'>
==================================================
component0 = "d"                                                         # STEP 4
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
component1 = "beta"                                                      # STEP 5
ACTION: component1 = "beta" 
component1 = None : <type 'NoneType'>
=> component1 = 'beta' : <type 'str'>
==================================================
path0 += "/" + component2                                                # STEP 6
ACTION: path0 += "/" + component2 
component2 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
component4 = "phi"                                                       # STEP 7
ACTION: component4 = "phi" 
component4 = None : <type 'NoneType'>
=> component4 = 'phi' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 9
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 10
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 11
ACTION: path3 += "/" + component2 
component2 = 'phi' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 12
ACTION: path3 += "/" + component1 
component1 = 'beta' : <type 'str'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi/beta' : <type 'str'>
==================================================
component1 = "gamma"                                                    # STEP 13
ACTION: component1 = "gamma" 
component1 = 'beta' : <type 'str'>
=> component1 = 'gamma' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 14
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 15
ACTION: path3 += "/" + component2 
component2 = 'phi' : <type 'str'>
path3 = '/Volumes/ramdisk/test/phi/beta' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi/beta/phi' : <type 'str'>
==================================================
component2 = "alpha"                                                    # STEP 16
ACTION: component2 = "alpha" 
component2 = 'phi' : <type 'str'>
=> component2 = 'alpha' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 17
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 18
ACTION: path2 += "/" + component3 
component3 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
component3 = "phi"                                                      # STEP 19
ACTION: component3 = "phi" 
component3 = 'phi' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 20
ACTION: str1 += 'f' 
str1 = '' : <type 'str'>
=> str1 = 'f' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 21
ACTION: str1 += 'p' 
str1 = 'f' : <type 'str'>
=> str1 = 'fp' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 22
ACTION: str1 += 'l' 
str1 = 'fp' : <type 'str'>
=> str1 = 'fpl' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 23
ACTION: path0 += "/" + component4 
component4 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
component4 = "g"                                                        # STEP 24
ACTION: component4 = "g" 
component4 = 'phi' : <type 'str'>
=> component4 = 'g' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 25
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str1 += 'e'                                                             # STEP 26
ACTION: str1 += 'e' 
str1 = 'fpl' : <type 'str'>
=> str1 = 'fple' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 27
ACTION: path3 += "/" + component3 
component3 = 'phi' : <type 'str'>
path3 = '/Volumes/ramdisk/test/phi/beta/phi' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi/beta/phi/phi' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 28
ACTION: path0 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi/alpha' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 29
ACTION: str1 += " " 
str1 = 'fple' : <type 'str'>
=> str1 = 'fple ' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 30
ACTION: str1 += 'i' 
str1 = 'fple ' : <type 'str'>
=> str1 = 'fple i' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 31
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 32
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/phi/alpha' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 33
ACTION: path3 += "/" + component4 
component4 = 'g' : <type 'str'>
path3 = '/Volumes/ramdisk/test/phi/beta/phi/phi' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi/beta/phi/phi/g' : <type 'str'>
==================================================
component3 = "g"                                                        # STEP 34
ACTION: component3 = "g" 
component3 = 'phi' : <type 'str'>
=> component3 = 'g' : <type 'str'>
==================================================
component4 = "omega"                                                    # STEP 35
ACTION: component4 = "omega" 
component4 = 'g' : <type 'str'>
=> component4 = 'omega' : <type 'str'>
==================================================
component2 = "c"                                                        # STEP 36
ACTION: component2 = "c" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'c' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 37
ACTION: str1 += 't' 
str1 = 'fple i' : <type 'str'>
=> str1 = 'fple it' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 38
ACTION: str1 += 'x' 
str1 = 'fple it' : <type 'str'>
=> str1 = 'fple itx' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 39
ACTION: str1 += 't' 
str1 = 'fple itx' : <type 'str'>
=> str1 = 'fple itxt' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 40
ACTION: path0 += "/" + component2 
component2 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 41
ACTION: str1 += 'd' 
str1 = 'fple itxt' : <type 'str'>
=> str1 = 'fple itxtd' : <type 'str'>
==================================================
component2 = "h"                                                        # STEP 42
ACTION: component2 = "h" 
component2 = 'c' : <type 'str'>
=> component2 = 'h' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 43
ACTION: path0 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c/gamma' : <type 'str'>
==================================================
component1 = "h"                                                        # STEP 44
ACTION: component1 = "h" 
component1 = 'gamma' : <type 'str'>
=> component1 = 'h' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 45
ACTION: path0 += "/" + component2 
component2 = 'h' : <type 'str'>
path0 = '/Volumes/ramdisk/test/c/gamma' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c/gamma/h' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 46
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
component2 = "b"                                                        # STEP 47
ACTION: component2 = "b" 
component2 = 'h' : <type 'str'>
=> component2 = 'b' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 48
ACTION: str1 += 'y' 
str1 = 'fple itxtd' : <type 'str'>
=> str1 = 'fple itxtdy' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 49
ACTION: str1 += 'o' 
str1 = 'fple itxtdy' : <type 'str'>
=> str1 = 'fple itxtdyo' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 50
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 51
ACTION: bytes1 += 1 
bytes1 = 1 : <type 'int'>
=> bytes1 = 2 : <type 'int'>
==================================================
str4 = ""                                                               # STEP 52
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 53
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str1 += 'i'                                                             # STEP 54
ACTION: str1 += 'i' 
str1 = 'fple itxtdyo' : <type 'str'>
=> str1 = 'fple itxtdyoi' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 55
ACTION: str1 += 'e' 
str1 = 'fple itxtdyoi' : <type 'str'>
=> str1 = 'fple itxtdyoie' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 56
ACTION: str4 += 'y' 
str4 = '' : <type 'str'>
=> str4 = 'y' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 57
ACTION: path3 += "/" + component3 
component3 = 'g' : <type 'str'>
path3 = '/Volumes/ramdisk/test/phi/beta/phi/phi/g' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi/beta/phi/phi/g/g' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 58
ACTION: path3 += "/" + component1 
component1 = 'h' : <type 'str'>
path3 = '/Volumes/ramdisk/test/phi/beta/phi/phi/g/g' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi/beta/phi/phi/g/g/h' : <type 'str'>
==================================================
component3 = "d"                                                        # STEP 59
ACTION: component3 = "d" 
component3 = 'g' : <type 'str'>
=> component3 = 'd' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 60
ACTION: str4 += 's' 
str4 = 'y' : <type 'str'>
=> str4 = 'ys' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 61
ACTION: str4 += 'f' 
str4 = 'ys' : <type 'str'>
=> str4 = 'ysf' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 62
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str1 += 'a'                                                             # STEP 63
ACTION: str1 += 'a' 
str1 = 'fple itxtdyoie' : <type 'str'>
=> str1 = 'fple itxtdyoiea' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 64
ACTION: path2 += "/" + component1 
component1 = 'h' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/h' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 65
ACTION: str1 += 'd' 
str1 = 'fple itxtdyoiea' : <type 'str'>
=> str1 = 'fple itxtdyoiead' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 66
ACTION: str4 += " " 
str4 = 'ysf' : <type 'str'>
=> str4 = 'ysf ' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 67
ACTION: str4 += 's' 
str4 = 'ysf ' : <type 'str'>
=> str4 = 'ysf s' : <type 'str'>
==================================================
component1 = "phi"                                                      # STEP 68
ACTION: component1 = "phi" 
component1 = 'h' : <type 'str'>
=> component1 = 'phi' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 69
ACTION: str4 += 'h' 
str4 = 'ysf s' : <type 'str'>
=> str4 = 'ysf sh' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 70
ACTION: path1 += "/" + component0 
component0 = 'd' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 71
ACTION: str4 += 'e' 
str4 = 'ysf sh' : <type 'str'>
=> str4 = 'ysf she' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 72
ACTION: str1 = "" 
str1 = 'fple itxtdyoiead' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
component0 = "g"                                                        # STEP 73
ACTION: component0 = "g" 
component0 = 'd' : <type 'str'>
=> component0 = 'g' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 74
ACTION: str1 += 'b' 
str1 = '' : <type 'str'>
=> str1 = 'b' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 75
ACTION: str1 += 'g' 
str1 = 'b' : <type 'str'>
=> str1 = 'bg' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 76
ACTION: path2 += "/" + component3 
component3 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi/h' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/h/d' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 77
ACTION: str4 += 'k' 
str4 = 'ysf she' : <type 'str'>
=> str4 = 'ysf shek' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 78
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 79
ACTION: path4 += "/" + component0 
component0 = 'g' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 80
ACTION: str1 += 'e' 
str1 = 'bg' : <type 'str'>
=> str1 = 'bge' : <type 'str'>
==================================================
component3 = "a"                                                        # STEP 81
ACTION: component3 = "a" 
component3 = 'd' : <type 'str'>
=> component3 = 'a' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 82
ACTION: str4 += 'k' 
str4 = 'ysf shek' : <type 'str'>
=> str4 = 'ysf shekk' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 83
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
path0 += "/" + component4                                               # STEP 84
ACTION: path0 += "/" + component4 
component4 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test/c/gamma/h' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c/gamma/h/omega' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 85
ACTION: str4 += 'v' 
str4 = 'ysf shekk' : <type 'str'>
=> str4 = 'ysf shekkv' : <type 'str'>
==================================================
component4 = "h"                                                        # STEP 86
ACTION: component4 = "h" 
component4 = 'omega' : <type 'str'>
=> component4 = 'h' : <type 'str'>
==================================================
component0 = "lambda"                                                   # STEP 87
ACTION: component0 = "lambda" 
component0 = 'g' : <type 'str'>
=> component0 = 'lambda' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 88
ACTION: str4 += 'z' 
str4 = 'ysf shekkv' : <type 'str'>
=> str4 = 'ysf shekkvz' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 89
ACTION: str1 += 'j' 
str1 = 'bge' : <type 'str'>
=> str1 = 'bgej' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 90
ACTION: path1 += "/" + component1 
component1 = 'phi' : <type 'str'>
path1 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/d/phi' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 91
ACTION: str4 += " " 
str4 = 'ysf shekkvz' : <type 'str'>
=> str4 = 'ysf shekkvz ' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 92
ACTION: str4 += 'e' 
str4 = 'ysf shekkvz ' : <type 'str'>
=> str4 = 'ysf shekkvz e' : <type 'str'>
==================================================
component1 = "beta"                                                     # STEP 93
ACTION: component1 = "beta" 
component1 = 'phi' : <type 'str'>
=> component1 = 'beta' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 94
ACTION: str1 += 'q' 
str1 = 'bgej' : <type 'str'>
=> str1 = 'bgejq' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 95
ACTION: str4 += 'g' 
str4 = 'ysf shekkvz e' : <type 'str'>
=> str4 = 'ysf shekkvz eg' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 96
ACTION: path2 += "/" + component2 
component2 = 'b' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi/h/d' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/h/d/b' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 97
ACTION: path2 += "/" + component4 
component4 = 'h' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi/h/d/b' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/h/d/b/h' : <type 'str'>
==================================================
component4 = "lambda"                                                   # STEP 98
ACTION: component4 = "lambda" 
component4 = 'h' : <type 'str'>
=> component4 = 'lambda' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 99
ACTION: str4 += 'g' 
str4 = 'ysf shekkvz eg' : <type 'str'>
=> str4 = 'ysf shekkvz egg' : <type 'str'>
==================================================
bytes1 += 1                                                            # STEP 100
ACTION: bytes1 += 1 
bytes1 = 2 : <type 'int'>
=> bytes1 = 3 : <type 'int'>
==================================================
str4 += " "                                                            # STEP 101
ACTION: str4 += " " 
str4 = 'ysf shekkvz egg' : <type 'str'>
=> str4 = 'ysf shekkvz egg ' : <type 'str'>
==================================================
str1 += 'k'                                                            # STEP 102
ACTION: str1 += 'k' 
str1 = 'bgejq' : <type 'str'>
=> str1 = 'bgejqk' : <type 'str'>
==================================================
str4 += 'v'                                                            # STEP 103
ACTION: str4 += 'v' 
str4 = 'ysf shekkvz egg ' : <type 'str'>
=> str4 = 'ysf shekkvz egg v' : <type 'str'>
==================================================
str1 += 'w'                                                            # STEP 104
ACTION: str1 += 'w' 
str1 = 'bgejqk' : <type 'str'>
=> str1 = 'bgejqkw' : <type 'str'>
==================================================
str1 += 'k'                                                            # STEP 105
ACTION: str1 += 'k' 
str1 = 'bgejqkw' : <type 'str'>
=> str1 = 'bgejqkwk' : <type 'str'>
==================================================
str1 += 'l'                                                            # STEP 106
ACTION: str1 += 'l' 
str1 = 'bgejqkwk' : <type 'str'>
=> str1 = 'bgejqkwkl' : <type 'str'>
==================================================
str1 += 's'                                                            # STEP 107
ACTION: str1 += 's' 
str1 = 'bgejqkwkl' : <type 'str'>
=> str1 = 'bgejqkwkls' : <type 'str'>
==================================================
path1 += "/" + component3                                              # STEP 108
ACTION: path1 += "/" + component3 
component3 = 'a' : <type 'str'>
path1 = '/Volumes/ramdisk/test/d/phi' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/d/phi/a' : <type 'str'>
==================================================
str1 += 'c'                                                            # STEP 109
ACTION: str1 += 'c' 
str1 = 'bgejqkwkls' : <type 'str'>
=> str1 = 'bgejqkwklsc' : <type 'str'>
==================================================
str4 += 'o'                                                            # STEP 110
ACTION: str4 += 'o' 
str4 = 'ysf shekkvz egg v' : <type 'str'>
=> str4 = 'ysf shekkvz egg vo' : <type 'str'>
==================================================
path3 += "/" + component3                                              # STEP 111
ACTION: path3 += "/" + component3 
component3 = 'a' : <type 'str'>
path3 = '/Volumes/ramdisk/test/phi/beta/phi/phi/g/g/h' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi/beta/phi/phi/g/g/h/a' : <type 'str'>
==================================================
path2 += "/" + component3                                              # STEP 112
ACTION: path2 += "/" + component3 
component3 = 'a' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi/h/d/b/h' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/h/d/b/h/a' : <type 'str'>
==================================================
str1 += 'q'                                                            # STEP 113
ACTION: str1 += 'q' 
str1 = 'bgejqkwklsc' : <type 'str'>
=> str1 = 'bgejqkwklscq' : <type 'str'>
==================================================
component3 = "c"                                                       # STEP 114
ACTION: component3 = "c" 
component3 = 'a' : <type 'str'>
=> component3 = 'c' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                        # STEP 115
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component4                                              # STEP 116
ACTION: path2 += "/" + component4 
component4 = 'lambda' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi/h/d/b/h/a' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/h/d/b/h/a/lambda' : <type 'str'>
==================================================
str4 += 's'                                                            # STEP 117
ACTION: str4 += 's' 
str4 = 'ysf shekkvz egg vo' : <type 'str'>
=> str4 = 'ysf shekkvz egg vos' : <type 'str'>
==================================================
path2 += "/" + component3                                              # STEP 118
ACTION: path2 += "/" + component3 
component3 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi/h/d/b/h/a/lambda' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/h/d/b/h/a/lambda/c' : <type 'str'>
==================================================
path0 += "/" + component1                                              # STEP 119
ACTION: path0 += "/" + component1 
component1 = 'beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/c/gamma/h/omega' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c/gamma/h/omega/beta' : <type 'str'>
==================================================
component4 = "c"                                                       # STEP 120
ACTION: component4 = "c" 
component4 = 'lambda' : <type 'str'>
=> component4 = 'c' : <type 'str'>
==================================================
path0 += "/" + component1                                              # STEP 121
ACTION: path0 += "/" + component1 
component1 = 'beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/c/gamma/h/omega/beta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c/gamma/h/omega/beta/beta' : <type 'str'>
==================================================
str4 = ""                                                              # STEP 122
ACTION: str4 = "" 
str4 = 'ysf shekkvz egg vos' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
component2 = "d"                                                       # STEP 123
ACTION: component2 = "d" 
component2 = 'b' : <type 'str'>
=> component2 = 'd' : <type 'str'>
==================================================
str4 += 'r'                                                            # STEP 124
ACTION: str4 += 'r' 
str4 = '' : <type 'str'>
=> str4 = 'r' : <type 'str'>
==================================================
str4 += 'x'                                                            # STEP 125
ACTION: str4 += 'x' 
str4 = 'r' : <type 'str'>
=> str4 = 'rx' : <type 'str'>
==================================================
path1 += "/" + component4                                              # STEP 126
ACTION: path1 += "/" + component4 
component4 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test/d/phi/a' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/d/phi/a/c' : <type 'str'>
==================================================
component3 = "delta"                                                   # STEP 127
ACTION: component3 = "delta" 
component3 = 'c' : <type 'str'>
=> component3 = 'delta' : <type 'str'>
==================================================
str1 += 'e'                                                            # STEP 128
ACTION: str1 += 'e' 
str1 = 'bgejqkwklscq' : <type 'str'>
=> str1 = 'bgejqkwklscqe' : <type 'str'>
==================================================
component1 = "beta"                                                    # STEP 129
ACTION: component1 = "beta" 
component1 = 'beta' : <type 'str'>
==================================================
path1 += "/" + component4                                              # STEP 130
ACTION: path1 += "/" + component4 
component4 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test/d/phi/a/c' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/d/phi/a/c/c' : <type 'str'>
==================================================
str1 += 'p'                                                            # STEP 131
ACTION: str1 += 'p' 
str1 = 'bgejqkwklscqe' : <type 'str'>
=> str1 = 'bgejqkwklscqep' : <type 'str'>
==================================================
bytes4 += 1                                                            # STEP 132
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str1 += 'c'                                                            # STEP 133
ACTION: str1 += 'c' 
str1 = 'bgejqkwklscqep' : <type 'str'>
=> str1 = 'bgejqkwklscqepc' : <type 'str'>
==================================================
str1 = ""                                                              # STEP 134
ACTION: str1 = "" 
str1 = 'bgejqkwklscqepc' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'a'                                                            # STEP 135
ACTION: str1 += 'a' 
str1 = '' : <type 'str'>
=> str1 = 'a' : <type 'str'>
==================================================
str4 += 'w'                                                            # STEP 136
ACTION: str4 += 'w' 
str4 = 'rx' : <type 'str'>
=> str4 = 'rxw' : <type 'str'>
==================================================
str1 += 'x'                                                            # STEP 137
ACTION: str1 += 'x' 
str1 = 'a' : <type 'str'>
=> str1 = 'ax' : <type 'str'>
==================================================
str1 += 'w'                                                            # STEP 138
ACTION: str1 += 'w' 
str1 = 'ax' : <type 'str'>
=> str1 = 'axw' : <type 'str'>
==================================================
str1 += 'z'                                                            # STEP 139
ACTION: str1 += 'z' 
str1 = 'axw' : <type 'str'>
=> str1 = 'axwz' : <type 'str'>
==================================================
str4 += 'e'                                                            # STEP 140
ACTION: str4 += 'e' 
str4 = 'rxw' : <type 'str'>
=> str4 = 'rxwe' : <type 'str'>
==================================================
str1 += 'f'                                                            # STEP 141
ACTION: str1 += 'f' 
str1 = 'axwz' : <type 'str'>
=> str1 = 'axwzf' : <type 'str'>
==================================================
path0 += "/" + component2                                              # STEP 142
ACTION: path0 += "/" + component2 
component2 = 'd' : <type 'str'>
path0 = '/Volumes/ramdisk/test/c/gamma/h/omega/beta/beta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c/gamma/h/omega/beta/beta/d' : <type 'str'>
==================================================
component2 = "e"                                                       # STEP 143
ACTION: component2 = "e" 
component2 = 'd' : <type 'str'>
=> component2 = 'e' : <type 'str'>
==================================================
bytes1 = 0                                                             # STEP 144
ACTION: bytes1 = 0 
bytes1 = 3 : <type 'int'>
=> bytes1 = 0 : <type 'int'>
==================================================
str4 += 't'                                                            # STEP 145
ACTION: str4 += 't' 
str4 = 'rxwe' : <type 'str'>
=> str4 = 'rxwet' : <type 'str'>
==================================================
component4 = "g"                                                       # STEP 146
ACTION: component4 = "g" 
component4 = 'c' : <type 'str'>
=> component4 = 'g' : <type 'str'>
==================================================
str4 += 'p'                                                            # STEP 147
ACTION: str4 += 'p' 
str4 = 'rxwet' : <type 'str'>
=> str4 = 'rxwetp' : <type 'str'>
==================================================
path3 += "/" + component1                                              # STEP 148
ACTION: path3 += "/" + component1 
component1 = 'beta' : <type 'str'>
path3 = '/Volumes/ramdisk/test/phi/beta/phi/phi/g/g/h/a' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi/beta/phi/phi/g/g/h/a/beta' : <type 'str'>
==================================================
component1 = "d"                                                       # STEP 149
ACTION: component1 = "d" 
component1 = 'beta' : <type 'str'>
=> component1 = 'd' : <type 'str'>
==================================================
str1 += 'o'                                                            # STEP 150
ACTION: str1 += 'o' 
str1 = 'axwzf' : <type 'str'>
=> str1 = 'axwzfo' : <type 'str'>
==================================================
path3 += "/" + component2                                              # STEP 151
ACTION: path3 += "/" + component2 
component2 = 'e' : <type 'str'>
path3 = '/Volumes/ramdisk/test/phi/beta/phi/phi/g/g/h/a/beta' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi/beta/phi/phi/g/g/h/a/beta/e' : <type 'str'>
==================================================
str4 += 'x'                                                            # STEP 152
ACTION: str4 += 'x' 
str4 = 'rxwetp' : <type 'str'>
=> str4 = 'rxwetpx' : <type 'str'>
==================================================
str1 += 'f'                                                            # STEP 153
ACTION: str1 += 'f' 
str1 = 'axwzfo' : <type 'str'>
=> str1 = 'axwzfof' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                        # STEP 154
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/phi/h/d/b/h/a/lambda/c' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component3                                              # STEP 155
ACTION: path2 += "/" + component3 
component3 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
component3 = "lambda"                                                  # STEP 156
ACTION: component3 = "lambda" 
component3 = 'delta' : <type 'str'>
=> component3 = 'lambda' : <type 'str'>
==================================================
bytes4 = 0                                                             # STEP 157
ACTION: bytes4 = 0 
bytes4 = 1 : <type 'int'>
=> bytes4 = 0 : <type 'int'>
==================================================
component2 = "e"                                                       # STEP 158
ACTION: component2 = "e" 
component2 = 'e' : <type 'str'>
==================================================
str1 += 'u'                                                            # STEP 159
ACTION: str1 += 'u' 
str1 = 'axwzfof' : <type 'str'>
=> str1 = 'axwzfofu' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                        # STEP 160
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/d/phi/a/c/c' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'e'                                                            # STEP 161
ACTION: str4 += 'e' 
str4 = 'rxwetpx' : <type 'str'>
=> str4 = 'rxwetpxe' : <type 'str'>
==================================================
str4 += 'a'                                                            # STEP 162
ACTION: str4 += 'a' 
str4 = 'rxwetpxe' : <type 'str'>
=> str4 = 'rxwetpxea' : <type 'str'>
==================================================
str1 += 's'                                                            # STEP 163
ACTION: str1 += 's' 
str1 = 'axwzfofu' : <type 'str'>
=> str1 = 'axwzfofus' : <type 'str'>
==================================================
path1 += "/" + component3                                              # STEP 164
ACTION: path1 += "/" + component3 
component3 = 'lambda' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
str1 += 'i'                                                            # STEP 165
ACTION: str1 += 'i' 
str1 = 'axwzfofus' : <type 'str'>
=> str1 = 'axwzfofusi' : <type 'str'>
==================================================
str4 += 'j'                                                            # STEP 166
ACTION: str4 += 'j' 
str4 = 'rxwetpxea' : <type 'str'>
=> str4 = 'rxwetpxeaj' : <type 'str'>
==================================================
str4 += 'c'                                                            # STEP 167
ACTION: str4 += 'c' 
str4 = 'rxwetpxeaj' : <type 'str'>
=> str4 = 'rxwetpxeajc' : <type 'str'>
==================================================
str1 += 'o'                                                            # STEP 168
ACTION: str1 += 'o' 
str1 = 'axwzfofusi' : <type 'str'>
=> str1 = 'axwzfofusio' : <type 'str'>
==================================================
path1 += "/" + component1                                              # STEP 169
ACTION: path1 += "/" + component1 
component1 = 'd' : <type 'str'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/lambda/d' : <type 'str'>
==================================================
path2 += "/" + component3                                              # STEP 170
ACTION: path2 += "/" + component3 
component3 = 'lambda' : <type 'str'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/delta/lambda' : <type 'str'>
==================================================
component3 = "f"                                                       # STEP 171
ACTION: component3 = "f" 
component3 = 'lambda' : <type 'str'>
=> component3 = 'f' : <type 'str'>
==================================================
bytes2 += 1                                                            # STEP 172
ACTION: bytes2 += 1 
bytes2 = 1 : <type 'int'>
=> bytes2 = 2 : <type 'int'>
==================================================
component1 = "epsilon"                                                 # STEP 173
ACTION: component1 = "epsilon" 
component1 = 'd' : <type 'str'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
str1 = ""                                                              # STEP 174
ACTION: str1 = "" 
str1 = 'axwzfofusio' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str4 += 'h'                                                            # STEP 175
ACTION: str4 += 'h' 
str4 = 'rxwetpxeajc' : <type 'str'>
=> str4 = 'rxwetpxeajch' : <type 'str'>
==================================================
path1 += "/" + component4                                              # STEP 176
ACTION: path1 += "/" + component4 
component4 = 'g' : <type 'str'>
path1 = '/Volumes/ramdisk/test/lambda/d' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/lambda/d/g' : <type 'str'>
==================================================
component4 = "b"                                                       # STEP 177
ACTION: component4 = "b" 
component4 = 'g' : <type 'str'>
=> component4 = 'b' : <type 'str'>
==================================================
path1 += "/" + component3                                              # STEP 178
ACTION: path1 += "/" + component3 
component3 = 'f' : <type 'str'>
path1 = '/Volumes/ramdisk/test/lambda/d/g' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/lambda/d/g/f' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 179
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> str() takes at most 1 argument (3 given)
ERROR: (<type 'exceptions.TypeError'>, TypeError('str() takes at most 1 argument (3 given)',), <traceback object at 0x103e1ab48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17, in newFakeOS
    fs = pyfakefs.fake_filesystem.FakeFilesystem()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 863, in __init__
    self.root = FakeDirectory(self.path_separator, filesystem=self)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 649, in __init__
    FakeFile.__init__(self, name, (stat.S_IFDIR | perm_bits), {}, filesystem=filesystem)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 368, in __init__
    self._byte_contents = self._encode_contents(contents)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 440, in _encode_contents
    contents = bytes(contents, (self.encoding or locale.getpreferredencoding(False)), self.errors)
STOPPING TESTING DUE TO FAILED TEST
0.0457780361176 TOTAL RUNTIME
1 EXECUTED
180 TOTAL TEST OPERATIONS
0.00254511833191 TIME SPENT EXECUTING TEST OPERATIONS
0.00889229774475 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
8.77380371094e-05 TIME SPENT CHECKING PROPERTIES
0.00263285636902 TOTAL TIME SPENT RUNNING SUT
0.00290703773499 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
