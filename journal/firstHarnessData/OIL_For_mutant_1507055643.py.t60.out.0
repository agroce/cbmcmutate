Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.60834.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102472f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9773, in act267
    assert (type(raised) == type(refRaised))
Original test has 47 steps

SAVING TEST AS failure.60834.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "b"                                                         # STEP 0
ACTION: component3 = "b" 
component3 = None : <type 'NoneType'>
=> component3 = 'b' : <type 'str'>
==================================================
component0 = "epsilon"                                                   # STEP 1
ACTION: component0 = "epsilon" 
component0 = None : <type 'NoneType'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
component4 = "delta"                                                     # STEP 2
ACTION: component4 = "delta" 
component4 = None : <type 'NoneType'>
=> component4 = 'delta' : <type 'str'>
==================================================
component2 = "alpha"                                                     # STEP 3
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
component1 = "gamma"                                                     # STEP 4
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 6
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'e'                                                              # STEP 7
ACTION: str1 += 'e' 
str1 = '' : <type 'str'>
=> str1 = 'e' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 8
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str1 += 'm'                                                              # STEP 9
ACTION: str1 += 'm' 
str1 = 'e' : <type 'str'>
=> str1 = 'em' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 10
ACTION: str1 += 'x' 
str1 = 'em' : <type 'str'>
=> str1 = 'emx' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 11
ACTION: str1 += 'n' 
str1 = 'emx' : <type 'str'>
=> str1 = 'emxn' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 12
ACTION: str1 += 'e' 
str1 = 'emxn' : <type 'str'>
=> str1 = 'emxne' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 13
ACTION: str1 += 'f' 
str1 = 'emxne' : <type 'str'>
=> str1 = 'emxnef' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 14
ACTION: str1 += 'e' 
str1 = 'emxnef' : <type 'str'>
=> str1 = 'emxnefe' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 15
ACTION: str1 += 'h' 
str1 = 'emxnefe' : <type 'str'>
=> str1 = 'emxnefeh' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 16
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 17
ACTION: str3 += 'j' 
str3 = '' : <type 'str'>
=> str3 = 'j' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 18
ACTION: path4 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 19
ACTION: str3 += 'g' 
str3 = 'j' : <type 'str'>
=> str3 = 'jg' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 20
ACTION: str1 += 'w' 
str1 = 'emxnefeh' : <type 'str'>
=> str1 = 'emxnefehw' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 21
ACTION: str3 += 'o' 
str3 = 'jg' : <type 'str'>
=> str3 = 'jgo' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 22
ACTION: str1 += 'y' 
str1 = 'emxnefehw' : <type 'str'>
=> str1 = 'emxnefehwy' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 23
ACTION: str3 += 'd' 
str3 = 'jgo' : <type 'str'>
=> str3 = 'jgod' : <type 'str'>
==================================================
component2 = "h"                                                        # STEP 24
ACTION: component2 = "h" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'h' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 25
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 26
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 27
ACTION: str3 += 'x' 
str3 = 'jgod' : <type 'str'>
=> str3 = 'jgodx' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 28
ACTION: str3 += 'e' 
str3 = 'jgodx' : <type 'str'>
=> str3 = 'jgodxe' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 29
ACTION: str1 += 'o' 
str1 = 'emxnefehwy' : <type 'str'>
=> str1 = 'emxnefehwyo' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 30
ACTION: str1 += 'g' 
str1 = 'emxnefehwyo' : <type 'str'>
=> str1 = 'emxnefehwyog' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 31
ACTION: str3 += 'i' 
str3 = 'jgodxe' : <type 'str'>
=> str3 = 'jgodxei' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 32
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 33
ACTION: str3 += 'd' 
str3 = 'jgodxei' : <type 'str'>
=> str3 = 'jgodxeid' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 34
ACTION: str3 += 'b' 
str3 = 'jgodxeid' : <type 'str'>
=> str3 = 'jgodxeidb' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 35
ACTION: str1 += 't' 
str1 = 'emxnefehwyog' : <type 'str'>
=> str1 = 'emxnefehwyogt' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 36
ACTION: path4 += "/" + component3 
component3 = 'b' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 37
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101becad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str3 = ""                                                               # STEP 38
ACTION: str3 = "" 
str3 = 'jgodxeidb' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
result = os0.readlink(path1)                                            # STEP 39
ACTION: result = os0.readlink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101becad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake path does not exist: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
str1 += " "                                                             # STEP 40
ACTION: str1 += " " 
str1 = 'emxnefehwyogt' : <type 'str'>
=> str1 = 'emxnefehwyogt ' : <type 'str'>
==================================================
result = os0.path.dirname(path4)                                        # STEP 41
ACTION: result = os0.path.dirname(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101becad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path4) 
==================================================
str1 += 'c'                                                             # STEP 42
ACTION: str1 += 'c' 
str1 = 'emxnefehwyogt ' : <type 'str'>
=> str1 = 'emxnefehwyogt c' : <type 'str'>
==================================================
result = os0.readlink(path4)                                            # STEP 43
ACTION: result = os0.readlink(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101becad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake path does not exist: '/Volumes/ramdisk/test/b'
REFERENCE ACTION: result_REF = os_REF0.readlink(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/b'
==================================================
str1 += 'f'                                                             # STEP 44
ACTION: str1 += 'f' 
str1 = 'emxnefehwyogt c' : <type 'str'>
=> str1 = 'emxnefehwyogt cf' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 45
ACTION: str3 += 't' 
str3 = '' : <type 'str'>
=> str3 = 't' : <type 'str'>
==================================================
os0.makedirs(path1)                                                     # STEP 46
ACTION: os0.makedirs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101becad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103ac9ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9773, in act267
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0307109355927 TOTAL RUNTIME
1 EXECUTED
47 TOTAL TEST OPERATIONS
0.00251841545105 TIME SPENT EXECUTING TEST OPERATIONS
0.00398588180542 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.26497650146e-05 TIME SPENT CHECKING PROPERTIES
0.00254106521606 TOTAL TIME SPENT RUNNING SUT
0.00523900985718 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
