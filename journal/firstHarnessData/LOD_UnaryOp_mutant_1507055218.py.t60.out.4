Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59312.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10233bef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9831, in act268
    assert (type(raised) == type(refRaised))
Original test has 26 steps

SAVING TEST AS failure.59312.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "d"                                                         # STEP 0
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 1
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'j'                                                              # STEP 2
ACTION: str2 += 'j' 
str2 = '' : <type 'str'>
=> str2 = 'j' : <type 'str'>
==================================================
str2 += 'w'                                                              # STEP 3
ACTION: str2 += 'w' 
str2 = 'j' : <type 'str'>
=> str2 = 'jw' : <type 'str'>
==================================================
component4 = "lambda"                                                    # STEP 4
ACTION: component4 = "lambda" 
component4 = None : <type 'NoneType'>
=> component4 = 'lambda' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 5
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component3 = "c"                                                         # STEP 6
ACTION: component3 = "c" 
component3 = None : <type 'NoneType'>
=> component3 = 'c' : <type 'str'>
==================================================
str2 += 'd'                                                              # STEP 7
ACTION: str2 += 'd' 
str2 = 'jw' : <type 'str'>
=> str2 = 'jwd' : <type 'str'>
==================================================
component1 = "f"                                                         # STEP 8
ACTION: component1 = "f" 
component1 = None : <type 'NoneType'>
=> component1 = 'f' : <type 'str'>
==================================================
str2 += 'j'                                                              # STEP 9
ACTION: str2 += 'j' 
str2 = 'jwd' : <type 'str'>
=> str2 = 'jwdj' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 10
ACTION: str2 += 'c' 
str2 = 'jwdj' : <type 'str'>
=> str2 = 'jwdjc' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 11
ACTION: str2 += 'g' 
str2 = 'jwdjc' : <type 'str'>
=> str2 = 'jwdjcg' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 12
ACTION: str2 = "" 
str2 = 'jwdjcg' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 13
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str2 += 'o'                                                             # STEP 14
ACTION: str2 += 'o' 
str2 = '' : <type 'str'>
=> str2 = 'o' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 15
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "alpha"                                                    # STEP 16
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 17
ACTION: str2 += 'h' 
str2 = 'o' : <type 'str'>
=> str2 = 'oh' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 18
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10401aa50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str2 += 'b'                                                             # STEP 19
ACTION: str2 += 'b' 
str2 = 'oh' : <type 'str'>
=> str2 = 'ohb' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 20
ACTION: str2 += " " 
str2 = 'ohb' : <type 'str'>
=> str2 = 'ohb ' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 21
ACTION: str2 += 'q' 
str2 = 'ohb ' : <type 'str'>
=> str2 = 'ohb q' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 22
ACTION: str2 += 'm' 
str2 = 'ohb q' : <type 'str'>
=> str2 = 'ohb qm' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 23
ACTION: str2 += 'o' 
str2 = 'ohb qm' : <type 'str'>
=> str2 = 'ohb qmo' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 24
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.makedirs(path2)                                                     # STEP 25
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10401aa50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046d1cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9831, in act268
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.14305305481 TOTAL RUNTIME
3 EXECUTED
426 TOTAL TEST OPERATIONS
0.0853576660156 TIME SPENT EXECUTING TEST OPERATIONS
0.0240755081177 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000232458114624 TIME SPENT CHECKING PROPERTIES
0.0855901241302 TOTAL TIME SPENT RUNNING SUT
0.00870299339294 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
