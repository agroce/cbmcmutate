Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.50291.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104768878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 19635, in act408
    assert (type(raised) == type(refRaised))
Original test has 52 steps

SAVING TEST AS failure.50291.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "beta"                                                      # STEP 0
ACTION: component4 = "beta" 
component4 = None : <type 'NoneType'>
=> component4 = 'beta' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 1
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'e'                                                              # STEP 2
ACTION: str4 += 'e' 
str4 = '' : <type 'str'>
=> str4 = 'e' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 3
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
component1 = "a"                                                         # STEP 4
ACTION: component1 = "a" 
component1 = None : <type 'NoneType'>
=> component1 = 'a' : <type 'str'>
==================================================
str2 += 'u'                                                              # STEP 5
ACTION: str2 += 'u' 
str2 = '' : <type 'str'>
=> str2 = 'u' : <type 'str'>
==================================================
str4 += 'q'                                                              # STEP 6
ACTION: str4 += 'q' 
str4 = 'e' : <type 'str'>
=> str4 = 'eq' : <type 'str'>
==================================================
str4 += 'd'                                                              # STEP 7
ACTION: str4 += 'd' 
str4 = 'eq' : <type 'str'>
=> str4 = 'eqd' : <type 'str'>
==================================================
component3 = "c"                                                         # STEP 8
ACTION: component3 = "c" 
component3 = None : <type 'NoneType'>
=> component3 = 'c' : <type 'str'>
==================================================
component0 = "c"                                                         # STEP 9
ACTION: component0 = "c" 
component0 = None : <type 'NoneType'>
=> component0 = 'c' : <type 'str'>
==================================================
component2 = "h"                                                        # STEP 10
ACTION: component2 = "h" 
component2 = None : <type 'NoneType'>
=> component2 = 'h' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 11
ACTION: str2 += 'a' 
str2 = 'u' : <type 'str'>
=> str2 = 'ua' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 12
ACTION: str2 += 'w' 
str2 = 'ua' : <type 'str'>
=> str2 = 'uaw' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 13
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str4 += 'n'                                                             # STEP 14
ACTION: str4 += 'n' 
str4 = 'eqd' : <type 'str'>
=> str4 = 'eqdn' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 15
ACTION: str4 += 'd' 
str4 = 'eqdn' : <type 'str'>
=> str4 = 'eqdnd' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 16
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 17
ACTION: str2 += 'b' 
str2 = 'uaw' : <type 'str'>
=> str2 = 'uawb' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 18
ACTION: str2 += 'u' 
str2 = 'uawb' : <type 'str'>
=> str2 = 'uawbu' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 19
ACTION: str4 += " " 
str4 = 'eqdnd' : <type 'str'>
=> str4 = 'eqdnd ' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 20
ACTION: str4 += 'm' 
str4 = 'eqdnd ' : <type 'str'>
=> str4 = 'eqdnd m' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 21
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
bytes2 += 1                                                             # STEP 22
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str4 += 't'                                                             # STEP 23
ACTION: str4 += 't' 
str4 = 'eqdnd m' : <type 'str'>
=> str4 = 'eqdnd mt' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 24
ACTION: str2 = "" 
str2 = 'uawbu' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 25
ACTION: str2 += 'b' 
str2 = '' : <type 'str'>
=> str2 = 'b' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 26
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str4 += 'g'                                                             # STEP 27
ACTION: str4 += 'g' 
str4 = 'eqdnd mt' : <type 'str'>
=> str4 = 'eqdnd mtg' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 28
ACTION: str4 += 'p' 
str4 = 'eqdnd mtg' : <type 'str'>
=> str4 = 'eqdnd mtgp' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 29
ACTION: str2 += 'r' 
str2 = 'b' : <type 'str'>
=> str2 = 'br' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 30
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
path2 += "/" + component3                                               # STEP 31
ACTION: path2 += "/" + component3 
component3 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 32
ACTION: str2 += 'd' 
str2 = 'br' : <type 'str'>
=> str2 = 'brd' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 33
ACTION: str2 += 'b' 
str2 = 'brd' : <type 'str'>
=> str2 = 'brdb' : <type 'str'>
==================================================
component3 = "epsilon"                                                  # STEP 34
ACTION: component3 = "epsilon" 
component3 = 'c' : <type 'str'>
=> component3 = 'epsilon' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 35
ACTION: str4 += " " 
str4 = 'eqdnd mtgp' : <type 'str'>
=> str4 = 'eqdnd mtgp ' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 36
ACTION: str4 += 'a' 
str4 = 'eqdnd mtgp ' : <type 'str'>
=> str4 = 'eqdnd mtgp a' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 37
ACTION: str2 += 'b' 
str2 = 'brdb' : <type 'str'>
=> str2 = 'brdbb' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 38
ACTION: str2 += 'b' 
str2 = 'brdbb' : <type 'str'>
=> str2 = 'brdbbb' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 39
ACTION: str2 += 'i' 
str2 = 'brdbbb' : <type 'str'>
=> str2 = 'brdbbbi' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 40
ACTION: str4 += 'x' 
str4 = 'eqdnd mtgp a' : <type 'str'>
=> str4 = 'eqdnd mtgp ax' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 41
ACTION: str2 += 'h' 
str2 = 'brdbbbi' : <type 'str'>
=> str2 = 'brdbbbih' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 42
ACTION: bytes0 += 1 
bytes0 = 1 : <type 'int'>
=> bytes0 = 2 : <type 'int'>
==================================================
str4 += 'i'                                                             # STEP 43
ACTION: str4 += 'i' 
str4 = 'eqdnd mtgp ax' : <type 'str'>
=> str4 = 'eqdnd mtgp axi' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 44
ACTION: str2 += 'q' 
str2 = 'brdbbbih' : <type 'str'>
=> str2 = 'brdbbbihq' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 45
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 46
ACTION: str2 += 'c' 
str2 = 'brdbbbihq' : <type 'str'>
=> str2 = 'brdbbbihqc' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 47
ACTION: str4 += 'e' 
str4 = 'eqdnd mtgp axi' : <type 'str'>
=> str4 = 'eqdnd mtgp axie' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 48
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105801cd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str2 += 'o'                                                             # STEP 49
ACTION: str2 += 'o' 
str2 = 'brdbbbihqc' : <type 'str'>
=> str2 = 'brdbbbihqco' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 50
ACTION: str0 += 'g' 
str0 = '' : <type 'str'>
=> str0 = 'g' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_RDWR)                                        # STEP 51
ACTION: fd1 = os0.open(path2, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x105801cd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/c'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1058bf5a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 19635, in act408
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0692720413208 TOTAL RUNTIME
2 EXECUTED
252 TOTAL TEST OPERATIONS
0.0318253040314 TIME SPENT EXECUTING TEST OPERATIONS
0.0101752281189 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000123023986816 TIME SPENT CHECKING PROPERTIES
0.0319483280182 TOTAL TIME SPENT RUNNING SUT
0.00603103637695 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
