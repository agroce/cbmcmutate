Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59093.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1031fcb90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20265, in act417
    assert (type(raised) == type(refRaised))
Original test has 55 steps

SAVING TEST AS failure.59093.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "phi"                                                       # STEP 0
ACTION: component2 = "phi" 
component2 = None : <type 'NoneType'>
=> component2 = 'phi' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 1
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'a'                                                              # STEP 3
ACTION: str2 += 'a' 
str2 = '' : <type 'str'>
=> str2 = 'a' : <type 'str'>
==================================================
str2 += 'u'                                                              # STEP 4
ACTION: str2 += 'u' 
str2 = 'a' : <type 'str'>
=> str2 = 'au' : <type 'str'>
==================================================
component4 = "epsilon"                                                   # STEP 5
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
str2 += 'i'                                                              # STEP 6
ACTION: str2 += 'i' 
str2 = 'au' : <type 'str'>
=> str2 = 'aui' : <type 'str'>
==================================================
component0 = "delta"                                                     # STEP 7
ACTION: component0 = "delta" 
component0 = None : <type 'NoneType'>
=> component0 = 'delta' : <type 'str'>
==================================================
str2 += 'n'                                                              # STEP 8
ACTION: str2 += 'n' 
str2 = 'aui' : <type 'str'>
=> str2 = 'auin' : <type 'str'>
==================================================
component1 = "e"                                                         # STEP 9
ACTION: component1 = "e" 
component1 = None : <type 'NoneType'>
=> component1 = 'e' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 10
ACTION: str2 = "" 
str2 = 'auin' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 11
ACTION: str2 += 'p' 
str2 = '' : <type 'str'>
=> str2 = 'p' : <type 'str'>
==================================================
component3 = "h"                                                        # STEP 12
ACTION: component3 = "h" 
component3 = None : <type 'NoneType'>
=> component3 = 'h' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 13
ACTION: str2 += 'a' 
str2 = 'p' : <type 'str'>
=> str2 = 'pa' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 14
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 15
ACTION: str2 += 'f' 
str2 = 'pa' : <type 'str'>
=> str2 = 'paf' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 16
ACTION: str2 += 'g' 
str2 = 'paf' : <type 'str'>
=> str2 = 'pafg' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 17
ACTION: str2 += 'h' 
str2 = 'pafg' : <type 'str'>
=> str2 = 'pafgh' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 18
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 19
ACTION: str4 += 'a' 
str4 = '' : <type 'str'>
=> str4 = 'a' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 20
ACTION: str4 += 'l' 
str4 = 'a' : <type 'str'>
=> str4 = 'al' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 21
ACTION: str2 += 'n' 
str2 = 'pafgh' : <type 'str'>
=> str2 = 'pafghn' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 22
ACTION: str2 += 'z' 
str2 = 'pafghn' : <type 'str'>
=> str2 = 'pafghnz' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 23
ACTION: str4 += 's' 
str4 = 'al' : <type 'str'>
=> str4 = 'als' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 24
ACTION: str4 += 'm' 
str4 = 'als' : <type 'str'>
=> str4 = 'alsm' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 25
ACTION: str1 += 'n' 
str1 = '' : <type 'str'>
=> str1 = 'n' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 26
ACTION: str1 += 'e' 
str1 = 'n' : <type 'str'>
=> str1 = 'ne' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 27
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 28
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 29
ACTION: str2 += 's' 
str2 = 'pafghnz' : <type 'str'>
=> str2 = 'pafghnzs' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 30
ACTION: path4 += "/" + component1 
component1 = 'e' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 31
ACTION: str2 += 'y' 
str2 = 'pafghnzs' : <type 'str'>
=> str2 = 'pafghnzsy' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 32
ACTION: str2 += 's' 
str2 = 'pafghnzsy' : <type 'str'>
=> str2 = 'pafghnzsys' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 33
ACTION: str1 += 'n' 
str1 = 'ne' : <type 'str'>
=> str1 = 'nen' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 34
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10362dcd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 35
ACTION: fd0 = os0.open(path4, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10362dcd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path4, os.O_CREAT | os.O_EXCL) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
str2 += 'c'                                                             # STEP 36
ACTION: str2 += 'c' 
str2 = 'pafghnzsys' : <type 'str'>
=> str2 = 'pafghnzsysc' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 37
ACTION: str1 += 'o' 
str1 = 'nen' : <type 'str'>
=> str1 = 'neno' : <type 'str'>
==================================================
component1 = "delta"                                                    # STEP 38
ACTION: component1 = "delta" 
component1 = 'e' : <type 'str'>
=> component1 = 'delta' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 39
ACTION: str0 += 'v' 
str0 = '' : <type 'str'>
=> str0 = 'v' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 40
ACTION: str2 += 'g' 
str2 = 'pafghnzsysc' : <type 'str'>
=> str2 = 'pafghnzsyscg' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 41
ACTION: str0 += 'j' 
str0 = 'v' : <type 'str'>
=> str0 = 'vj' : <type 'str'>
==================================================
stat3 = os0.fstat(fd0)                                                  # STEP 42
ACTION: stat3 = os0.fstat(fd0) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10362dcd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1045c8490> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.fstat(fd_REF0) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=13301901, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507333023, st_mtime=1507333023, st_ctime=1507333023) : <type 'posix.stat_result'>
==================================================
str2 += 'd'                                                             # STEP 43
ACTION: str2 += 'd' 
str2 = 'pafghnzsyscg' : <type 'str'>
=> str2 = 'pafghnzsyscgd' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 44
ACTION: str0 += 'l' 
str0 = 'vj' : <type 'str'>
=> str0 = 'vjl' : <type 'str'>
==================================================
os0.mkdir(path1)                                                        # STEP 45
ACTION: os0.mkdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10362dcd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
str2 += 'e'                                                             # STEP 46
ACTION: str2 += 'e' 
str2 = 'pafghnzsyscgd' : <type 'str'>
=> str2 = 'pafghnzsyscgde' : <type 'str'>
==================================================
result = stat3.st_size                                                  # STEP 47
ACTION: result = stat3.st_size 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1045c8490> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=13301901, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507333023, st_mtime=1507333023, st_ctime=1507333023) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF3.st_size 
==================================================
str4 += 's'                                                             # STEP 48
ACTION: str4 += 's' 
str4 = 'alsm' : <type 'str'>
=> str4 = 'alsms' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 49
ACTION: str4 = "" 
str4 = 'alsms' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 50
ACTION: str4 += 'g' 
str4 = '' : <type 'str'>
=> str4 = 'g' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 51
ACTION: str2 += 'a' 
str2 = 'pafghnzsyscgde' : <type 'str'>
=> str2 = 'pafghnzsyscgdea' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 52
ACTION: str1 = "" 
str1 = 'neno' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 53
ACTION: str4 += 'd' 
str4 = 'g' : <type 'str'>
=> str4 = 'gd' : <type 'str'>
==================================================
os0.write(fd0,str4)                                                     # STEP 54
ACTION: os0.write(fd0,str4) 
str4 = 'gd' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10362dcd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF0,str4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103213560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20265, in act417
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0885188579559 TOTAL RUNTIME
2 EXECUTED
255 TOTAL TEST OPERATIONS
0.0443413257599 TIME SPENT EXECUTING TEST OPERATIONS
0.0127930641174 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000145196914673 TIME SPENT CHECKING PROPERTIES
0.0444865226746 TOTAL TIME SPENT RUNNING SUT
0.00707817077637 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
