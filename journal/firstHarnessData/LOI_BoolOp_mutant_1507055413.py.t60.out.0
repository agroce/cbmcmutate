Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.55886.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError('I/O operation on closed file',), <traceback object at 0x1031ecea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20861, in act426
    result = self.p_os[0].read(self.p_fd[0],self.p_bytes[3])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3338, in read
    return file_handle.read(num_bytes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4338, in __getattr__
    self._check_open_file()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4404, in _check_open_file
    raise ValueError('I/O operation on closed file')
Original test has 26 steps

SAVING TEST AS failure.55886.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "g"                                                         # STEP 0
ACTION: component4 = "g" 
component4 = None : <type 'NoneType'>
=> component4 = 'g' : <type 'str'>
==================================================
component2 = "phi"                                                       # STEP 1
ACTION: component2 = "phi" 
component2 = None : <type 'NoneType'>
=> component2 = 'phi' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 2
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component3 = "lambda"                                                    # STEP 3
ACTION: component3 = "lambda" 
component3 = None : <type 'NoneType'>
=> component3 = 'lambda' : <type 'str'>
==================================================
component1 = "omega"                                                     # STEP 4
ACTION: component1 = "omega" 
component1 = None : <type 'NoneType'>
=> component1 = 'omega' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 6
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
component0 = "phi"                                                       # STEP 7
ACTION: component0 = "phi" 
component0 = None : <type 'NoneType'>
=> component0 = 'phi' : <type 'str'>
==================================================
str2 += 'w'                                                              # STEP 8
ACTION: str2 += 'w' 
str2 = '' : <type 'str'>
=> str2 = 'w' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 9
ACTION: str2 = "" 
str2 = 'w' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 10
ACTION: path1 += "/" + component4 
component4 = 'g' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 11
ACTION: str2 += 'y' 
str2 = '' : <type 'str'>
=> str2 = 'y' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 12
ACTION: str2 += 'd' 
str2 = 'y' : <type 'str'>
=> str2 = 'yd' : <type 'str'>
==================================================
component4 = "phi"                                                      # STEP 13
ACTION: component4 = "phi" 
component4 = 'g' : <type 'str'>
=> component4 = 'phi' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 14
ACTION: str2 += 'k' 
str2 = 'yd' : <type 'str'>
=> str2 = 'ydk' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 15
ACTION: str2 = "" 
str2 = 'ydk' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 16
ACTION: str2 += 'd' 
str2 = '' : <type 'str'>
=> str2 = 'd' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 17
ACTION: str2 += 'y' 
str2 = 'd' : <type 'str'>
=> str2 = 'dy' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 18
ACTION: str2 += 'j' 
str2 = 'dy' : <type 'str'>
=> str2 = 'dyj' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 19
ACTION: str2 += 'c' 
str2 = 'dyj' : <type 'str'>
=> str2 = 'dyjc' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 20
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10387aa90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd1 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 21
ACTION: fd1 = os0.open(path1, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10387aa90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_WRONLY | os.O_APPEND) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 22
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10387aa90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 23
ACTION: fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10387aa90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
result = os0.path.islink(path1)                                         # STEP 24
ACTION: result = os0.path.islink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10387aa90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path1) 
==================================================
result = os0.read(fd0,bytes3)                                           # STEP 25
ACTION: result = os0.read(fd0,bytes3) 
bytes3 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10387aa90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> I/O operation on closed file
ERROR: (<type 'exceptions.ValueError'>, ValueError('I/O operation on closed file',), <traceback object at 0x103ad75a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20861, in act426
    result = self.p_os[0].read(self.p_fd[0],self.p_bytes[3])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3338, in read
    return file_handle.read(num_bytes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4338, in __getattr__
    self._check_open_file()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4404, in _check_open_file
    raise ValueError('I/O operation on closed file')
STOPPING TESTING DUE TO FAILED TEST
0.0706169605255 TOTAL RUNTIME
3 EXECUTED
426 TOTAL TEST OPERATIONS
0.00942182540894 TIME SPENT EXECUTING TEST OPERATIONS
0.0235946178436 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000219106674194 TIME SPENT CHECKING PROPERTIES
0.00964093208313 TOTAL TIME SPENT RUNNING SUT
0.00997495651245 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
