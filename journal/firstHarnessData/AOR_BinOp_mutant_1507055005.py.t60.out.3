Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.66639.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for -: 'str' and 'str'",), <traceback object at 0x102621c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1766, in ResolvePath
    return _ComponentsToPath(resolved_components)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1662, in _ComponentsToPath
    path = (sep - path)
Original test has 72 steps

SAVING TEST AS failure.66639.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "g"                                                         # STEP 0
ACTION: component0 = "g" 
component0 = None : <type 'NoneType'>
=> component0 = 'g' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 1
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component3 = "h"                                                         # STEP 2
ACTION: component3 = "h" 
component3 = None : <type 'NoneType'>
=> component3 = 'h' : <type 'str'>
==================================================
str3 += 'w'                                                              # STEP 3
ACTION: str3 += 'w' 
str3 = '' : <type 'str'>
=> str3 = 'w' : <type 'str'>
==================================================
str3 += " "                                                              # STEP 4
ACTION: str3 += " " 
str3 = 'w' : <type 'str'>
=> str3 = 'w ' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 5
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'c'                                                              # STEP 6
ACTION: str2 += 'c' 
str2 = '' : <type 'str'>
=> str2 = 'c' : <type 'str'>
==================================================
str3 += 'e'                                                              # STEP 7
ACTION: str3 += 'e' 
str3 = 'w ' : <type 'str'>
=> str3 = 'w e' : <type 'str'>
==================================================
str2 += 'h'                                                              # STEP 8
ACTION: str2 += 'h' 
str2 = 'c' : <type 'str'>
=> str2 = 'ch' : <type 'str'>
==================================================
component4 = "h"                                                         # STEP 9
ACTION: component4 = "h" 
component4 = None : <type 'NoneType'>
=> component4 = 'h' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 10
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 11
ACTION: str2 += 'x' 
str2 = 'ch' : <type 'str'>
=> str2 = 'chx' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 12
ACTION: str2 += 'l' 
str2 = 'chx' : <type 'str'>
=> str2 = 'chxl' : <type 'str'>
==================================================
component2 = "lambda"                                                   # STEP 13
ACTION: component2 = "lambda" 
component2 = None : <type 'NoneType'>
=> component2 = 'lambda' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 14
ACTION: str3 += " " 
str3 = 'w e' : <type 'str'>
=> str3 = 'w e ' : <type 'str'>
==================================================
component1 = "g"                                                        # STEP 15
ACTION: component1 = "g" 
component1 = None : <type 'NoneType'>
=> component1 = 'g' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 16
ACTION: str2 += 'q' 
str2 = 'chxl' : <type 'str'>
=> str2 = 'chxlq' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 17
ACTION: str2 += 'z' 
str2 = 'chxlq' : <type 'str'>
=> str2 = 'chxlqz' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 18
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 += 'q'                                                             # STEP 19
ACTION: str3 += 'q' 
str3 = 'w e ' : <type 'str'>
=> str3 = 'w e q' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 20
ACTION: str2 += 'p' 
str2 = 'chxlqz' : <type 'str'>
=> str2 = 'chxlqzp' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 21
ACTION: str2 += 'b' 
str2 = 'chxlqzp' : <type 'str'>
=> str2 = 'chxlqzpb' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 22
ACTION: str2 += 'p' 
str2 = 'chxlqzpb' : <type 'str'>
=> str2 = 'chxlqzpbp' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 23
ACTION: str2 += 'h' 
str2 = 'chxlqzpbp' : <type 'str'>
=> str2 = 'chxlqzpbph' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 24
ACTION: str2 += 'v' 
str2 = 'chxlqzpbph' : <type 'str'>
=> str2 = 'chxlqzpbphv' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 26
ACTION: str2 += 'x' 
str2 = 'chxlqzpbphv' : <type 'str'>
=> str2 = 'chxlqzpbphvx' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 27
ACTION: path4 += "/" + component3 
component3 = 'h' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 28
ACTION: str2 += 'n' 
str2 = 'chxlqzpbphvx' : <type 'str'>
=> str2 = 'chxlqzpbphvxn' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 29
ACTION: str2 += 'f' 
str2 = 'chxlqzpbphvxn' : <type 'str'>
=> str2 = 'chxlqzpbphvxnf' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 30
ACTION: path4 += "/" + component0 
component0 = 'g' : <type 'str'>
path4 = '/Volumes/ramdisk/test/h' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/h/g' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 31
ACTION: component0 = "omega" 
component0 = 'g' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 32
ACTION: str2 += 'e' 
str2 = 'chxlqzpbphvxnf' : <type 'str'>
=> str2 = 'chxlqzpbphvxnfe' : <type 'str'>
==================================================
component3 = "e"                                                        # STEP 33
ACTION: component3 = "e" 
component3 = 'h' : <type 'str'>
=> component3 = 'e' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 34
ACTION: str3 += 'g' 
str3 = 'w e q' : <type 'str'>
=> str3 = 'w e qg' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 35
ACTION: str2 += 'g' 
str2 = 'chxlqzpbphvxnfe' : <type 'str'>
=> str2 = 'chxlqzpbphvxnfeg' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 36
ACTION: str2 += 'c' 
str2 = 'chxlqzpbphvxnfeg' : <type 'str'>
=> str2 = 'chxlqzpbphvxnfegc' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 37
ACTION: str2 += 'q' 
str2 = 'chxlqzpbphvxnfegc' : <type 'str'>
=> str2 = 'chxlqzpbphvxnfegcq' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 38
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 39
ACTION: str2 += 'r' 
str2 = 'chxlqzpbphvxnfegcq' : <type 'str'>
=> str2 = 'chxlqzpbphvxnfegcqr' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 40
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str3 += 'm'                                                             # STEP 41
ACTION: str3 += 'm' 
str3 = 'w e qg' : <type 'str'>
=> str3 = 'w e qgm' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 42
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 43
ACTION: path3 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 44
ACTION: str3 += 'h' 
str3 = 'w e qgm' : <type 'str'>
=> str3 = 'w e qgmh' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 45
ACTION: str2 += 'f' 
str2 = 'chxlqzpbphvxnfegcqr' : <type 'str'>
=> str2 = 'chxlqzpbphvxnfegcqrf' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 46
ACTION: path3 += "/" + component4 
component4 = 'h' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda/h' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 47
ACTION: str2 += 'n' 
str2 = 'chxlqzpbphvxnfegcqrf' : <type 'str'>
=> str2 = 'chxlqzpbphvxnfegcqrfn' : <type 'str'>
==================================================
component4 = "phi"                                                      # STEP 48
ACTION: component4 = "phi" 
component4 = 'h' : <type 'str'>
=> component4 = 'phi' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 49
ACTION: str3 += 'h' 
str3 = 'w e qgmh' : <type 'str'>
=> str3 = 'w e qgmhh' : <type 'str'>
==================================================
component2 = "phi"                                                      # STEP 50
ACTION: component2 = "phi" 
component2 = 'lambda' : <type 'str'>
=> component2 = 'phi' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 51
ACTION: str2 += 'c' 
str2 = 'chxlqzpbphvxnfegcqrfn' : <type 'str'>
=> str2 = 'chxlqzpbphvxnfegcqrfnc' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 52
ACTION: path2 += "/" + component0 
component0 = 'omega' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 53
ACTION: str3 += 'c' 
str3 = 'w e qgmhh' : <type 'str'>
=> str3 = 'w e qgmhhc' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 54
ACTION: bytes3 += 1 
bytes3 = 1 : <type 'int'>
=> bytes3 = 2 : <type 'int'>
==================================================
str2 += 'p'                                                             # STEP 55
ACTION: str2 += 'p' 
str2 = 'chxlqzpbphvxnfegcqrfnc' : <type 'str'>
=> str2 = 'chxlqzpbphvxnfegcqrfncp' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 56
ACTION: path3 += "/" + component4 
component4 = 'phi' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda/h' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda/h/phi' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 57
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str3 += 'd'                                                             # STEP 58
ACTION: str3 += 'd' 
str3 = 'w e qgmhhc' : <type 'str'>
=> str3 = 'w e qgmhhcd' : <type 'str'>
==================================================
component4 = "g"                                                        # STEP 59
ACTION: component4 = "g" 
component4 = 'phi' : <type 'str'>
=> component4 = 'g' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 60
ACTION: path2 += "/" + component4 
component4 = 'g' : <type 'str'>
path2 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/omega/g' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 61
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/omega/g' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 62
ACTION: str3 += 'y' 
str3 = 'w e qgmhhcd' : <type 'str'>
=> str3 = 'w e qgmhhcdy' : <type 'str'>
==================================================
component4 = "omega"                                                    # STEP 63
ACTION: component4 = "omega" 
component4 = 'g' : <type 'str'>
=> component4 = 'omega' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 64
ACTION: str2 += 'h' 
str2 = 'chxlqzpbphvxnfegcqrfncp' : <type 'str'>
=> str2 = 'chxlqzpbphvxnfegcqrfncph' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 65
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 66
ACTION: path4 += "/" + component0 
component0 = 'omega' : <type 'str'>
path4 = '/Volumes/ramdisk/test/h/g' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/h/g/omega' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 67
ACTION: str0 += " " 
str0 = '' : <type 'str'>
=> str0 = ' ' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 68
ACTION: str0 += 'g' 
str0 = ' ' : <type 'str'>
=> str0 = ' g' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 69
ACTION: str3 += 'o' 
str3 = 'w e qgmhhcdy' : <type 'str'>
=> str3 = 'w e qgmhhcdyo' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 70
ACTION: str2 += 'x' 
str2 = 'chxlqzpbphvxnfegcqrfncph' : <type 'str'>
=> str2 = 'chxlqzpbphvxnfegcqrfncphx' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 71
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unsupported operand type(s) for -: 'str' and 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for -: 'str' and 'str'",), <traceback object at 0x1006c3368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1766, in ResolvePath
    return _ComponentsToPath(resolved_components)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1662, in _ComponentsToPath
    path = (sep - path)
STOPPING TESTING DUE TO FAILED TEST
0.0287039279938 TOTAL RUNTIME
1 EXECUTED
72 TOTAL TEST OPERATIONS
0.00140833854675 TIME SPENT EXECUTING TEST OPERATIONS
0.00399994850159 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.05311584473e-05 TIME SPENT CHECKING PROPERTIES
0.0014488697052 TOTAL TIME SPENT RUNNING SUT
0.00421690940857 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
