Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62473.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for //: 'list' and 'list'",), <traceback object at 0x1033ff2d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 30376, in act567
    result = self.p_os[0].path.isdir(self.p_path[4])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2802, in isdir
    return self.filesystem.IsDir(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2429, in IsDir
    return self._IsType(path, stat.S_IFDIR, follow_symlinks)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2412, in _IsType
    obj = self.ResolveObject(path, follow_symlinks)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1837, in ResolveObject
    return self.GetObjectFromNormalizedPath(self.ResolvePath(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1758, in ResolvePath
    path_components = (target_components // path_components)
Original test has 56 steps

SAVING TEST AS failure.62473.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "c"                                                         # STEP 0
ACTION: component4 = "c" 
component4 = None : <type 'NoneType'>
=> component4 = 'c' : <type 'str'>
==================================================
component2 = "e"                                                         # STEP 1
ACTION: component2 = "e" 
component2 = None : <type 'NoneType'>
=> component2 = 'e' : <type 'str'>
==================================================
component1 = "b"                                                         # STEP 2
ACTION: component1 = "b" 
component1 = None : <type 'NoneType'>
=> component1 = 'b' : <type 'str'>
==================================================
component0 = "h"                                                         # STEP 3
ACTION: component0 = "h" 
component0 = None : <type 'NoneType'>
=> component0 = 'h' : <type 'str'>
==================================================
component3 = "lambda"                                                    # STEP 4
ACTION: component3 = "lambda" 
component3 = None : <type 'NoneType'>
=> component3 = 'lambda' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 5
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 7
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str0 = ""                                                                # STEP 8
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
path3 += "/" + component1                                                # STEP 9
ACTION: path3 += "/" + component1 
component1 = 'b' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 10
ACTION: str0 += 'l' 
str0 = '' : <type 'str'>
=> str0 = 'l' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 11
ACTION: str0 += 'c' 
str0 = 'l' : <type 'str'>
=> str0 = 'lc' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 12
ACTION: str0 += 'j' 
str0 = 'lc' : <type 'str'>
=> str0 = 'lcj' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 13
ACTION: path3 += "/" + component2 
component2 = 'e' : <type 'str'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b/e' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 14
ACTION: path3 += "/" + component1 
component1 = 'b' : <type 'str'>
path3 = '/Volumes/ramdisk/test/b/e' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b/e/b' : <type 'str'>
==================================================
component2 = "c"                                                        # STEP 15
ACTION: component2 = "c" 
component2 = 'e' : <type 'str'>
=> component2 = 'c' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 16
ACTION: path3 += "/" + component0 
component0 = 'h' : <type 'str'>
path3 = '/Volumes/ramdisk/test/b/e/b' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b/e/b/h' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 17
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
component1 = "gamma"                                                    # STEP 18
ACTION: component1 = "gamma" 
component1 = 'b' : <type 'str'>
=> component1 = 'gamma' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 19
ACTION: path3 += "/" + component3 
component3 = 'lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test/b/e/b/h' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b/e/b/h/lambda' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 20
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str0 += 'e'                                                             # STEP 21
ACTION: str0 += 'e' 
str0 = 'lcj' : <type 'str'>
=> str0 = 'lcje' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 22
ACTION: str0 += 'b' 
str0 = 'lcje' : <type 'str'>
=> str0 = 'lcjeb' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 23
ACTION: path3 += "/" + component3 
component3 = 'lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test/b/e/b/h/lambda' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b/e/b/h/lambda/lambda' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 24
ACTION: str0 = "" 
str0 = 'lcjeb' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 25
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 26
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "c"                                                        # STEP 27
ACTION: component0 = "c" 
component0 = 'h' : <type 'str'>
=> component0 = 'c' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 28
ACTION: path2 += "/" + component2 
component2 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 29
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 30
ACTION: str0 += 'w' 
str0 = '' : <type 'str'>
=> str0 = 'w' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 31
ACTION: str0 += 'a' 
str0 = 'w' : <type 'str'>
=> str0 = 'wa' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 32
ACTION: path3 += "/" + component2 
component2 = 'c' : <type 'str'>
path3 = '/Volumes/ramdisk/test/b/e/b/h/lambda/lambda' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b/e/b/h/lambda/lambda/c' : <type 'str'>
==================================================
component2 = "epsilon"                                                  # STEP 33
ACTION: component2 = "epsilon" 
component2 = 'c' : <type 'str'>
=> component2 = 'epsilon' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 34
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
component3 = "epsilon"                                                  # STEP 35
ACTION: component3 = "epsilon" 
component3 = 'lambda' : <type 'str'>
=> component3 = 'epsilon' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 36
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str4 += 'r'                                                             # STEP 37
ACTION: str4 += 'r' 
str4 = '' : <type 'str'>
=> str4 = 'r' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 38
ACTION: str4 += 'l' 
str4 = 'r' : <type 'str'>
=> str4 = 'rl' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 39
ACTION: str4 += 'a' 
str4 = 'rl' : <type 'str'>
=> str4 = 'rla' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 40
ACTION: str4 += " " 
str4 = 'rla' : <type 'str'>
=> str4 = 'rla ' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 41
ACTION: str4 += 'y' 
str4 = 'rla ' : <type 'str'>
=> str4 = 'rla y' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 42
ACTION: str4 += 'e' 
str4 = 'rla y' : <type 'str'>
=> str4 = 'rla ye' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 43
ACTION: str0 += 'x' 
str0 = 'wa' : <type 'str'>
=> str0 = 'wax' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 44
ACTION: bytes2 = 0 
bytes2 = 1 : <type 'int'>
=> bytes2 = 0 : <type 'int'>
==================================================
path2 += "/" + component0                                               # STEP 45
ACTION: path2 += "/" + component0 
component0 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/c' : <type 'str'>
==================================================
component0 = "beta"                                                     # STEP 46
ACTION: component0 = "beta" 
component0 = 'c' : <type 'str'>
=> component0 = 'beta' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 47
ACTION: path4 += "/" + component0 
component0 = 'beta' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 48
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 49
ACTION: str4 += 'b' 
str4 = 'rla ye' : <type 'str'>
=> str4 = 'rla yeb' : <type 'str'>
==================================================
component0 = "alpha"                                                    # STEP 50
ACTION: component0 = "alpha" 
component0 = 'beta' : <type 'str'>
=> component0 = 'alpha' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 51
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 52
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103460750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
os0.symlink(path3,path4)                                                # STEP 53
ACTION: os0.symlink(path3,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103460750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b/e/b/h/lambda/lambda/c' : <type 'str'>
path4 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path3,path4) 
==================================================
str0 += 'f'                                                             # STEP 54
ACTION: str0 += 'f' 
str0 = 'wax' : <type 'str'>
=> str0 = 'waxf' : <type 'str'>
==================================================
result = os0.path.isdir(path4)                                          # STEP 55
ACTION: result = os0.path.isdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103460750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unsupported operand type(s) for //: 'list' and 'list'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for //: 'list' and 'list'",), <traceback object at 0x10365b758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 30376, in act567
    result = self.p_os[0].path.isdir(self.p_path[4])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2802, in isdir
    return self.filesystem.IsDir(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2429, in IsDir
    return self._IsType(path, stat.S_IFDIR, follow_symlinks)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2412, in _IsType
    obj = self.ResolveObject(path, follow_symlinks)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1837, in ResolveObject
    return self.GetObjectFromNormalizedPath(self.ResolvePath(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1758, in ResolvePath
    path_components = (target_components // path_components)
STOPPING TESTING DUE TO FAILED TEST
0.0319879055023 TOTAL RUNTIME
1 EXECUTED
56 TOTAL TEST OPERATIONS
0.00246334075928 TIME SPENT EXECUTING TEST OPERATIONS
0.00484371185303 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.45571136475e-05 TIME SPENT CHECKING PROPERTIES
0.00248789787292 TOTAL TIME SPENT RUNNING SUT
0.0032811164856 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
