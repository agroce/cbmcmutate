Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.51209.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("'unicode' does not have the buffer interface",), <traceback object at 0x1051a8998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 14785, in act343
    self.p_fd[0] = self.p_os[0].open(self.p_path[2], os.O_CREAT | os.O_WRONLY)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4579, in Call
    fakefile = FakeFileWrapper(file_object, file_path, update=open_modes.can_write, read=open_modes.can_read, append=open_modes.append, delete_on_close=self._delete_on_close, filesystem=self.filesystem, newline=newline, binary=binary, closefd=closefd, encoding=encoding, errors=errors, raw_io=self.raw_io, use_io=self._use_io)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3990, in __init__
    self._io.write(contents)
Original test has 86 steps

SAVING TEST AS failure.51209.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "g"                                                         # STEP 0
ACTION: component2 = "g" 
component2 = None : <type 'NoneType'>
=> component2 = 'g' : <type 'str'>
==================================================
component3 = "alpha"                                                     # STEP 1
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
component1 = "alpha"                                                     # STEP 2
ACTION: component1 = "alpha" 
component1 = None : <type 'NoneType'>
=> component1 = 'alpha' : <type 'str'>
==================================================
component4 = "gamma"                                                     # STEP 3
ACTION: component4 = "gamma" 
component4 = None : <type 'NoneType'>
=> component4 = 'gamma' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 4
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "e"                                                         # STEP 5
ACTION: component0 = "e" 
component0 = None : <type 'NoneType'>
=> component0 = 'e' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 += "/" + component3                                                # STEP 7
ACTION: path1 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 8
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'o'                                                              # STEP 9
ACTION: str0 += 'o' 
str0 = '' : <type 'str'>
=> str0 = 'o' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 10
ACTION: str0 += 'n' 
str0 = 'o' : <type 'str'>
=> str0 = 'on' : <type 'str'>
==================================================
component3 = "alpha"                                                    # STEP 11
ACTION: component3 = "alpha" 
component3 = 'alpha' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 12
ACTION: path1 += "/" + component1 
component1 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha/alpha' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 14
ACTION: str0 += 'm' 
str0 = 'on' : <type 'str'>
=> str0 = 'onm' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 15
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
stat1 = os0.stat(path1)                                                 # STEP 16
ACTION: stat1 = os0.stat(path1) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/alpha/alpha'
REFERENCE ACTION: stat_REF1 = os_REF0.stat(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha/alpha'
==================================================
str0 += 'i'                                                             # STEP 17
ACTION: str0 += 'i' 
str0 = 'onm' : <type 'str'>
=> str0 = 'onmi' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 18
ACTION: str0 += 'n' 
str0 = 'onmi' : <type 'str'>
=> str0 = 'onmin' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 19
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component1 = "delta"                                                    # STEP 20
ACTION: component1 = "delta" 
component1 = 'alpha' : <type 'str'>
=> component1 = 'delta' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 21
ACTION: str4 += " " 
str4 = '' : <type 'str'>
=> str4 = ' ' : <type 'str'>
==================================================
result = os0.path.abspath(path1)                                        # STEP 22
ACTION: result = os0.path.abspath(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path1) 
==================================================
path2 += "/" + component1                                               # STEP 23
ACTION: path2 += "/" + component1 
component1 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
result = os0.path.islink(path2)                                         # STEP 24
ACTION: result = os0.path.islink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path2) 
==================================================
result = os0.path.islink(path2)                                         # STEP 25
ACTION: result = os0.path.islink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path2) 
==================================================
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 26
ACTION: fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha/alpha'
==================================================
os0.remove(path0)                                                       # STEP 27
ACTION: os0.remove(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                         # STEP 28
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
component1 = "delta"                                                    # STEP 29
ACTION: component1 = "delta" 
component1 = 'delta' : <type 'str'>
==================================================
os0.link(path1,path2)                                                   # STEP 30
ACTION: os0.link(path1,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha' : <type 'str'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: os_REF0.link(path1,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
os0.write(fd1,str0)                                                     # STEP 31
ACTION: os0.write(fd1,str0) 
str0 = 'onmin' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF1,str0) 
==================================================
result = os0.path.getsize(path1)                                        # STEP 32
ACTION: result = os0.path.getsize(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha/alpha'
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 33
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.link(path3,path0)                                                   # STEP 34
ACTION: os0.link(path3,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path3,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str4 += 'x'                                                             # STEP 35
ACTION: str4 += 'x' 
str4 = ' ' : <type 'str'>
=> str4 = ' x' : <type 'str'>
==================================================
fd0 = os0.open(path1, os.O_RDONLY)                                      # STEP 36
ACTION: fd0 = os0.open(path1, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha/alpha'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha/alpha'
==================================================
result = os0.path.isabs(path3)                                          # STEP 37
ACTION: result = os0.path.isabs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path3) 
==================================================
str0 += 'z'                                                             # STEP 38
ACTION: str0 += 'z' 
str0 = 'onmin' : <type 'str'>
=> str0 = 'onminz' : <type 'str'>
==================================================
os0.write(fd1,str0)                                                     # STEP 39
ACTION: os0.write(fd1,str0) 
str0 = 'onminz' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF1,str0) 
==================================================
result = os0.path.isfile(path1)                                         # STEP 40
ACTION: result = os0.path.isfile(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path1) 
==================================================
stat4 = os0.lstat(path1)                                                # STEP 41
ACTION: stat4 = os0.lstat(path1) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/alpha/alpha'
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha/alpha'
==================================================
str4 += 'n'                                                             # STEP 42
ACTION: str4 += 'n' 
str4 = ' x' : <type 'str'>
=> str4 = ' xn' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 43
ACTION: path1 += "/" + component1 
component1 = 'delta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/alpha/alpha' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha/alpha/delta' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 44
ACTION: str4 += 'k' 
str4 = ' xn' : <type 'str'>
=> str4 = ' xnk' : <type 'str'>
==================================================
os0.remove(path3)                                                       # STEP 45
ACTION: os0.remove(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
fd0 = os0.open(path1, os.O_CREAT)                                       # STEP 46
ACTION: fd0 = os0.open(path1, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha/delta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/alpha/alpha'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_CREAT) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha/alpha/delta'
==================================================
os0.makedirs(path1)                                                     # STEP 47
ACTION: os0.makedirs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path1) 
==================================================
result = os0.path.isabs(path0)                                          # STEP 48
ACTION: result = os0.path.isabs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path0) 
==================================================
os0.link(path2,path0)                                                   # STEP 49
ACTION: os0.link(path2,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path2,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
bytes4 = 0                                                              # STEP 50
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component1 = "omega"                                                    # STEP 51
ACTION: component1 = "omega" 
component1 = 'delta' : <type 'str'>
=> component1 = 'omega' : <type 'str'>
==================================================
stat2 = os0.stat(path1)                                                 # STEP 52
ACTION: stat2 = os0.stat(path1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha/delta' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1047d3ad0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path1) 
=> stat_REF2 = posix.stat_result(st_mode=16877, st_ino=5737998, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507227147, st_mtime=1507227147, st_ctime=1507227147) : <type 'posix.stat_result'>
==================================================
os0.symlink(path1,path3)                                                # STEP 53
ACTION: os0.symlink(path1,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha/delta' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path1,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.exists(path3)                                         # STEP 54
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
os0.link(path2,path0)                                                   # STEP 55
ACTION: os0.link(path2,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path2,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.symlink(path1,path0)                                                # STEP 56
ACTION: os0.symlink(path1,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha/delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path1,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str4 += 'g'                                                             # STEP 57
ACTION: str4 += 'g' 
str4 = ' xnk' : <type 'str'>
=> str4 = ' xnkg' : <type 'str'>
==================================================
stat0 = os0.lstat(path1)                                                # STEP 58
ACTION: stat0 = os0.lstat(path1) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha/delta' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x106238a90> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path1) 
=> stat_REF0 = posix.stat_result(st_mode=16877, st_ino=5737998, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507227147, st_mtime=1507227147, st_ctime=1507227147) : <type 'posix.stat_result'>
==================================================
os0.mkdir(path3)                                                        # STEP 59
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
os0.makedirs(path0)                                                     # STEP 60
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
os0.symlink(path1,path1)                                                # STEP 61
ACTION: os0.symlink(path1,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/alpha/alpha/delta'
REFERENCE ACTION: os_REF0.symlink(path1,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
stat1 = os0.fstat(fd1)                                                  # STEP 62
ACTION: stat1 = os0.fstat(fd1) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x106238b90> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.fstat(fd_REF1) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=5737995, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=11, st_atime=1507227147, st_mtime=1507227147, st_ctime=1507227147) : <type 'posix.stat_result'>
==================================================
result = os0.readlink(path3)                                            # STEP 63
ACTION: result = os0.readlink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
path3 += "/" + component1                                               # STEP 64
ACTION: path3 += "/" + component1 
component1 = 'omega' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 65
ACTION: str4 += 'o' 
str4 = ' xnkg' : <type 'str'>
=> str4 = ' xnkgo' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 66
ACTION: path1 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test/alpha/alpha/delta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha/alpha/delta/alpha' : <type 'str'>
==================================================
component1 = "e"                                                        # STEP 67
ACTION: component1 = "e" 
component1 = 'omega' : <type 'str'>
=> component1 = 'e' : <type 'str'>
==================================================
os0.makedirs(path3)                                                     # STEP 68
ACTION: os0.makedirs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path3) 
==================================================
result = os0.path.isabs(path0)                                          # STEP 69
ACTION: result = os0.path.isabs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path0) 
==================================================
os0.symlink(path3,path3)                                                # STEP 70
ACTION: os0.symlink(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: os_REF0.symlink(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.islink(path2)                                         # STEP 71
ACTION: result = os0.path.islink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path2) 
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 72
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/delta'
==================================================
component3 = "gamma"                                                    # STEP 73
ACTION: component3 = "gamma" 
component3 = 'alpha' : <type 'str'>
=> component3 = 'gamma' : <type 'str'>
==================================================
os0.link(path1,path0)                                                   # STEP 74
ACTION: os0.link(path1,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha/alpha/delta/alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path1,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 75
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/alpha/alpha/delta/alpha' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.symlink(path1,path0)                                                # STEP 76
ACTION: os0.symlink(path1,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path1,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.mkdir(path0)                                                        # STEP 77
ACTION: os0.mkdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
os0.makedirs(path0)                                                     # STEP 78
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
path0 += "/" + component2                                               # STEP 79
ACTION: path0 += "/" + component2 
component2 = 'g' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
stat3 = os0.fstat(fd1)                                                  # STEP 80
ACTION: stat3 = os0.fstat(fd1) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x106238c50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.fstat(fd_REF1) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=5737995, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=11, st_atime=1507227147, st_mtime=1507227147, st_ctime=1507227147) : <type 'posix.stat_result'>
==================================================
component2 = "phi"                                                      # STEP 81
ACTION: component2 = "phi" 
component2 = 'g' : <type 'str'>
=> component2 = 'phi' : <type 'str'>
==================================================
result = os0.path.isabs(path1)                                          # STEP 82
ACTION: result = os0.path.isabs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path1) 
==================================================
result = os0.path.islink(path1)                                         # STEP 83
ACTION: result = os0.path.islink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path1) 
==================================================
os0.symlink(path0,path3)                                                # STEP 84
ACTION: os0.symlink(path0,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: os_REF0.symlink(path0,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                         # STEP 85
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1053d2690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> 'unicode' does not have the buffer interface
ERROR: (<type 'exceptions.TypeError'>, TypeError("'unicode' does not have the buffer interface",), <traceback object at 0x106216dd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 14785, in act343
    self.p_fd[0] = self.p_os[0].open(self.p_path[2], os.O_CREAT | os.O_WRONLY)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4579, in Call
    fakefile = FakeFileWrapper(file_object, file_path, update=open_modes.can_write, read=open_modes.can_read, append=open_modes.append, delete_on_close=self._delete_on_close, filesystem=self.filesystem, newline=newline, binary=binary, closefd=closefd, encoding=encoding, errors=errors, raw_io=self.raw_io, use_io=self._use_io)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3990, in __init__
    self._io.write(contents)
STOPPING TESTING DUE TO FAILED TEST
2.50201702118 TOTAL RUNTIME
48 EXECUTED
9486 TOTAL TEST OPERATIONS
1.83364224434 TIME SPENT EXECUTING TEST OPERATIONS
0.41583275795 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00506496429443 TIME SPENT CHECKING PROPERTIES
1.83870720863 TOTAL TIME SPENT RUNNING SUT
0.133347034454 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
