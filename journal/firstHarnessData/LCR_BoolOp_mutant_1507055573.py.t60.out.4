Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.47875.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1021c5200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21117, in act429
    assert (type(raised) == type(refRaised))
Original test has 33 steps

SAVING TEST AS failure.47875.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "a"                                                         # STEP 0
ACTION: component2 = "a" 
component2 = None : <type 'NoneType'>
=> component2 = 'a' : <type 'str'>
==================================================
component4 = "alpha"                                                     # STEP 1
ACTION: component4 = "alpha" 
component4 = None : <type 'NoneType'>
=> component4 = 'alpha' : <type 'str'>
==================================================
component0 = "f"                                                         # STEP 2
ACTION: component0 = "f" 
component0 = None : <type 'NoneType'>
=> component0 = 'f' : <type 'str'>
==================================================
component3 = "epsilon"                                                   # STEP 3
ACTION: component3 = "epsilon" 
component3 = None : <type 'NoneType'>
=> component3 = 'epsilon' : <type 'str'>
==================================================
component1 = "a"                                                         # STEP 4
ACTION: component1 = "a" 
component1 = None : <type 'NoneType'>
=> component1 = 'a' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 5
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'p'                                                              # STEP 6
ACTION: str0 += 'p' 
str0 = '' : <type 'str'>
=> str0 = 'p' : <type 'str'>
==================================================
str0 += 'y'                                                              # STEP 7
ACTION: str0 += 'y' 
str0 = 'p' : <type 'str'>
=> str0 = 'py' : <type 'str'>
==================================================
str0 += 'h'                                                              # STEP 8
ACTION: str0 += 'h' 
str0 = 'py' : <type 'str'>
=> str0 = 'pyh' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 9
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str0 += 'y'                                                             # STEP 10
ACTION: str0 += 'y' 
str0 = 'pyh' : <type 'str'>
=> str0 = 'pyhy' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 11
ACTION: str0 += 'e' 
str0 = 'pyhy' : <type 'str'>
=> str0 = 'pyhye' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 12
ACTION: str0 += 'n' 
str0 = 'pyhye' : <type 'str'>
=> str0 = 'pyhyen' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 13
ACTION: str0 += 'w' 
str0 = 'pyhyen' : <type 'str'>
=> str0 = 'pyhyenw' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 14
ACTION: str0 += 'v' 
str0 = 'pyhyenw' : <type 'str'>
=> str0 = 'pyhyenwv' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 15
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102275150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str0 += 'x'                                                             # STEP 16
ACTION: str0 += 'x' 
str0 = 'pyhyenwv' : <type 'str'>
=> str0 = 'pyhyenwvx' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 17
ACTION: str0 += 'm' 
str0 = 'pyhyenwvx' : <type 'str'>
=> str0 = 'pyhyenwvxm' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 18
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.link(path1,path1)                                                   # STEP 19
ACTION: os0.link(path1,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102275150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path1,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = sorted(os0.listdir(path1))                                     # STEP 20
ACTION: result = sorted(os0.listdir(path1)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102275150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path1)) 
==================================================
str0 += 'o'                                                             # STEP 21
ACTION: str0 += 'o' 
str0 = 'pyhyenwvxm' : <type 'str'>
=> str0 = 'pyhyenwvxmo' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 22
ACTION: path1 += "/" + component2 
component2 = 'a' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 23
ACTION: str0 += 'g' 
str0 = 'pyhyenwvxmo' : <type 'str'>
=> str0 = 'pyhyenwvxmog' : <type 'str'>
==================================================
component2 = "f"                                                        # STEP 24
ACTION: component2 = "f" 
component2 = 'a' : <type 'str'>
=> component2 = 'f' : <type 'str'>
==================================================
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 25
ACTION: fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102275150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
os0.symlink(path1,path1)                                                # STEP 26
ACTION: os0.symlink(path1,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102275150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: os_REF0.symlink(path1,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
fd1 = os0.open(path1, os.O_RDONLY)                                      # STEP 27
ACTION: fd1 = os0.open(path1, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102275150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_RDONLY) 
=> fd_REF1 = 5 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 28
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 29
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
stat2 = os0.fstat(fd1)                                                  # STEP 30
ACTION: stat2 = os0.fstat(fd1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102275150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1021f4cd0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF1) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=1103374, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507162630, st_mtime=1507162630, st_ctime=1507162630) : <type 'posix.stat_result'>
==================================================
result = os0.read(fd0,bytes2)                                           # STEP 31
ACTION: result = os0.read(fd0,bytes2) 
bytes2 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102275150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
result = os0.read(fd1,bytes1)                                           # STEP 32
ACTION: result = os0.read(fd1,bytes1) 
bytes1 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102275150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for writing.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes1) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10269f3b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21117, in act429
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0281748771667 TOTAL RUNTIME
1 EXECUTED
33 TOTAL TEST OPERATIONS
0.0030210018158 TIME SPENT EXECUTING TEST OPERATIONS
0.00295042991638 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.26361846924e-05 TIME SPENT CHECKING PROPERTIES
0.00303363800049 TOTAL TIME SPENT RUNNING SUT
0.00302195549011 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
