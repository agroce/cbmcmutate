Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62060.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103391950>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 13567, in act326
    assert (type(raised) == type(refRaised))
Original test has 68 steps

SAVING TEST AS failure.62060.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "omega"                                                     # STEP 0
ACTION: component2 = "omega" 
component2 = None : <type 'NoneType'>
=> component2 = 'omega' : <type 'str'>
==================================================
component3 = "h"                                                         # STEP 1
ACTION: component3 = "h" 
component3 = None : <type 'NoneType'>
=> component3 = 'h' : <type 'str'>
==================================================
component1 = "h"                                                         # STEP 2
ACTION: component1 = "h" 
component1 = None : <type 'NoneType'>
=> component1 = 'h' : <type 'str'>
==================================================
component4 = "epsilon"                                                   # STEP 3
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
component0 = "g"                                                         # STEP 4
ACTION: component0 = "g" 
component0 = None : <type 'NoneType'>
=> component0 = 'g' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 5
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
bytes0 = 0                                                               # STEP 6
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
bytes1 = 0                                                               # STEP 7
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes4 = 0                                                               # STEP 8
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 9
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 10
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
bytes0 = 0                                                              # STEP 11
ACTION: bytes0 = 0 
bytes0 = 1 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
str3 = ""                                                               # STEP 12
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 13
ACTION: str3 += 'l' 
str3 = '' : <type 'str'>
=> str3 = 'l' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 14
ACTION: str3 += 'j' 
str3 = 'l' : <type 'str'>
=> str3 = 'lj' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 15
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 16
ACTION: path0 += "/" + component3 
component3 = 'h' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 18
ACTION: str3 += 'n' 
str3 = 'lj' : <type 'str'>
=> str3 = 'ljn' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 19
ACTION: path3 += "/" + component2 
component2 = 'omega' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 20
ACTION: str2 += 's' 
str2 = '' : <type 'str'>
=> str2 = 's' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 21
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 22
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
path3 += "/" + component4                                               # STEP 23
ACTION: path3 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/omega/epsilon' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 24
ACTION: str2 += 'u' 
str2 = 's' : <type 'str'>
=> str2 = 'su' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 25
ACTION: bytes2 = 0 
bytes2 = 1 : <type 'int'>
=> bytes2 = 0 : <type 'int'>
==================================================
str2 = ""                                                               # STEP 26
ACTION: str2 = "" 
str2 = 'su' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
component3 = "g"                                                        # STEP 27
ACTION: component3 = "g" 
component3 = 'h' : <type 'str'>
=> component3 = 'g' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 28
ACTION: str2 += 't' 
str2 = '' : <type 'str'>
=> str2 = 't' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 29
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component2 = "d"                                                        # STEP 30
ACTION: component2 = "d" 
component2 = 'omega' : <type 'str'>
=> component2 = 'd' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 31
ACTION: str3 += 'w' 
str3 = 'ljn' : <type 'str'>
=> str3 = 'ljnw' : <type 'str'>
==================================================
component4 = "gamma"                                                    # STEP 32
ACTION: component4 = "gamma" 
component4 = 'epsilon' : <type 'str'>
=> component4 = 'gamma' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 33
ACTION: str3 += 'v' 
str3 = 'ljnw' : <type 'str'>
=> str3 = 'ljnwv' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 34
ACTION: str3 += " " 
str3 = 'ljnwv' : <type 'str'>
=> str3 = 'ljnwv ' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 35
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 36
ACTION: str3 += 'v' 
str3 = 'ljnwv ' : <type 'str'>
=> str3 = 'ljnwv v' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 37
ACTION: str2 += 't' 
str2 = 't' : <type 'str'>
=> str2 = 'tt' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 38
ACTION: str2 += 'r' 
str2 = 'tt' : <type 'str'>
=> str2 = 'ttr' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 39
ACTION: path3 += "/" + component4 
component4 = 'gamma' : <type 'str'>
path3 = '/Volumes/ramdisk/test/omega/epsilon' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/omega/epsilon/gamma' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 40
ACTION: str3 += 'v' 
str3 = 'ljnwv v' : <type 'str'>
=> str3 = 'ljnwv vv' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 41
ACTION: str3 += 'j' 
str3 = 'ljnwv vv' : <type 'str'>
=> str3 = 'ljnwv vvj' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 42
ACTION: str2 += 'z' 
str2 = 'ttr' : <type 'str'>
=> str2 = 'ttrz' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 43
ACTION: str3 += 'f' 
str3 = 'ljnwv vvj' : <type 'str'>
=> str3 = 'ljnwv vvjf' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 44
ACTION: path0 += "/" + component1 
component1 = 'h' : <type 'str'>
path0 = '/Volumes/ramdisk/test/h' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/h/h' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 45
ACTION: str3 += 's' 
str3 = 'ljnwv vvjf' : <type 'str'>
=> str3 = 'ljnwv vvjfs' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 46
ACTION: path3 += "/" + component4 
component4 = 'gamma' : <type 'str'>
path3 = '/Volumes/ramdisk/test/omega/epsilon/gamma' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/omega/epsilon/gamma/gamma' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 47
ACTION: path1 += "/" + component1 
component1 = 'h' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 48
ACTION: str2 += 'u' 
str2 = 'ttrz' : <type 'str'>
=> str2 = 'ttrzu' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 49
ACTION: str2 += 't' 
str2 = 'ttrzu' : <type 'str'>
=> str2 = 'ttrzut' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 50
ACTION: str3 += 'w' 
str3 = 'ljnwv vvjfs' : <type 'str'>
=> str3 = 'ljnwv vvjfsw' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 51
ACTION: str3 += 'd' 
str3 = 'ljnwv vvjfsw' : <type 'str'>
=> str3 = 'ljnwv vvjfswd' : <type 'str'>
==================================================
component1 = "delta"                                                    # STEP 52
ACTION: component1 = "delta" 
component1 = 'h' : <type 'str'>
=> component1 = 'delta' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 53
ACTION: str3 += 'o' 
str3 = 'ljnwv vvjfswd' : <type 'str'>
=> str3 = 'ljnwv vvjfswdo' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 54
ACTION: str2 += 'n' 
str2 = 'ttrzut' : <type 'str'>
=> str2 = 'ttrzutn' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 55
ACTION: str3 += 'v' 
str3 = 'ljnwv vvjfswdo' : <type 'str'>
=> str3 = 'ljnwv vvjfswdov' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 56
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
path0 += "/" + component0                                               # STEP 57
ACTION: path0 += "/" + component0 
component0 = 'g' : <type 'str'>
path0 = '/Volumes/ramdisk/test/h/h' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/h/h/g' : <type 'str'>
==================================================
component0 = "beta"                                                     # STEP 58
ACTION: component0 = "beta" 
component0 = 'g' : <type 'str'>
=> component0 = 'beta' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 59
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10374a690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.path.islink(path2)                                         # STEP 60
ACTION: result = os0.path.islink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10374a690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path2) 
==================================================
os0.symlink(path2,path1)                                                # STEP 61
ACTION: os0.symlink(path2,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10374a690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
path1 = '/Volumes/ramdisk/test/h' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path2,path1) 
==================================================
str4 = ""                                                               # STEP 62
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 63
ACTION: str2 += 'n' 
str2 = 'ttrzutn' : <type 'str'>
=> str2 = 'ttrzutnn' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 64
ACTION: str2 = "" 
str2 = 'ttrzutnn' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 65
ACTION: str3 += 'p' 
str3 = 'ljnwv vvjfswdov' : <type 'str'>
=> str3 = 'ljnwv vvjfswdovp' : <type 'str'>
==================================================
stat0 = os0.lstat(path1)                                                # STEP 66
ACTION: stat0 = os0.lstat(path1) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10374a690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/h' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10470fcd0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path1) 
=> stat_REF0 = posix.stat_result(st_mode=41453, st_ino=17189641, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=21, st_atime=1507388138, st_mtime=1507388138, st_ctime=1507388138) : <type 'posix.stat_result'>
==================================================
fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 67
ACTION: fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10374a690> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/h/h/g' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/Volumes/ramdisk/test/h'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF1 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1046c5c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 13567, in act326
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.467788934708 TOTAL RUNTIME
10 EXECUTED
1868 TOTAL TEST OPERATIONS
0.328861951828 TIME SPENT EXECUTING TEST OPERATIONS
0.0802400112152 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00096321105957 TIME SPENT CHECKING PROPERTIES
0.329825162888 TOTAL TIME SPENT RUNNING SUT
0.0252861976624 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
