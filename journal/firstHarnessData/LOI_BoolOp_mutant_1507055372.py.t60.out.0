Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.48859.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.IOError'>, IOError(2, 'No such file or directory in the fake filesystem'), <traceback object at 0x1005aa368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22295, in act446
    self.p_os[0].remove(self.p_path[3])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3569, in remove
    self.filesystem.RemoveFile(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2477, in RemoveFile
    link_obj = self.LResolveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1886, in LResolveObject
    raise IOError(errno.ENOENT, 'No such file or directory in the fake filesystem', path)
Original test has 27 steps

SAVING TEST AS failure.48859.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "d"                                                         # STEP 0
ACTION: component2 = "d" 
component2 = None : <type 'NoneType'>
=> component2 = 'd' : <type 'str'>
==================================================
component0 = "alpha"                                                     # STEP 1
ACTION: component0 = "alpha" 
component0 = None : <type 'NoneType'>
=> component0 = 'alpha' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 2
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component1 = "omega"                                                     # STEP 3
ACTION: component1 = "omega" 
component1 = None : <type 'NoneType'>
=> component1 = 'omega' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 4
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
component4 = "f"                                                         # STEP 5
ACTION: component4 = "f" 
component4 = None : <type 'NoneType'>
=> component4 = 'f' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 6
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103753dd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.makedirs(path3)                                                      # STEP 8
ACTION: os0.makedirs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103753dd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = os0.path.isdir(path3)                                           # STEP 9
ACTION: result = os0.path.isdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103753dd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path3) 
==================================================
result = os0.path.islink(path3)                                         # STEP 10
ACTION: result = os0.path.islink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103753dd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path3) 
==================================================
os0.link(path3,path3)                                                   # STEP 11
ACTION: os0.link(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103753dd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.exists(path3)                                         # STEP 12
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103753dd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
bytes3 = 0                                                              # STEP 13
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 += 'x'                                                             # STEP 14
ACTION: str3 += 'x' 
str3 = '' : <type 'str'>
=> str3 = 'x' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 15
ACTION: str3 += 'n' 
str3 = 'x' : <type 'str'>
=> str3 = 'xn' : <type 'str'>
==================================================
result = os0.path.islink(path3)                                         # STEP 16
ACTION: result = os0.path.islink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103753dd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path3) 
==================================================
str3 += 'r'                                                             # STEP 17
ACTION: str3 += 'r' 
str3 = 'xn' : <type 'str'>
=> str3 = 'xnr' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 18
ACTION: str3 += 'm' 
str3 = 'xnr' : <type 'str'>
=> str3 = 'xnrm' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 19
ACTION: str3 = "" 
str3 = 'xnrm' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 20
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.symlink(path3,path0)                                                # STEP 21
ACTION: os0.symlink(path3,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103753dd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path3,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str3 += 'n'                                                             # STEP 22
ACTION: str3 += 'n' 
str3 = '' : <type 'str'>
=> str3 = 'n' : <type 'str'>
==================================================
os0.link(path3,path0)                                                   # STEP 23
ACTION: os0.link(path3,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103753dd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path3,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str3 += 'n'                                                             # STEP 24
ACTION: str3 += 'n' 
str3 = 'n' : <type 'str'>
=> str3 = 'nn' : <type 'str'>
==================================================
os0.link(path3,path0)                                                   # STEP 25
ACTION: os0.link(path3,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103753dd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path3,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.remove(path3)                                                       # STEP 26
ACTION: os0.remove(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103753dd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.IOError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/tes'
ERROR: (<type 'exceptions.IOError'>, IOError(2, 'No such file or directory in the fake filesystem'), <traceback object at 0x1005aa200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22295, in act446
    self.p_os[0].remove(self.p_path[3])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3569, in remove
    self.filesystem.RemoveFile(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2477, in RemoveFile
    link_obj = self.LResolveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1886, in LResolveObject
    raise IOError(errno.ENOENT, 'No such file or directory in the fake filesystem', path)
STOPPING TESTING DUE TO FAILED TEST
0.0715990066528 TOTAL RUNTIME
3 EXECUTED
427 TOTAL TEST OPERATIONS
0.018789768219 TIME SPENT EXECUTING TEST OPERATIONS
0.0215783119202 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000213861465454 TIME SPENT CHECKING PROPERTIES
0.0190036296844 TOTAL TIME SPENT RUNNING SUT
0.00906896591187 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
