Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.55200.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1039d8ea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 18969, in act399
    assert (type(raised) == type(refRaised))
Original test has 25 steps

SAVING TEST AS failure.55200.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "epsilon"                                                   # STEP 0
ACTION: component1 = "epsilon" 
component1 = None : <type 'NoneType'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
component4 = "a"                                                         # STEP 1
ACTION: component4 = "a" 
component4 = None : <type 'NoneType'>
=> component4 = 'a' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "gamma"                                                     # STEP 3
ACTION: component0 = "gamma" 
component0 = None : <type 'NoneType'>
=> component0 = 'gamma' : <type 'str'>
==================================================
component2 = "alpha"                                                     # STEP 4
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 5
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103a3c990> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.path.exists(path3)                                          # STEP 6
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103a3c990> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
str0 = ""                                                                # STEP 7
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 8
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
result = sorted(os0.listdir(path3))                                      # STEP 9
ACTION: result = sorted(os0.listdir(path3)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103a3c990> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path3)) 
==================================================
bytes1 = 0                                                              # STEP 10
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str0 += 'a'                                                             # STEP 11
ACTION: str0 += 'a' 
str0 = '' : <type 'str'>
=> str0 = 'a' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 12
ACTION: path3 += "/" + component1 
component1 = 'epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 13
ACTION: str0 += 'q' 
str0 = 'a' : <type 'str'>
=> str0 = 'aq' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 14
ACTION: str0 += 'd' 
str0 = 'aq' : <type 'str'>
=> str0 = 'aqd' : <type 'str'>
==================================================
os0.rmdir(path3)                                                        # STEP 15
ACTION: os0.rmdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103a3c990> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: os_REF0.rmdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon'
==================================================
os0.rmdir(path3)                                                        # STEP 16
ACTION: os0.rmdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103a3c990> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: os_REF0.rmdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon'
==================================================
str0 = ""                                                               # STEP 17
ACTION: str0 = "" 
str0 = 'aqd' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 18
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103a3c990> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_EXCL) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
result = os0.path.isdir(path3)                                          # STEP 19
ACTION: result = os0.path.isdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103a3c990> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path3) 
==================================================
str0 += 'd'                                                             # STEP 20
ACTION: str0 += 'd' 
str0 = '' : <type 'str'>
=> str0 = 'd' : <type 'str'>
==================================================
stat3 = os0.lstat(path3)                                                # STEP 21
ACTION: stat3 = os0.lstat(path3) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103a3c990> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1042e8b90> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path3) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=9410613, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507278113, st_mtime=1507278113, st_ctime=1507278113) : <type 'posix.stat_result'>
==================================================
component1 = "g"                                                        # STEP 22
ACTION: component1 = "g" 
component1 = 'epsilon' : <type 'str'>
=> component1 = 'g' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 23
ACTION: str0 += 's' 
str0 = 'd' : <type 'str'>
=> str0 = 'ds' : <type 'str'>
==================================================
fd1 = os0.open(path3, os.O_RDONLY)                                      # STEP 24
ACTION: fd1 = os0.open(path3, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103a3c990> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 13] Permission denied: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_RDONLY) 
=> fd_REF1 = 5 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1041a6d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 18969, in act399
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.085569858551 TOTAL RUNTIME
2 EXECUTED
225 TOTAL TEST OPERATIONS
0.0514566898346 TIME SPENT EXECUTING TEST OPERATIONS
0.00930309295654 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000104904174805 TIME SPENT CHECKING PROPERTIES
0.0515615940094 TOTAL TIME SPENT RUNNING SUT
0.00544118881226 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
