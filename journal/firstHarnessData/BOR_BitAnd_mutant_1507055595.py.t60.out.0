Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.65921.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10465e128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 11919, in act301
    assert (type(raised) == type(refRaised))
Original test has 113 steps

SAVING TEST AS failure.65921.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "f"                                                         # STEP 0
ACTION: component4 = "f" 
component4 = None : <type 'NoneType'>
=> component4 = 'f' : <type 'str'>
==================================================
component2 = "omega"                                                     # STEP 1
ACTION: component2 = "omega" 
component2 = None : <type 'NoneType'>
=> component2 = 'omega' : <type 'str'>
==================================================
component0 = "phi"                                                       # STEP 2
ACTION: component0 = "phi" 
component0 = None : <type 'NoneType'>
=> component0 = 'phi' : <type 'str'>
==================================================
component1 = "d"                                                         # STEP 3
ACTION: component1 = "d" 
component1 = None : <type 'NoneType'>
=> component1 = 'd' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 4
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
component3 = "g"                                                         # STEP 5
ACTION: component3 = "g" 
component3 = None : <type 'NoneType'>
=> component3 = 'g' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 6
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 7
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str2 += 'k'                                                              # STEP 8
ACTION: str2 += 'k' 
str2 = '' : <type 'str'>
=> str2 = 'k' : <type 'str'>
==================================================
str0 += 'w'                                                              # STEP 9
ACTION: str0 += 'w' 
str0 = '' : <type 'str'>
=> str0 = 'w' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 10
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str2 += 'e'                                                             # STEP 11
ACTION: str2 += 'e' 
str2 = 'k' : <type 'str'>
=> str2 = 'ke' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 12
ACTION: str2 += 't' 
str2 = 'ke' : <type 'str'>
=> str2 = 'ket' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 13
ACTION: str0 += 'r' 
str0 = 'w' : <type 'str'>
=> str0 = 'wr' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 14
ACTION: str0 += 'p' 
str0 = 'wr' : <type 'str'>
=> str0 = 'wrp' : <type 'str'>
==================================================
str0 += 'f'                                                             # STEP 15
ACTION: str0 += 'f' 
str0 = 'wrp' : <type 'str'>
=> str0 = 'wrpf' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 16
ACTION: str0 += 'w' 
str0 = 'wrpf' : <type 'str'>
=> str0 = 'wrpfw' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 18
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 19
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str0 += 'b'                                                             # STEP 20
ACTION: str0 += 'b' 
str0 = 'wrpfw' : <type 'str'>
=> str0 = 'wrpfwb' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 21
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 22
ACTION: str0 += 'o' 
str0 = 'wrpfwb' : <type 'str'>
=> str0 = 'wrpfwbo' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 23
ACTION: str2 += 'x' 
str2 = 'ket' : <type 'str'>
=> str2 = 'ketx' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 24
ACTION: str2 += 'y' 
str2 = 'ketx' : <type 'str'>
=> str2 = 'ketxy' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 25
ACTION: str2 += 'k' 
str2 = 'ketxy' : <type 'str'>
=> str2 = 'ketxyk' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 26
ACTION: str0 += 'b' 
str0 = 'wrpfwbo' : <type 'str'>
=> str0 = 'wrpfwbob' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 27
ACTION: path2 += "/" + component3 
component3 = 'g' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 28
ACTION: str0 += 'a' 
str0 = 'wrpfwbob' : <type 'str'>
=> str0 = 'wrpfwboba' : <type 'str'>
==================================================
component3 = "epsilon"                                                  # STEP 29
ACTION: component3 = "epsilon" 
component3 = 'g' : <type 'str'>
=> component3 = 'epsilon' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 30
ACTION: str1 += 'r' 
str1 = '' : <type 'str'>
=> str1 = 'r' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 31
ACTION: str2 += 'v' 
str2 = 'ketxyk' : <type 'str'>
=> str2 = 'ketxykv' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 32
ACTION: str1 += 'h' 
str1 = 'r' : <type 'str'>
=> str1 = 'rh' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 33
ACTION: path2 += "/" + component3 
component3 = 'epsilon' : <type 'str'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/g/epsilon' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 34
ACTION: str2 += 'n' 
str2 = 'ketxykv' : <type 'str'>
=> str2 = 'ketxykvn' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 35
ACTION: str1 += 'o' 
str1 = 'rh' : <type 'str'>
=> str1 = 'rho' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 36
ACTION: str0 += 'g' 
str0 = 'wrpfwboba' : <type 'str'>
=> str0 = 'wrpfwbobag' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 37
ACTION: str2 += 'w' 
str2 = 'ketxykvn' : <type 'str'>
=> str2 = 'ketxykvnw' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 38
ACTION: str1 += 'c' 
str1 = 'rho' : <type 'str'>
=> str1 = 'rhoc' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 39
ACTION: str1 += 'y' 
str1 = 'rhoc' : <type 'str'>
=> str1 = 'rhocy' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 40
ACTION: str2 += 'b' 
str2 = 'ketxykvnw' : <type 'str'>
=> str2 = 'ketxykvnwb' : <type 'str'>
==================================================
component3 = "phi"                                                      # STEP 41
ACTION: component3 = "phi" 
component3 = 'epsilon' : <type 'str'>
=> component3 = 'phi' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 42
ACTION: str1 += 'v' 
str1 = 'rhocy' : <type 'str'>
=> str1 = 'rhocyv' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 43
ACTION: str2 += 'w' 
str2 = 'ketxykvnwb' : <type 'str'>
=> str2 = 'ketxykvnwbw' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 44
ACTION: str1 += " " 
str1 = 'rhocyv' : <type 'str'>
=> str1 = 'rhocyv ' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 45
ACTION: str1 += 'z' 
str1 = 'rhocyv ' : <type 'str'>
=> str1 = 'rhocyv z' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 46
ACTION: str2 += 'q' 
str2 = 'ketxykvnwbw' : <type 'str'>
=> str2 = 'ketxykvnwbwq' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 47
ACTION: str1 += 's' 
str1 = 'rhocyv z' : <type 'str'>
=> str1 = 'rhocyv zs' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 48
ACTION: str1 += 'k' 
str1 = 'rhocyv zs' : <type 'str'>
=> str1 = 'rhocyv zsk' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 49
ACTION: str2 += 'h' 
str2 = 'ketxykvnwbwq' : <type 'str'>
=> str2 = 'ketxykvnwbwqh' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 50
ACTION: str2 += 'b' 
str2 = 'ketxykvnwbwqh' : <type 'str'>
=> str2 = 'ketxykvnwbwqhb' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 51
ACTION: str1 += 'o' 
str1 = 'rhocyv zsk' : <type 'str'>
=> str1 = 'rhocyv zsko' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 52
ACTION: str2 += 'e' 
str2 = 'ketxykvnwbwqhb' : <type 'str'>
=> str2 = 'ketxykvnwbwqhbe' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 53
ACTION: str0 = "" 
str0 = 'wrpfwbobag' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 54
ACTION: str1 += 'j' 
str1 = 'rhocyv zsko' : <type 'str'>
=> str1 = 'rhocyv zskoj' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 55
ACTION: str1 += 'k' 
str1 = 'rhocyv zskoj' : <type 'str'>
=> str1 = 'rhocyv zskojk' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 56
ACTION: path2 += "/" + component0 
component0 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test/g/epsilon' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/g/epsilon/phi' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 57
ACTION: str2 += 'y' 
str2 = 'ketxykvnwbwqhbe' : <type 'str'>
=> str2 = 'ketxykvnwbwqhbey' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 58
ACTION: str0 += 'a' 
str0 = '' : <type 'str'>
=> str0 = 'a' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 59
ACTION: str2 += 'l' 
str2 = 'ketxykvnwbwqhbey' : <type 'str'>
=> str2 = 'ketxykvnwbwqhbeyl' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 60
ACTION: str0 += 't' 
str0 = 'a' : <type 'str'>
=> str0 = 'at' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 61
ACTION: bytes0 += 1 
bytes0 = 1 : <type 'int'>
=> bytes0 = 2 : <type 'int'>
==================================================
str2 += 'i'                                                             # STEP 62
ACTION: str2 += 'i' 
str2 = 'ketxykvnwbwqhbeyl' : <type 'str'>
=> str2 = 'ketxykvnwbwqhbeyli' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 63
ACTION: str1 += 'p' 
str1 = 'rhocyv zskojk' : <type 'str'>
=> str1 = 'rhocyv zskojkp' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 64
ACTION: path0 += "/" + component3 
component3 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 65
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 66
ACTION: str0 += 'c' 
str0 = 'at' : <type 'str'>
=> str0 = 'atc' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 67
ACTION: str2 += 'l' 
str2 = 'ketxykvnwbwqhbeyli' : <type 'str'>
=> str2 = 'ketxykvnwbwqhbeylil' : <type 'str'>
==================================================
component0 = "delta"                                                    # STEP 68
ACTION: component0 = "delta" 
component0 = 'phi' : <type 'str'>
=> component0 = 'delta' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 69
ACTION: str0 += " " 
str0 = 'atc' : <type 'str'>
=> str0 = 'atc ' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 70
ACTION: bytes0 = 0 
bytes0 = 2 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
str2 += 'z'                                                             # STEP 71
ACTION: str2 += 'z' 
str2 = 'ketxykvnwbwqhbeylil' : <type 'str'>
=> str2 = 'ketxykvnwbwqhbeylilz' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 72
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 73
ACTION: str1 += 'k' 
str1 = 'rhocyv zskojkp' : <type 'str'>
=> str1 = 'rhocyv zskojkpk' : <type 'str'>
==================================================
component3 = "b"                                                        # STEP 74
ACTION: component3 = "b" 
component3 = 'phi' : <type 'str'>
=> component3 = 'b' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 75
ACTION: str0 += 'h' 
str0 = 'atc ' : <type 'str'>
=> str0 = 'atc h' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 76
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str2 += 'g'                                                             # STEP 77
ACTION: str2 += 'g' 
str2 = 'ketxykvnwbwqhbeylilz' : <type 'str'>
=> str2 = 'ketxykvnwbwqhbeylilzg' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 78
ACTION: str1 = "" 
str1 = 'rhocyv zskojkpk' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 79
ACTION: str2 += 'w' 
str2 = 'ketxykvnwbwqhbeylilzg' : <type 'str'>
=> str2 = 'ketxykvnwbwqhbeylilzgw' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 80
ACTION: str0 += 'o' 
str0 = 'atc h' : <type 'str'>
=> str0 = 'atc ho' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 81
ACTION: str0 += 'q' 
str0 = 'atc ho' : <type 'str'>
=> str0 = 'atc hoq' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 82
ACTION: str0 += 'j' 
str0 = 'atc hoq' : <type 'str'>
=> str0 = 'atc hoqj' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 83
ACTION: str1 += 'q' 
str1 = '' : <type 'str'>
=> str1 = 'q' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 84
ACTION: path1 += "/" + component1 
component1 = 'd' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 85
ACTION: str2 += 'r' 
str2 = 'ketxykvnwbwqhbeylilzgw' : <type 'str'>
=> str2 = 'ketxykvnwbwqhbeylilzgwr' : <type 'str'>
==================================================
component1 = "beta"                                                     # STEP 86
ACTION: component1 = "beta" 
component1 = 'd' : <type 'str'>
=> component1 = 'beta' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 87
ACTION: str0 += 'j' 
str0 = 'atc hoqj' : <type 'str'>
=> str0 = 'atc hoqjj' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 88
ACTION: str1 += 'y' 
str1 = 'q' : <type 'str'>
=> str1 = 'qy' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 89
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1040bbc50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 90
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1040bbc50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/d' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
stat1 = os0.stat(path2)                                                 # STEP 91
ACTION: stat1 = os0.stat(path2) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1040bbc50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g/epsilon/phi' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/g/epsilon/phi'
REFERENCE ACTION: stat_REF1 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g/epsilon/phi'
==================================================
str2 += 'h'                                                             # STEP 92
ACTION: str2 += 'h' 
str2 = 'ketxykvnwbwqhbeylilzgwr' : <type 'str'>
=> str2 = 'ketxykvnwbwqhbeylilzgwrh' : <type 'str'>
==================================================
os0.symlink(path1,path1)                                                # STEP 93
ACTION: os0.symlink(path1,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1040bbc50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/d'
REFERENCE ACTION: os_REF0.symlink(path1,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str1 += 'x'                                                             # STEP 94
ACTION: str1 += 'x' 
str1 = 'qy' : <type 'str'>
=> str1 = 'qyx' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 95
ACTION: str1 += 'i' 
str1 = 'qyx' : <type 'str'>
=> str1 = 'qyxi' : <type 'str'>
==================================================
os0.makedirs(path2)                                                     # STEP 96
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1040bbc50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g/epsilon/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path2) 
==================================================
result = os0.path.isfile(path1)                                         # STEP 97
ACTION: result = os0.path.isfile(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1040bbc50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path1) 
==================================================
stat2 = os0.fstat(fd1)                                                  # STEP 98
ACTION: stat2 = os0.fstat(fd1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1040bbc50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1037993d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF1) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=22518076, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507462801, st_mtime=1507462801, st_ctime=1507462801) : <type 'posix.stat_result'>
==================================================
fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 99
ACTION: fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1040bbc50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/d' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_WRONLY | os.O_APPEND) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
os0.removedirs(path0)                                                  # STEP 100
ACTION: os0.removedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1040bbc50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 66] Fake Directory not empty: 'test'
REFERENCE ACTION: os_REF0.removedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 66] Directory not empty: '/Volumes/ramdisk/test'
==================================================
stat0 = os0.fstat(fd0)                                                 # STEP 101
ACTION: stat0 = os0.fstat(fd0) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1040bbc50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x105a35f10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.fstat(fd_REF0) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=22518076, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507462801, st_mtime=1507462801, st_ctime=1507462801) : <type 'posix.stat_result'>
==================================================
path0 += "/" + component1                                              # STEP 102
ACTION: path0 += "/" + component1 
component1 = 'beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str2 += 'g'                                                            # STEP 103
ACTION: str2 += 'g' 
str2 = 'ketxykvnwbwqhbeylilzgwrh' : <type 'str'>
=> str2 = 'ketxykvnwbwqhbeylilzgwrhg' : <type 'str'>
==================================================
str1 += " "                                                            # STEP 104
ACTION: str1 += " " 
str1 = 'qyxi' : <type 'str'>
=> str1 = 'qyxi ' : <type 'str'>
==================================================
stat4 = os0.stat(path0)                                                # STEP 105
ACTION: stat4 = os0.stat(path0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1040bbc50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
==================================================
result = os0.path.isfile(path2)                                        # STEP 106
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1040bbc50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g/epsilon/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
result = os0.read(fd1,bytes0)                                          # STEP 107
ACTION: result = os0.read(fd1,bytes0) 
bytes0 = 1 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1040bbc50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
str1 += 'p'                                                            # STEP 108
ACTION: str1 += 'p' 
str1 = 'qyxi ' : <type 'str'>
=> str1 = 'qyxi p' : <type 'str'>
==================================================
str0 += 'f'                                                            # STEP 109
ACTION: str0 += 'f' 
str0 = 'atc hoqjj' : <type 'str'>
=> str0 = 'atc hoqjjf' : <type 'str'>
==================================================
str1 += 'f'                                                            # STEP 110
ACTION: str1 += 'f' 
str1 = 'qyxi p' : <type 'str'>
=> str1 = 'qyxi pf' : <type 'str'>
==================================================
str0 += 'u'                                                            # STEP 111
ACTION: str0 += 'u' 
str0 = 'atc hoqjjf' : <type 'str'>
=> str0 = 'atc hoqjjfu' : <type 'str'>
==================================================
os0.link(path1,path0)                                                  # STEP 112
ACTION: os0.link(path1,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1040bbc50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/d' : <type 'str'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Cannot create hard link to directory: '/Volumes/ramdisk/test/d'
REFERENCE ACTION: os_REF0.link(path1,path0) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105a23dd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 11919, in act301
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
11.831384182 TOTAL RUNTIME
199 EXECUTED
39713 TOTAL TEST OPERATIONS
9.15626430511 TIME SPENT EXECUTING TEST OPERATIONS
1.76736116409 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0221335887909 TIME SPENT CHECKING PROPERTIES
9.17839789391 TOTAL TIME SPENT RUNNING SUT
0.594544649124 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
