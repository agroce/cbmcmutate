Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.55238.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("can't multiply sequence by non-int of type 'str'",), <traceback object at 0x1007c3368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17, in newFakeOS
    fs = pyfakefs.fake_filesystem.FakeFilesystem()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 881, in __init__
    self.AddMountPoint(self.root.name, total_size)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 933, in AddMountPoint
    path = self.NormalizePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1357, in NormalizePath
    return self.CollapsePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1283, in CollapsePath
    collapsed_path = (sep * collapsed_path)
Original test has 89 steps

SAVING TEST AS failure.55238.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "phi"                                                       # STEP 0
ACTION: component2 = "phi" 
component2 = None : <type 'NoneType'>
=> component2 = 'phi' : <type 'str'>
==================================================
component0 = "epsilon"                                                   # STEP 1
ACTION: component0 = "epsilon" 
component0 = None : <type 'NoneType'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 3
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component1 = "g"                                                         # STEP 4
ACTION: component1 = "g" 
component1 = None : <type 'NoneType'>
=> component1 = 'g' : <type 'str'>
==================================================
path0 += "/" + component1                                                # STEP 5
ACTION: path0 += "/" + component1 
component1 = 'g' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 6
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component4 = "b"                                                         # STEP 7
ACTION: component4 = "b" 
component4 = None : <type 'NoneType'>
=> component4 = 'b' : <type 'str'>
==================================================
str0 += 'r'                                                              # STEP 8
ACTION: str0 += 'r' 
str0 = '' : <type 'str'>
=> str0 = 'r' : <type 'str'>
==================================================
component1 = "h"                                                         # STEP 9
ACTION: component1 = "h" 
component1 = 'g' : <type 'str'>
=> component1 = 'h' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 10
ACTION: path0 += "/" + component4 
component4 = 'b' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/b' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 11
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "h"                                                        # STEP 12
ACTION: component4 = "h" 
component4 = 'b' : <type 'str'>
=> component4 = 'h' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 13
ACTION: str0 += 'h' 
str0 = 'r' : <type 'str'>
=> str0 = 'rh' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 14
ACTION: path0 += "/" + component0 
component0 = 'epsilon' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g/b' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/b/epsilon' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 15
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component0 = "a"                                                        # STEP 16
ACTION: component0 = "a" 
component0 = 'epsilon' : <type 'str'>
=> component0 = 'a' : <type 'str'>
==================================================
component3 = "alpha"                                                    # STEP 17
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 18
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 19
ACTION: path4 += "/" + component0 
component0 = 'a' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 20
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 21
ACTION: str0 += 'o' 
str0 = 'rh' : <type 'str'>
=> str0 = 'rho' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 22
ACTION: path0 += "/" + component4 
component4 = 'h' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g/b/epsilon' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/b/epsilon/h' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 23
ACTION: path2 += "/" + component1 
component1 = 'h' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
component1 = "beta"                                                     # STEP 24
ACTION: component1 = "beta" 
component1 = 'h' : <type 'str'>
=> component1 = 'beta' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 25
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path0 += "/" + component1                                               # STEP 26
ACTION: path0 += "/" + component1 
component1 = 'beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g/b/epsilon/h' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/b/epsilon/h/beta' : <type 'str'>
==================================================
component1 = "delta"                                                    # STEP 27
ACTION: component1 = "delta" 
component1 = 'beta' : <type 'str'>
=> component1 = 'delta' : <type 'str'>
==================================================
component0 = "a"                                                        # STEP 28
ACTION: component0 = "a" 
component0 = 'a' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 29
ACTION: path2 += "/" + component1 
component1 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/h' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/h/delta' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 30
ACTION: str4 += 'a' 
str4 = '' : <type 'str'>
=> str4 = 'a' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 31
ACTION: str4 += 'c' 
str4 = 'a' : <type 'str'>
=> str4 = 'ac' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 32
ACTION: str0 = "" 
str0 = 'rho' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
component4 = "epsilon"                                                  # STEP 33
ACTION: component4 = "epsilon" 
component4 = 'h' : <type 'str'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 34
ACTION: str4 += 'z' 
str4 = 'ac' : <type 'str'>
=> str4 = 'acz' : <type 'str'>
==================================================
component1 = "d"                                                        # STEP 35
ACTION: component1 = "d" 
component1 = 'delta' : <type 'str'>
=> component1 = 'd' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 36
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/a' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 37
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
bytes2 += 1                                                             # STEP 38
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str4 += 'c'                                                             # STEP 39
ACTION: str4 += 'c' 
str4 = 'acz' : <type 'str'>
=> str4 = 'aczc' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 40
ACTION: str0 += 't' 
str0 = '' : <type 'str'>
=> str0 = 't' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 41
ACTION: str4 += 'o' 
str4 = 'aczc' : <type 'str'>
=> str4 = 'aczco' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 42
ACTION: str0 += " " 
str0 = 't' : <type 'str'>
=> str0 = 't ' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 43
ACTION: str4 += 'z' 
str4 = 'aczco' : <type 'str'>
=> str4 = 'aczcoz' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 44
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/h/delta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 45
ACTION: str4 += 'j' 
str4 = 'aczcoz' : <type 'str'>
=> str4 = 'aczcozj' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 46
ACTION: str0 += 'a' 
str0 = 't ' : <type 'str'>
=> str0 = 't a' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 47
ACTION: path3 += "/" + component1 
component1 = 'd' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 48
ACTION: path4 += "/" + component0 
component0 = 'a' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
component1 = "f"                                                        # STEP 49
ACTION: component1 = "f" 
component1 = 'd' : <type 'str'>
=> component1 = 'f' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 50
ACTION: path4 += "/" + component2 
component2 = 'phi' : <type 'str'>
path4 = '/Volumes/ramdisk/test/a' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/a/phi' : <type 'str'>
==================================================
component2 = "f"                                                        # STEP 51
ACTION: component2 = "f" 
component2 = 'phi' : <type 'str'>
=> component2 = 'f' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 52
ACTION: str0 += 'u' 
str0 = 't a' : <type 'str'>
=> str0 = 't au' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 53
ACTION: str0 += 'n' 
str0 = 't au' : <type 'str'>
=> str0 = 't aun' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 54
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/g/b/epsilon/h/beta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 55
ACTION: path1 += "/" + component2 
component2 = 'f' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
component2 = "c"                                                        # STEP 56
ACTION: component2 = "c" 
component2 = 'f' : <type 'str'>
=> component2 = 'c' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 57
ACTION: path0 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 58
ACTION: path1 += "/" + component1 
component1 = 'f' : <type 'str'>
path1 = '/Volumes/ramdisk/test/f' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/f/f' : <type 'str'>
==================================================
component0 = "h"                                                        # STEP 59
ACTION: component0 = "h" 
component0 = 'a' : <type 'str'>
=> component0 = 'h' : <type 'str'>
==================================================
component3 = "d"                                                        # STEP 60
ACTION: component3 = "d" 
component3 = 'alpha' : <type 'str'>
=> component3 = 'd' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 61
ACTION: str4 += 'e' 
str4 = 'aczcozj' : <type 'str'>
=> str4 = 'aczcozje' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 62
ACTION: str0 += 'm' 
str0 = 't aun' : <type 'str'>
=> str0 = 't aunm' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 63
ACTION: path1 += "/" + component0 
component0 = 'h' : <type 'str'>
path1 = '/Volumes/ramdisk/test/f/f' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/f/f/h' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 64
ACTION: str4 += 'j' 
str4 = 'aczcozje' : <type 'str'>
=> str4 = 'aczcozjej' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 65
ACTION: str4 += 'u' 
str4 = 'aczcozjej' : <type 'str'>
=> str4 = 'aczcozjeju' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 66
ACTION: path2 += "/" + component1 
component1 = 'f' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 67
ACTION: str4 += 'p' 
str4 = 'aczcozjeju' : <type 'str'>
=> str4 = 'aczcozjejup' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 68
ACTION: path4 += "/" + component3 
component3 = 'd' : <type 'str'>
path4 = '/Volumes/ramdisk/test/a/phi' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/a/phi/d' : <type 'str'>
==================================================
component0 = "epsilon"                                                  # STEP 69
ACTION: component0 = "epsilon" 
component0 = 'h' : <type 'str'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 70
ACTION: str4 = "" 
str4 = 'aczcozjejup' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 71
ACTION: str0 += 't' 
str0 = 't aunm' : <type 'str'>
=> str0 = 't aunmt' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 72
ACTION: str0 += 'o' 
str0 = 't aunmt' : <type 'str'>
=> str0 = 't aunmto' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 73
ACTION: path4 += "/" + component0 
component0 = 'epsilon' : <type 'str'>
path4 = '/Volumes/ramdisk/test/a/phi/d' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/a/phi/d/epsilon' : <type 'str'>
==================================================
component3 = "lambda"                                                   # STEP 74
ACTION: component3 = "lambda" 
component3 = 'd' : <type 'str'>
=> component3 = 'lambda' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 75
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str4 += 'r'                                                             # STEP 76
ACTION: str4 += 'r' 
str4 = '' : <type 'str'>
=> str4 = 'r' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 77
ACTION: path3 += "/" + component1 
component1 = 'f' : <type 'str'>
path3 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/d/f' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 78
ACTION: path1 += "/" + component2 
component2 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test/f/f/h' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/f/f/h/c' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 79
ACTION: str4 += 'k' 
str4 = 'r' : <type 'str'>
=> str4 = 'rk' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 80
ACTION: path4 += "/" + component3 
component3 = 'lambda' : <type 'str'>
path4 = '/Volumes/ramdisk/test/a/phi/d/epsilon' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/a/phi/d/epsilon/lambda' : <type 'str'>
==================================================
str0 += 'f'                                                             # STEP 81
ACTION: str0 += 'f' 
str0 = 't aunmto' : <type 'str'>
=> str0 = 't aunmtof' : <type 'str'>
==================================================
component1 = "epsilon"                                                  # STEP 82
ACTION: component1 = "epsilon" 
component1 = 'f' : <type 'str'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 83
ACTION: str4 += 'q' 
str4 = 'rk' : <type 'str'>
=> str4 = 'rkq' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 84
ACTION: path3 += "/" + component1 
component1 = 'epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test/d/f' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/d/f/epsilon' : <type 'str'>
==================================================
component3 = "b"                                                        # STEP 85
ACTION: component3 = "b" 
component3 = 'lambda' : <type 'str'>
=> component3 = 'b' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 86
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/f' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "f"                                                        # STEP 87
ACTION: component2 = "f" 
component2 = 'c' : <type 'str'>
=> component2 = 'f' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 88
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> can't multiply sequence by non-int of type 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("can't multiply sequence by non-int of type 'str'",), <traceback object at 0x104387fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17, in newFakeOS
    fs = pyfakefs.fake_filesystem.FakeFilesystem()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 881, in __init__
    self.AddMountPoint(self.root.name, total_size)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 933, in AddMountPoint
    path = self.NormalizePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1357, in NormalizePath
    return self.CollapsePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1283, in CollapsePath
    collapsed_path = (sep * collapsed_path)
STOPPING TESTING DUE TO FAILED TEST
0.0425140857697 TOTAL RUNTIME
2 EXECUTED
289 TOTAL TEST OPERATIONS
0.00405764579773 TIME SPENT EXECUTING TEST OPERATIONS
0.0130202770233 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000128746032715 TIME SPENT CHECKING PROPERTIES
0.00418639183044 TOTAL TIME SPENT RUNNING SUT
0.00522089004517 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
