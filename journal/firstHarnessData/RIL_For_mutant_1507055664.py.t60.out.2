Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.61674.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1006c31b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 13789, in act329
    assert (type(raised) == type(refRaised))
Original test has 75 steps

SAVING TEST AS failure.61674.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path1 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 1
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component0 = "b"                                                         # STEP 2
ACTION: component0 = "b" 
component0 = None : <type 'NoneType'>
=> component0 = 'b' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 3
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'k'                                                              # STEP 4
ACTION: str4 += 'k' 
str4 = '' : <type 'str'>
=> str4 = 'k' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 5
ACTION: str4 = "" 
str4 = 'k' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 6
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component1 = "phi"                                                       # STEP 7
ACTION: component1 = "phi" 
component1 = None : <type 'NoneType'>
=> component1 = 'phi' : <type 'str'>
==================================================
component3 = "gamma"                                                     # STEP 8
ACTION: component3 = "gamma" 
component3 = None : <type 'NoneType'>
=> component3 = 'gamma' : <type 'str'>
==================================================
str4 += 'd'                                                              # STEP 9
ACTION: str4 += 'd' 
str4 = '' : <type 'str'>
=> str4 = 'd' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 10
ACTION: str4 = "" 
str4 = 'd' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 11
ACTION: str4 += 'f' 
str4 = '' : <type 'str'>
=> str4 = 'f' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 12
ACTION: str4 += 'z' 
str4 = 'f' : <type 'str'>
=> str4 = 'fz' : <type 'str'>
==================================================
component4 = "e"                                                        # STEP 13
ACTION: component4 = "e" 
component4 = None : <type 'NoneType'>
=> component4 = 'e' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 14
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 15
ACTION: path1 += "/" + component1 
component1 = 'phi' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 16
ACTION: str4 = "" 
str4 = 'fz' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 17
ACTION: str2 += 'l' 
str2 = '' : <type 'str'>
=> str2 = 'l' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 18
ACTION: str0 += 'z' 
str0 = '' : <type 'str'>
=> str0 = 'z' : <type 'str'>
==================================================
component1 = "b"                                                        # STEP 19
ACTION: component1 = "b" 
component1 = 'phi' : <type 'str'>
=> component1 = 'b' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 20
ACTION: str0 += 'c' 
str0 = 'z' : <type 'str'>
=> str0 = 'zc' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 21
ACTION: str0 += 'd' 
str0 = 'zc' : <type 'str'>
=> str0 = 'zcd' : <type 'str'>
==================================================
component2 = "b"                                                        # STEP 22
ACTION: component2 = "b" 
component2 = None : <type 'NoneType'>
=> component2 = 'b' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 23
ACTION: str0 += " " 
str0 = 'zcd' : <type 'str'>
=> str0 = 'zcd ' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 24
ACTION: str0 += 'm' 
str0 = 'zcd ' : <type 'str'>
=> str0 = 'zcd m' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 25
ACTION: str4 += 'y' 
str4 = '' : <type 'str'>
=> str4 = 'y' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 26
ACTION: str0 += 'y' 
str0 = 'zcd m' : <type 'str'>
=> str0 = 'zcd my' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 27
ACTION: str4 = "" 
str4 = 'y' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 28
ACTION: str4 += 'y' 
str4 = '' : <type 'str'>
=> str4 = 'y' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 29
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 30
ACTION: str3 += 'f' 
str3 = '' : <type 'str'>
=> str3 = 'f' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 31
ACTION: str2 += 'k' 
str2 = 'l' : <type 'str'>
=> str2 = 'lk' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 32
ACTION: str3 += 'e' 
str3 = 'f' : <type 'str'>
=> str3 = 'fe' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 33
ACTION: str4 += 'l' 
str4 = 'y' : <type 'str'>
=> str4 = 'yl' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 34
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 35
ACTION: path3 += "/" + component1 
component1 = 'b' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 36
ACTION: str0 += 'y' 
str0 = 'zcd my' : <type 'str'>
=> str0 = 'zcd myy' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 37
ACTION: str0 += 'w' 
str0 = 'zcd myy' : <type 'str'>
=> str0 = 'zcd myyw' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 38
ACTION: str3 += 'y' 
str3 = 'fe' : <type 'str'>
=> str3 = 'fey' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 39
ACTION: str3 += " " 
str3 = 'fey' : <type 'str'>
=> str3 = 'fey ' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 40
ACTION: str3 += 'e' 
str3 = 'fey ' : <type 'str'>
=> str3 = 'fey e' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 41
ACTION: str4 += 'o' 
str4 = 'yl' : <type 'str'>
=> str4 = 'ylo' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 42
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 43
ACTION: str2 += 'y' 
str2 = 'lk' : <type 'str'>
=> str2 = 'lky' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 44
ACTION: str4 += 'b' 
str4 = 'ylo' : <type 'str'>
=> str4 = 'ylob' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 45
ACTION: path1 += "/" + component0 
component0 = 'b' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
component1 = "a"                                                        # STEP 46
ACTION: component1 = "a" 
component1 = 'b' : <type 'str'>
=> component1 = 'a' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 47
ACTION: str4 += 'k' 
str4 = 'ylob' : <type 'str'>
=> str4 = 'ylobk' : <type 'str'>
==================================================
component0 = "f"                                                        # STEP 48
ACTION: component0 = "f" 
component0 = 'b' : <type 'str'>
=> component0 = 'f' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 49
ACTION: str3 += 'k' 
str3 = 'fey e' : <type 'str'>
=> str3 = 'fey ek' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 50
ACTION: str4 += 'j' 
str4 = 'ylobk' : <type 'str'>
=> str4 = 'ylobkj' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 51
ACTION: str3 += 'p' 
str3 = 'fey ek' : <type 'str'>
=> str3 = 'fey ekp' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 52
ACTION: str2 += 'p' 
str2 = 'lky' : <type 'str'>
=> str2 = 'lkyp' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 53
ACTION: str0 += 't' 
str0 = 'zcd myyw' : <type 'str'>
=> str0 = 'zcd myywt' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 54
ACTION: path1 += "/" + component0 
component0 = 'f' : <type 'str'>
path1 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/b/f' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 55
ACTION: str2 = "" 
str2 = 'lkyp' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 56
ACTION: str3 += 'e' 
str3 = 'fey ekp' : <type 'str'>
=> str3 = 'fey ekpe' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 57
ACTION: str0 += 'e' 
str0 = 'zcd myywt' : <type 'str'>
=> str0 = 'zcd myywte' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 58
ACTION: str2 += 'q' 
str2 = '' : <type 'str'>
=> str2 = 'q' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 59
ACTION: str3 += 'o' 
str3 = 'fey ekpe' : <type 'str'>
=> str3 = 'fey ekpeo' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 60
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
component0 = "gamma"                                                    # STEP 61
ACTION: component0 = "gamma" 
component0 = 'f' : <type 'str'>
=> component0 = 'gamma' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 62
ACTION: str0 += 'u' 
str0 = 'zcd myywte' : <type 'str'>
=> str0 = 'zcd myywteu' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 63
ACTION: str3 += 'x' 
str3 = 'fey ekpeo' : <type 'str'>
=> str3 = 'fey ekpeox' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 64
ACTION: str0 += 'n' 
str0 = 'zcd myywteu' : <type 'str'>
=> str0 = 'zcd myywteun' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 65
ACTION: str2 += 'h' 
str2 = 'q' : <type 'str'>
=> str2 = 'qh' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 66
ACTION: str4 += 'n' 
str4 = 'ylobkj' : <type 'str'>
=> str4 = 'ylobkjn' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 67
ACTION: str3 += 'z' 
str3 = 'fey ekpeox' : <type 'str'>
=> str3 = 'fey ekpeoxz' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 68
ACTION: str3 += 'p' 
str3 = 'fey ekpeoxz' : <type 'str'>
=> str3 = 'fey ekpeoxzp' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 69
ACTION: str3 += 'n' 
str3 = 'fey ekpeoxzp' : <type 'str'>
=> str3 = 'fey ekpeoxzpn' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 70
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 71
ACTION: str0 += 'k' 
str0 = 'zcd myywteun' : <type 'str'>
=> str0 = 'zcd myywteunk' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 72
ACTION: str4 += 'k' 
str4 = 'ylobkjn' : <type 'str'>
=> str4 = 'ylobkjnk' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 73
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049ce810> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 74
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049ce810> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF1 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105304ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 13789, in act329
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0305759906769 TOTAL RUNTIME
1 EXECUTED
75 TOTAL TEST OPERATIONS
0.00212454795837 TIME SPENT EXECUTING TEST OPERATIONS
0.00353407859802 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.59876251221e-05 TIME SPENT CHECKING PROPERTIES
0.0021505355835 TOTAL TIME SPENT RUNNING SUT
0.00324010848999 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
