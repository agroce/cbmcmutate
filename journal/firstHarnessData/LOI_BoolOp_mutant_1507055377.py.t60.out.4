Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.54157.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104b94ea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 28908, in act543
    assert (type(raised) == type(refRaised))
Original test has 65 steps

SAVING TEST AS failure.54157.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "e"                                                         # STEP 0
ACTION: component0 = "e" 
component0 = None : <type 'NoneType'>
=> component0 = 'e' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 1
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component2 = "phi"                                                       # STEP 2
ACTION: component2 = "phi" 
component2 = None : <type 'NoneType'>
=> component2 = 'phi' : <type 'str'>
==================================================
component3 = "gamma"                                                     # STEP 3
ACTION: component3 = "gamma" 
component3 = None : <type 'NoneType'>
=> component3 = 'gamma' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 4
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component4 = "beta"                                                      # STEP 5
ACTION: component4 = "beta" 
component4 = None : <type 'NoneType'>
=> component4 = 'beta' : <type 'str'>
==================================================
str3 += 'c'                                                              # STEP 6
ACTION: str3 += 'c' 
str3 = '' : <type 'str'>
=> str3 = 'c' : <type 'str'>
==================================================
str3 += 'b'                                                              # STEP 7
ACTION: str3 += 'b' 
str3 = 'c' : <type 'str'>
=> str3 = 'cb' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 += "/" + component4                                                # STEP 9
ACTION: path0 += "/" + component4 
component4 = 'beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 10
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str3 += 'c'                                                             # STEP 11
ACTION: str3 += 'c' 
str3 = 'cb' : <type 'str'>
=> str3 = 'cbc' : <type 'str'>
==================================================
component1 = "e"                                                        # STEP 12
ACTION: component1 = "e" 
component1 = None : <type 'NoneType'>
=> component1 = 'e' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 13
ACTION: str3 += 'g' 
str3 = 'cbc' : <type 'str'>
=> str3 = 'cbcg' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 14
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 15
ACTION: fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
str0 = ""                                                               # STEP 16
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 17
ACTION: str3 += 'y' 
str3 = 'cbcg' : <type 'str'>
=> str3 = 'cbcgy' : <type 'str'>
==================================================
stat3 = os0.fstat(fd1)                                                  # STEP 18
ACTION: stat3 = os0.fstat(fd1) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104e57190> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.fstat(fd_REF1) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=7946963, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507257971, st_mtime=1507257971, st_ctime=1507257971) : <type 'posix.stat_result'>
==================================================
str3 += 'c'                                                             # STEP 19
ACTION: str3 += 'c' 
str3 = 'cbcgy' : <type 'str'>
=> str3 = 'cbcgyc' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 20
ACTION: str3 += 'v' 
str3 = 'cbcgyc' : <type 'str'>
=> str3 = 'cbcgycv' : <type 'str'>
==================================================
result = sorted(os0.listdir(path0))                                     # STEP 21
ACTION: result = sorted(os0.listdir(path0)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Fake os module: not a directory: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path0)) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/beta'
==================================================
str0 += 'l'                                                             # STEP 22
ACTION: str0 += 'l' 
str0 = '' : <type 'str'>
=> str0 = 'l' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 23
ACTION: str3 += 'j' 
str3 = 'cbcgycv' : <type 'str'>
=> str3 = 'cbcgycvj' : <type 'str'>
==================================================
result = os0.path.dirname(path0)                                        # STEP 24
ACTION: result = os0.path.dirname(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path0) 
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.isdir(path0)                                          # STEP 26
ACTION: result = os0.path.isdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path0) 
==================================================
component4 = "lambda"                                                   # STEP 27
ACTION: component4 = "lambda" 
component4 = 'beta' : <type 'str'>
=> component4 = 'lambda' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 28
ACTION: str3 += 'q' 
str3 = 'cbcgycvj' : <type 'str'>
=> str3 = 'cbcgycvjq' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 29
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.symlink(path0,path0)                                                # STEP 30
ACTION: os0.symlink(path0,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: os_REF0.symlink(path0,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = sorted(os0.listdir(path0))                                     # STEP 31
ACTION: result = sorted(os0.listdir(path0)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Fake os module: not a directory: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path0)) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/beta'
==================================================
str0 += 'n'                                                             # STEP 32
ACTION: str0 += 'n' 
str0 = 'l' : <type 'str'>
=> str0 = 'ln' : <type 'str'>
==================================================
os0.link(path1,path1)                                                   # STEP 33
ACTION: os0.link(path1,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path1,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str3 += 'd'                                                             # STEP 34
ACTION: str3 += 'd' 
str3 = 'cbcgycvjq' : <type 'str'>
=> str3 = 'cbcgycvjqd' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 35
ACTION: str0 += 'm' 
str0 = 'ln' : <type 'str'>
=> str0 = 'lnm' : <type 'str'>
==================================================
result = os0.path.exists(path3)                                         # STEP 36
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 37
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.lexists(path0)                                        # STEP 38
ACTION: result = os0.path.lexists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path0) 
==================================================
result = os0.read(fd1,bytes2)                                           # STEP 39
ACTION: result = os0.read(fd1,bytes2) 
bytes2 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
stat1 = os0.fstat(fd1)                                                  # STEP 40
ACTION: stat1 = os0.fstat(fd1) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104bd3250> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.fstat(fd_REF1) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=7946963, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507257971, st_mtime=1507257971, st_ctime=1507257971) : <type 'posix.stat_result'>
==================================================
str0 += 'o'                                                             # STEP 41
ACTION: str0 += 'o' 
str0 = 'lnm' : <type 'str'>
=> str0 = 'lnmo' : <type 'str'>
==================================================
result = os0.readlink(path3)                                            # STEP 42
ACTION: result = os0.readlink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
str0 += 'z'                                                             # STEP 43
ACTION: str0 += 'z' 
str0 = 'lnmo' : <type 'str'>
=> str0 = 'lnmoz' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 44
ACTION: path0 += "/" + component1 
component1 = 'e' : <type 'str'>
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/beta/e' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 45
ACTION: str3 += 'g' 
str3 = 'cbcgycvjqd' : <type 'str'>
=> str3 = 'cbcgycvjqdg' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 46
ACTION: path0 += "/" + component0 
component0 = 'e' : <type 'str'>
path0 = '/Volumes/ramdisk/test/beta/e' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/beta/e/e' : <type 'str'>
==================================================
result = os0.read(fd1,bytes0)                                           # STEP 47
ACTION: result = os0.read(fd1,bytes0) 
bytes0 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
path1 += "/" + component2                                               # STEP 48
ACTION: path1 += "/" + component2 
component2 = 'phi' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 49
ACTION: fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
path3 += "/" + component2                                               # STEP 50
ACTION: path3 += "/" + component2 
component2 = 'phi' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
os0.removedirs(path3)                                                   # STEP 51
ACTION: os0.removedirs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Fake os module: not a directory: '/Volumes/ramdisk/test/phi'
REFERENCE ACTION: os_REF0.removedirs(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/phi'
==================================================
component1 = "lambda"                                                   # STEP 52
ACTION: component1 = "lambda" 
component1 = 'e' : <type 'str'>
=> component1 = 'lambda' : <type 'str'>
==================================================
component0 = "b"                                                        # STEP 53
ACTION: component0 = "b" 
component0 = 'e' : <type 'str'>
=> component0 = 'b' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 54
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
stat0 = os0.stat(path1)                                                 # STEP 55
ACTION: stat0 = os0.stat(path1) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x105507550> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.stat(path1) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=7946964, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507257971, st_mtime=1507257971, st_ctime=1507257971) : <type 'posix.stat_result'>
==================================================
result = sorted(os0.listdir(path0))                                     # STEP 56
ACTION: result = sorted(os0.listdir(path0)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta/e/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in fake filesystem: '/Volumes/ramdisk/test/beta/e/e'
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path0)) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/beta/e/e'
==================================================
result = os0.path.isfile(path0)                                         # STEP 57
ACTION: result = os0.path.isfile(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/beta/e/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path0) 
==================================================
result = stat1.st_size                                                  # STEP 58
ACTION: result = stat1.st_size 
stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104bd3250> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF1 = posix.stat_result(st_mode=33261, st_ino=7946963, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507257971, st_mtime=1507257971, st_ctime=1507257971) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF1.st_size 
==================================================
str3 += 'c'                                                             # STEP 59
ACTION: str3 += 'c' 
str3 = 'cbcgycvjqdg' : <type 'str'>
=> str3 = 'cbcgycvjqdgc' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 60
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str3 += 'q'                                                             # STEP 61
ACTION: str3 += 'q' 
str3 = 'cbcgycvjqdgc' : <type 'str'>
=> str3 = 'cbcgycvjqdgcq' : <type 'str'>
==================================================
os0.symlink(path1,path1)                                                # STEP 62
ACTION: os0.symlink(path1,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/phi'
REFERENCE ACTION: os_REF0.symlink(path1,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.islink(path3)                                         # STEP 63
ACTION: result = os0.path.islink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path3) 
==================================================
os0.rename(path3,path0)                                                 # STEP 64
ACTION: os0.rename(path3,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104e570d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test/beta/e/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.IOError'> [Errno 20] Not a directory in fake filesystem: '/Volumes/ramdisk/test/beta/e/e'
REFERENCE ACTION: os_REF0.rename(path3,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1053ba440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 28908, in act543
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0482881069183 TOTAL RUNTIME
1 EXECUTED
65 TOTAL TEST OPERATIONS
0.0118696689606 TIME SPENT EXECUTING TEST OPERATIONS
0.0029091835022 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.95774841309e-05 TIME SPENT CHECKING PROPERTIES
0.0119092464447 TOTAL TIME SPENT RUNNING SUT
0.00412106513977 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
