Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.63904.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("can't multiply sequence by non-int of type 'str'",), <traceback object at 0x102b86098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1766, in ResolvePath
    return _ComponentsToPath(resolved_components)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1662, in _ComponentsToPath
    path = (sep * path)
Original test has 11 steps

SAVING TEST AS failure.63904.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "d"                                                         # STEP 0
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
component2 = "f"                                                         # STEP 1
ACTION: component2 = "f" 
component2 = None : <type 'NoneType'>
=> component2 = 'f' : <type 'str'>
==================================================
component3 = "f"                                                         # STEP 2
ACTION: component3 = "f" 
component3 = None : <type 'NoneType'>
=> component3 = 'f' : <type 'str'>
==================================================
component4 = "e"                                                         # STEP 3
ACTION: component4 = "e" 
component4 = None : <type 'NoneType'>
=> component4 = 'e' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 4
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component1 = "g"                                                         # STEP 5
ACTION: component1 = "g" 
component1 = None : <type 'NoneType'>
=> component1 = 'g' : <type 'str'>
==================================================
str4 += 'e'                                                              # STEP 6
ACTION: str4 += 'e' 
str4 = '' : <type 'str'>
=> str4 = 'e' : <type 'str'>
==================================================
str4 += 'i'                                                              # STEP 7
ACTION: str4 += 'i' 
str4 = 'e' : <type 'str'>
=> str4 = 'ei' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 's'                                                              # STEP 9
ACTION: str4 += 's' 
str4 = 'ei' : <type 'str'>
=> str4 = 'eis' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 10
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> can't multiply sequence by non-int of type 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("can't multiply sequence by non-int of type 'str'",), <traceback object at 0x10297ffc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1766, in ResolvePath
    return _ComponentsToPath(resolved_components)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1662, in _ComponentsToPath
    path = (sep * path)
STOPPING TESTING DUE TO FAILED TEST
0.0340659618378 TOTAL RUNTIME
2 EXECUTED
211 TOTAL TEST OPERATIONS
0.00314426422119 TIME SPENT EXECUTING TEST OPERATIONS
0.0108604431152 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
8.70227813721e-05 TIME SPENT CHECKING PROPERTIES
0.00323128700256 TOTAL TIME SPENT RUNNING SUT
0.00528812408447 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
