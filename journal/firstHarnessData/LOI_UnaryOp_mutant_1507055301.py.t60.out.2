Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.54533.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104c9bc68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 10329, in act276
    assert (type(raised) == type(refRaised))
Original test has 48 steps

SAVING TEST AS failure.54533.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "c"                                                         # STEP 0
ACTION: component1 = "c" 
component1 = None : <type 'NoneType'>
=> component1 = 'c' : <type 'str'>
==================================================
component0 = "f"                                                         # STEP 1
ACTION: component0 = "f" 
component0 = None : <type 'NoneType'>
=> component0 = 'f' : <type 'str'>
==================================================
component4 = "c"                                                         # STEP 2
ACTION: component4 = "c" 
component4 = None : <type 'NoneType'>
=> component4 = 'c' : <type 'str'>
==================================================
component3 = "g"                                                         # STEP 3
ACTION: component3 = "g" 
component3 = None : <type 'NoneType'>
=> component3 = 'g' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 4
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
component2 = "lambda"                                                    # STEP 5
ACTION: component2 = "lambda" 
component2 = None : <type 'NoneType'>
=> component2 = 'lambda' : <type 'str'>
==================================================
str2 += 'e'                                                              # STEP 6
ACTION: str2 += 'e' 
str2 = '' : <type 'str'>
=> str2 = 'e' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 7
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str0 = ""                                                                # STEP 8
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str2 += 'c'                                                              # STEP 9
ACTION: str2 += 'c' 
str2 = 'e' : <type 'str'>
=> str2 = 'ec' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 10
ACTION: str0 += 'u' 
str0 = '' : <type 'str'>
=> str0 = 'u' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 11
ACTION: str0 += 't' 
str0 = 'u' : <type 'str'>
=> str0 = 'ut' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 12
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str2 += 'q'                                                             # STEP 13
ACTION: str2 += 'q' 
str2 = 'ec' : <type 'str'>
=> str2 = 'ecq' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 14
ACTION: str0 += 'u' 
str0 = 'ut' : <type 'str'>
=> str0 = 'utu' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 15
ACTION: str2 += 'd' 
str2 = 'ecq' : <type 'str'>
=> str2 = 'ecqd' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 16
ACTION: str0 += 'y' 
str0 = 'utu' : <type 'str'>
=> str0 = 'utuy' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 17
ACTION: str2 += 'v' 
str2 = 'ecqd' : <type 'str'>
=> str2 = 'ecqdv' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 18
ACTION: str2 += 'o' 
str2 = 'ecqdv' : <type 'str'>
=> str2 = 'ecqdvo' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 19
ACTION: str0 += 'b' 
str0 = 'utuy' : <type 'str'>
=> str0 = 'utuyb' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 20
ACTION: str2 += 's' 
str2 = 'ecqdvo' : <type 'str'>
=> str2 = 'ecqdvos' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 21
ACTION: str0 += 'h' 
str0 = 'utuyb' : <type 'str'>
=> str0 = 'utuybh' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 22
ACTION: str0 = "" 
str0 = 'utuybh' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 23
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 24
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 25
ACTION: str0 += 'c' 
str0 = '' : <type 'str'>
=> str0 = 'c' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 26
ACTION: path0 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 27
ACTION: str0 += 'n' 
str0 = 'c' : <type 'str'>
=> str0 = 'cn' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 28
ACTION: path1 += "/" + component4 
component4 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 29
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str2 += 'a'                                                             # STEP 30
ACTION: str2 += 'a' 
str2 = 'ecqdvos' : <type 'str'>
=> str2 = 'ecqdvosa' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 31
ACTION: path0 += "/" + component0 
component0 = 'f' : <type 'str'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/lambda/f' : <type 'str'>
==================================================
component4 = "omega"                                                    # STEP 32
ACTION: component4 = "omega" 
component4 = 'c' : <type 'str'>
=> component4 = 'omega' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 33
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "g"                                                        # STEP 34
ACTION: component2 = "g" 
component2 = 'lambda' : <type 'str'>
=> component2 = 'g' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 35
ACTION: str0 += 'e' 
str0 = 'cn' : <type 'str'>
=> str0 = 'cne' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 36
ACTION: str0 += 'v' 
str0 = 'cne' : <type 'str'>
=> str0 = 'cnev' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 37
ACTION: str0 += 'c' 
str0 = 'cnev' : <type 'str'>
=> str0 = 'cnevc' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 38
ACTION: str0 += 'j' 
str0 = 'cnevc' : <type 'str'>
=> str0 = 'cnevcj' : <type 'str'>
==================================================
component0 = "beta"                                                     # STEP 39
ACTION: component0 = "beta" 
component0 = 'f' : <type 'str'>
=> component0 = 'beta' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 40
ACTION: path1 += "/" + component0 
component0 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 41
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str2 += 'k'                                                             # STEP 42
ACTION: str2 += 'k' 
str2 = 'ecqdvosa' : <type 'str'>
=> str2 = 'ecqdvosak' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 43
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104cfed50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd1 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 44
ACTION: fd1 = os0.open(path1, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104cfed50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_WRONLY | os.O_APPEND) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
==================================================
str0 += " "                                                             # STEP 45
ACTION: str0 += " " 
str0 = 'cnevcj' : <type 'str'>
=> str0 = 'cnevcj ' : <type 'str'>
==================================================
result = os0.path.islink(path0)                                         # STEP 46
ACTION: result = os0.path.islink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104cfed50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda/f' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path0) 
==================================================
os0.symlink(path1,path0)                                                # STEP 47
ACTION: os0.symlink(path1,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104cfed50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/lambda/f' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path1,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105cbc3b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 10329, in act276
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0267379283905 TOTAL RUNTIME
1 EXECUTED
48 TOTAL TEST OPERATIONS
0.00216960906982 TIME SPENT EXECUTING TEST OPERATIONS
0.00298523902893 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.74045562744e-05 TIME SPENT CHECKING PROPERTIES
0.0021870136261 TOTAL TIME SPENT RUNNING SUT
0.00325798988342 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
