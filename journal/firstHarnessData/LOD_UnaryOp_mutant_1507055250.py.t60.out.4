Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.51217.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("'unicode' does not have the buffer interface",), <traceback object at 0x10340e290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15229, in act349
    self.p_fd[1] = self.p_os[0].open(self.p_path[3], os.O_CREAT | os.O_WRONLY)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4579, in Call
    fakefile = FakeFileWrapper(file_object, file_path, update=open_modes.can_write, read=open_modes.can_read, append=open_modes.append, delete_on_close=self._delete_on_close, filesystem=self.filesystem, newline=newline, binary=binary, closefd=closefd, encoding=encoding, errors=errors, raw_io=self.raw_io, use_io=self._use_io)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3990, in __init__
    self._io.write(contents)
Original test has 85 steps

SAVING TEST AS failure.51217.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "delta"                                                     # STEP 0
ACTION: component3 = "delta" 
component3 = None : <type 'NoneType'>
=> component3 = 'delta' : <type 'str'>
==================================================
component4 = "phi"                                                       # STEP 1
ACTION: component4 = "phi" 
component4 = None : <type 'NoneType'>
=> component4 = 'phi' : <type 'str'>
==================================================
component0 = "g"                                                         # STEP 2
ACTION: component0 = "g" 
component0 = None : <type 'NoneType'>
=> component0 = 'g' : <type 'str'>
==================================================
component2 = "beta"                                                      # STEP 3
ACTION: component2 = "beta" 
component2 = None : <type 'NoneType'>
=> component2 = 'beta' : <type 'str'>
==================================================
component1 = "d"                                                         # STEP 4
ACTION: component1 = "d" 
component1 = None : <type 'NoneType'>
=> component1 = 'd' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 += "/" + component2                                                # STEP 7
ACTION: path1 += "/" + component2 
component2 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
path1 += "/" + component2                                                # STEP 8
ACTION: path1 += "/" + component2 
component2 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
==================================================
component2 = "beta"                                                      # STEP 9
ACTION: component2 = "beta" 
component2 = 'beta' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 10
ACTION: path3 += "/" + component2 
component2 = 'beta' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
component2 = "alpha"                                                    # STEP 11
ACTION: component2 = "alpha" 
component2 = 'beta' : <type 'str'>
=> component2 = 'alpha' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 12
ACTION: path1 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta/beta/alpha' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 13
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 14
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 15
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 16
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
stat3 = os0.stat(path1)                                                 # STEP 17
ACTION: stat3 = os0.stat(path1) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta/beta/alpha' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/beta/beta/alpha'
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/beta/alpha'
==================================================
str2 = ""                                                               # STEP 18
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 19
ACTION: str0 += 'h' 
str0 = '' : <type 'str'>
=> str0 = 'h' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 20
ACTION: str0 += 'k' 
str0 = 'h' : <type 'str'>
=> str0 = 'hk' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 21
ACTION: str2 += 'c' 
str2 = '' : <type 'str'>
=> str2 = 'c' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 22
ACTION: str0 += 'p' 
str0 = 'hk' : <type 'str'>
=> str0 = 'hkp' : <type 'str'>
==================================================
result = os0.path.getsize(path1)                                        # STEP 23
ACTION: result = os0.path.getsize(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta/beta/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/beta/alpha'
==================================================
str0 += 'n'                                                             # STEP 24
ACTION: str0 += 'n' 
str0 = 'hkp' : <type 'str'>
=> str0 = 'hkpn' : <type 'str'>
==================================================
fd1 = os0.open(path1, os.O_RDONLY)                                      # STEP 25
ACTION: fd1 = os0.open(path1, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta/beta/alpha' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/beta/alpha'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/beta/alpha'
==================================================
os0.symlink(path1,path1)                                                # STEP 26
ACTION: os0.symlink(path1,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta/beta/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/beta/beta'
REFERENCE ACTION: os_REF0.symlink(path1,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 27
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta/beta/alpha' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/beta/beta'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/beta/alpha'
==================================================
os0.symlink(path1,path1)                                                # STEP 28
ACTION: os0.symlink(path1,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta/beta/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/beta/beta'
REFERENCE ACTION: os_REF0.symlink(path1,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
result = os0.path.islink(path1)                                         # STEP 29
ACTION: result = os0.path.islink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta/beta/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path1) 
==================================================
str3 = ""                                                               # STEP 30
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 31
ACTION: str2 += 'u' 
str2 = 'c' : <type 'str'>
=> str2 = 'cu' : <type 'str'>
==================================================
stat2 = os0.stat(path1)                                                 # STEP 32
ACTION: stat2 = os0.stat(path1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta/beta/alpha' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/beta/beta/alpha'
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/beta/alpha'
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 33
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/beta/beta/alpha' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 34
ACTION: str2 += 'k' 
str2 = 'cu' : <type 'str'>
=> str2 = 'cuk' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 35
ACTION: str0 += 's' 
str0 = 'hkpn' : <type 'str'>
=> str0 = 'hkpns' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 36
ACTION: str2 += 'n' 
str2 = 'cuk' : <type 'str'>
=> str2 = 'cukn' : <type 'str'>
==================================================
component2 = "beta"                                                     # STEP 37
ACTION: component2 = "beta" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'beta' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 38
ACTION: str0 += 'h' 
str0 = 'hkpns' : <type 'str'>
=> str0 = 'hkpnsh' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 39
ACTION: str0 += 'c' 
str0 = 'hkpnsh' : <type 'str'>
=> str0 = 'hkpnshc' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 40
ACTION: str0 += 'b' 
str0 = 'hkpnshc' : <type 'str'>
=> str0 = 'hkpnshcb' : <type 'str'>
==================================================
result = os0.path.abspath(path1)                                        # STEP 41
ACTION: result = os0.path.abspath(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path1) 
==================================================
result = os0.path.isabs(path1)                                          # STEP 42
ACTION: result = os0.path.isabs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path1) 
==================================================
str3 += 't'                                                             # STEP 43
ACTION: str3 += 't' 
str3 = '' : <type 'str'>
=> str3 = 't' : <type 'str'>
==================================================
os0.remove(path3)                                                       # STEP 44
ACTION: os0.remove(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
result = os0.path.abspath(path3)                                        # STEP 45
ACTION: result = os0.path.abspath(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path3) 
==================================================
result = os0.path.dirname(path1)                                        # STEP 46
ACTION: result = os0.path.dirname(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path1) 
==================================================
str0 += " "                                                             # STEP 47
ACTION: str0 += " " 
str0 = 'hkpnshcb' : <type 'str'>
=> str0 = 'hkpnshcb ' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 48
ACTION: str0 += 't' 
str0 = 'hkpnshcb ' : <type 'str'>
=> str0 = 'hkpnshcb t' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 49
ACTION: str3 += 'w' 
str3 = 't' : <type 'str'>
=> str3 = 'tw' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 50
ACTION: str3 += 'r' 
str3 = 'tw' : <type 'str'>
=> str3 = 'twr' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 51
ACTION: str2 += 'g' 
str2 = 'cukn' : <type 'str'>
=> str2 = 'cukng' : <type 'str'>
==================================================
result = os0.path.isfile(path1)                                         # STEP 52
ACTION: result = os0.path.isfile(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path1) 
==================================================
str2 += 'q'                                                             # STEP 53
ACTION: str2 += 'q' 
str2 = 'cukng' : <type 'str'>
=> str2 = 'cukngq' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 54
ACTION: str3 += 'o' 
str3 = 'twr' : <type 'str'>
=> str3 = 'twro' : <type 'str'>
==================================================
result = sorted(os0.listdir(path1))                                     # STEP 55
ACTION: result = sorted(os0.listdir(path1)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path1)) 
==================================================
os0.mkdir(path1)                                                        # STEP 56
ACTION: os0.mkdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
bytes3 += 1                                                             # STEP 57
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str3 += 'f'                                                             # STEP 58
ACTION: str3 += 'f' 
str3 = 'twro' : <type 'str'>
=> str3 = 'twrof' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 59
ACTION: str3 += 'n' 
str3 = 'twrof' : <type 'str'>
=> str3 = 'twrofn' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 60
ACTION: path3 += "/" + component4 
component4 = 'phi' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND)                        # STEP 61
ACTION: fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/phi'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_WRONLY | os.O_APPEND) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/phi'
==================================================
stat0 = os0.stat(path3)                                                 # STEP 62
ACTION: stat0 = os0.stat(path3) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/phi'
REFERENCE ACTION: stat_REF0 = os_REF0.stat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/phi'
==================================================
str2 += 'k'                                                             # STEP 63
ACTION: str2 += 'k' 
str2 = 'cukngq' : <type 'str'>
=> str2 = 'cukngqk' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 64
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
component4 = "epsilon"                                                  # STEP 65
ACTION: component4 = "epsilon" 
component4 = 'phi' : <type 'str'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 66
ACTION: str3 += 'p' 
str3 = 'twrofn' : <type 'str'>
=> str3 = 'twrofnp' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 67
ACTION: str3 += 'o' 
str3 = 'twrofnp' : <type 'str'>
=> str3 = 'twrofnpo' : <type 'str'>
==================================================
stat1 = os0.stat(path3)                                                 # STEP 68
ACTION: stat1 = os0.stat(path3) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10347f190> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.stat(path3) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=5738482, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507227156, st_mtime=1507227156, st_ctime=1507227156) : <type 'posix.stat_result'>
==================================================
str2 += 'd'                                                             # STEP 69
ACTION: str2 += 'd' 
str2 = 'cukngqk' : <type 'str'>
=> str2 = 'cukngqkd' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 70
ACTION: str3 += 'w' 
str3 = 'twrofnpo' : <type 'str'>
=> str3 = 'twrofnpow' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 71
ACTION: bytes3 += 1 
bytes3 = 1 : <type 'int'>
=> bytes3 = 2 : <type 'int'>
==================================================
os0.mkdir(path3)                                                        # STEP 72
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test/phi'
REFERENCE ACTION: os_REF0.mkdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/phi'
==================================================
stat0 = os0.lstat(path3)                                                # STEP 73
ACTION: stat0 = os0.lstat(path3) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1034bdd50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path3) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=5738482, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507227156, st_mtime=1507227156, st_ctime=1507227156) : <type 'posix.stat_result'>
==================================================
os0.write(fd0,str0)                                                     # STEP 74
ACTION: os0.write(fd0,str0) 
str0 = 'hkpnshcb t' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF0,str0) 
==================================================
str1 = ""                                                               # STEP 75
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 76
ACTION: str2 += 'p' 
str2 = 'cukngqkd' : <type 'str'>
=> str2 = 'cukngqkdp' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 77
ACTION: path1 += "/" + component1 
component1 = 'd' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 78
ACTION: path1 += "/" + component0 
component0 = 'g' : <type 'str'>
path1 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/d/g' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 79
ACTION: str3 += 'k' 
str3 = 'twrofnpow' : <type 'str'>
=> str3 = 'twrofnpowk' : <type 'str'>
==================================================
stat3 = os0.stat(path3)                                                 # STEP 80
ACTION: stat3 = os0.stat(path3) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10347f150> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path3) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=5738482, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=10, st_atime=1507227156, st_mtime=1507227156, st_ctime=1507227156) : <type 'posix.stat_result'>
==================================================
str1 += 's'                                                             # STEP 81
ACTION: str1 += 's' 
str1 = '' : <type 'str'>
=> str1 = 's' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 82
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
stat4 = os0.lstat(path3)                                                # STEP 83
ACTION: stat4 = os0.lstat(path3) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103aac210> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path3) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=5738482, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=10, st_atime=1507227156, st_mtime=1507227156, st_ctime=1507227156) : <type 'posix.stat_result'>
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 84
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10347f210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> 'unicode' does not have the buffer interface
ERROR: (<type 'exceptions.TypeError'>, TypeError("'unicode' does not have the buffer interface",), <traceback object at 0x103a507a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15229, in act349
    self.p_fd[1] = self.p_os[0].open(self.p_path[3], os.O_CREAT | os.O_WRONLY)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4579, in Call
    fakefile = FakeFileWrapper(file_object, file_path, update=open_modes.can_write, read=open_modes.can_read, append=open_modes.append, delete_on_close=self._delete_on_close, filesystem=self.filesystem, newline=newline, binary=binary, closefd=closefd, encoding=encoding, errors=errors, raw_io=self.raw_io, use_io=self._use_io)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3990, in __init__
    self._io.write(contents)
STOPPING TESTING DUE TO FAILED TEST
0.0568749904633 TOTAL RUNTIME
1 EXECUTED
85 TOTAL TEST OPERATIONS
0.0137155056 TIME SPENT EXECUTING TEST OPERATIONS
0.00555300712585 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
5.05447387695e-05 TIME SPENT CHECKING PROPERTIES
0.0137660503387 TOTAL TIME SPENT RUNNING SUT
0.00319409370422 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
