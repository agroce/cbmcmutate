Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.49874.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError("Invalid mode: 'b'",), <traceback object at 0x1005aa368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 18337, in act391
    self.p_fd[0] = self.p_os[0].open(self.p_path[0], os.O_RDONLY)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4512, in Call
    raise ValueError(('Invalid mode: %r' % orig_modes))
Original test has 82 steps

SAVING TEST AS failure.49874.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "gamma"                                                     # STEP 0
ACTION: component2 = "gamma" 
component2 = None : <type 'NoneType'>
=> component2 = 'gamma' : <type 'str'>
==================================================
component4 = "h"                                                         # STEP 1
ACTION: component4 = "h" 
component4 = None : <type 'NoneType'>
=> component4 = 'h' : <type 'str'>
==================================================
component3 = "beta"                                                      # STEP 2
ACTION: component3 = "beta" 
component3 = None : <type 'NoneType'>
=> component3 = 'beta' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 3
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component1 = "gamma"                                                     # STEP 5
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "epsilon"                                                   # STEP 7
ACTION: component0 = "epsilon" 
component0 = None : <type 'NoneType'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
path3 += "/" + component2                                                # STEP 8
ACTION: path3 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
path0 += "/" + component2                                                # STEP 9
ACTION: path0 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 10
ACTION: path3 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma/gamma' : <type 'str'>
==================================================
component2 = "phi"                                                      # STEP 11
ACTION: component2 = "phi" 
component2 = 'gamma' : <type 'str'>
=> component2 = 'phi' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 12
ACTION: path3 += "/" + component2 
component2 = 'phi' : <type 'str'>
path3 = '/Volumes/ramdisk/test/gamma/gamma' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma/gamma/phi' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 13
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 14
ACTION: path3 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path3 = '/Volumes/ramdisk/test/gamma/gamma/phi' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma/gamma/phi/gamma' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 15
ACTION: str4 += 'n' 
str4 = '' : <type 'str'>
=> str4 = 'n' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 16
ACTION: path3 += "/" + component4 
component4 = 'h' : <type 'str'>
path3 = '/Volumes/ramdisk/test/gamma/gamma/phi/gamma' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma/gamma/phi/gamma/h' : <type 'str'>
==================================================
component1 = "gamma"                                                    # STEP 17
ACTION: component1 = "gamma" 
component1 = 'gamma' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 18
ACTION: str4 += 'd' 
str4 = 'n' : <type 'str'>
=> str4 = 'nd' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 19
ACTION: str4 += 'l' 
str4 = 'nd' : <type 'str'>
=> str4 = 'ndl' : <type 'str'>
==================================================
component2 = "h"                                                        # STEP 20
ACTION: component2 = "h" 
component2 = 'phi' : <type 'str'>
=> component2 = 'h' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 21
ACTION: str4 += 'y' 
str4 = 'ndl' : <type 'str'>
=> str4 = 'ndly' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 22
ACTION: str4 += 's' 
str4 = 'ndly' : <type 'str'>
=> str4 = 'ndlys' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 23
ACTION: path0 += "/" + component2 
component2 = 'h' : <type 'str'>
path0 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/gamma/h' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 24
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
path0 += "/" + component2                                               # STEP 25
ACTION: path0 += "/" + component2 
component2 = 'h' : <type 'str'>
path0 = '/Volumes/ramdisk/test/gamma/h' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/gamma/h/h' : <type 'str'>
==================================================
component2 = "gamma"                                                    # STEP 26
ACTION: component2 = "gamma" 
component2 = 'h' : <type 'str'>
=> component2 = 'gamma' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 27
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "lambda"                                                   # STEP 28
ACTION: component4 = "lambda" 
component4 = 'h' : <type 'str'>
=> component4 = 'lambda' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 29
ACTION: str4 += 'l' 
str4 = 'ndlys' : <type 'str'>
=> str4 = 'ndlysl' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 30
ACTION: path3 += "/" + component0 
component0 = 'epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test/gamma/gamma/phi/gamma/h' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma/gamma/phi/gamma/h/epsilon' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 31
ACTION: str4 += 'o' 
str4 = 'ndlysl' : <type 'str'>
=> str4 = 'ndlyslo' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 32
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 33
ACTION: str4 += 'w' 
str4 = 'ndlyslo' : <type 'str'>
=> str4 = 'ndlyslow' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 34
ACTION: str2 += 'x' 
str2 = '' : <type 'str'>
=> str2 = 'x' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 35
ACTION: str4 += 'u' 
str4 = 'ndlyslow' : <type 'str'>
=> str4 = 'ndlyslowu' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 36
ACTION: path0 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path0 = '/Volumes/ramdisk/test/gamma/h/h' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/gamma/h/h/gamma' : <type 'str'>
==================================================
component1 = "beta"                                                     # STEP 37
ACTION: component1 = "beta" 
component1 = 'gamma' : <type 'str'>
=> component1 = 'beta' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 38
ACTION: str2 += 'g' 
str2 = 'x' : <type 'str'>
=> str2 = 'xg' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 39
ACTION: component0 = "omega" 
component0 = 'epsilon' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 40
ACTION: path2 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 41
ACTION: path2 += "/" + component1 
component1 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma/beta' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 42
ACTION: str2 += 'a' 
str2 = 'xg' : <type 'str'>
=> str2 = 'xga' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 43
ACTION: str4 += 'e' 
str4 = 'ndlyslowu' : <type 'str'>
=> str4 = 'ndlyslowue' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 44
ACTION: str4 += 'r' 
str4 = 'ndlyslowue' : <type 'str'>
=> str4 = 'ndlyslowuer' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 45
ACTION: str4 += " " 
str4 = 'ndlyslowuer' : <type 'str'>
=> str4 = 'ndlyslowuer ' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 46
ACTION: str4 += 't' 
str4 = 'ndlyslowuer ' : <type 'str'>
=> str4 = 'ndlyslowuer t' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 47
ACTION: str4 += 'j' 
str4 = 'ndlyslowuer t' : <type 'str'>
=> str4 = 'ndlyslowuer tj' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 48
ACTION: str4 += 'r' 
str4 = 'ndlyslowuer tj' : <type 'str'>
=> str4 = 'ndlyslowuer tjr' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 49
ACTION: str2 += 'd' 
str2 = 'xga' : <type 'str'>
=> str2 = 'xgad' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 50
ACTION: str2 += 'z' 
str2 = 'xgad' : <type 'str'>
=> str2 = 'xgadz' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 51
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/gamma/beta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 52
ACTION: str2 += 'x' 
str2 = 'xgadz' : <type 'str'>
=> str2 = 'xgadzx' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 53
ACTION: str4 += 'b' 
str4 = 'ndlyslowuer tjr' : <type 'str'>
=> str4 = 'ndlyslowuer tjrb' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 54
ACTION: path3 += "/" + component4 
component4 = 'lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test/gamma/gamma/phi/gamma/h/epsilon' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma/gamma/phi/gamma/h/epsilon/lambda' : <type 'str'>
==================================================
component2 = "a"                                                        # STEP 55
ACTION: component2 = "a" 
component2 = 'gamma' : <type 'str'>
=> component2 = 'a' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 56
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str4 += 'l'                                                             # STEP 57
ACTION: str4 += 'l' 
str4 = 'ndlyslowuer tjrb' : <type 'str'>
=> str4 = 'ndlyslowuer tjrbl' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 58
ACTION: str4 += 'u' 
str4 = 'ndlyslowuer tjrbl' : <type 'str'>
=> str4 = 'ndlyslowuer tjrblu' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 59
ACTION: str4 += 'u' 
str4 = 'ndlyslowuer tjrblu' : <type 'str'>
=> str4 = 'ndlyslowuer tjrbluu' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 60
ACTION: str2 += 'p' 
str2 = 'xgadzx' : <type 'str'>
=> str2 = 'xgadzxp' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 61
ACTION: str2 += 'k' 
str2 = 'xgadzxp' : <type 'str'>
=> str2 = 'xgadzxpk' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 62
ACTION: component4 = "beta" 
component4 = 'lambda' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 63
ACTION: str4 += 'p' 
str4 = 'ndlyslowuer tjrbluu' : <type 'str'>
=> str4 = 'ndlyslowuer tjrbluup' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 64
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
path2 += "/" + component1                                               # STEP 65
ACTION: path2 += "/" + component1 
component1 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 66
ACTION: str4 += 'y' 
str4 = 'ndlyslowuer tjrbluup' : <type 'str'>
=> str4 = 'ndlyslowuer tjrbluupy' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 67
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 68
ACTION: str2 += 'j' 
str2 = 'xgadzxpk' : <type 'str'>
=> str2 = 'xgadzxpkj' : <type 'str'>
==================================================
component1 = "b"                                                        # STEP 69
ACTION: component1 = "b" 
component1 = 'beta' : <type 'str'>
=> component1 = 'b' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 70
ACTION: str4 += 'v' 
str4 = 'ndlyslowuer tjrbluupy' : <type 'str'>
=> str4 = 'ndlyslowuer tjrbluupyv' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 71
ACTION: str2 += 'x' 
str2 = 'xgadzxpkj' : <type 'str'>
=> str2 = 'xgadzxpkjx' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 72
ACTION: str2 += 'v' 
str2 = 'xgadzxpkjx' : <type 'str'>
=> str2 = 'xgadzxpkjxv' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 73
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035542d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str2 += 'g'                                                             # STEP 74
ACTION: str2 += 'g' 
str2 = 'xgadzxpkjxv' : <type 'str'>
=> str2 = 'xgadzxpkjxvg' : <type 'str'>
==================================================
os0.rmdir(path2)                                                        # STEP 75
ACTION: os0.rmdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035542d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: os_REF0.rmdir(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
==================================================
result = os0.readlink(path0)                                            # STEP 76
ACTION: result = os0.readlink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035542d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/gamma/h/h/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake path does not exist: '/Volumes/ramdisk/test/gamma/h/h/gamma'
REFERENCE ACTION: result_REF = os_REF0.readlink(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma/h/h/gamma'
==================================================
result = os0.path.abspath(path4)                                        # STEP 77
ACTION: result = os0.path.abspath(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035542d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path4) 
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 78
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/gamma/gamma/phi/gamma/h/epsilon/lambda' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 79
ACTION: str4 += 'n' 
str4 = 'ndlyslowuer tjrbluupyv' : <type 'str'>
=> str4 = 'ndlyslowuer tjrbluupyvn' : <type 'str'>
==================================================
result = os0.readlink(path3)                                            # STEP 80
ACTION: result = os0.readlink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035542d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
fd0 = os0.open(path0, os.O_RDONLY)                                      # STEP 81
ACTION: fd0 = os0.open(path0, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035542d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/gamma/h/h/gamma' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> Invalid mode: 'b'
ERROR: (<type 'exceptions.ValueError'>, ValueError("Invalid mode: 'b'",), <traceback object at 0x1005aa3b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 18337, in act391
    self.p_fd[0] = self.p_os[0].open(self.p_path[0], os.O_RDONLY)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4512, in Call
    raise ValueError(('Invalid mode: %r' % orig_modes))
STOPPING TESTING DUE TO FAILED TEST
0.0482029914856 TOTAL RUNTIME
2 EXECUTED
282 TOTAL TEST OPERATIONS
0.00652718544006 TIME SPENT EXECUTING TEST OPERATIONS
0.012912273407 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000109434127808 TIME SPENT CHECKING PROPERTIES
0.00663661956787 TOTAL TIME SPENT RUNNING SUT
0.00537395477295 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
