Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.49940.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1049e1320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22121, in act443
    self.p_os[0].remove(self.p_path[0])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3569, in remove
    self.filesystem.RemoveFile(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2485, in RemoveFile
    self.RemoveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2036, in RemoveObject
    target_directory.RemoveEntry(basename)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 740, in RemoveEntry
    assert (entry.st_nlink >= 0)
Original test has 71 steps

SAVING TEST AS failure.49940.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "omega"                                                     # STEP 0
ACTION: component2 = "omega" 
component2 = None : <type 'NoneType'>
=> component2 = 'omega' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 1
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component0 = "phi"                                                       # STEP 2
ACTION: component0 = "phi" 
component0 = None : <type 'NoneType'>
=> component0 = 'phi' : <type 'str'>
==================================================
component1 = "c"                                                         # STEP 3
ACTION: component1 = "c" 
component1 = None : <type 'NoneType'>
=> component1 = 'c' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 4
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str0 += 't'                                                              # STEP 5
ACTION: str0 += 't' 
str0 = '' : <type 'str'>
=> str0 = 't' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 7
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component4 = "e"                                                         # STEP 8
ACTION: component4 = "e" 
component4 = None : <type 'NoneType'>
=> component4 = 'e' : <type 'str'>
==================================================
component3 = "d"                                                         # STEP 9
ACTION: component3 = "d" 
component3 = None : <type 'NoneType'>
=> component3 = 'd' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 10
ACTION: str0 += 'e' 
str0 = 't' : <type 'str'>
=> str0 = 'te' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 11
ACTION: str0 += 'h' 
str0 = 'te' : <type 'str'>
=> str0 = 'teh' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 12
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str0 += 'c'                                                             # STEP 13
ACTION: str0 += 'c' 
str0 = 'teh' : <type 'str'>
=> str0 = 'tehc' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 14
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 15
ACTION: str0 += " " 
str0 = 'tehc' : <type 'str'>
=> str0 = 'tehc ' : <type 'str'>
==================================================
os0.symlink(path2,path0)                                                # STEP 16
ACTION: os0.symlink(path2,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path2,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str0 += 'l'                                                             # STEP 17
ACTION: str0 += 'l' 
str0 = 'tehc ' : <type 'str'>
=> str0 = 'tehc l' : <type 'str'>
==================================================
result = os0.path.abspath(path0)                                        # STEP 18
ACTION: result = os0.path.abspath(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path0) 
==================================================
bytes2 = 0                                                              # STEP 19
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
result = os0.path.isdir(path2)                                          # STEP 20
ACTION: result = os0.path.isdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path2) 
==================================================
os0.symlink(path0,path2)                                                # STEP 21
ACTION: os0.symlink(path0,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path0,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.link(path2,path2)                                                   # STEP 22
ACTION: os0.link(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str0 = ""                                                               # STEP 23
ACTION: str0 = "" 
str0 = 'tehc l' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
os0.remove(path2)                                                       # STEP 24
ACTION: os0.remove(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.link(path0,path2)                                                   # STEP 26
ACTION: os0.link(path0,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path0,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
path0 += "/" + component0                                               # STEP 27
ACTION: path0 += "/" + component0 
component0 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
os0.makedirs(path2)                                                     # STEP 28
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 29
ACTION: fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY)                         # STEP 30
ACTION: fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
str0 += " "                                                             # STEP 31
ACTION: str0 += " " 
str0 = '' : <type 'str'>
=> str0 = ' ' : <type 'str'>
==================================================
stat2 = os0.stat(path0)                                                 # STEP 32
ACTION: stat2 = os0.stat(path0) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1036a6c10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path0) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=4003260, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507202813, st_mtime=1507202813, st_ctime=1507202813) : <type 'posix.stat_result'>
==================================================
result = os0.read(fd0,bytes2)                                           # STEP 33
ACTION: result = os0.read(fd0,bytes2) 
bytes2 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
path2 += "/" + component3                                               # STEP 34
ACTION: path2 += "/" + component3 
component3 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
result = os0.read(fd0,bytes0)                                           # STEP 35
ACTION: result = os0.read(fd0,bytes0) 
bytes0 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
str3 = ""                                                               # STEP 36
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
stat4 = os0.fstat(fd1)                                                  # STEP 37
ACTION: stat4 = os0.fstat(fd1) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1036a6c50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.fstat(fd_REF1) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=4003260, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507202813, st_mtime=1507202813, st_ctime=1507202813) : <type 'posix.stat_result'>
==================================================
component0 = "omega"                                                    # STEP 38
ACTION: component0 = "omega" 
component0 = 'phi' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
stat0 = os0.lstat(path2)                                                # STEP 39
ACTION: stat0 = os0.lstat(path2) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/d'
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/d'
==================================================
str0 += 'd'                                                             # STEP 40
ACTION: str0 += 'd' 
str0 = ' ' : <type 'str'>
=> str0 = ' d' : <type 'str'>
==================================================
os0.symlink(path2,path2)                                                # STEP 41
ACTION: os0.symlink(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path2,path2) 
==================================================
result = sorted(os0.listdir(path0))                                     # STEP 42
ACTION: result = sorted(os0.listdir(path0)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Fake os module: not a directory: '/Volumes/ramdisk/test/phi'
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path0)) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/phi'
==================================================
stat3 = os0.stat(path0)                                                 # STEP 43
ACTION: stat3 = os0.stat(path0) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104c7aed0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path0) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=4003260, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507202813, st_mtime=1507202813, st_ctime=1507202813) : <type 'posix.stat_result'>
==================================================
str3 += 't'                                                             # STEP 44
ACTION: str3 += 't' 
str3 = '' : <type 'str'>
=> str3 = 't' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 45
ACTION: path2 += "/" + component4 
component4 = 'e' : <type 'str'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/d/e' : <type 'str'>
==================================================
result = os0.path.exists(path2)                                         # STEP 46
ACTION: result = os0.path.exists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path2) 
==================================================
component4 = "f"                                                        # STEP 47
ACTION: component4 = "f" 
component4 = 'e' : <type 'str'>
=> component4 = 'f' : <type 'str'>
==================================================
os0.symlink(path2,path2)                                                # STEP 48
ACTION: os0.symlink(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/d'
REFERENCE ACTION: os_REF0.symlink(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links
==================================================
bytes2 += 1                                                             # STEP 49
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str0 += 'v'                                                             # STEP 50
ACTION: str0 += 'v' 
str0 = ' d' : <type 'str'>
=> str0 = ' dv' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 51
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str0 += 'c'                                                             # STEP 52
ACTION: str0 += 'c' 
str0 = ' dv' : <type 'str'>
=> str0 = ' dvc' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 53
ACTION: str3 += 'y' 
str3 = 't' : <type 'str'>
=> str3 = 'ty' : <type 'str'>
==================================================
os0.mkdir(path2)                                                        # STEP 54
ACTION: os0.mkdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/d'
REFERENCE ACTION: os_REF0.mkdir(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/d/e'
==================================================
str3 += 'w'                                                             # STEP 55
ACTION: str3 += 'w' 
str3 = 'ty' : <type 'str'>
=> str3 = 'tyw' : <type 'str'>
==================================================
stat0 = os0.fstat(fd0)                                                  # STEP 56
ACTION: stat0 = os0.fstat(fd0) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104c7ae50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.fstat(fd_REF0) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=4003260, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507202813, st_mtime=1507202813, st_ctime=1507202813) : <type 'posix.stat_result'>
==================================================
str0 += 'v'                                                             # STEP 57
ACTION: str0 += 'v' 
str0 = ' dvc' : <type 'str'>
=> str0 = ' dvcv' : <type 'str'>
==================================================
component3 = "lambda"                                                   # STEP 58
ACTION: component3 = "lambda" 
component3 = 'd' : <type 'str'>
=> component3 = 'lambda' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 59
ACTION: str0 += 'j' 
str0 = ' dvcv' : <type 'str'>
=> str0 = ' dvcvj' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 60
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
os0.rename(path0,path2)                                                 # STEP 61
ACTION: os0.rename(path0,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test/d/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/d'
REFERENCE ACTION: os_REF0.rename(path0,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links
==================================================
str0 += 'v'                                                             # STEP 62
ACTION: str0 += 'v' 
str0 = ' dvcvj' : <type 'str'>
=> str0 = ' dvcvjv' : <type 'str'>
==================================================
result = os0.path.abspath(path2)                                        # STEP 63
ACTION: result = os0.path.abspath(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path2) 
==================================================
result = os0.read(fd1,bytes2)                                           # STEP 64
ACTION: result = os0.read(fd1,bytes2) 
bytes2 = 1 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
result = os0.path.dirname(path2)                                        # STEP 65
ACTION: result = os0.path.dirname(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path2) 
==================================================
stat1 = os0.fstat(fd0)                                                  # STEP 66
ACTION: stat1 = os0.fstat(fd0) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104c7afd0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.fstat(fd_REF0) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=4003260, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507202813, st_mtime=1507202813, st_ctime=1507202813) : <type 'posix.stat_result'>
==================================================
result = os0.path.lexists(path2)                                        # STEP 67
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
str2 += 'i'                                                             # STEP 68
ACTION: str2 += 'i' 
str2 = '' : <type 'str'>
=> str2 = 'i' : <type 'str'>
==================================================
os0.makedirs(path0)                                                     # STEP 69
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test/phi'
REFERENCE ACTION: os_REF0.makedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/phi'
==================================================
os0.remove(path0)                                                       # STEP 70
ACTION: os0.remove(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1049a8d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.AssertionError'> 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104c30cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22121, in act443
    self.p_os[0].remove(self.p_path[0])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3569, in remove
    self.filesystem.RemoveFile(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2485, in RemoveFile
    self.RemoveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2036, in RemoveObject
    target_directory.RemoveEntry(basename)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 740, in RemoveEntry
    assert (entry.st_nlink >= 0)
STOPPING TESTING DUE TO FAILED TEST
0.0925199985504 TOTAL RUNTIME
1 EXECUTED
71 TOTAL TEST OPERATIONS
0.033970117569 TIME SPENT EXECUTING TEST OPERATIONS
0.00404405593872 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.50475311279e-05 TIME SPENT CHECKING PROPERTIES
0.0340051651001 TOTAL TIME SPENT RUNNING SUT
0.00412201881409 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
