Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59345.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for -: 'str' and 'str'",), <traceback object at 0x1027b4b00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1329, in NormalizeCase
    return components_to_path()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1305, in components_to_path
    normalized_path = (sep - normalized_path)
Original test has 88 steps

SAVING TEST AS failure.59345.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "b"                                                         # STEP 0
ACTION: component0 = "b" 
component0 = None : <type 'NoneType'>
=> component0 = 'b' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 1
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "d"                                                         # STEP 2
ACTION: component4 = "d" 
component4 = None : <type 'NoneType'>
=> component4 = 'd' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 3
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 4
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
component2 = "alpha"                                                     # STEP 5
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
str2 += 'f'                                                              # STEP 6
ACTION: str2 += 'f' 
str2 = '' : <type 'str'>
=> str2 = 'f' : <type 'str'>
==================================================
str2 += 'a'                                                              # STEP 7
ACTION: str2 += 'a' 
str2 = 'f' : <type 'str'>
=> str2 = 'fa' : <type 'str'>
==================================================
str2 += 'z'                                                              # STEP 8
ACTION: str2 += 'z' 
str2 = 'fa' : <type 'str'>
=> str2 = 'faz' : <type 'str'>
==================================================
component3 = "c"                                                         # STEP 9
ACTION: component3 = "c" 
component3 = None : <type 'NoneType'>
=> component3 = 'c' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 10
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 11
ACTION: str2 += 's' 
str2 = 'faz' : <type 'str'>
=> str2 = 'fazs' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 12
ACTION: str1 += 't' 
str1 = '' : <type 'str'>
=> str1 = 't' : <type 'str'>
==================================================
component1 = "alpha"                                                    # STEP 13
ACTION: component1 = "alpha" 
component1 = None : <type 'NoneType'>
=> component1 = 'alpha' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 14
ACTION: str1 += 's' 
str1 = 't' : <type 'str'>
=> str1 = 'ts' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 15
ACTION: str1 += 'o' 
str1 = 'ts' : <type 'str'>
=> str1 = 'tso' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 16
ACTION: str2 += 'n' 
str2 = 'fazs' : <type 'str'>
=> str2 = 'fazsn' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 17
ACTION: str1 += 'u' 
str1 = 'tso' : <type 'str'>
=> str1 = 'tsou' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 18
ACTION: str1 += 'c' 
str1 = 'tsou' : <type 'str'>
=> str1 = 'tsouc' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 19
ACTION: str1 += 'x' 
str1 = 'tsouc' : <type 'str'>
=> str1 = 'tsoucx' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 20
ACTION: str1 += 'm' 
str1 = 'tsoucx' : <type 'str'>
=> str1 = 'tsoucxm' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 21
ACTION: str1 += 'a' 
str1 = 'tsoucxm' : <type 'str'>
=> str1 = 'tsoucxma' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 22
ACTION: str2 += 'c' 
str2 = 'fazsn' : <type 'str'>
=> str2 = 'fazsnc' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 23
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 24
ACTION: str1 += 'y' 
str1 = 'tsoucxma' : <type 'str'>
=> str1 = 'tsoucxmay' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 25
ACTION: str2 += 'k' 
str2 = 'fazsnc' : <type 'str'>
=> str2 = 'fazsnck' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 26
ACTION: str1 += 'r' 
str1 = 'tsoucxmay' : <type 'str'>
=> str1 = 'tsoucxmayr' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 27
ACTION: path2 += "/" + component3 
component3 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 28
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 29
ACTION: str2 += 'i' 
str2 = 'fazsnck' : <type 'str'>
=> str2 = 'fazsncki' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 30
ACTION: str1 += 'o' 
str1 = 'tsoucxmayr' : <type 'str'>
=> str1 = 'tsoucxmayro' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 31
ACTION: str3 += 'j' 
str3 = '' : <type 'str'>
=> str3 = 'j' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 32
ACTION: str2 += 'k' 
str2 = 'fazsncki' : <type 'str'>
=> str2 = 'fazsnckik' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 33
ACTION: str1 += 'n' 
str1 = 'tsoucxmayro' : <type 'str'>
=> str1 = 'tsoucxmayron' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 34
ACTION: str1 += 'q' 
str1 = 'tsoucxmayron' : <type 'str'>
=> str1 = 'tsoucxmayronq' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 35
ACTION: path0 += "/" + component0 
component0 = 'b' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 36
ACTION: str3 += 'e' 
str3 = 'j' : <type 'str'>
=> str3 = 'je' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 37
ACTION: str3 += 'w' 
str3 = 'je' : <type 'str'>
=> str3 = 'jew' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 38
ACTION: str1 += 'f' 
str1 = 'tsoucxmayronq' : <type 'str'>
=> str1 = 'tsoucxmayronqf' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 39
ACTION: component0 = "omega" 
component0 = 'b' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
component3 = "delta"                                                    # STEP 40
ACTION: component3 = "delta" 
component3 = 'c' : <type 'str'>
=> component3 = 'delta' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 41
ACTION: str3 += 'y' 
str3 = 'jew' : <type 'str'>
=> str3 = 'jewy' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 42
ACTION: str2 += 'r' 
str2 = 'fazsnckik' : <type 'str'>
=> str2 = 'fazsnckikr' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 43
ACTION: str3 += 'w' 
str3 = 'jewy' : <type 'str'>
=> str3 = 'jewyw' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 44
ACTION: str1 += 'x' 
str1 = 'tsoucxmayronqf' : <type 'str'>
=> str1 = 'tsoucxmayronqfx' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 45
ACTION: str1 += 'm' 
str1 = 'tsoucxmayronqfx' : <type 'str'>
=> str1 = 'tsoucxmayronqfxm' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 46
ACTION: path2 += "/" + component1 
component1 = 'alpha' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/alpha' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 47
ACTION: str2 += 'w' 
str2 = 'fazsnckikr' : <type 'str'>
=> str2 = 'fazsnckikrw' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 48
ACTION: str3 += 'z' 
str3 = 'jewyw' : <type 'str'>
=> str3 = 'jewywz' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 49
ACTION: str3 += 'l' 
str3 = 'jewywz' : <type 'str'>
=> str3 = 'jewywzl' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 50
ACTION: str1 += 'n' 
str1 = 'tsoucxmayronqfxm' : <type 'str'>
=> str1 = 'tsoucxmayronqfxmn' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 51
ACTION: str1 += 'c' 
str1 = 'tsoucxmayronqfxmn' : <type 'str'>
=> str1 = 'tsoucxmayronqfxmnc' : <type 'str'>
==================================================
component1 = "beta"                                                     # STEP 52
ACTION: component1 = "beta" 
component1 = 'alpha' : <type 'str'>
=> component1 = 'beta' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 53
ACTION: str2 += 'd' 
str2 = 'fazsnckikrw' : <type 'str'>
=> str2 = 'fazsnckikrwd' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 54
ACTION: str3 += 'y' 
str3 = 'jewywzl' : <type 'str'>
=> str3 = 'jewywzly' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 55
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 56
ACTION: str4 += 'q' 
str4 = '' : <type 'str'>
=> str4 = 'q' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 57
ACTION: path0 += "/" + component0 
component0 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/b/omega' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 58
ACTION: path2 += "/" + component4 
component4 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c/alpha' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/alpha/d' : <type 'str'>
==================================================
component0 = "epsilon"                                                  # STEP 59
ACTION: component0 = "epsilon" 
component0 = 'omega' : <type 'str'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 60
ACTION: str4 += 'w' 
str4 = 'q' : <type 'str'>
=> str4 = 'qw' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 61
ACTION: path2 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c/alpha/d' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/alpha/d/alpha' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 62
ACTION: str1 += 'f' 
str1 = 'tsoucxmayronqfxmnc' : <type 'str'>
=> str1 = 'tsoucxmayronqfxmncf' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 63
ACTION: str4 += 'e' 
str4 = 'qw' : <type 'str'>
=> str4 = 'qwe' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 64
ACTION: component4 = "beta" 
component4 = 'd' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 65
ACTION: str2 += 'w' 
str2 = 'fazsnckikrwd' : <type 'str'>
=> str2 = 'fazsnckikrwdw' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 66
ACTION: str4 += 'j' 
str4 = 'qwe' : <type 'str'>
=> str4 = 'qwej' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 67
ACTION: str4 = "" 
str4 = 'qwej' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 68
ACTION: str1 += 'r' 
str1 = 'tsoucxmayronqfxmncf' : <type 'str'>
=> str1 = 'tsoucxmayronqfxmncfr' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 69
ACTION: str1 += 'l' 
str1 = 'tsoucxmayronqfxmncfr' : <type 'str'>
=> str1 = 'tsoucxmayronqfxmncfrl' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 70
ACTION: str1 += 'n' 
str1 = 'tsoucxmayronqfxmncfrl' : <type 'str'>
=> str1 = 'tsoucxmayronqfxmncfrln' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 71
ACTION: str2 += 'u' 
str2 = 'fazsnckikrwdw' : <type 'str'>
=> str2 = 'fazsnckikrwdwu' : <type 'str'>
==================================================
component2 = "a"                                                        # STEP 72
ACTION: component2 = "a" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'a' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 73
ACTION: str3 += " " 
str3 = 'jewywzly' : <type 'str'>
=> str3 = 'jewywzly ' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 74
ACTION: str4 += 'm' 
str4 = '' : <type 'str'>
=> str4 = 'm' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 75
ACTION: str1 += 'z' 
str1 = 'tsoucxmayronqfxmncfrln' : <type 'str'>
=> str1 = 'tsoucxmayronqfxmncfrlnz' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 76
ACTION: str1 += 'y' 
str1 = 'tsoucxmayronqfxmncfrlnz' : <type 'str'>
=> str1 = 'tsoucxmayronqfxmncfrlnzy' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 77
ACTION: str4 += 'x' 
str4 = 'm' : <type 'str'>
=> str4 = 'mx' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 78
ACTION: str4 += 'd' 
str4 = 'mx' : <type 'str'>
=> str4 = 'mxd' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 79
ACTION: path3 += "/" + component0 
component0 = 'epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 80
ACTION: str4 += 'y' 
str4 = 'mxd' : <type 'str'>
=> str4 = 'mxdy' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 81
ACTION: str1 += 'g' 
str1 = 'tsoucxmayronqfxmncfrlnzy' : <type 'str'>
=> str1 = 'tsoucxmayronqfxmncfrlnzyg' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 82
ACTION: component0 = "omega" 
component0 = 'epsilon' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 83
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 84
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 85
ACTION: str3 += 'z' 
str3 = 'jewywzly ' : <type 'str'>
=> str3 = 'jewywzly z' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 86
ACTION: str4 += 'k' 
str4 = 'mxdy' : <type 'str'>
=> str4 = 'mxdyk' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 87
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unsupported operand type(s) for -: 'str' and 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for -: 'str' and 'str'",), <traceback object at 0x1007c32d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1329, in NormalizeCase
    return components_to_path()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1305, in components_to_path
    normalized_path = (sep - normalized_path)
STOPPING TESTING DUE TO FAILED TEST
0.0285499095917 TOTAL RUNTIME
1 EXECUTED
88 TOTAL TEST OPERATIONS
0.00153875350952 TIME SPENT EXECUTING TEST OPERATIONS
0.00422596931458 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.81469726562e-05 TIME SPENT CHECKING PROPERTIES
0.00157690048218 TOTAL TIME SPENT RUNNING SUT
0.00371479988098 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
