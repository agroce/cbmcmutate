Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.57465.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1006c3200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15935, in act358
    assert (type(raised) == type(refRaised))
Original test has 84 steps

SAVING TEST AS failure.57465.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str0 = ""                                                                # STEP 0
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component1 = "delta"                                                     # STEP 1
ACTION: component1 = "delta" 
component1 = None : <type 'NoneType'>
=> component1 = 'delta' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 2
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 3
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
component2 = "beta"                                                      # STEP 4
ACTION: component2 = "beta" 
component2 = None : <type 'NoneType'>
=> component2 = 'beta' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 5
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'q'                                                              # STEP 7
ACTION: str0 += 'q' 
str0 = '' : <type 'str'>
=> str0 = 'q' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 8
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str0 += 'c'                                                              # STEP 9
ACTION: str0 += 'c' 
str0 = 'q' : <type 'str'>
=> str0 = 'qc' : <type 'str'>
==================================================
component0 = "g"                                                        # STEP 10
ACTION: component0 = "g" 
component0 = None : <type 'NoneType'>
=> component0 = 'g' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 11
ACTION: str3 += 'b' 
str3 = '' : <type 'str'>
=> str3 = 'b' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 12
ACTION: str3 = "" 
str3 = 'b' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 13
ACTION: str3 += 'r' 
str3 = '' : <type 'str'>
=> str3 = 'r' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 14
ACTION: str0 += 'j' 
str0 = 'qc' : <type 'str'>
=> str0 = 'qcj' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 15
ACTION: path1 += "/" + component3 
component3 = 'a' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 16
ACTION: str0 += 'j' 
str0 = 'qcj' : <type 'str'>
=> str0 = 'qcjj' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 17
ACTION: str3 += 'j' 
str3 = 'r' : <type 'str'>
=> str3 = 'rj' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 18
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 19
ACTION: str0 += 'y' 
str0 = 'qcjj' : <type 'str'>
=> str0 = 'qcjjy' : <type 'str'>
==================================================
component3 = "h"                                                        # STEP 20
ACTION: component3 = "h" 
component3 = 'a' : <type 'str'>
=> component3 = 'h' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 21
ACTION: str0 += 'o' 
str0 = 'qcjjy' : <type 'str'>
=> str0 = 'qcjjyo' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 22
ACTION: path1 += "/" + component2 
component2 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a/beta' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 23
ACTION: str0 += 'a' 
str0 = 'qcjjyo' : <type 'str'>
=> str0 = 'qcjjyoa' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 24
ACTION: str0 += 'h' 
str0 = 'qcjjyoa' : <type 'str'>
=> str0 = 'qcjjyoah' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/a/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 26
ACTION: str0 += 'z' 
str0 = 'qcjjyoah' : <type 'str'>
=> str0 = 'qcjjyoahz' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 27
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str0 += 'j'                                                             # STEP 28
ACTION: str0 += 'j' 
str0 = 'qcjjyoahz' : <type 'str'>
=> str0 = 'qcjjyoahzj' : <type 'str'>
==================================================
component4 = "f"                                                        # STEP 29
ACTION: component4 = "f" 
component4 = None : <type 'NoneType'>
=> component4 = 'f' : <type 'str'>
==================================================
component2 = "omega"                                                    # STEP 30
ACTION: component2 = "omega" 
component2 = 'beta' : <type 'str'>
=> component2 = 'omega' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 31
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path1 += "/" + component2                                               # STEP 32
ACTION: path1 += "/" + component2 
component2 = 'omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 33
ACTION: str0 += 'x' 
str0 = 'qcjjyoahzj' : <type 'str'>
=> str0 = 'qcjjyoahzjx' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 34
ACTION: path4 += "/" + component0 
component0 = 'g' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
component0 = "beta"                                                     # STEP 35
ACTION: component0 = "beta" 
component0 = 'g' : <type 'str'>
=> component0 = 'beta' : <type 'str'>
==================================================
component2 = "e"                                                        # STEP 36
ACTION: component2 = "e" 
component2 = 'omega' : <type 'str'>
=> component2 = 'e' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 37
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str0 += 'y'                                                             # STEP 38
ACTION: str0 += 'y' 
str0 = 'qcjjyoahzjx' : <type 'str'>
=> str0 = 'qcjjyoahzjxy' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 39
ACTION: path1 += "/" + component2 
component2 = 'e' : <type 'str'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/omega/e' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 40
ACTION: bytes3 = 0 
bytes3 = 1 : <type 'int'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 += 'l'                                                             # STEP 41
ACTION: str3 += 'l' 
str3 = 'rj' : <type 'str'>
=> str3 = 'rjl' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 42
ACTION: str0 = "" 
str0 = 'qcjjyoahzjxy' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 43
ACTION: str0 += 'x' 
str0 = '' : <type 'str'>
=> str0 = 'x' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 44
ACTION: str3 += 'k' 
str3 = 'rjl' : <type 'str'>
=> str3 = 'rjlk' : <type 'str'>
==================================================
component2 = "beta"                                                     # STEP 45
ACTION: component2 = "beta" 
component2 = 'e' : <type 'str'>
=> component2 = 'beta' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 46
ACTION: str0 += 'm' 
str0 = 'x' : <type 'str'>
=> str0 = 'xm' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 47
ACTION: bytes1 += 1 
bytes1 = 1 : <type 'int'>
=> bytes1 = 2 : <type 'int'>
==================================================
str3 += 'z'                                                             # STEP 48
ACTION: str3 += 'z' 
str3 = 'rjlk' : <type 'str'>
=> str3 = 'rjlkz' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 49
ACTION: path4 += "/" + component0 
component0 = 'beta' : <type 'str'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/g/beta' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 50
ACTION: str0 += 'y' 
str0 = 'xm' : <type 'str'>
=> str0 = 'xmy' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 51
ACTION: path1 += "/" + component1 
component1 = 'delta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/omega/e' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/omega/e/delta' : <type 'str'>
==================================================
component0 = "b"                                                        # STEP 52
ACTION: component0 = "b" 
component0 = 'beta' : <type 'str'>
=> component0 = 'b' : <type 'str'>
==================================================
component1 = "f"                                                        # STEP 53
ACTION: component1 = "f" 
component1 = 'delta' : <type 'str'>
=> component1 = 'f' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 54
ACTION: str3 += 'z' 
str3 = 'rjlkz' : <type 'str'>
=> str3 = 'rjlkzz' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 55
ACTION: str3 += 'b' 
str3 = 'rjlkzz' : <type 'str'>
=> str3 = 'rjlkzzb' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 56
ACTION: str0 += 'n' 
str0 = 'xmy' : <type 'str'>
=> str0 = 'xmyn' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 57
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 58
ACTION: str0 += 'z' 
str0 = 'xmyn' : <type 'str'>
=> str0 = 'xmynz' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 59
ACTION: path2 += "/" + component0 
component0 = 'b' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 60
ACTION: str3 += 'q' 
str3 = 'rjlkzzb' : <type 'str'>
=> str3 = 'rjlkzzbq' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 61
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
bytes0 += 1                                                             # STEP 62
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
component0 = "epsilon"                                                  # STEP 63
ACTION: component0 = "epsilon" 
component0 = 'b' : <type 'str'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 64
ACTION: str0 += 'x' 
str0 = 'xmynz' : <type 'str'>
=> str0 = 'xmynzx' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 65
ACTION: str3 += 'f' 
str3 = 'rjlkzzbq' : <type 'str'>
=> str3 = 'rjlkzzbqf' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 66
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str3 += 'o'                                                             # STEP 67
ACTION: str3 += 'o' 
str3 = 'rjlkzzbqf' : <type 'str'>
=> str3 = 'rjlkzzbqfo' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 68
ACTION: str0 += 'q' 
str0 = 'xmynzx' : <type 'str'>
=> str0 = 'xmynzxq' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 69
ACTION: str3 += 'i' 
str3 = 'rjlkzzbqfo' : <type 'str'>
=> str3 = 'rjlkzzbqfoi' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 70
ACTION: str0 += 'c' 
str0 = 'xmynzxq' : <type 'str'>
=> str0 = 'xmynzxqc' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 71
ACTION: str0 += 'h' 
str0 = 'xmynzxqc' : <type 'str'>
=> str0 = 'xmynzxqch' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 72
ACTION: str0 += 'c' 
str0 = 'xmynzxqch' : <type 'str'>
=> str0 = 'xmynzxqchc' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 73
ACTION: path4 += "/" + component0 
component0 = 'epsilon' : <type 'str'>
path4 = '/Volumes/ramdisk/test/g/beta' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/g/beta/epsilon' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 74
ACTION: str0 += 'j' 
str0 = 'xmynzxqchc' : <type 'str'>
=> str0 = 'xmynzxqchcj' : <type 'str'>
==================================================
component0 = "delta"                                                    # STEP 75
ACTION: component0 = "delta" 
component0 = 'epsilon' : <type 'str'>
=> component0 = 'delta' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 76
ACTION: str0 += 'k' 
str0 = 'xmynzxqchcj' : <type 'str'>
=> str0 = 'xmynzxqchcjk' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 77
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/g/beta/epsilon' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 78
ACTION: str3 += 'u' 
str3 = 'rjlkzzbqfoi' : <type 'str'>
=> str3 = 'rjlkzzbqfoiu' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 79
ACTION: str0 += 'y' 
str0 = 'xmynzxqchcjk' : <type 'str'>
=> str0 = 'xmynzxqchcjky' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 80
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10340c850> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str3 += 'm'                                                             # STEP 81
ACTION: str3 += 'm' 
str3 = 'rjlkzzbqfoiu' : <type 'str'>
=> str3 = 'rjlkzzbqfoium' : <type 'str'>
==================================================
result = os0.path.exists(path2)                                         # STEP 82
ACTION: result = os0.path.exists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10340c850> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path2) 
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 83
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10340c850> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/b' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10484d8c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15935, in act358
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0294399261475 TOTAL RUNTIME
1 EXECUTED
84 TOTAL TEST OPERATIONS
0.00250458717346 TIME SPENT EXECUTING TEST OPERATIONS
0.00411367416382 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.43322753906e-05 TIME SPENT CHECKING PROPERTIES
0.00253891944885 TOTAL TIME SPENT RUNNING SUT
0.00358605384827 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
