Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.54245.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104309b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 14825, in act343
    assert (type(raised) == type(refRaised))
Original test has 34 steps

SAVING TEST AS failure.54245.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "c"                                                         # STEP 0
ACTION: component0 = "c" 
component0 = None : <type 'NoneType'>
=> component0 = 'c' : <type 'str'>
==================================================
component2 = "f"                                                         # STEP 1
ACTION: component2 = "f" 
component2 = None : <type 'NoneType'>
=> component2 = 'f' : <type 'str'>
==================================================
component1 = "g"                                                         # STEP 2
ACTION: component1 = "g" 
component1 = None : <type 'NoneType'>
=> component1 = 'g' : <type 'str'>
==================================================
component3 = "lambda"                                                    # STEP 3
ACTION: component3 = "lambda" 
component3 = None : <type 'NoneType'>
=> component3 = 'lambda' : <type 'str'>
==================================================
component4 = "gamma"                                                     # STEP 4
ACTION: component4 = "gamma" 
component4 = None : <type 'NoneType'>
=> component4 = 'gamma' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 5
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
os0 = newFakeOS()                                                        # STEP 6
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1058392d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str3 = ""                                                                # STEP 7
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'e'                                                              # STEP 8
ACTION: str3 += 'e' 
str3 = '' : <type 'str'>
=> str3 = 'e' : <type 'str'>
==================================================
str3 += 'i'                                                              # STEP 9
ACTION: str3 += 'i' 
str3 = 'e' : <type 'str'>
=> str3 = 'ei' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 10
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 11
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str3 += 'k'                                                             # STEP 12
ACTION: str3 += 'k' 
str3 = 'ei' : <type 'str'>
=> str3 = 'eik' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 13
ACTION: str2 += 'z' 
str2 = '' : <type 'str'>
=> str2 = 'z' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 14
ACTION: str3 += 'w' 
str3 = 'eik' : <type 'str'>
=> str3 = 'eikw' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 15
ACTION: str2 += 'g' 
str2 = 'z' : <type 'str'>
=> str2 = 'zg' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 16
ACTION: str2 += 'p' 
str2 = 'zg' : <type 'str'>
=> str2 = 'zgp' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 17
ACTION: str2 += 'u' 
str2 = 'zgp' : <type 'str'>
=> str2 = 'zgpu' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 18
ACTION: str2 += 'm' 
str2 = 'zgpu' : <type 'str'>
=> str2 = 'zgpum' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 19
ACTION: str3 += 'x' 
str3 = 'eikw' : <type 'str'>
=> str3 = 'eikwx' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 20
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 21
ACTION: str3 += 'e' 
str3 = 'eikwx' : <type 'str'>
=> str3 = 'eikwxe' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 22
ACTION: str3 += 'y' 
str3 = 'eikwxe' : <type 'str'>
=> str3 = 'eikwxey' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 23
ACTION: str3 += 'q' 
str3 = 'eikwxey' : <type 'str'>
=> str3 = 'eikwxeyq' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 24
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
result = os0.path.dirname(path2)                                        # STEP 25
ACTION: result = os0.path.dirname(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1058392d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path2) 
==================================================
str1 += 's'                                                             # STEP 26
ACTION: str1 += 's' 
str1 = '' : <type 'str'>
=> str1 = 's' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 27
ACTION: str1 += 'q' 
str1 = 's' : <type 'str'>
=> str1 = 'sq' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 28
ACTION: str1 += 'f' 
str1 = 'sq' : <type 'str'>
=> str1 = 'sqf' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 29
ACTION: path2 += "/" + component4 
component4 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
stat3 = os0.stat(path2)                                                 # STEP 30
ACTION: stat3 = os0.stat(path2) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1058392d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma': '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma'
==================================================
str3 += 'h'                                                             # STEP 31
ACTION: str3 += 'h' 
str3 = 'eikwxeyq' : <type 'str'>
=> str3 = 'eikwxeyqh' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 32
ACTION: str2 += 'i' 
str2 = 'zgpum' : <type 'str'>
=> str2 = 'zgpumi' : <type 'str'>
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                         # STEP 33
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1058392d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.IOError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY) 
=> fd_REF0 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105818440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 14825, in act343
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.04194688797 TOTAL RUNTIME
2 EXECUTED
234 TOTAL TEST OPERATIONS
0.00488138198853 TIME SPENT EXECUTING TEST OPERATIONS
0.0133674144745 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000140905380249 TIME SPENT CHECKING PROPERTIES
0.00502228736877 TOTAL TIME SPENT RUNNING SUT
0.00571417808533 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
