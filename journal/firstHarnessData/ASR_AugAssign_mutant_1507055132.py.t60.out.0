Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.61320.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AttributeError'>, AttributeError("'_FakeStatResult' object has no attribute 'AddEntry'",), <traceback object at 0x1021fec68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9741, in act267
    self.p_os[0].makedirs(self.p_path[1])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3662, in makedirs
    self.filesystem.MakeDirectories(dir_name, mode, exist_ok)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2385, in MakeDirectories
    self.CreateDirectory(dir_name, (mode & (~ self.umask)))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2075, in CreateDirectory
    current_dir.AddEntry(new_dir)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 564, in __getattr__
    return getattr(self.stat_result, item)
Original test has 43 steps

SAVING TEST AS failure.61320.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path1 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "alpha"                                                     # STEP 1
ACTION: component0 = "alpha" 
component0 = None : <type 'NoneType'>
=> component0 = 'alpha' : <type 'str'>
==================================================
path1 += "/" + component0                                                # STEP 2
ACTION: path1 += "/" + component0 
component0 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
component2 = "h"                                                         # STEP 3
ACTION: component2 = "h" 
component2 = None : <type 'NoneType'>
=> component2 = 'h' : <type 'str'>
==================================================
component1 = "e"                                                         # STEP 4
ACTION: component1 = "e" 
component1 = None : <type 'NoneType'>
=> component1 = 'e' : <type 'str'>
==================================================
component3 = "h"                                                         # STEP 5
ACTION: component3 = "h" 
component3 = None : <type 'NoneType'>
=> component3 = 'h' : <type 'str'>
==================================================
component4 = "epsilon"                                                   # STEP 6
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 7
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 += "/" + component4                                                # STEP 9
ACTION: path1 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha/epsilon' : <type 'str'>
==================================================
component4 = "epsilon"                                                  # STEP 10
ACTION: component4 = "epsilon" 
component4 = 'epsilon' : <type 'str'>
==================================================
component0 = "epsilon"                                                  # STEP 11
ACTION: component0 = "epsilon" 
component0 = 'alpha' : <type 'str'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 12
ACTION: path3 += "/" + component2 
component2 = 'h' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
component2 = "e"                                                        # STEP 13
ACTION: component2 = "e" 
component2 = 'h' : <type 'str'>
=> component2 = 'e' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 14
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/h' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 15
ACTION: path1 += "/" + component1 
component1 = 'e' : <type 'str'>
path1 = '/Volumes/ramdisk/test/alpha/epsilon' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha/epsilon/e' : <type 'str'>
==================================================
component1 = "h"                                                        # STEP 16
ACTION: component1 = "h" 
component1 = 'e' : <type 'str'>
=> component1 = 'h' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/alpha/epsilon/e' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 18
ACTION: path3 += "/" + component2 
component2 = 'e' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 19
ACTION: path1 += "/" + component2 
component2 = 'e' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 20
ACTION: path1 += "/" + component0 
component0 = 'epsilon' : <type 'str'>
path1 = '/Volumes/ramdisk/test/e' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/e/epsilon' : <type 'str'>
==================================================
component2 = "alpha"                                                    # STEP 21
ACTION: component2 = "alpha" 
component2 = 'e' : <type 'str'>
=> component2 = 'alpha' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 22
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 23
ACTION: str2 += 'r' 
str2 = '' : <type 'str'>
=> str2 = 'r' : <type 'str'>
==================================================
component0 = "e"                                                        # STEP 24
ACTION: component0 = "e" 
component0 = 'epsilon' : <type 'str'>
=> component0 = 'e' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 25
ACTION: str2 += 'c' 
str2 = 'r' : <type 'str'>
=> str2 = 'rc' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 26
ACTION: str2 += 'c' 
str2 = 'rc' : <type 'str'>
=> str2 = 'rcc' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 27
ACTION: str2 += 'c' 
str2 = 'rcc' : <type 'str'>
=> str2 = 'rccc' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 28
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024bead0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str2 += 'z'                                                             # STEP 29
ACTION: str2 += 'z' 
str2 = 'rccc' : <type 'str'>
=> str2 = 'rcccz' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 30
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024bead0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
fd1 = os0.open(path3, os.O_CREAT)                                       # STEP 31
ACTION: fd1 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024bead0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT) 
=> fd_REF1 = 5 : <type 'int'>
==================================================
bytes4 = 0                                                              # STEP 32
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
os0.mkdir(path3)                                                        # STEP 33
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024bead0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test/e'
REFERENCE ACTION: os_REF0.mkdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/e'
==================================================
path3 += "/" + component4                                               # STEP 34
ACTION: path3 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/e/epsilon' : <type 'str'>
==================================================
os0.link(path3,path3)                                                   # STEP 35
ACTION: os0.link(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024bead0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/e/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/e/epsilon'
REFERENCE ACTION: os_REF0.link(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory
==================================================
str2 += 'w'                                                             # STEP 36
ACTION: str2 += 'w' 
str2 = 'rcccz' : <type 'str'>
=> str2 = 'rccczw' : <type 'str'>
==================================================
component4 = "f"                                                        # STEP 37
ACTION: component4 = "f" 
component4 = 'epsilon' : <type 'str'>
=> component4 = 'f' : <type 'str'>
==================================================
stat3 = os0.lstat(path3)                                                # STEP 38
ACTION: stat3 = os0.lstat(path3) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024bead0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/e/epsilon' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] The parent object is not a directory: '/Volumes/ramdisk/test/e/epsilon'
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/e/epsilon'
==================================================
result = os0.path.exists(path3)                                         # STEP 39
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024bead0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/e/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
os0.symlink(path1,path3)                                                # STEP 40
ACTION: os0.symlink(path1,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024bead0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/e/epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test/e/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in the fake filesystem: '/Volumes/ramdisk/test/e'
REFERENCE ACTION: os_REF0.symlink(path1,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory
==================================================
result = os0.path.isabs(path1)                                          # STEP 41
ACTION: result = os0.path.isabs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024bead0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/e/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path1) 
==================================================
os0.makedirs(path1)                                                     # STEP 42
ACTION: os0.makedirs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024bead0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/e/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.AttributeError'> '_FakeStatResult' object has no attribute 'AddEntry'
ERROR: (<type 'exceptions.AttributeError'>, AttributeError("'_FakeStatResult' object has no attribute 'AddEntry'",), <traceback object at 0x103d26e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9741, in act267
    self.p_os[0].makedirs(self.p_path[1])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3662, in makedirs
    self.filesystem.MakeDirectories(dir_name, mode, exist_ok)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2385, in MakeDirectories
    self.CreateDirectory(dir_name, (mode & (~ self.umask)))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2075, in CreateDirectory
    current_dir.AddEntry(new_dir)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 564, in __getattr__
    return getattr(self.stat_result, item)
STOPPING TESTING DUE TO FAILED TEST
0.0389280319214 TOTAL RUNTIME
1 EXECUTED
43 TOTAL TEST OPERATIONS
0.00518798828125 TIME SPENT EXECUTING TEST OPERATIONS
0.00509023666382 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.5749206543e-05 TIME SPENT CHECKING PROPERTIES
0.00521373748779 TOTAL TIME SPENT RUNNING SUT
0.00493597984314 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
