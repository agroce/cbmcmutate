Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.54529.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103895b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 16971, in act372
    assert (type(raised) == type(refRaised))
Original test has 38 steps

SAVING TEST AS failure.54529.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "d"                                                         # STEP 0
ACTION: component2 = "d" 
component2 = None : <type 'NoneType'>
=> component2 = 'd' : <type 'str'>
==================================================
component1 = "f"                                                         # STEP 1
ACTION: component1 = "f" 
component1 = None : <type 'NoneType'>
=> component1 = 'f' : <type 'str'>
==================================================
component3 = "c"                                                         # STEP 2
ACTION: component3 = "c" 
component3 = None : <type 'NoneType'>
=> component3 = 'c' : <type 'str'>
==================================================
component0 = "g"                                                         # STEP 3
ACTION: component0 = "g" 
component0 = None : <type 'NoneType'>
=> component0 = 'g' : <type 'str'>
==================================================
component4 = "epsilon"                                                   # STEP 4
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component1                                                # STEP 6
ACTION: path3 += "/" + component1 
component1 = 'f' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
path3 += "/" + component0                                                # STEP 7
ACTION: path3 += "/" + component0 
component0 = 'g' : <type 'str'>
path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f/g' : <type 'str'>
==================================================
component1 = "b"                                                         # STEP 8
ACTION: component1 = "b" 
component1 = 'f' : <type 'str'>
=> component1 = 'b' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 9
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component0 = "e"                                                        # STEP 10
ACTION: component0 = "e" 
component0 = 'g' : <type 'str'>
=> component0 = 'e' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 11
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 12
ACTION: path3 += "/" + component2 
component2 = 'd' : <type 'str'>
path3 = '/Volumes/ramdisk/test/f/g' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f/g/d' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 13
ACTION: path3 += "/" + component2 
component2 = 'd' : <type 'str'>
path3 = '/Volumes/ramdisk/test/f/g/d' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f/g/d/d' : <type 'str'>
==================================================
component2 = "beta"                                                     # STEP 14
ACTION: component2 = "beta" 
component2 = 'd' : <type 'str'>
=> component2 = 'beta' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 15
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/f/g/d/d' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 16
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 17
ACTION: str4 += 'j' 
str4 = '' : <type 'str'>
=> str4 = 'j' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 18
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 19
ACTION: str4 += 'm' 
str4 = 'j' : <type 'str'>
=> str4 = 'jm' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 20
ACTION: path3 += "/" + component3 
component3 = 'c' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 21
ACTION: path3 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/c/epsilon' : <type 'str'>
==================================================
component3 = "f"                                                        # STEP 22
ACTION: component3 = "f" 
component3 = 'c' : <type 'str'>
=> component3 = 'f' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 23
ACTION: str4 += 'o' 
str4 = 'jm' : <type 'str'>
=> str4 = 'jmo' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 24
ACTION: str2 += 'j' 
str2 = '' : <type 'str'>
=> str2 = 'j' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 25
ACTION: path1 += "/" + component2 
component2 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
component4 = "phi"                                                      # STEP 26
ACTION: component4 = "phi" 
component4 = 'epsilon' : <type 'str'>
=> component4 = 'phi' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 27
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102582c50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.readlink(path1)                                            # STEP 28
ACTION: result = os0.readlink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102582c50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake path does not exist: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: result_REF = os_REF0.readlink(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 29
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102582c50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/c/epsilon' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/c/epsilon'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/c/epsilon'
==================================================
str4 += 'd'                                                             # STEP 30
ACTION: str4 += 'd' 
str4 = 'jmo' : <type 'str'>
=> str4 = 'jmod' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 31
ACTION: fd0 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102582c50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/c/epsilon' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Object already exists in fake filesystem: '/'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/c/epsilon'
==================================================
stat1 = os0.stat(path3)                                                 # STEP 32
ACTION: stat1 = os0.stat(path3) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102582c50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/c/epsilon' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/c/epsilon'
REFERENCE ACTION: stat_REF1 = os_REF0.stat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/c/epsilon'
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 33
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102582c50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/c/epsilon' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Object already exists in fake filesystem: '/'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/c/epsilon'
==================================================
component2 = "c"                                                        # STEP 34
ACTION: component2 = "c" 
component2 = 'beta' : <type 'str'>
=> component2 = 'c' : <type 'str'>
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 35
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102582c50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/c/epsilon' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Object already exists in fake filesystem: '/'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/c/epsilon'
==================================================
str4 += 'x'                                                             # STEP 36
ACTION: str4 += 'x' 
str4 = 'jmod' : <type 'str'>
=> str4 = 'jmodx' : <type 'str'>
==================================================
fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 37
ACTION: fd0 = os0.open(path1, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102582c50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_CREAT | os.O_EXCL) 
=> fd_REF0 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1038f5bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 16971, in act372
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0386099815369 TOTAL RUNTIME
1 EXECUTED
38 TOTAL TEST OPERATIONS
0.00556826591492 TIME SPENT EXECUTING TEST OPERATIONS
0.00407958030701 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.36034393311e-05 TIME SPENT CHECKING PROPERTIES
0.00559186935425 TOTAL TIME SPENT RUNNING SUT
0.00460910797119 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
