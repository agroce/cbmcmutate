Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.49768.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for /: 'str' and 'str'",), <traceback object at 0x1024f8c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1329, in NormalizeCase
    return components_to_path()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1305, in components_to_path
    normalized_path = (sep / normalized_path)
Original test has 90 steps

SAVING TEST AS failure.49768.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "omega"                                                     # STEP 0
ACTION: component0 = "omega" 
component0 = None : <type 'NoneType'>
=> component0 = 'omega' : <type 'str'>
==================================================
component2 = "d"                                                         # STEP 1
ACTION: component2 = "d" 
component2 = None : <type 'NoneType'>
=> component2 = 'd' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component3 = "omega"                                                     # STEP 3
ACTION: component3 = "omega" 
component3 = None : <type 'NoneType'>
=> component3 = 'omega' : <type 'str'>
==================================================
component4 = "e"                                                         # STEP 4
ACTION: component4 = "e" 
component4 = None : <type 'NoneType'>
=> component4 = 'e' : <type 'str'>
==================================================
component1 = "d"                                                         # STEP 5
ACTION: component1 = "d" 
component1 = None : <type 'NoneType'>
=> component1 = 'd' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 7
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'f'                                                              # STEP 8
ACTION: str3 += 'f' 
str3 = '' : <type 'str'>
=> str3 = 'f' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 9
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str3 += 'r'                                                             # STEP 10
ACTION: str3 += 'r' 
str3 = 'f' : <type 'str'>
=> str3 = 'fr' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 11
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str3 += 'x'                                                             # STEP 12
ACTION: str3 += 'x' 
str3 = 'fr' : <type 'str'>
=> str3 = 'frx' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 13
ACTION: path1 += "/" + component1 
component1 = 'd' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
component1 = "alpha"                                                    # STEP 14
ACTION: component1 = "alpha" 
component1 = 'd' : <type 'str'>
=> component1 = 'alpha' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 15
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str3 += 'q'                                                             # STEP 16
ACTION: str3 += 'q' 
str3 = 'frx' : <type 'str'>
=> str3 = 'frxq' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 17
ACTION: str3 += 'o' 
str3 = 'frxq' : <type 'str'>
=> str3 = 'frxqo' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 18
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
bytes2 += 1                                                             # STEP 19
ACTION: bytes2 += 1 
bytes2 = 1 : <type 'int'>
=> bytes2 = 2 : <type 'int'>
==================================================
str3 += 'u'                                                             # STEP 20
ACTION: str3 += 'u' 
str3 = 'frxqo' : <type 'str'>
=> str3 = 'frxqou' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 21
ACTION: str3 += 'h' 
str3 = 'frxqou' : <type 'str'>
=> str3 = 'frxqouh' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 22
ACTION: str3 += 'm' 
str3 = 'frxqouh' : <type 'str'>
=> str3 = 'frxqouhm' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 23
ACTION: str3 += 'v' 
str3 = 'frxqouhm' : <type 'str'>
=> str3 = 'frxqouhmv' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 24
ACTION: str3 += 'y' 
str3 = 'frxqouhmv' : <type 'str'>
=> str3 = 'frxqouhmvy' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 25
ACTION: bytes4 += 1 
bytes4 = 1 : <type 'int'>
=> bytes4 = 2 : <type 'int'>
==================================================
str0 = ""                                                               # STEP 26
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 27
ACTION: path0 += "/" + component2 
component2 = 'd' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 28
ACTION: path0 += "/" + component0 
component0 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/omega' : <type 'str'>
==================================================
component0 = "gamma"                                                    # STEP 29
ACTION: component0 = "gamma" 
component0 = 'omega' : <type 'str'>
=> component0 = 'gamma' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 30
ACTION: path1 += "/" + component1 
component1 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/d/alpha' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 31
ACTION: str0 += 'y' 
str0 = '' : <type 'str'>
=> str0 = 'y' : <type 'str'>
==================================================
component1 = "epsilon"                                                  # STEP 32
ACTION: component1 = "epsilon" 
component1 = 'alpha' : <type 'str'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 33
ACTION: bytes2 = 0 
bytes2 = 2 : <type 'int'>
=> bytes2 = 0 : <type 'int'>
==================================================
str3 += 't'                                                             # STEP 34
ACTION: str3 += 't' 
str3 = 'frxqouhmvy' : <type 'str'>
=> str3 = 'frxqouhmvyt' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 35
ACTION: str3 += 't' 
str3 = 'frxqouhmvyt' : <type 'str'>
=> str3 = 'frxqouhmvytt' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 36
ACTION: path0 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d/omega' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/omega/gamma' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 37
ACTION: str0 += 'r' 
str0 = 'y' : <type 'str'>
=> str0 = 'yr' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 38
ACTION: path1 += "/" + component2 
component2 = 'd' : <type 'str'>
path1 = '/Volumes/ramdisk/test/d/alpha' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/d/alpha/d' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 39
ACTION: path1 += "/" + component3 
component3 = 'omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test/d/alpha/d' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/d/alpha/d/omega' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 40
ACTION: path0 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d/omega/gamma' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/omega/gamma/gamma' : <type 'str'>
==================================================
component0 = "e"                                                        # STEP 41
ACTION: component0 = "e" 
component0 = 'gamma' : <type 'str'>
=> component0 = 'e' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 42
ACTION: str3 += 'c' 
str3 = 'frxqouhmvytt' : <type 'str'>
=> str3 = 'frxqouhmvyttc' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 43
ACTION: str3 += 'm' 
str3 = 'frxqouhmvyttc' : <type 'str'>
=> str3 = 'frxqouhmvyttcm' : <type 'str'>
==================================================
component2 = "alpha"                                                    # STEP 44
ACTION: component2 = "alpha" 
component2 = 'd' : <type 'str'>
=> component2 = 'alpha' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 45
ACTION: str3 += 's' 
str3 = 'frxqouhmvyttcm' : <type 'str'>
=> str3 = 'frxqouhmvyttcms' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 46
ACTION: str3 += 'p' 
str3 = 'frxqouhmvyttcms' : <type 'str'>
=> str3 = 'frxqouhmvyttcmsp' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 47
ACTION: path1 += "/" + component0 
component0 = 'e' : <type 'str'>
path1 = '/Volumes/ramdisk/test/d/alpha/d/omega' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/d/alpha/d/omega/e' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 48
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/d/alpha/d/omega/e' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 49
ACTION: str0 += 'd' 
str0 = 'yr' : <type 'str'>
=> str0 = 'yrd' : <type 'str'>
==================================================
component0 = "a"                                                        # STEP 50
ACTION: component0 = "a" 
component0 = 'e' : <type 'str'>
=> component0 = 'a' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 51
ACTION: str0 += 't' 
str0 = 'yrd' : <type 'str'>
=> str0 = 'yrdt' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 52
ACTION: str3 += 'z' 
str3 = 'frxqouhmvyttcmsp' : <type 'str'>
=> str3 = 'frxqouhmvyttcmspz' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 53
ACTION: path0 += "/" + component3 
component3 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d/omega/gamma/gamma' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/omega/gamma/gamma/omega' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 54
ACTION: str0 += 'w' 
str0 = 'yrdt' : <type 'str'>
=> str0 = 'yrdtw' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 55
ACTION: str0 += 'w' 
str0 = 'yrdtw' : <type 'str'>
=> str0 = 'yrdtww' : <type 'str'>
==================================================
component3 = "f"                                                        # STEP 56
ACTION: component3 = "f" 
component3 = 'omega' : <type 'str'>
=> component3 = 'f' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 57
ACTION: str0 += 'z' 
str0 = 'yrdtww' : <type 'str'>
=> str0 = 'yrdtwwz' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 58
ACTION: str0 += 'l' 
str0 = 'yrdtwwz' : <type 'str'>
=> str0 = 'yrdtwwzl' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 59
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 60
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 61
ACTION: path0 += "/" + component3 
component3 = 'f' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d/omega/gamma/gamma/omega' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/omega/gamma/gamma/omega/f' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 62
ACTION: path0 += "/" + component3 
component3 = 'f' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d/omega/gamma/gamma/omega/f' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/omega/gamma/gamma/omega/f/f' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 63
ACTION: str0 += 'j' 
str0 = 'yrdtwwzl' : <type 'str'>
=> str0 = 'yrdtwwzlj' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 64
ACTION: str3 += 'i' 
str3 = 'frxqouhmvyttcmspz' : <type 'str'>
=> str3 = 'frxqouhmvyttcmspzi' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 65
ACTION: str3 += 'm' 
str3 = 'frxqouhmvyttcmspzi' : <type 'str'>
=> str3 = 'frxqouhmvyttcmspzim' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 66
ACTION: str1 += 'j' 
str1 = '' : <type 'str'>
=> str1 = 'j' : <type 'str'>
==================================================
component3 = "omega"                                                    # STEP 67
ACTION: component3 = "omega" 
component3 = 'f' : <type 'str'>
=> component3 = 'omega' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 68
ACTION: str1 += 'q' 
str1 = 'j' : <type 'str'>
=> str1 = 'jq' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 69
ACTION: str3 += 'u' 
str3 = 'frxqouhmvyttcmspzim' : <type 'str'>
=> str3 = 'frxqouhmvyttcmspzimu' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 70
ACTION: str0 += 'y' 
str0 = 'yrdtwwzlj' : <type 'str'>
=> str0 = 'yrdtwwzljy' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 71
ACTION: str3 += 'v' 
str3 = 'frxqouhmvyttcmspzimu' : <type 'str'>
=> str3 = 'frxqouhmvyttcmspzimuv' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 72
ACTION: str3 += 'n' 
str3 = 'frxqouhmvyttcmspzimuv' : <type 'str'>
=> str3 = 'frxqouhmvyttcmspzimuvn' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 73
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
path0 += "/" + component2                                               # STEP 74
ACTION: path0 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d/omega/gamma/gamma/omega/f/f' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/omega/gamma/gamma/omega/f/f/alpha' : <type 'str'>
==================================================
component2 = "a"                                                        # STEP 75
ACTION: component2 = "a" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'a' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 76
ACTION: str0 += " " 
str0 = 'yrdtwwzljy' : <type 'str'>
=> str0 = 'yrdtwwzljy ' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 77
ACTION: str0 += 'w' 
str0 = 'yrdtwwzljy ' : <type 'str'>
=> str0 = 'yrdtwwzljy w' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 78
ACTION: str3 += 's' 
str3 = 'frxqouhmvyttcmspzimuvn' : <type 'str'>
=> str3 = 'frxqouhmvyttcmspzimuvns' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 79
ACTION: str1 += 'x' 
str1 = 'jq' : <type 'str'>
=> str1 = 'jqx' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 80
ACTION: path0 += "/" + component2 
component2 = 'a' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d/omega/gamma/gamma/omega/f/f/alpha' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/omega/gamma/gamma/omega/f/f/alpha/a' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 81
ACTION: str3 += 'a' 
str3 = 'frxqouhmvyttcmspzimuvns' : <type 'str'>
=> str3 = 'frxqouhmvyttcmspzimuvnsa' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 82
ACTION: str3 += 'j' 
str3 = 'frxqouhmvyttcmspzimuvnsa' : <type 'str'>
=> str3 = 'frxqouhmvyttcmspzimuvnsaj' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 83
ACTION: str1 += 'h' 
str1 = 'jqx' : <type 'str'>
=> str1 = 'jqxh' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 84
ACTION: str3 += 'l' 
str3 = 'frxqouhmvyttcmspzimuvnsaj' : <type 'str'>
=> str3 = 'frxqouhmvyttcmspzimuvnsajl' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 85
ACTION: str1 += 'w' 
str1 = 'jqxh' : <type 'str'>
=> str1 = 'jqxhw' : <type 'str'>
==================================================
component2 = "gamma"                                                    # STEP 86
ACTION: component2 = "gamma" 
component2 = 'a' : <type 'str'>
=> component2 = 'gamma' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 87
ACTION: str3 += 'r' 
str3 = 'frxqouhmvyttcmspzimuvnsajl' : <type 'str'>
=> str3 = 'frxqouhmvyttcmspzimuvnsajlr' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 88
ACTION: str0 += 'u' 
str0 = 'yrdtwwzljy w' : <type 'str'>
=> str0 = 'yrdtwwzljy wu' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 89
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unsupported operand type(s) for /: 'str' and 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for /: 'str' and 'str'",), <traceback object at 0x102524b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1329, in NormalizeCase
    return components_to_path()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1305, in components_to_path
    normalized_path = (sep / normalized_path)
STOPPING TESTING DUE TO FAILED TEST
0.0319700241089 TOTAL RUNTIME
1 EXECUTED
90 TOTAL TEST OPERATIONS
0.00156044960022 TIME SPENT EXECUTING TEST OPERATIONS
0.00470519065857 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.48226928711e-05 TIME SPENT CHECKING PROPERTIES
0.00160527229309 TOTAL TIME SPENT RUNNING SUT
0.00311493873596 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
