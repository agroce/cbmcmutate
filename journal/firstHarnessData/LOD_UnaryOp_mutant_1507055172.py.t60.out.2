Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62614.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (/Volumes/ramdisk/test) ',), <traceback object at 0x1006c3320>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 32044, in act594
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 34 steps

SAVING TEST AS failure.62614.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "omega"                                                     # STEP 0
ACTION: component4 = "omega" 
component4 = None : <type 'NoneType'>
=> component4 = 'omega' : <type 'str'>
==================================================
component2 = "d"                                                         # STEP 1
ACTION: component2 = "d" 
component2 = None : <type 'NoneType'>
=> component2 = 'd' : <type 'str'>
==================================================
component1 = "epsilon"                                                   # STEP 2
ACTION: component1 = "epsilon" 
component1 = None : <type 'NoneType'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
component3 = "omega"                                                     # STEP 3
ACTION: component3 = "omega" 
component3 = None : <type 'NoneType'>
=> component3 = 'omega' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 4
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
component0 = "a"                                                         # STEP 5
ACTION: component0 = "a" 
component0 = None : <type 'NoneType'>
=> component0 = 'a' : <type 'str'>
==================================================
str2 += 'm'                                                              # STEP 6
ACTION: str2 += 'm' 
str2 = '' : <type 'str'>
=> str2 = 'm' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'q'                                                              # STEP 8
ACTION: str2 += 'q' 
str2 = 'm' : <type 'str'>
=> str2 = 'mq' : <type 'str'>
==================================================
str2 += 'q'                                                              # STEP 9
ACTION: str2 += 'q' 
str2 = 'mq' : <type 'str'>
=> str2 = 'mqq' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 10
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 11
ACTION: str2 += 'y' 
str2 = 'mqq' : <type 'str'>
=> str2 = 'mqqy' : <type 'str'>
==================================================
path4 += "/" + component4                                               # STEP 12
ACTION: path4 += "/" + component4 
component4 = 'omega' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 13
ACTION: path1 += "/" + component4 
component4 = 'omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 14
ACTION: str2 += 's' 
str2 = 'mqqy' : <type 'str'>
=> str2 = 'mqqys' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 15
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10244f950> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str2 += 'a'                                                             # STEP 16
ACTION: str2 += 'a' 
str2 = 'mqqys' : <type 'str'>
=> str2 = 'mqqysa' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 17
ACTION: str2 += 'm' 
str2 = 'mqqysa' : <type 'str'>
=> str2 = 'mqqysam' : <type 'str'>
==================================================
os0.symlink(path4,path1)                                                # STEP 18
ACTION: os0.symlink(path4,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10244f950> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path4,path1) 
==================================================
stat0 = os0.stat(path1)                                                 # STEP 19
ACTION: stat0 = os0.stat(path1) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10244f950> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: stat_REF0 = os_REF0.stat(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/omega'
==================================================
stat4 = os0.stat(path4)                                                 # STEP 20
ACTION: stat4 = os0.stat(path4) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10244f950> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/omega'
==================================================
str2 += 'z'                                                             # STEP 21
ACTION: str2 += 'z' 
str2 = 'mqqysam' : <type 'str'>
=> str2 = 'mqqysamz' : <type 'str'>
==================================================
result = os0.path.exists(path1)                                         # STEP 22
ACTION: result = os0.path.exists(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10244f950> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path1) 
==================================================
result = os0.path.getsize(path4)                                        # STEP 23
ACTION: result = os0.path.getsize(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10244f950> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/omega'
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 24
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10244f950> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/omega'
==================================================
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 25
ACTION: fd0 = os0.open(path4, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10244f950> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path4, os.O_CREAT) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/omega'
==================================================
os0.symlink(path1,path4)                                                # STEP 26
ACTION: os0.symlink(path1,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10244f950> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: os_REF0.symlink(path1,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
stat2 = os0.stat(path4)                                                 # STEP 27
ACTION: stat2 = os0.stat(path4) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10244f950> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/omega'
==================================================
result = os0.path.getsize(path1)                                        # STEP 28
ACTION: result = os0.path.getsize(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10244f950> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/omega'
==================================================
component4 = "lambda"                                                   # STEP 29
ACTION: component4 = "lambda" 
component4 = 'omega' : <type 'str'>
=> component4 = 'lambda' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 30
ACTION: str2 += " " 
str2 = 'mqqysamz' : <type 'str'>
=> str2 = 'mqqysamz ' : <type 'str'>
==================================================
stat3 = os0.lstat(path4)                                                # STEP 31
ACTION: stat3 = os0.lstat(path4) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10244f950> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1024b7b10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path4) 
=> stat_REF3 = posix.stat_result(st_mode=41453, st_ino=17936316, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=27, st_atime=1507398636, st_mtime=1507398636, st_ctime=1507398636) : <type 'posix.stat_result'>
==================================================
bytes4 = 0                                                              # STEP 32
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
result = os0.path.dirname(path1)                                        # STEP 33
ACTION: result = os0.path.dirname(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10244f950> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path1) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' () == (/Volumes/ramdisk/test) ',), <traceback object at 0x1040bbb48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 32044, in act594
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
0.0319828987122 TOTAL RUNTIME
1 EXECUTED
34 TOTAL TEST OPERATIONS
0.00459933280945 TIME SPENT EXECUTING TEST OPERATIONS
0.00246286392212 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.66893005371e-05 TIME SPENT CHECKING PROPERTIES
0.00461602210999 TOTAL TIME SPENT RUNNING SUT
0.00329303741455 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
