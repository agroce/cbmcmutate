Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.58716.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102ccd878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22687, in act452
    assert (type(raised) == type(refRaised))
Original test has 28 steps

SAVING TEST AS failure.58716.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "h"                                                         # STEP 0
ACTION: component0 = "h" 
component0 = None : <type 'NoneType'>
=> component0 = 'h' : <type 'str'>
==================================================
component2 = "gamma"                                                     # STEP 1
ACTION: component2 = "gamma" 
component2 = None : <type 'NoneType'>
=> component2 = 'gamma' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 2
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'n'                                                              # STEP 3
ACTION: str4 += 'n' 
str4 = '' : <type 'str'>
=> str4 = 'n' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 4
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "f"                                                         # STEP 5
ACTION: component4 = "f" 
component4 = None : <type 'NoneType'>
=> component4 = 'f' : <type 'str'>
==================================================
component3 = "alpha"                                                     # STEP 6
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
str4 += 'u'                                                              # STEP 7
ACTION: str4 += 'u' 
str4 = 'n' : <type 'str'>
=> str4 = 'nu' : <type 'str'>
==================================================
component1 = "alpha"                                                     # STEP 8
ACTION: component1 = "alpha" 
component1 = None : <type 'NoneType'>
=> component1 = 'alpha' : <type 'str'>
==================================================
str4 += 'q'                                                              # STEP 9
ACTION: str4 += 'q' 
str4 = 'nu' : <type 'str'>
=> str4 = 'nuq' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 10
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1059cd910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str4 += 'l'                                                             # STEP 11
ACTION: str4 += 'l' 
str4 = 'nuq' : <type 'str'>
=> str4 = 'nuql' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 12
ACTION: str4 += 'v' 
str4 = 'nuql' : <type 'str'>
=> str4 = 'nuqlv' : <type 'str'>
==================================================
result = os0.path.isabs(path4)                                          # STEP 13
ACTION: result = os0.path.isabs(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1059cd910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path4) 
==================================================
str4 += 't'                                                             # STEP 14
ACTION: str4 += 't' 
str4 = 'nuqlv' : <type 'str'>
=> str4 = 'nuqlvt' : <type 'str'>
==================================================
result = os0.path.lexists(path4)                                        # STEP 15
ACTION: result = os0.path.lexists(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1059cd910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path4) 
==================================================
str4 += 'i'                                                             # STEP 16
ACTION: str4 += 'i' 
str4 = 'nuqlvt' : <type 'str'>
=> str4 = 'nuqlvti' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 17
ACTION: str4 += 'w' 
str4 = 'nuqlvti' : <type 'str'>
=> str4 = 'nuqlvtiw' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 18
ACTION: str4 += 'o' 
str4 = 'nuqlvtiw' : <type 'str'>
=> str4 = 'nuqlvtiwo' : <type 'str'>
==================================================
os0.symlink(path4,path4)                                                # STEP 19
ACTION: os0.symlink(path4,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1059cd910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path4,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str4 += 'u'                                                             # STEP 20
ACTION: str4 += 'u' 
str4 = 'nuqlvtiwo' : <type 'str'>
=> str4 = 'nuqlvtiwou' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 21
ACTION: str4 += 's' 
str4 = 'nuqlvtiwou' : <type 'str'>
=> str4 = 'nuqlvtiwous' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 22
ACTION: path4 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
result = os0.readlink(path4)                                            # STEP 23
ACTION: result = os0.readlink(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1059cd910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake path does not exist: '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: result_REF = os_REF0.readlink(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma'
==================================================
component2 = "h"                                                        # STEP 24
ACTION: component2 = "h" 
component2 = 'gamma' : <type 'str'>
=> component2 = 'h' : <type 'str'>
==================================================
os0.remove(path4)                                                       # STEP 25
ACTION: os0.remove(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1059cd910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: os_REF0.remove(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma'
==================================================
os0.mkdir(path4)                                                        # STEP 26
ACTION: os0.mkdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1059cd910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.mkdir(path4) 
==================================================
os0.rmdir(path4)                                                        # STEP 27
ACTION: os0.rmdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1059cd910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 13] Trying to remove object without write permission: 'gamma'
REFERENCE ACTION: os_REF0.rmdir(path4) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x105a5ac68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22687, in act452
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.300333023071 TOTAL RUNTIME
5 EXECUTED
828 TOTAL TEST OPERATIONS
0.209352254868 TIME SPENT EXECUTING TEST OPERATIONS
0.0455849170685 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000516414642334 TIME SPENT CHECKING PROPERTIES
0.20986866951 TOTAL TIME SPENT RUNNING SUT
0.0165936946869 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
