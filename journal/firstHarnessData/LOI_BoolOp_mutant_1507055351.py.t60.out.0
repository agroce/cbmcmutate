Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.48537.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('expected a string or other character buffer object',), <traceback object at 0x10343a710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17, in newFakeOS
    fs = pyfakefs.fake_filesystem.FakeFilesystem()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 881, in __init__
    self.AddMountPoint(self.root.name, total_size)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 933, in AddMountPoint
    path = self.NormalizePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1340, in NormalizePath
    path = self.NormalizePathSeparator(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1237, in NormalizePathSeparator
    return path.replace(self._alternative_path_separator(path), self._path_separator(path))
Original test has 176 steps

SAVING TEST AS failure.48537.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path2 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "c"                                                         # STEP 1
ACTION: component0 = "c" 
component0 = None : <type 'NoneType'>
=> component0 = 'c' : <type 'str'>
==================================================
component2 = "h"                                                         # STEP 2
ACTION: component2 = "h" 
component2 = None : <type 'NoneType'>
=> component2 = 'h' : <type 'str'>
==================================================
component1 = "gamma"                                                     # STEP 3
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
component3 = "d"                                                         # STEP 4
ACTION: component3 = "d" 
component3 = None : <type 'NoneType'>
=> component3 = 'd' : <type 'str'>
==================================================
component4 = "g"                                                         # STEP 5
ACTION: component4 = "g" 
component4 = None : <type 'NoneType'>
=> component4 = 'g' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 6
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 += "/" + component2                                                # STEP 8
ACTION: path1 += "/" + component2 
component2 = 'h' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
component2 = "lambda"                                                    # STEP 9
ACTION: component2 = "lambda" 
component2 = 'h' : <type 'str'>
=> component2 = 'lambda' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 10
ACTION: path1 += "/" + component4 
component4 = 'g' : <type 'str'>
path1 = '/Volumes/ramdisk/test/h' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/h/g' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 11
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 12
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "epsilon"                                                  # STEP 13
ACTION: component4 = "epsilon" 
component4 = 'g' : <type 'str'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 14
ACTION: path1 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path1 = '/Volumes/ramdisk/test/h/g' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/h/g/gamma' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 15
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 16
ACTION: str0 += 'k' 
str0 = '' : <type 'str'>
=> str0 = 'k' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 17
ACTION: str0 += 'r' 
str0 = 'k' : <type 'str'>
=> str0 = 'kr' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 18
ACTION: path2 += "/" + component0 
component0 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 19
ACTION: path1 += "/" + component3 
component3 = 'd' : <type 'str'>
path1 = '/Volumes/ramdisk/test/h/g/gamma' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/h/g/gamma/d' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 20
ACTION: str0 += 'n' 
str0 = 'kr' : <type 'str'>
=> str0 = 'krn' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 21
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 22
ACTION: path2 += "/" + component3 
component3 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/d' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 23
ACTION: path1 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path1 = '/Volumes/ramdisk/test/h/g/gamma/d' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/h/g/gamma/d/gamma' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 24
ACTION: str2 += 's' 
str2 = '' : <type 'str'>
=> str2 = 's' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 25
ACTION: str0 += 'y' 
str0 = 'krn' : <type 'str'>
=> str0 = 'krny' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 26
ACTION: path3 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
component2 = "lambda"                                                   # STEP 27
ACTION: component2 = "lambda" 
component2 = 'lambda' : <type 'str'>
==================================================
component0 = "alpha"                                                    # STEP 28
ACTION: component0 = "alpha" 
component0 = 'c' : <type 'str'>
=> component0 = 'alpha' : <type 'str'>
==================================================
component3 = "b"                                                        # STEP 29
ACTION: component3 = "b" 
component3 = 'd' : <type 'str'>
=> component3 = 'b' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 30
ACTION: str0 += 'r' 
str0 = 'krny' : <type 'str'>
=> str0 = 'krnyr' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 31
ACTION: str0 += 'u' 
str0 = 'krnyr' : <type 'str'>
=> str0 = 'krnyru' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 32
ACTION: str0 += 'v' 
str0 = 'krnyru' : <type 'str'>
=> str0 = 'krnyruv' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 33
ACTION: str2 += 'l' 
str2 = 's' : <type 'str'>
=> str2 = 'sl' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 34
ACTION: str2 += 'e' 
str2 = 'sl' : <type 'str'>
=> str2 = 'sle' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 35
ACTION: str2 += 'y' 
str2 = 'sle' : <type 'str'>
=> str2 = 'sley' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 36
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes0 = 0                                                              # STEP 37
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path3 += "/" + component2                                               # STEP 38
ACTION: path3 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda/lambda' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 39
ACTION: str0 += 'h' 
str0 = 'krnyruv' : <type 'str'>
=> str0 = 'krnyruvh' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 40
ACTION: str2 += 'b' 
str2 = 'sley' : <type 'str'>
=> str2 = 'sleyb' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 41
ACTION: str2 += 'f' 
str2 = 'sleyb' : <type 'str'>
=> str2 = 'sleybf' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 42
ACTION: str0 += 'a' 
str0 = 'krnyruvh' : <type 'str'>
=> str0 = 'krnyruvha' : <type 'str'>
==================================================
component1 = "omega"                                                    # STEP 43
ACTION: component1 = "omega" 
component1 = 'gamma' : <type 'str'>
=> component1 = 'omega' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 44
ACTION: path1 += "/" + component0 
component0 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test/h/g/gamma/d/gamma' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/h/g/gamma/d/gamma/alpha' : <type 'str'>
==================================================
component2 = "lambda"                                                   # STEP 45
ACTION: component2 = "lambda" 
component2 = 'lambda' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 46
ACTION: str2 += 'o' 
str2 = 'sleybf' : <type 'str'>
=> str2 = 'sleybfo' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 47
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/c/d' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 48
ACTION: str2 += 'a' 
str2 = 'sleybfo' : <type 'str'>
=> str2 = 'sleybfoa' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 49
ACTION: str2 += 'x' 
str2 = 'sleybfoa' : <type 'str'>
=> str2 = 'sleybfoax' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 50
ACTION: str2 += 'g' 
str2 = 'sleybfoax' : <type 'str'>
=> str2 = 'sleybfoaxg' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 51
ACTION: str2 += 'r' 
str2 = 'sleybfoaxg' : <type 'str'>
=> str2 = 'sleybfoaxgr' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 52
ACTION: str0 += 'p' 
str0 = 'krnyruvha' : <type 'str'>
=> str0 = 'krnyruvhap' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 53
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
component0 = "b"                                                        # STEP 54
ACTION: component0 = "b" 
component0 = 'alpha' : <type 'str'>
=> component0 = 'b' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 55
ACTION: str2 += 's' 
str2 = 'sleybfoaxgr' : <type 'str'>
=> str2 = 'sleybfoaxgrs' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 56
ACTION: str1 += 'm' 
str1 = '' : <type 'str'>
=> str1 = 'm' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 57
ACTION: str1 += 'd' 
str1 = 'm' : <type 'str'>
=> str1 = 'md' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 58
ACTION: str0 += 'd' 
str0 = 'krnyruvhap' : <type 'str'>
=> str0 = 'krnyruvhapd' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 59
ACTION: str0 += 'z' 
str0 = 'krnyruvhapd' : <type 'str'>
=> str0 = 'krnyruvhapdz' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 60
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str0 += 'i'                                                             # STEP 61
ACTION: str0 += 'i' 
str0 = 'krnyruvhapdz' : <type 'str'>
=> str0 = 'krnyruvhapdzi' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 62
ACTION: str1 += 'i' 
str1 = 'md' : <type 'str'>
=> str1 = 'mdi' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 63
ACTION: str1 += 'i' 
str1 = 'mdi' : <type 'str'>
=> str1 = 'mdii' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 64
ACTION: str0 += 's' 
str0 = 'krnyruvhapdzi' : <type 'str'>
=> str0 = 'krnyruvhapdzis' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 65
ACTION: str2 += 'w' 
str2 = 'sleybfoaxgrs' : <type 'str'>
=> str2 = 'sleybfoaxgrsw' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 66
ACTION: path2 += "/" + component1 
component1 = 'omega' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 67
ACTION: str1 += 'k' 
str1 = 'mdii' : <type 'str'>
=> str1 = 'mdiik' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 68
ACTION: str2 += 'w' 
str2 = 'sleybfoaxgrsw' : <type 'str'>
=> str2 = 'sleybfoaxgrsww' : <type 'str'>
==================================================
component1 = "d"                                                        # STEP 69
ACTION: component1 = "d" 
component1 = 'omega' : <type 'str'>
=> component1 = 'd' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 70
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 71
ACTION: str1 += 'p' 
str1 = 'mdiik' : <type 'str'>
=> str1 = 'mdiikp' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 72
ACTION: str0 += 'w' 
str0 = 'krnyruvhapdzis' : <type 'str'>
=> str0 = 'krnyruvhapdzisw' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 73
ACTION: str2 += " " 
str2 = 'sleybfoaxgrsww' : <type 'str'>
=> str2 = 'sleybfoaxgrsww ' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 74
ACTION: str0 += 'd' 
str0 = 'krnyruvhapdzisw' : <type 'str'>
=> str0 = 'krnyruvhapdziswd' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 75
ACTION: str1 += 'b' 
str1 = 'mdiikp' : <type 'str'>
=> str1 = 'mdiikpb' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 76
ACTION: str1 += 's' 
str1 = 'mdiikpb' : <type 'str'>
=> str1 = 'mdiikpbs' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 77
ACTION: str2 += 't' 
str2 = 'sleybfoaxgrsww ' : <type 'str'>
=> str2 = 'sleybfoaxgrsww t' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 78
ACTION: str0 += 'n' 
str0 = 'krnyruvhapdziswd' : <type 'str'>
=> str0 = 'krnyruvhapdziswdn' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 79
ACTION: str2 += 'e' 
str2 = 'sleybfoaxgrsww t' : <type 'str'>
=> str2 = 'sleybfoaxgrsww te' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 80
ACTION: str0 += 'i' 
str0 = 'krnyruvhapdziswdn' : <type 'str'>
=> str0 = 'krnyruvhapdziswdni' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 81
ACTION: str2 += 'o' 
str2 = 'sleybfoaxgrsww te' : <type 'str'>
=> str2 = 'sleybfoaxgrsww teo' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 82
ACTION: str0 += 'g' 
str0 = 'krnyruvhapdziswdni' : <type 'str'>
=> str0 = 'krnyruvhapdziswdnig' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 83
ACTION: str1 += 'u' 
str1 = 'mdiikpbs' : <type 'str'>
=> str1 = 'mdiikpbsu' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 84
ACTION: str0 += 'l' 
str0 = 'krnyruvhapdziswdnig' : <type 'str'>
=> str0 = 'krnyruvhapdziswdnigl' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 85
ACTION: str2 += " " 
str2 = 'sleybfoaxgrsww teo' : <type 'str'>
=> str2 = 'sleybfoaxgrsww teo ' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 86
ACTION: path0 += "/" + component1 
component1 = 'd' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 87
ACTION: str0 += 'l' 
str0 = 'krnyruvhapdziswdnigl' : <type 'str'>
=> str0 = 'krnyruvhapdziswdnigll' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 88
ACTION: str0 += 'r' 
str0 = 'krnyruvhapdziswdnigll' : <type 'str'>
=> str0 = 'krnyruvhapdziswdnigllr' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 89
ACTION: path0 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/epsilon' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 90
ACTION: str0 += 'i' 
str0 = 'krnyruvhapdziswdnigllr' : <type 'str'>
=> str0 = 'krnyruvhapdziswdnigllri' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 91
ACTION: str2 += 'z' 
str2 = 'sleybfoaxgrsww teo ' : <type 'str'>
=> str2 = 'sleybfoaxgrsww teo z' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 92
ACTION: path2 += "/" + component3 
component3 = 'b' : <type 'str'>
path2 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/omega/b' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 93
ACTION: str0 += 'm' 
str0 = 'krnyruvhapdziswdnigllri' : <type 'str'>
=> str0 = 'krnyruvhapdziswdnigllrim' : <type 'str'>
==================================================
component3 = "alpha"                                                    # STEP 94
ACTION: component3 = "alpha" 
component3 = 'b' : <type 'str'>
=> component3 = 'alpha' : <type 'str'>
==================================================
component1 = "b"                                                        # STEP 95
ACTION: component1 = "b" 
component1 = 'd' : <type 'str'>
=> component1 = 'b' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 96
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str1 += 'i'                                                             # STEP 97
ACTION: str1 += 'i' 
str1 = 'mdiikpbsu' : <type 'str'>
=> str1 = 'mdiikpbsui' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 98
ACTION: str0 += 'e' 
str0 = 'krnyruvhapdziswdnigllrim' : <type 'str'>
=> str0 = 'krnyruvhapdziswdnigllrime' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 99
ACTION: str0 += 'c' 
str0 = 'krnyruvhapdziswdnigllrime' : <type 'str'>
=> str0 = 'krnyruvhapdziswdnigllrimec' : <type 'str'>
==================================================
component4 = "lambda"                                                  # STEP 100
ACTION: component4 = "lambda" 
component4 = 'epsilon' : <type 'str'>
=> component4 = 'lambda' : <type 'str'>
==================================================
str2 += 's'                                                            # STEP 101
ACTION: str2 += 's' 
str2 = 'sleybfoaxgrsww teo z' : <type 'str'>
=> str2 = 'sleybfoaxgrsww teo zs' : <type 'str'>
==================================================
str1 += 'o'                                                            # STEP 102
ACTION: str1 += 'o' 
str1 = 'mdiikpbsui' : <type 'str'>
=> str1 = 'mdiikpbsuio' : <type 'str'>
==================================================
path1 += "/" + component4                                              # STEP 103
ACTION: path1 += "/" + component4 
component4 = 'lambda' : <type 'str'>
path1 = '/Volumes/ramdisk/test/h/g/gamma/d/gamma/alpha' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/h/g/gamma/d/gamma/alpha/lambda' : <type 'str'>
==================================================
str1 += 'h'                                                            # STEP 104
ACTION: str1 += 'h' 
str1 = 'mdiikpbsuio' : <type 'str'>
=> str1 = 'mdiikpbsuioh' : <type 'str'>
==================================================
str0 += 's'                                                            # STEP 105
ACTION: str0 += 's' 
str0 = 'krnyruvhapdziswdnigllrimec' : <type 'str'>
=> str0 = 'krnyruvhapdziswdnigllrimecs' : <type 'str'>
==================================================
str2 += 'j'                                                            # STEP 106
ACTION: str2 += 'j' 
str2 = 'sleybfoaxgrsww teo zs' : <type 'str'>
=> str2 = 'sleybfoaxgrsww teo zsj' : <type 'str'>
==================================================
component4 = "epsilon"                                                 # STEP 107
ACTION: component4 = "epsilon" 
component4 = 'lambda' : <type 'str'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
path1 += "/" + component3                                              # STEP 108
ACTION: path1 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test/h/g/gamma/d/gamma/alpha/lambda' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/h/g/gamma/d/gamma/alpha/lambda/alpha' : <type 'str'>
==================================================
str0 += 'e'                                                            # STEP 109
ACTION: str0 += 'e' 
str0 = 'krnyruvhapdziswdnigllrimecs' : <type 'str'>
=> str0 = 'krnyruvhapdziswdnigllrimecse' : <type 'str'>
==================================================
str1 += 'e'                                                            # STEP 110
ACTION: str1 += 'e' 
str1 = 'mdiikpbsuioh' : <type 'str'>
=> str1 = 'mdiikpbsuiohe' : <type 'str'>
==================================================
str1 += 'm'                                                            # STEP 111
ACTION: str1 += 'm' 
str1 = 'mdiikpbsuiohe' : <type 'str'>
=> str1 = 'mdiikpbsuiohem' : <type 'str'>
==================================================
str0 += 'x'                                                            # STEP 112
ACTION: str0 += 'x' 
str0 = 'krnyruvhapdziswdnigllrimecse' : <type 'str'>
=> str0 = 'krnyruvhapdziswdnigllrimecsex' : <type 'str'>
==================================================
str2 += 'd'                                                            # STEP 113
ACTION: str2 += 'd' 
str2 = 'sleybfoaxgrsww teo zsj' : <type 'str'>
=> str2 = 'sleybfoaxgrsww teo zsjd' : <type 'str'>
==================================================
str0 = ""                                                              # STEP 114
ACTION: str0 = "" 
str0 = 'krnyruvhapdziswdnigllrimecsex' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
component3 = "b"                                                       # STEP 115
ACTION: component3 = "b" 
component3 = 'alpha' : <type 'str'>
=> component3 = 'b' : <type 'str'>
==================================================
path3 += "/" + component1                                              # STEP 116
ACTION: path3 += "/" + component1 
component1 = 'b' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda/lambda' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda/lambda/b' : <type 'str'>
==================================================
str1 += 'n'                                                            # STEP 117
ACTION: str1 += 'n' 
str1 = 'mdiikpbsuiohem' : <type 'str'>
=> str1 = 'mdiikpbsuiohemn' : <type 'str'>
==================================================
component1 = "beta"                                                    # STEP 118
ACTION: component1 = "beta" 
component1 = 'b' : <type 'str'>
=> component1 = 'beta' : <type 'str'>
==================================================
str2 += 'q'                                                            # STEP 119
ACTION: str2 += 'q' 
str2 = 'sleybfoaxgrsww teo zsjd' : <type 'str'>
=> str2 = 'sleybfoaxgrsww teo zsjdq' : <type 'str'>
==================================================
str1 += 'd'                                                            # STEP 120
ACTION: str1 += 'd' 
str1 = 'mdiikpbsuiohemn' : <type 'str'>
=> str1 = 'mdiikpbsuiohemnd' : <type 'str'>
==================================================
str1 += 't'                                                            # STEP 121
ACTION: str1 += 't' 
str1 = 'mdiikpbsuiohemnd' : <type 'str'>
=> str1 = 'mdiikpbsuiohemndt' : <type 'str'>
==================================================
path0 += "/" + component2                                              # STEP 122
ACTION: path0 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d/epsilon' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/epsilon/lambda' : <type 'str'>
==================================================
str1 += 'n'                                                            # STEP 123
ACTION: str1 += 'n' 
str1 = 'mdiikpbsuiohemndt' : <type 'str'>
=> str1 = 'mdiikpbsuiohemndtn' : <type 'str'>
==================================================
str2 += 'l'                                                            # STEP 124
ACTION: str2 += 'l' 
str2 = 'sleybfoaxgrsww teo zsjdq' : <type 'str'>
=> str2 = 'sleybfoaxgrsww teo zsjdql' : <type 'str'>
==================================================
component2 = "gamma"                                                   # STEP 125
ACTION: component2 = "gamma" 
component2 = 'lambda' : <type 'str'>
=> component2 = 'gamma' : <type 'str'>
==================================================
str2 = ""                                                              # STEP 126
ACTION: str2 = "" 
str2 = 'sleybfoaxgrsww teo zsjdql' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str0 += 'i'                                                            # STEP 127
ACTION: str0 += 'i' 
str0 = '' : <type 'str'>
=> str0 = 'i' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                        # STEP 128
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/omega/b' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'r'                                                            # STEP 129
ACTION: str0 += 'r' 
str0 = 'i' : <type 'str'>
=> str0 = 'ir' : <type 'str'>
==================================================
str0 = ""                                                              # STEP 130
ACTION: str0 = "" 
str0 = 'ir' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'f'                                                            # STEP 131
ACTION: str0 += 'f' 
str0 = '' : <type 'str'>
=> str0 = 'f' : <type 'str'>
==================================================
str0 += 's'                                                            # STEP 132
ACTION: str0 += 's' 
str0 = 'f' : <type 'str'>
=> str0 = 'fs' : <type 'str'>
==================================================
str2 += 'v'                                                            # STEP 133
ACTION: str2 += 'v' 
str2 = '' : <type 'str'>
=> str2 = 'v' : <type 'str'>
==================================================
bytes2 += 1                                                            # STEP 134
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str2 += 'g'                                                            # STEP 135
ACTION: str2 += 'g' 
str2 = 'v' : <type 'str'>
=> str2 = 'vg' : <type 'str'>
==================================================
path0 += "/" + component2                                              # STEP 136
ACTION: path0 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d/epsilon/lambda' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/epsilon/lambda/gamma' : <type 'str'>
==================================================
str2 += 'd'                                                            # STEP 137
ACTION: str2 += 'd' 
str2 = 'vg' : <type 'str'>
=> str2 = 'vgd' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                        # STEP 138
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/h/g/gamma/d/gamma/alpha/lambda/alpha' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes4 = 0                                                             # STEP 139
ACTION: bytes4 = 0 
bytes4 = 1 : <type 'int'>
=> bytes4 = 0 : <type 'int'>
==================================================
str0 += 'q'                                                            # STEP 140
ACTION: str0 += 'q' 
str0 = 'fs' : <type 'str'>
=> str0 = 'fsq' : <type 'str'>
==================================================
str1 += 'r'                                                            # STEP 141
ACTION: str1 += 'r' 
str1 = 'mdiikpbsuiohemndtn' : <type 'str'>
=> str1 = 'mdiikpbsuiohemndtnr' : <type 'str'>
==================================================
str1 += 'q'                                                            # STEP 142
ACTION: str1 += 'q' 
str1 = 'mdiikpbsuiohemndtnr' : <type 'str'>
=> str1 = 'mdiikpbsuiohemndtnrq' : <type 'str'>
==================================================
component2 = "delta"                                                   # STEP 143
ACTION: component2 = "delta" 
component2 = 'gamma' : <type 'str'>
=> component2 = 'delta' : <type 'str'>
==================================================
str1 += 'w'                                                            # STEP 144
ACTION: str1 += 'w' 
str1 = 'mdiikpbsuiohemndtnrq' : <type 'str'>
=> str1 = 'mdiikpbsuiohemndtnrqw' : <type 'str'>
==================================================
str1 += 'a'                                                            # STEP 145
ACTION: str1 += 'a' 
str1 = 'mdiikpbsuiohemndtnrqw' : <type 'str'>
=> str1 = 'mdiikpbsuiohemndtnrqwa' : <type 'str'>
==================================================
str0 += 'j'                                                            # STEP 146
ACTION: str0 += 'j' 
str0 = 'fsq' : <type 'str'>
=> str0 = 'fsqj' : <type 'str'>
==================================================
str1 += 'h'                                                            # STEP 147
ACTION: str1 += 'h' 
str1 = 'mdiikpbsuiohemndtnrqwa' : <type 'str'>
=> str1 = 'mdiikpbsuiohemndtnrqwah' : <type 'str'>
==================================================
path2 += "/" + component1                                              # STEP 148
ACTION: path2 += "/" + component1 
component1 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str2 += 'h'                                                            # STEP 149
ACTION: str2 += 'h' 
str2 = 'vgd' : <type 'str'>
=> str2 = 'vgdh' : <type 'str'>
==================================================
str2 += 'q'                                                            # STEP 150
ACTION: str2 += 'q' 
str2 = 'vgdh' : <type 'str'>
=> str2 = 'vgdhq' : <type 'str'>
==================================================
str0 += 'q'                                                            # STEP 151
ACTION: str0 += 'q' 
str0 = 'fsqj' : <type 'str'>
=> str0 = 'fsqjq' : <type 'str'>
==================================================
str2 += 'a'                                                            # STEP 152
ACTION: str2 += 'a' 
str2 = 'vgdhq' : <type 'str'>
=> str2 = 'vgdhqa' : <type 'str'>
==================================================
component1 = "d"                                                       # STEP 153
ACTION: component1 = "d" 
component1 = 'beta' : <type 'str'>
=> component1 = 'd' : <type 'str'>
==================================================
bytes1 += 1                                                            # STEP 154
ACTION: bytes1 += 1 
bytes1 = 1 : <type 'int'>
=> bytes1 = 2 : <type 'int'>
==================================================
str1 += 'k'                                                            # STEP 155
ACTION: str1 += 'k' 
str1 = 'mdiikpbsuiohemndtnrqwah' : <type 'str'>
=> str1 = 'mdiikpbsuiohemndtnrqwahk' : <type 'str'>
==================================================
str0 += 'e'                                                            # STEP 156
ACTION: str0 += 'e' 
str0 = 'fsqjq' : <type 'str'>
=> str0 = 'fsqjqe' : <type 'str'>
==================================================
bytes2 = 0                                                             # STEP 157
ACTION: bytes2 = 0 
bytes2 = 1 : <type 'int'>
=> bytes2 = 0 : <type 'int'>
==================================================
path2 = "/Volumes/ramdisk/test"                                        # STEP 158
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'u'                                                            # STEP 159
ACTION: str1 += 'u' 
str1 = 'mdiikpbsuiohemndtnrqwahk' : <type 'str'>
=> str1 = 'mdiikpbsuiohemndtnrqwahku' : <type 'str'>
==================================================
str1 += 'u'                                                            # STEP 160
ACTION: str1 += 'u' 
str1 = 'mdiikpbsuiohemndtnrqwahku' : <type 'str'>
=> str1 = 'mdiikpbsuiohemndtnrqwahkuu' : <type 'str'>
==================================================
path0 += "/" + component0                                              # STEP 161
ACTION: path0 += "/" + component0 
component0 = 'b' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d/epsilon/lambda/gamma' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/epsilon/lambda/gamma/b' : <type 'str'>
==================================================
path0 += "/" + component4                                              # STEP 162
ACTION: path0 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d/epsilon/lambda/gamma/b' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/epsilon/lambda/gamma/b/epsilon' : <type 'str'>
==================================================
str2 += 'm'                                                            # STEP 163
ACTION: str2 += 'm' 
str2 = 'vgdhqa' : <type 'str'>
=> str2 = 'vgdhqam' : <type 'str'>
==================================================
bytes1 = 0                                                             # STEP 164
ACTION: bytes1 = 0 
bytes1 = 2 : <type 'int'>
=> bytes1 = 0 : <type 'int'>
==================================================
str0 += 'y'                                                            # STEP 165
ACTION: str0 += 'y' 
str0 = 'fsqjqe' : <type 'str'>
=> str0 = 'fsqjqey' : <type 'str'>
==================================================
bytes1 += 1                                                            # STEP 166
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str2 += 'd'                                                            # STEP 167
ACTION: str2 += 'd' 
str2 = 'vgdhqam' : <type 'str'>
=> str2 = 'vgdhqamd' : <type 'str'>
==================================================
path2 += "/" + component4                                              # STEP 168
ACTION: path2 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
str2 += 'f'                                                            # STEP 169
ACTION: str2 += 'f' 
str2 = 'vgdhqamd' : <type 'str'>
=> str2 = 'vgdhqamdf' : <type 'str'>
==================================================
str1 += 'v'                                                            # STEP 170
ACTION: str1 += 'v' 
str1 = 'mdiikpbsuiohemndtnrqwahkuu' : <type 'str'>
=> str1 = 'mdiikpbsuiohemndtnrqwahkuuv' : <type 'str'>
==================================================
component4 = "h"                                                       # STEP 171
ACTION: component4 = "h" 
component4 = 'epsilon' : <type 'str'>
=> component4 = 'h' : <type 'str'>
==================================================
str2 += 'f'                                                            # STEP 172
ACTION: str2 += 'f' 
str2 = 'vgdhqamdf' : <type 'str'>
=> str2 = 'vgdhqamdff' : <type 'str'>
==================================================
str0 += 'b'                                                            # STEP 173
ACTION: str0 += 'b' 
str0 = 'fsqjqey' : <type 'str'>
=> str0 = 'fsqjqeyb' : <type 'str'>
==================================================
str0 += 'n'                                                            # STEP 174
ACTION: str0 += 'n' 
str0 = 'fsqjqeyb' : <type 'str'>
=> str0 = 'fsqjqeybn' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 175
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> expected a string or other character buffer object
ERROR: (<type 'exceptions.TypeError'>, TypeError('expected a string or other character buffer object',), <traceback object at 0x103b1ad40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17, in newFakeOS
    fs = pyfakefs.fake_filesystem.FakeFilesystem()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 881, in __init__
    self.AddMountPoint(self.root.name, total_size)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 933, in AddMountPoint
    path = self.NormalizePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1340, in NormalizePath
    path = self.NormalizePathSeparator(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1237, in NormalizePathSeparator
    return path.replace(self._alternative_path_separator(path), self._path_separator(path))
STOPPING TESTING DUE TO FAILED TEST
0.0451118946075 TOTAL RUNTIME
1 EXECUTED
176 TOTAL TEST OPERATIONS
0.00273323059082 TIME SPENT EXECUTING TEST OPERATIONS
0.011666059494 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
6.86645507812e-05 TIME SPENT CHECKING PROPERTIES
0.0028018951416 TOTAL TIME SPENT RUNNING SUT
0.00383377075195 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
