Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.57565.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for //: 'str' and 'str'",), <traceback object at 0x1026df200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17, in newFakeOS
    fs = pyfakefs.fake_filesystem.FakeFilesystem()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 881, in __init__
    self.AddMountPoint(self.root.name, total_size)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 933, in AddMountPoint
    path = self.NormalizePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1357, in NormalizePath
    return self.CollapsePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1285, in CollapsePath
    return ((drive // collapsed_path) or dot)
Original test has 78 steps

SAVING TEST AS failure.57565.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path1 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "c"                                                         # STEP 1
ACTION: component0 = "c" 
component0 = None : <type 'NoneType'>
=> component0 = 'c' : <type 'str'>
==================================================
component4 = "d"                                                         # STEP 2
ACTION: component4 = "d" 
component4 = None : <type 'NoneType'>
=> component4 = 'd' : <type 'str'>
==================================================
component2 = "f"                                                         # STEP 3
ACTION: component2 = "f" 
component2 = None : <type 'NoneType'>
=> component2 = 'f' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 4
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component3 = "h"                                                         # STEP 5
ACTION: component3 = "h" 
component3 = None : <type 'NoneType'>
=> component3 = 'h' : <type 'str'>
==================================================
path4 += "/" + component3                                                # STEP 6
ACTION: path4 += "/" + component3 
component3 = 'h' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
path4 += "/" + component2                                                # STEP 7
ACTION: path4 += "/" + component2 
component2 = 'f' : <type 'str'>
path4 = '/Volumes/ramdisk/test/h' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/h/f' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 8
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component2 = "beta"                                                      # STEP 9
ACTION: component2 = "beta" 
component2 = 'f' : <type 'str'>
=> component2 = 'beta' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 10
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 11
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str3 += 'h'                                                             # STEP 12
ACTION: str3 += 'h' 
str3 = '' : <type 'str'>
=> str3 = 'h' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 14
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component1 = "d"                                                        # STEP 15
ACTION: component1 = "d" 
component1 = None : <type 'NoneType'>
=> component1 = 'd' : <type 'str'>
==================================================
component3 = "h"                                                        # STEP 16
ACTION: component3 = "h" 
component3 = 'h' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 17
ACTION: path1 += "/" + component0 
component0 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 18
ACTION: str3 += 'z' 
str3 = 'h' : <type 'str'>
=> str3 = 'hz' : <type 'str'>
==================================================
component0 = "delta"                                                    # STEP 19
ACTION: component0 = "delta" 
component0 = 'c' : <type 'str'>
=> component0 = 'delta' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 20
ACTION: str3 += 'p' 
str3 = 'hz' : <type 'str'>
=> str3 = 'hzp' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 21
ACTION: str4 += 'c' 
str4 = '' : <type 'str'>
=> str4 = 'c' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 22
ACTION: str4 += 'v' 
str4 = 'c' : <type 'str'>
=> str4 = 'cv' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 23
ACTION: str3 += 'j' 
str3 = 'hzp' : <type 'str'>
=> str3 = 'hzpj' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 24
ACTION: path4 += "/" + component1 
component1 = 'd' : <type 'str'>
path4 = '/Volumes/ramdisk/test/h/f' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/h/f/d' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 25
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str4 += 'n'                                                             # STEP 26
ACTION: str4 += 'n' 
str4 = 'cv' : <type 'str'>
=> str4 = 'cvn' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 27
ACTION: str3 = "" 
str3 = 'hzpj' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 28
ACTION: str4 += 'y' 
str4 = 'cvn' : <type 'str'>
=> str4 = 'cvny' : <type 'str'>
==================================================
component1 = "f"                                                        # STEP 29
ACTION: component1 = "f" 
component1 = 'd' : <type 'str'>
=> component1 = 'f' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 30
ACTION: path1 += "/" + component0 
component0 = 'delta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/c/delta' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 31
ACTION: str4 += 'l' 
str4 = 'cvny' : <type 'str'>
=> str4 = 'cvnyl' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 32
ACTION: str3 += 't' 
str3 = '' : <type 'str'>
=> str3 = 't' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 33
ACTION: str4 += 'p' 
str4 = 'cvnyl' : <type 'str'>
=> str4 = 'cvnylp' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 34
ACTION: path1 += "/" + component4 
component4 = 'd' : <type 'str'>
path1 = '/Volumes/ramdisk/test/c/delta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/c/delta/d' : <type 'str'>
==================================================
component4 = "c"                                                        # STEP 35
ACTION: component4 = "c" 
component4 = 'd' : <type 'str'>
=> component4 = 'c' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 36
ACTION: str4 += 'e' 
str4 = 'cvnylp' : <type 'str'>
=> str4 = 'cvnylpe' : <type 'str'>
==================================================
component0 = "delta"                                                    # STEP 37
ACTION: component0 = "delta" 
component0 = 'delta' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 38
ACTION: str4 += 'o' 
str4 = 'cvnylpe' : <type 'str'>
=> str4 = 'cvnylpeo' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 39
ACTION: str3 += 'q' 
str3 = 't' : <type 'str'>
=> str3 = 'tq' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 40
ACTION: str3 += 'k' 
str3 = 'tq' : <type 'str'>
=> str3 = 'tqk' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 41
ACTION: str4 += 'k' 
str4 = 'cvnylpeo' : <type 'str'>
=> str4 = 'cvnylpeok' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 42
ACTION: str4 += 'w' 
str4 = 'cvnylpeok' : <type 'str'>
=> str4 = 'cvnylpeokw' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 43
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 44
ACTION: str3 += 's' 
str3 = 'tqk' : <type 'str'>
=> str3 = 'tqks' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 45
ACTION: str1 += 'a' 
str1 = '' : <type 'str'>
=> str1 = 'a' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 46
ACTION: path0 += "/" + component4 
component4 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 47
ACTION: str3 += 'j' 
str3 = 'tqks' : <type 'str'>
=> str3 = 'tqksj' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 48
ACTION: str4 += 'd' 
str4 = 'cvnylpeokw' : <type 'str'>
=> str4 = 'cvnylpeokwd' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 49
ACTION: str4 += 'k' 
str4 = 'cvnylpeokwd' : <type 'str'>
=> str4 = 'cvnylpeokwdk' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 50
ACTION: str1 += 'x' 
str1 = 'a' : <type 'str'>
=> str1 = 'ax' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 51
ACTION: str4 += 'n' 
str4 = 'cvnylpeokwdk' : <type 'str'>
=> str4 = 'cvnylpeokwdkn' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 52
ACTION: str3 += 'd' 
str3 = 'tqksj' : <type 'str'>
=> str3 = 'tqksjd' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 53
ACTION: str3 += 'c' 
str3 = 'tqksjd' : <type 'str'>
=> str3 = 'tqksjdc' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 54
ACTION: str1 += 'n' 
str1 = 'ax' : <type 'str'>
=> str1 = 'axn' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 55
ACTION: bytes0 = 0 
bytes0 = 1 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
str4 += 'k'                                                             # STEP 56
ACTION: str4 += 'k' 
str4 = 'cvnylpeokwdkn' : <type 'str'>
=> str4 = 'cvnylpeokwdknk' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 57
ACTION: str1 += 'c' 
str1 = 'axn' : <type 'str'>
=> str1 = 'axnc' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 58
ACTION: str3 += 't' 
str3 = 'tqksjdc' : <type 'str'>
=> str3 = 'tqksjdct' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 59
ACTION: str1 += 'c' 
str1 = 'axnc' : <type 'str'>
=> str1 = 'axncc' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 60
ACTION: str4 += 'm' 
str4 = 'cvnylpeokwdknk' : <type 'str'>
=> str4 = 'cvnylpeokwdknkm' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 61
ACTION: str1 += 'h' 
str1 = 'axncc' : <type 'str'>
=> str1 = 'axncch' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 62
ACTION: path4 += "/" + component1 
component1 = 'f' : <type 'str'>
path4 = '/Volumes/ramdisk/test/h/f/d' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/h/f/d/f' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 63
ACTION: str3 += 'y' 
str3 = 'tqksjdct' : <type 'str'>
=> str3 = 'tqksjdcty' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 64
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 += 'r'                                                             # STEP 65
ACTION: str3 += 'r' 
str3 = 'tqksjdcty' : <type 'str'>
=> str3 = 'tqksjdctyr' : <type 'str'>
==================================================
component4 = "c"                                                        # STEP 66
ACTION: component4 = "c" 
component4 = 'c' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 67
ACTION: str4 += 'd' 
str4 = 'cvnylpeokwdknkm' : <type 'str'>
=> str4 = 'cvnylpeokwdknkmd' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 68
ACTION: str3 += 'b' 
str3 = 'tqksjdctyr' : <type 'str'>
=> str3 = 'tqksjdctyrb' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 69
ACTION: str3 += 'v' 
str3 = 'tqksjdctyrb' : <type 'str'>
=> str3 = 'tqksjdctyrbv' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 70
ACTION: path1 += "/" + component2 
component2 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/c/delta/d' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/c/delta/d/beta' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 71
ACTION: path4 += "/" + component1 
component1 = 'f' : <type 'str'>
path4 = '/Volumes/ramdisk/test/h/f/d/f' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/h/f/d/f/f' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 72
ACTION: str1 += 't' 
str1 = 'axncch' : <type 'str'>
=> str1 = 'axnccht' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 73
ACTION: str1 += 's' 
str1 = 'axnccht' : <type 'str'>
=> str1 = 'axncchts' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 74
ACTION: str3 += " " 
str3 = 'tqksjdctyrbv' : <type 'str'>
=> str3 = 'tqksjdctyrbv ' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 75
ACTION: str3 += 'e' 
str3 = 'tqksjdctyrbv ' : <type 'str'>
=> str3 = 'tqksjdctyrbv e' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 76
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 77
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unsupported operand type(s) for //: 'str' and 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for //: 'str' and 'str'",), <traceback object at 0x105a7d9e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17, in newFakeOS
    fs = pyfakefs.fake_filesystem.FakeFilesystem()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 881, in __init__
    self.AddMountPoint(self.root.name, total_size)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 933, in AddMountPoint
    path = self.NormalizePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1357, in NormalizePath
    return self.CollapsePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1285, in CollapsePath
    return ((drive // collapsed_path) or dot)
STOPPING TESTING DUE TO FAILED TEST
0.0809879302979 TOTAL RUNTIME
4 EXECUTED
678 TOTAL TEST OPERATIONS
0.0107710361481 TIME SPENT EXECUTING TEST OPERATIONS
0.0349957942963 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00031566619873 TIME SPENT CHECKING PROPERTIES
0.0110867023468 TOTAL TIME SPENT RUNNING SUT
0.0120062828064 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
