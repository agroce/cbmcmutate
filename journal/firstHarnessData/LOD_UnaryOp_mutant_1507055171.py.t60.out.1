Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.56322.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1006c31b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 26769, in act509
    assert (type(raised) == type(refRaised))
Original test has 94 steps

SAVING TEST AS failure.56322.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "g"                                                         # STEP 0
ACTION: component2 = "g" 
component2 = None : <type 'NoneType'>
=> component2 = 'g' : <type 'str'>
==================================================
component0 = "g"                                                         # STEP 1
ACTION: component0 = "g" 
component0 = None : <type 'NoneType'>
=> component0 = 'g' : <type 'str'>
==================================================
component4 = "b"                                                         # STEP 2
ACTION: component4 = "b" 
component4 = None : <type 'NoneType'>
=> component4 = 'b' : <type 'str'>
==================================================
component3 = "h"                                                         # STEP 3
ACTION: component3 = "h" 
component3 = None : <type 'NoneType'>
=> component3 = 'h' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 4
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'g'                                                              # STEP 5
ACTION: str3 += 'g' 
str3 = '' : <type 'str'>
=> str3 = 'g' : <type 'str'>
==================================================
str3 += 'u'                                                              # STEP 6
ACTION: str3 += 'u' 
str3 = 'g' : <type 'str'>
=> str3 = 'gu' : <type 'str'>
==================================================
str3 += 'e'                                                              # STEP 7
ACTION: str3 += 'e' 
str3 = 'gu' : <type 'str'>
=> str3 = 'gue' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 8
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str3 += 'n'                                                              # STEP 9
ACTION: str3 += 'n' 
str3 = 'gue' : <type 'str'>
=> str3 = 'guen' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 10
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 11
ACTION: str4 += " " 
str4 = '' : <type 'str'>
=> str4 = ' ' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 12
ACTION: str4 += 'm' 
str4 = ' ' : <type 'str'>
=> str4 = ' m' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 13
ACTION: str3 += " " 
str3 = 'guen' : <type 'str'>
=> str3 = 'guen ' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 14
ACTION: str4 += 'u' 
str4 = ' m' : <type 'str'>
=> str4 = ' mu' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 15
ACTION: str4 += 'q' 
str4 = ' mu' : <type 'str'>
=> str4 = ' muq' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 16
ACTION: str4 += 'r' 
str4 = ' muq' : <type 'str'>
=> str4 = ' muqr' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 17
ACTION: str4 += 'w' 
str4 = ' muqr' : <type 'str'>
=> str4 = ' muqrw' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 18
ACTION: str4 += 'm' 
str4 = ' muqrw' : <type 'str'>
=> str4 = ' muqrwm' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 19
ACTION: str3 += 'g' 
str3 = 'guen ' : <type 'str'>
=> str3 = 'guen g' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 20
ACTION: str4 += 'm' 
str4 = ' muqrwm' : <type 'str'>
=> str4 = ' muqrwmm' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 21
ACTION: str3 += 'h' 
str3 = 'guen g' : <type 'str'>
=> str3 = 'guen gh' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 22
ACTION: str3 += 'l' 
str3 = 'guen gh' : <type 'str'>
=> str3 = 'guen ghl' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 23
ACTION: str3 += 'e' 
str3 = 'guen ghl' : <type 'str'>
=> str3 = 'guen ghle' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 24
ACTION: str4 += 'y' 
str4 = ' muqrwmm' : <type 'str'>
=> str4 = ' muqrwmmy' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 25
ACTION: str3 += 'n' 
str3 = 'guen ghle' : <type 'str'>
=> str3 = 'guen ghlen' : <type 'str'>
==================================================
component1 = "b"                                                        # STEP 26
ACTION: component1 = "b" 
component1 = None : <type 'NoneType'>
=> component1 = 'b' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 27
ACTION: str3 += 'l' 
str3 = 'guen ghlen' : <type 'str'>
=> str3 = 'guen ghlenl' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 28
ACTION: str4 += 'u' 
str4 = ' muqrwmmy' : <type 'str'>
=> str4 = ' muqrwmmyu' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 29
ACTION: str3 += 'a' 
str3 = 'guen ghlenl' : <type 'str'>
=> str3 = 'guen ghlenla' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 30
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 31
ACTION: str3 += 'k' 
str3 = 'guen ghlenla' : <type 'str'>
=> str3 = 'guen ghlenlak' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 32
ACTION: str3 += 'a' 
str3 = 'guen ghlenlak' : <type 'str'>
=> str3 = 'guen ghlenlaka' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 33
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 34
ACTION: str3 += 'v' 
str3 = 'guen ghlenlaka' : <type 'str'>
=> str3 = 'guen ghlenlakav' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 35
ACTION: str4 += 'y' 
str4 = ' muqrwmmyu' : <type 'str'>
=> str4 = ' muqrwmmyuy' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 36
ACTION: path1 += "/" + component2 
component2 = 'g' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 37
ACTION: path1 += "/" + component3 
component3 = 'h' : <type 'str'>
path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/g/h' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 38
ACTION: str3 += 'b' 
str3 = 'guen ghlenlakav' : <type 'str'>
=> str3 = 'guen ghlenlakavb' : <type 'str'>
==================================================
component3 = "delta"                                                    # STEP 39
ACTION: component3 = "delta" 
component3 = 'h' : <type 'str'>
=> component3 = 'delta' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 40
ACTION: str4 += 'c' 
str4 = ' muqrwmmyuy' : <type 'str'>
=> str4 = ' muqrwmmyuyc' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 41
ACTION: str3 += 'x' 
str3 = 'guen ghlenlakavb' : <type 'str'>
=> str3 = 'guen ghlenlakavbx' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 42
ACTION: str4 += " " 
str4 = ' muqrwmmyuyc' : <type 'str'>
=> str4 = ' muqrwmmyuyc ' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 43
ACTION: path0 += "/" + component3 
component3 = 'delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 44
ACTION: path3 += "/" + component1 
component1 = 'b' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 45
ACTION: str4 += 'c' 
str4 = ' muqrwmmyuyc ' : <type 'str'>
=> str4 = ' muqrwmmyuyc c' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 46
ACTION: str4 += 's' 
str4 = ' muqrwmmyuyc c' : <type 'str'>
=> str4 = ' muqrwmmyuyc cs' : <type 'str'>
==================================================
component1 = "beta"                                                     # STEP 47
ACTION: component1 = "beta" 
component1 = 'b' : <type 'str'>
=> component1 = 'beta' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 48
ACTION: path1 += "/" + component0 
component0 = 'g' : <type 'str'>
path1 = '/Volumes/ramdisk/test/g/h' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/g/h/g' : <type 'str'>
==================================================
component0 = "c"                                                        # STEP 49
ACTION: component0 = "c" 
component0 = 'g' : <type 'str'>
=> component0 = 'c' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 50
ACTION: str4 += 'r' 
str4 = ' muqrwmmyuyc cs' : <type 'str'>
=> str4 = ' muqrwmmyuyc csr' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 51
ACTION: path0 += "/" + component0 
component0 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/delta/c' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 52
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 53
ACTION: str4 += 'j' 
str4 = ' muqrwmmyuyc csr' : <type 'str'>
=> str4 = ' muqrwmmyuyc csrj' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 54
ACTION: path0 += "/" + component2 
component2 = 'g' : <type 'str'>
path0 = '/Volumes/ramdisk/test/delta/c' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/delta/c/g' : <type 'str'>
==================================================
component2 = "lambda"                                                   # STEP 55
ACTION: component2 = "lambda" 
component2 = 'g' : <type 'str'>
=> component2 = 'lambda' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 56
ACTION: path1 += "/" + component1 
component1 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/g/h/g' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/g/h/g/beta' : <type 'str'>
==================================================
component1 = "gamma"                                                    # STEP 57
ACTION: component1 = "gamma" 
component1 = 'beta' : <type 'str'>
=> component1 = 'gamma' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 58
ACTION: str3 += 'b' 
str3 = 'guen ghlenlakavbx' : <type 'str'>
=> str3 = 'guen ghlenlakavbxb' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 59
ACTION: str4 += 'm' 
str4 = ' muqrwmmyuyc csrj' : <type 'str'>
=> str4 = ' muqrwmmyuyc csrjm' : <type 'str'>
==================================================
component0 = "phi"                                                      # STEP 60
ACTION: component0 = "phi" 
component0 = 'c' : <type 'str'>
=> component0 = 'phi' : <type 'str'>
==================================================
component3 = "omega"                                                    # STEP 61
ACTION: component3 = "omega" 
component3 = 'delta' : <type 'str'>
=> component3 = 'omega' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 62
ACTION: str3 += 'l' 
str3 = 'guen ghlenlakavbxb' : <type 'str'>
=> str3 = 'guen ghlenlakavbxbl' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 63
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str3 += 'q'                                                             # STEP 64
ACTION: str3 += 'q' 
str3 = 'guen ghlenlakavbxbl' : <type 'str'>
=> str3 = 'guen ghlenlakavbxblq' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 65
ACTION: str3 += 'm' 
str3 = 'guen ghlenlakavbxblq' : <type 'str'>
=> str3 = 'guen ghlenlakavbxblqm' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 66
ACTION: str3 += 'c' 
str3 = 'guen ghlenlakavbxblqm' : <type 'str'>
=> str3 = 'guen ghlenlakavbxblqmc' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 67
ACTION: str3 += 'b' 
str3 = 'guen ghlenlakavbxblqmc' : <type 'str'>
=> str3 = 'guen ghlenlakavbxblqmcb' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 68
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 69
ACTION: str4 += 'd' 
str4 = ' muqrwmmyuyc csrjm' : <type 'str'>
=> str4 = ' muqrwmmyuyc csrjmd' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 70
ACTION: str4 += 'l' 
str4 = ' muqrwmmyuyc csrjmd' : <type 'str'>
=> str4 = ' muqrwmmyuyc csrjmdl' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 71
ACTION: str1 += 'p' 
str1 = '' : <type 'str'>
=> str1 = 'p' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 72
ACTION: str3 += 'c' 
str3 = 'guen ghlenlakavbxblqmcb' : <type 'str'>
=> str3 = 'guen ghlenlakavbxblqmcbc' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 73
ACTION: path1 += "/" + component0 
component0 = 'phi' : <type 'str'>
path1 = '/Volumes/ramdisk/test/g/h/g/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/g/h/g/beta/phi' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 74
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
bytes4 += 1                                                             # STEP 75
ACTION: bytes4 += 1 
bytes4 = 1 : <type 'int'>
=> bytes4 = 2 : <type 'int'>
==================================================
str3 += 'd'                                                             # STEP 76
ACTION: str3 += 'd' 
str3 = 'guen ghlenlakavbxblqmcbc' : <type 'str'>
=> str3 = 'guen ghlenlakavbxblqmcbcd' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 77
ACTION: str3 += 'l' 
str3 = 'guen ghlenlakavbxblqmcbcd' : <type 'str'>
=> str3 = 'guen ghlenlakavbxblqmcbcdl' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 78
ACTION: str1 += 'y' 
str1 = 'p' : <type 'str'>
=> str1 = 'py' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 79
ACTION: path0 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path0 = '/Volumes/ramdisk/test/delta/c/g' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/delta/c/g/gamma' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 80
ACTION: str3 += 'a' 
str3 = 'guen ghlenlakavbxblqmcbcdl' : <type 'str'>
=> str3 = 'guen ghlenlakavbxblqmcbcdla' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 81
ACTION: str1 += 'm' 
str1 = 'py' : <type 'str'>
=> str1 = 'pym' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 82
ACTION: str4 += 't' 
str4 = ' muqrwmmyuyc csrjmdl' : <type 'str'>
=> str4 = ' muqrwmmyuyc csrjmdlt' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 83
ACTION: str1 += 'p' 
str1 = 'pym' : <type 'str'>
=> str1 = 'pymp' : <type 'str'>
==================================================
component1 = "g"                                                        # STEP 84
ACTION: component1 = "g" 
component1 = 'gamma' : <type 'str'>
=> component1 = 'g' : <type 'str'>
==================================================
component0 = "lambda"                                                   # STEP 85
ACTION: component0 = "lambda" 
component0 = 'phi' : <type 'str'>
=> component0 = 'lambda' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 86
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d4f350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
os0.symlink(path0,path3)                                                # STEP 87
ACTION: os0.symlink(path0,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d4f350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta/c/g/gamma' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path0,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str3 += 'b'                                                             # STEP 88
ACTION: str3 += 'b' 
str3 = 'guen ghlenlakavbxblqmcbcdla' : <type 'str'>
=> str3 = 'guen ghlenlakavbxblqmcbcdlab' : <type 'str'>
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 89
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d4f350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/g/h/g/beta/phi' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/g/h/g/beta/phi'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g/h/g/beta/phi'
==================================================
str1 += 'w'                                                             # STEP 90
ACTION: str1 += 'w' 
str1 = 'pymp' : <type 'str'>
=> str1 = 'pympw' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 91
ACTION: str1 += 'q' 
str1 = 'pympw' : <type 'str'>
=> str1 = 'pympwq' : <type 'str'>
==================================================
os0.symlink(path0,path0)                                                # STEP 92
ACTION: os0.symlink(path0,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d4f350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/delta/c/g/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Object already exists in fake filesystem: '/'
REFERENCE ACTION: os_REF0.symlink(path0,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
stat4 = os0.lstat(path1)                                                # STEP 93
ACTION: stat4 = os0.lstat(path1) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d4f350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/g/h/g/beta/phi' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102d43e90> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g/h/g/beta/phi'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102e47b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 26769, in act509
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0372431278229 TOTAL RUNTIME
1 EXECUTED
94 TOTAL TEST OPERATIONS
0.0051429271698 TIME SPENT EXECUTING TEST OPERATIONS
0.00542712211609 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.26769256592e-05 TIME SPENT CHECKING PROPERTIES
0.00518560409546 TOTAL TIME SPENT RUNNING SUT
0.00370812416077 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
