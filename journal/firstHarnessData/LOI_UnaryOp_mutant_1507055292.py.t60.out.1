Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.50805.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1026e1f80>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 26325, in act503
    assert (type(raised) == type(refRaised))
Original test has 45 steps

SAVING TEST AS failure.50805.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "epsilon"                                                   # STEP 0
ACTION: component0 = "epsilon" 
component0 = None : <type 'NoneType'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
component2 = "alpha"                                                     # STEP 1
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
component4 = "h"                                                         # STEP 2
ACTION: component4 = "h" 
component4 = None : <type 'NoneType'>
=> component4 = 'h' : <type 'str'>
==================================================
component1 = "gamma"                                                     # STEP 3
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 4
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component3 = "lambda"                                                    # STEP 5
ACTION: component3 = "lambda" 
component3 = None : <type 'NoneType'>
=> component3 = 'lambda' : <type 'str'>
==================================================
str0 += 'u'                                                              # STEP 6
ACTION: str0 += 'u' 
str0 = '' : <type 'str'>
=> str0 = 'u' : <type 'str'>
==================================================
str0 += 'o'                                                              # STEP 7
ACTION: str0 += 'o' 
str0 = 'u' : <type 'str'>
=> str0 = 'uo' : <type 'str'>
==================================================
str0 += 'c'                                                              # STEP 8
ACTION: str0 += 'c' 
str0 = 'uo' : <type 'str'>
=> str0 = 'uoc' : <type 'str'>
==================================================
str0 += 's'                                                              # STEP 9
ACTION: str0 += 's' 
str0 = 'uoc' : <type 'str'>
=> str0 = 'uocs' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 10
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 11
ACTION: str0 += 'y' 
str0 = 'uocs' : <type 'str'>
=> str0 = 'uocsy' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 12
ACTION: str3 += " " 
str3 = '' : <type 'str'>
=> str3 = ' ' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 13
ACTION: str0 += " " 
str0 = 'uocsy' : <type 'str'>
=> str0 = 'uocsy ' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 14
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str3 += 'l'                                                             # STEP 15
ACTION: str3 += 'l' 
str3 = ' ' : <type 'str'>
=> str3 = ' l' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 16
ACTION: str3 += 'o' 
str3 = ' l' : <type 'str'>
=> str3 = ' lo' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 17
ACTION: str0 += 'w' 
str0 = 'uocsy ' : <type 'str'>
=> str0 = 'uocsy w' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 18
ACTION: str0 += 'g' 
str0 = 'uocsy w' : <type 'str'>
=> str0 = 'uocsy wg' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 19
ACTION: str0 += 'v' 
str0 = 'uocsy wg' : <type 'str'>
=> str0 = 'uocsy wgv' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 20
ACTION: str0 += 't' 
str0 = 'uocsy wgv' : <type 'str'>
=> str0 = 'uocsy wgvt' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 21
ACTION: str3 += 'z' 
str3 = ' lo' : <type 'str'>
=> str3 = ' loz' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 22
ACTION: str0 += 'm' 
str0 = 'uocsy wgvt' : <type 'str'>
=> str0 = 'uocsy wgvtm' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 23
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str3 += 'i'                                                             # STEP 24
ACTION: str3 += 'i' 
str3 = ' loz' : <type 'str'>
=> str3 = ' lozi' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 25
ACTION: str0 += 'l' 
str0 = 'uocsy wgvtm' : <type 'str'>
=> str0 = 'uocsy wgvtml' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 26
ACTION: str0 += 'm' 
str0 = 'uocsy wgvtml' : <type 'str'>
=> str0 = 'uocsy wgvtmlm' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 27
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 28
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 29
ACTION: path1 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 30
ACTION: str3 += 's' 
str3 = ' lozi' : <type 'str'>
=> str3 = ' lozis' : <type 'str'>
==================================================
component2 = "beta"                                                     # STEP 31
ACTION: component2 = "beta" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'beta' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 32
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 33
ACTION: str3 += 'n' 
str3 = ' lozis' : <type 'str'>
=> str3 = ' lozisn' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 34
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 35
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102753190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
path0 += "/" + component0                                               # STEP 36
ACTION: path0 += "/" + component0 
component0 = 'epsilon' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
result = sorted(os0.listdir(path1))                                     # STEP 37
ACTION: result = sorted(os0.listdir(path1)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102753190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path1)) 
==================================================
str0 += 'i'                                                             # STEP 38
ACTION: str0 += 'i' 
str0 = 'uocsy wgvtmlm' : <type 'str'>
=> str0 = 'uocsy wgvtmlmi' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 39
ACTION: str0 += 'y' 
str0 = 'uocsy wgvtmlmi' : <type 'str'>
=> str0 = 'uocsy wgvtmlmiy' : <type 'str'>
==================================================
component0 = "alpha"                                                    # STEP 40
ACTION: component0 = "alpha" 
component0 = 'epsilon' : <type 'str'>
=> component0 = 'alpha' : <type 'str'>
==================================================
fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 41
ACTION: fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102753190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
os0.mkdir(path1)                                                        # STEP 42
ACTION: os0.mkdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102753190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = os0.path.dirname(path1)                                        # STEP 43
ACTION: result = os0.path.dirname(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102753190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path1) 
==================================================
stat3 = os0.lstat(path0)                                                # STEP 44
ACTION: stat3 = os0.lstat(path0) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102753190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] The parent object is not a directory: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path0) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=5121477, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507218701, st_mtime=1507218701, st_ctime=1507218701) : <type 'posix.stat_result'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10278cb48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 26325, in act503
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.03244805336 TOTAL RUNTIME
1 EXECUTED
45 TOTAL TEST OPERATIONS
0.0043318271637 TIME SPENT EXECUTING TEST OPERATIONS
0.00307536125183 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.95503234863e-05 TIME SPENT CHECKING PROPERTIES
0.00435137748718 TOTAL TIME SPENT RUNNING SUT
0.00314283370972 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
