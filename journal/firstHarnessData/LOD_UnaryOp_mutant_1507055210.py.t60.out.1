Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.48372.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1032f51b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 10647, in act281
    assert (type(raised) == type(refRaised))
Original test has 71 steps

SAVING TEST AS failure.48372.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "a"                                                         # STEP 0
ACTION: component2 = "a" 
component2 = None : <type 'NoneType'>
=> component2 = 'a' : <type 'str'>
==================================================
component3 = "alpha"                                                     # STEP 1
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
component0 = "phi"                                                       # STEP 2
ACTION: component0 = "phi" 
component0 = None : <type 'NoneType'>
=> component0 = 'phi' : <type 'str'>
==================================================
component1 = "gamma"                                                     # STEP 3
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
component4 = "lambda"                                                    # STEP 4
ACTION: component4 = "lambda" 
component4 = None : <type 'NoneType'>
=> component4 = 'lambda' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 6
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = sorted(os0.listdir(path2))                                      # STEP 7
ACTION: result = sorted(os0.listdir(path2)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path2)) 
==================================================
path2 += "/" + component1                                                # STEP 8
ACTION: path2 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                            # STEP 9
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_EXCL) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
stat4 = os0.stat(path2)                                                 # STEP 10
ACTION: stat4 = os0.stat(path2) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1033e3ed0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path2) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=1787487, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507172532, st_mtime=1507172532, st_ctime=1507172532) : <type 'posix.stat_result'>
==================================================
component1 = "e"                                                        # STEP 11
ACTION: component1 = "e" 
component1 = 'gamma' : <type 'str'>
=> component1 = 'e' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 12
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
result = os0.path.islink(path2)                                         # STEP 13
ACTION: result = os0.path.islink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path2) 
==================================================
str1 += 's'                                                             # STEP 14
ACTION: str1 += 's' 
str1 = '' : <type 'str'>
=> str1 = 's' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 15
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str1 += 'g'                                                             # STEP 16
ACTION: str1 += 'g' 
str1 = 's' : <type 'str'>
=> str1 = 'sg' : <type 'str'>
==================================================
stat2 = os0.stat(path2)                                                 # STEP 17
ACTION: stat2 = os0.stat(path2) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039b93d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path2) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=1787487, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507172532, st_mtime=1507172532, st_ctime=1507172532) : <type 'posix.stat_result'>
==================================================
str1 += 'x'                                                             # STEP 18
ACTION: str1 += 'x' 
str1 = 'sg' : <type 'str'>
=> str1 = 'sgx' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_RDONLY)                                      # STEP 19
ACTION: fd1 = os0.open(path2, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_RDONLY) 
=> fd_REF1 = 5 : <type 'int'>
==================================================
str1 += 't'                                                             # STEP 20
ACTION: str1 += 't' 
str1 = 'sgx' : <type 'str'>
=> str1 = 'sgxt' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 21
ACTION: str1 = "" 
str1 = 'sgxt' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 22
ACTION: str1 += 'o' 
str1 = '' : <type 'str'>
=> str1 = 'o' : <type 'str'>
==================================================
os0.symlink(path2,path2)                                                # STEP 23
ACTION: os0.symlink(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> Symbolic links are not supported on Windows before Python 3.2
REFERENCE ACTION: os_REF0.symlink(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.islink(path2)                                         # STEP 24
ACTION: result = os0.path.islink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path2) 
==================================================
str1 += 'j'                                                             # STEP 25
ACTION: str1 += 'j' 
str1 = 'o' : <type 'str'>
=> str1 = 'oj' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 26
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.read(fd1,bytes0)                                           # STEP 27
ACTION: result = os0.read(fd1,bytes0) 
bytes0 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes0) 
==================================================
str1 += 'q'                                                             # STEP 28
ACTION: str1 += 'q' 
str1 = 'oj' : <type 'str'>
=> str1 = 'ojq' : <type 'str'>
==================================================
stat1 = os0.fstat(fd0)                                                  # STEP 29
ACTION: stat1 = os0.fstat(fd0) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039b94d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.fstat(fd_REF0) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=1787487, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507172532, st_mtime=1507172532, st_ctime=1507172532) : <type 'posix.stat_result'>
==================================================
os0.mkdir(path0)                                                        # STEP 30
ACTION: os0.mkdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = os0.path.isfile(path0)                                         # STEP 31
ACTION: result = os0.path.isfile(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path0) 
==================================================
os0.close(fd0)                                                          # STEP 32
ACTION: os0.close(fd0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.close(fd_REF0) 
==================================================
stat3 = os0.lstat(path2)                                                # STEP 33
ACTION: stat3 = os0.lstat(path2) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039b9310> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path2) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=1787487, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507172532, st_mtime=1507172532, st_ctime=1507172532) : <type 'posix.stat_result'>
==================================================
str1 += 'g'                                                             # STEP 34
ACTION: str1 += 'g' 
str1 = 'ojq' : <type 'str'>
=> str1 = 'ojqg' : <type 'str'>
==================================================
result = stat2.st_size                                                  # STEP 35
ACTION: result = stat2.st_size 
stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039b93d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF2 = posix.stat_result(st_mode=33261, st_ino=1787487, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507172532, st_mtime=1507172532, st_ctime=1507172532) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF2.st_size 
==================================================
result = os0.read(fd0,bytes0)                                           # STEP 36
ACTION: result = os0.read(fd0,bytes0) 
bytes0 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor: 0
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
stat0 = os0.stat(path2)                                                 # STEP 37
ACTION: stat0 = os0.stat(path2) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039b9990> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.stat(path2) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=1787487, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507172532, st_mtime=1507172532, st_ctime=1507172532) : <type 'posix.stat_result'>
==================================================
os0.close(fd1)                                                          # STEP 38
ACTION: os0.close(fd1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
REFERENCE ACTION: os_REF0.close(fd_REF1) 
==================================================
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 39
ACTION: fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_WRONLY | os.O_APPEND) 
==================================================
result = stat0.st_nlink                                                 # STEP 40
ACTION: result = stat0.st_nlink 
stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039b9990> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF0 = posix.stat_result(st_mode=33261, st_ino=1787487, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507172532, st_mtime=1507172532, st_ctime=1507172532) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF0.st_nlink 
==================================================
os0.mkdir(path2)                                                        # STEP 41
ACTION: os0.mkdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: os_REF0.mkdir(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/gamma'
==================================================
bytes4 = 0                                                              # STEP 42
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
result = os0.path.dirname(path2)                                        # STEP 43
ACTION: result = os0.path.dirname(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path2) 
==================================================
str3 = ""                                                               # STEP 44
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
stat0 = os0.fstat(fd1)                                                  # STEP 45
ACTION: stat0 = os0.fstat(fd1) 
stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039b9990> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
stat_REF0 = posix.stat_result(st_mode=33261, st_ino=1787487, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507172532, st_mtime=1507172532, st_ctime=1507172532) : <type 'posix.stat_result'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor: 1
REFERENCE ACTION: stat_REF0 = os_REF0.fstat(fd_REF1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
result = os0.path.exists(path2)                                         # STEP 46
ACTION: result = os0.path.exists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path2) 
==================================================
str3 += 'i'                                                             # STEP 47
ACTION: str3 += 'i' 
str3 = '' : <type 'str'>
=> str3 = 'i' : <type 'str'>
==================================================
result = stat3.st_size                                                  # STEP 48
ACTION: result = stat3.st_size 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039b9310> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=1787487, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507172532, st_mtime=1507172532, st_ctime=1507172532) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF3.st_size 
==================================================
bytes0 += 1                                                             # STEP 49
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
fd1 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 50
ACTION: fd1 = os0.open(path2, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_WRONLY | os.O_APPEND) 
==================================================
str1 += 'p'                                                             # STEP 51
ACTION: str1 += 'p' 
str1 = 'ojqg' : <type 'str'>
=> str1 = 'ojqgp' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 52
ACTION: str1 += 'p' 
str1 = 'ojqgp' : <type 'str'>
=> str1 = 'ojqgpp' : <type 'str'>
==================================================
stat3 = os0.stat(path2)                                                 # STEP 53
ACTION: stat3 = os0.stat(path2) 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039b9310> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=1787487, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507172532, st_mtime=1507172532, st_ctime=1507172532) : <type 'posix.stat_result'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039b9510> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path2) 
==================================================
result = stat1.st_nlink                                                 # STEP 54
ACTION: result = stat1.st_nlink 
stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039b94d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF1 = posix.stat_result(st_mode=33261, st_ino=1787487, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507172532, st_mtime=1507172532, st_ctime=1507172532) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF1.st_nlink 
==================================================
result = stat2.st_nlink                                                 # STEP 55
ACTION: result = stat2.st_nlink 
stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039b93d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF2 = posix.stat_result(st_mode=33261, st_ino=1787487, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507172532, st_mtime=1507172532, st_ctime=1507172532) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF2.st_nlink 
==================================================
str3 += 'h'                                                             # STEP 56
ACTION: str3 += 'h' 
str3 = 'i' : <type 'str'>
=> str3 = 'ih' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 57
ACTION: str3 += 'l' 
str3 = 'ih' : <type 'str'>
=> str3 = 'ihl' : <type 'str'>
==================================================
result = os0.path.islink(path0)                                         # STEP 58
ACTION: result = os0.path.islink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path0) 
==================================================
bytes0 = 0                                                              # STEP 59
ACTION: bytes0 = 0 
bytes0 = 1 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
str3 += 'o'                                                             # STEP 60
ACTION: str3 += 'o' 
str3 = 'ihl' : <type 'str'>
=> str3 = 'ihlo' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 61
ACTION: str3 += 'h' 
str3 = 'ihlo' : <type 'str'>
=> str3 = 'ihloh' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 62
ACTION: str3 += 'l' 
str3 = 'ihloh' : <type 'str'>
=> str3 = 'ihlohl' : <type 'str'>
==================================================
result = os0.path.dirname(path0)                                        # STEP 63
ACTION: result = os0.path.dirname(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path0) 
==================================================
bytes2 = 0                                                              # STEP 64
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
result = stat3.st_nlink                                                 # STEP 65
ACTION: result = stat3.st_nlink 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1039b9510> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=1787487, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507172532, st_mtime=1507172532, st_ctime=1507172532) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF3.st_nlink 
==================================================
str1 += 'k'                                                             # STEP 66
ACTION: str1 += 'k' 
str1 = 'ojqgpp' : <type 'str'>
=> str1 = 'ojqgppk' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 67
ACTION: path0 += "/" + component0 
component0 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
result = os0.path.dirname(path2)                                        # STEP 68
ACTION: result = os0.path.dirname(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path2) 
==================================================
str3 += 'l'                                                             # STEP 69
ACTION: str3 += 'l' 
str3 = 'ihlohl' : <type 'str'>
=> str3 = 'ihlohll' : <type 'str'>
==================================================
os0.symlink(path2,path0)                                                # STEP 70
ACTION: os0.symlink(path2,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1007c0ad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> Symbolic links are not supported on Windows before Python 3.2
REFERENCE ACTION: os_REF0.symlink(path2,path0) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103970c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 10647, in act281
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0782902240753 TOTAL RUNTIME
3 EXECUTED
471 TOTAL TEST OPERATIONS
0.0159060955048 TIME SPENT EXECUTING TEST OPERATIONS
0.0213689804077 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000197410583496 TIME SPENT CHECKING PROPERTIES
0.0161035060883 TOTAL TIME SPENT RUNNING SUT
0.00765681266785 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
