Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.65161.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('startswith first arg must be str, unicode, or tuple, not NoneType',), <traceback object at 0x1032c4dd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31711, in act589
    result = self.p_os[0].path.abspath(self.p_path[1])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2894, in abspath
    elif ((self.filesystem.is_windows_fs and path.startswith(sep)) or ((altsep is not None) or path.startswith(altsep))):
Original test has 40 steps

SAVING TEST AS failure.65161.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "a"                                                         # STEP 0
ACTION: component1 = "a" 
component1 = None : <type 'NoneType'>
=> component1 = 'a' : <type 'str'>
==================================================
component4 = "omega"                                                     # STEP 1
ACTION: component4 = "omega" 
component4 = None : <type 'NoneType'>
=> component4 = 'omega' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 2
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'p'                                                              # STEP 3
ACTION: str1 += 'p' 
str1 = '' : <type 'str'>
=> str1 = 'p' : <type 'str'>
==================================================
component3 = "g"                                                         # STEP 4
ACTION: component3 = "g" 
component3 = None : <type 'NoneType'>
=> component3 = 'g' : <type 'str'>
==================================================
str1 += 'n'                                                              # STEP 5
ACTION: str1 += 'n' 
str1 = 'p' : <type 'str'>
=> str1 = 'pn' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'a'                                                              # STEP 7
ACTION: str1 += 'a' 
str1 = 'pn' : <type 'str'>
=> str1 = 'pna' : <type 'str'>
==================================================
component0 = "b"                                                         # STEP 8
ACTION: component0 = "b" 
component0 = None : <type 'NoneType'>
=> component0 = 'b' : <type 'str'>
==================================================
str1 += 'u'                                                              # STEP 9
ACTION: str1 += 'u' 
str1 = 'pna' : <type 'str'>
=> str1 = 'pnau' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 10
ACTION: str1 += 'e' 
str1 = 'pnau' : <type 'str'>
=> str1 = 'pnaue' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 11
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1039ee390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
bytes2 = 0                                                              # STEP 12
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str1 += 'j'                                                             # STEP 13
ACTION: str1 += 'j' 
str1 = 'pnaue' : <type 'str'>
=> str1 = 'pnauej' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 14
ACTION: str1 += 'm' 
str1 = 'pnauej' : <type 'str'>
=> str1 = 'pnauejm' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 15
ACTION: path2 += "/" + component3 
component3 = 'g' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
component3 = "alpha"                                                    # STEP 16
ACTION: component3 = "alpha" 
component3 = 'g' : <type 'str'>
=> component3 = 'alpha' : <type 'str'>
==================================================
stat4 = os0.stat(path2)                                                 # STEP 17
ACTION: stat4 = os0.stat(path2) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1039ee390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
==================================================
component2 = "c"                                                        # STEP 18
ACTION: component2 = "c" 
component2 = None : <type 'NoneType'>
=> component2 = 'c' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 19
ACTION: str1 += 't' 
str1 = 'pnauejm' : <type 'str'>
=> str1 = 'pnauejmt' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 20
ACTION: str1 += 'x' 
str1 = 'pnauejmt' : <type 'str'>
=> str1 = 'pnauejmtx' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 21
ACTION: str1 += 'j' 
str1 = 'pnauejmtx' : <type 'str'>
=> str1 = 'pnauejmtxj' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 22
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str1 += 'u'                                                             # STEP 23
ACTION: str1 += 'u' 
str1 = 'pnauejmtxj' : <type 'str'>
=> str1 = 'pnauejmtxju' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 24
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
stat3 = os0.lstat(path2)                                                # STEP 25
ACTION: stat3 = os0.lstat(path2) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1039ee390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
==================================================
path1 += "/" + component1                                               # STEP 26
ACTION: path1 += "/" + component1 
component1 = 'a' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 27
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1039ee390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
fd1 = os0.open(path2, os.O_RDWR)                                        # STEP 28
ACTION: fd1 = os0.open(path2, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1039ee390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_RDWR) 
=> fd_REF1 = 5 : <type 'int'>
==================================================
os0.symlink(path2,path2)                                                # STEP 29
ACTION: os0.symlink(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1039ee390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: os_REF0.symlink(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.remove(path2)                                                       # STEP 30
ACTION: os0.remove(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1039ee390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.remove(path2) 
==================================================
result = sorted(os0.listdir(path1))                                     # STEP 31
ACTION: result = sorted(os0.listdir(path1)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1039ee390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path1)) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/a'
==================================================
str1 += 'x'                                                             # STEP 32
ACTION: str1 += 'x' 
str1 = 'pnauejmtxju' : <type 'str'>
=> str1 = 'pnauejmtxjux' : <type 'str'>
==================================================
result = os0.path.isfile(path2)                                         # STEP 33
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1039ee390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
stat0 = os0.fstat(fd0)                                                  # STEP 34
ACTION: stat0 = os0.fstat(fd0) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1039ee390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10365e890> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.fstat(fd_REF0) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=21452960, st_dev=16777224, st_nlink=0, st_uid=501, st_gid=20, st_size=0, st_atime=1507448152, st_mtime=1507448152, st_ctime=1507448152) : <type 'posix.stat_result'>
==================================================
result = os0.readlink(path2)                                            # STEP 35
ACTION: result = os0.readlink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1039ee390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake path does not exist: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: result_REF = os_REF0.readlink(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
==================================================
os0.makedirs(path1)                                                     # STEP 36
ACTION: os0.makedirs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1039ee390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path1) 
==================================================
stat1 = os0.lstat(path1)                                                # STEP 37
ACTION: stat1 = os0.lstat(path1) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1039ee390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10365ee50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path1) 
=> stat_REF1 = posix.stat_result(st_mode=16877, st_ino=21452961, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507448152, st_mtime=1507448152, st_ctime=1507448152) : <type 'posix.stat_result'>
==================================================
str1 += 'a'                                                             # STEP 38
ACTION: str1 += 'a' 
str1 = 'pnauejmtxjux' : <type 'str'>
=> str1 = 'pnauejmtxjuxa' : <type 'str'>
==================================================
result = os0.path.abspath(path1)                                        # STEP 39
ACTION: result = os0.path.abspath(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1039ee390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> startswith first arg must be str, unicode, or tuple, not NoneType
ERROR: (<type 'exceptions.TypeError'>, TypeError('startswith first arg must be str, unicode, or tuple, not NoneType',), <traceback object at 0x103ddfc20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31711, in act589
    result = self.p_os[0].path.abspath(self.p_path[1])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2894, in abspath
    elif ((self.filesystem.is_windows_fs and path.startswith(sep)) or ((altsep is not None) or path.startswith(altsep))):
STOPPING TESTING DUE TO FAILED TEST
0.0450990200043 TOTAL RUNTIME
1 EXECUTED
40 TOTAL TEST OPERATIONS
0.00714540481567 TIME SPENT EXECUTING TEST OPERATIONS
0.00272607803345 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.09808349609e-05 TIME SPENT CHECKING PROPERTIES
0.00716638565063 TOTAL TIME SPENT RUNNING SUT
0.0102479457855 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
