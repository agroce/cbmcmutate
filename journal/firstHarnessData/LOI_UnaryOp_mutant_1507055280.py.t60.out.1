Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.61530.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102e507a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 25733, in act495
    assert (type(raised) == type(refRaised))
Original test has 65 steps

SAVING TEST AS failure.61530.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes4 = 0                                                               # STEP 0
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component4 = "alpha"                                                     # STEP 1
ACTION: component4 = "alpha" 
component4 = None : <type 'NoneType'>
=> component4 = 'alpha' : <type 'str'>
==================================================
component1 = "g"                                                         # STEP 2
ACTION: component1 = "g" 
component1 = None : <type 'NoneType'>
=> component1 = 'g' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 3
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component3 = "lambda"                                                    # STEP 5
ACTION: component3 = "lambda" 
component3 = None : <type 'NoneType'>
=> component3 = 'lambda' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 6
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
component2 = "gamma"                                                     # STEP 7
ACTION: component2 = "gamma" 
component2 = None : <type 'NoneType'>
=> component2 = 'gamma' : <type 'str'>
==================================================
component0 = "c"                                                         # STEP 8
ACTION: component0 = "c" 
component0 = None : <type 'NoneType'>
=> component0 = 'c' : <type 'str'>
==================================================
str1 += 'e'                                                              # STEP 9
ACTION: str1 += 'e' 
str1 = '' : <type 'str'>
=> str1 = 'e' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 10
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str1 += 'x'                                                             # STEP 11
ACTION: str1 += 'x' 
str1 = 'e' : <type 'str'>
=> str1 = 'ex' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 12
ACTION: path3 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
component2 = "epsilon"                                                  # STEP 13
ACTION: component2 = "epsilon" 
component2 = 'gamma' : <type 'str'>
=> component2 = 'epsilon' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 14
ACTION: path1 += "/" + component4 
component4 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 15
ACTION: str1 += 'n' 
str1 = 'ex' : <type 'str'>
=> str1 = 'exn' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 16
ACTION: component4 = "beta" 
component4 = 'alpha' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 17
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str3 = ""                                                               # STEP 18
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 19
ACTION: str3 += 't' 
str3 = '' : <type 'str'>
=> str3 = 't' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 20
ACTION: str1 += 'p' 
str1 = 'exn' : <type 'str'>
=> str1 = 'exnp' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 21
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 22
ACTION: str1 += 't' 
str1 = 'exnp' : <type 'str'>
=> str1 = 'exnpt' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 23
ACTION: str1 += 'e' 
str1 = 'exnpt' : <type 'str'>
=> str1 = 'exnpte' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 24
ACTION: str3 += 'a' 
str3 = 't' : <type 'str'>
=> str3 = 'ta' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 25
ACTION: str1 += 'x' 
str1 = 'exnpte' : <type 'str'>
=> str1 = 'exnptex' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 26
ACTION: str3 += 'c' 
str3 = 'ta' : <type 'str'>
=> str3 = 'tac' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 27
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 28
ACTION: str3 += 'h' 
str3 = 'tac' : <type 'str'>
=> str3 = 'tach' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 29
ACTION: path2 += "/" + component2 
component2 = 'epsilon' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 30
ACTION: str1 += 'a' 
str1 = 'exnptex' : <type 'str'>
=> str1 = 'exnptexa' : <type 'str'>
==================================================
component2 = "f"                                                        # STEP 31
ACTION: component2 = "f" 
component2 = 'epsilon' : <type 'str'>
=> component2 = 'f' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 32
ACTION: str1 += 'n' 
str1 = 'exnptexa' : <type 'str'>
=> str1 = 'exnptexan' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 33
ACTION: str1 += 'u' 
str1 = 'exnptexan' : <type 'str'>
=> str1 = 'exnptexanu' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 34
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str3 += " "                                                             # STEP 35
ACTION: str3 += " " 
str3 = 'tach' : <type 'str'>
=> str3 = 'tach ' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 36
ACTION: path1 += "/" + component1 
component1 = 'g' : <type 'str'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha/g' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 37
ACTION: str1 += " " 
str1 = 'exnptexanu' : <type 'str'>
=> str1 = 'exnptexanu ' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 38
ACTION: str1 += 'm' 
str1 = 'exnptexanu ' : <type 'str'>
=> str1 = 'exnptexanu m' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 39
ACTION: path3 += "/" + component4 
component4 = 'beta' : <type 'str'>
path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma/beta' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 40
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 41
ACTION: str1 += " " 
str1 = 'exnptexanu m' : <type 'str'>
=> str1 = 'exnptexanu m ' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 42
ACTION: str3 += 'w' 
str3 = 'tach ' : <type 'str'>
=> str3 = 'tach w' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 43
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str3 += 'g'                                                             # STEP 44
ACTION: str3 += 'g' 
str3 = 'tach w' : <type 'str'>
=> str3 = 'tach wg' : <type 'str'>
==================================================
component1 = "phi"                                                      # STEP 45
ACTION: component1 = "phi" 
component1 = 'g' : <type 'str'>
=> component1 = 'phi' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 46
ACTION: str1 += 'z' 
str1 = 'exnptexanu m ' : <type 'str'>
=> str1 = 'exnptexanu m z' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 47
ACTION: str1 += 'h' 
str1 = 'exnptexanu m z' : <type 'str'>
=> str1 = 'exnptexanu m zh' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 48
ACTION: path3 += "/" + component1 
component1 = 'phi' : <type 'str'>
path3 = '/Volumes/ramdisk/test/gamma/beta' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma/beta/phi' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 49
ACTION: path0 += "/" + component1 
component1 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 50
ACTION: str1 += 'r' 
str1 = 'exnptexanu m zh' : <type 'str'>
=> str1 = 'exnptexanu m zhr' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 51
ACTION: path0 += "/" + component0 
component0 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi/c' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 52
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 53
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1028b8b10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.path.exists(path4)                                         # STEP 54
ACTION: result = os0.path.exists(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1028b8b10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path4) 
==================================================
result = os0.path.lexists(path4)                                        # STEP 55
ACTION: result = os0.path.lexists(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1028b8b10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path4) 
==================================================
fd1 = os0.open(path3, os.O_CREAT)                                       # STEP 56
ACTION: fd1 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1028b8b10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/gamma/beta/phi' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/gamma/beta/phi'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma/beta/phi'
==================================================
result = os0.path.getsize(path2)                                        # STEP 57
ACTION: result = os0.path.getsize(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1028b8b10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon'
==================================================
path3 += "/" + component1                                               # STEP 58
ACTION: path3 += "/" + component1 
component1 = 'phi' : <type 'str'>
path3 = '/Volumes/ramdisk/test/gamma/beta/phi' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma/beta/phi/phi' : <type 'str'>
==================================================
os0.makedirs(path2)                                                     # STEP 59
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1028b8b10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path2) 
==================================================
fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND)                        # STEP 60
ACTION: fd0 = os0.open(path3, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1028b8b10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/gamma/beta/phi/phi' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma/beta/phi/phi'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_WRONLY | os.O_APPEND) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma/beta/phi/phi'
==================================================
stat4 = os0.lstat(path0)                                                # STEP 61
ACTION: stat4 = os0.lstat(path0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1028b8b10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/phi/c' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/phi/c'
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/phi/c'
==================================================
component0 = "c"                                                        # STEP 62
ACTION: component0 = "c" 
component0 = 'c' : <type 'str'>
==================================================
result = os0.path.isdir(path4)                                          # STEP 63
ACTION: result = os0.path.isdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1028b8b10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path4) 
==================================================
stat1 = os0.lstat(path2)                                                # STEP 64
ACTION: stat1 = os0.lstat(path2) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1028b8b10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path2) 
=> stat_REF1 = posix.stat_result(st_mode=16877, st_ino=16533508, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507378932, st_mtime=1507378932, st_ctime=1507378932) : <type 'posix.stat_result'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102f26488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 25733, in act495
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0352230072021 TOTAL RUNTIME
1 EXECUTED
65 TOTAL TEST OPERATIONS
0.00528240203857 TIME SPENT EXECUTING TEST OPERATIONS
0.00334453582764 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.64644622803e-05 TIME SPENT CHECKING PROPERTIES
0.00530886650085 TOTAL TIME SPENT RUNNING SUT
0.00329494476318 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
