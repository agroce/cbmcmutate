Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59553.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (False) == (True) ',), <traceback object at 0x1007c32d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 30409, in act567
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 66 steps

SAVING TEST AS failure.59553.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "omega"                                                     # STEP 0
ACTION: component3 = "omega" 
component3 = None : <type 'NoneType'>
=> component3 = 'omega' : <type 'str'>
==================================================
component2 = "h"                                                         # STEP 1
ACTION: component2 = "h" 
component2 = None : <type 'NoneType'>
=> component2 = 'h' : <type 'str'>
==================================================
component4 = "gamma"                                                     # STEP 2
ACTION: component4 = "gamma" 
component4 = None : <type 'NoneType'>
=> component4 = 'gamma' : <type 'str'>
==================================================
component1 = "beta"                                                      # STEP 3
ACTION: component1 = "beta" 
component1 = None : <type 'NoneType'>
=> component1 = 'beta' : <type 'str'>
==================================================
component0 = "d"                                                         # STEP 4
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 5
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str2 = ""                                                                # STEP 6
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'z'                                                              # STEP 7
ACTION: str2 += 'z' 
str2 = '' : <type 'str'>
=> str2 = 'z' : <type 'str'>
==================================================
str2 += 'x'                                                              # STEP 8
ACTION: str2 += 'x' 
str2 = 'z' : <type 'str'>
=> str2 = 'zx' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 9
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 10
ACTION: str2 += 'r' 
str2 = 'zx' : <type 'str'>
=> str2 = 'zxr' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 11
ACTION: str2 += 'u' 
str2 = 'zxr' : <type 'str'>
=> str2 = 'zxru' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 12
ACTION: str2 = "" 
str2 = 'zxru' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 14
ACTION: str2 += 'z' 
str2 = '' : <type 'str'>
=> str2 = 'z' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 15
ACTION: str2 += 'y' 
str2 = 'z' : <type 'str'>
=> str2 = 'zy' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 16
ACTION: str2 += 'n' 
str2 = 'zy' : <type 'str'>
=> str2 = 'zyn' : <type 'str'>
==================================================
path4 += "/" + component4                                               # STEP 17
ACTION: path4 += "/" + component4 
component4 = 'gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 18
ACTION: str2 += 'v' 
str2 = 'zyn' : <type 'str'>
=> str2 = 'zynv' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 19
ACTION: str2 += 'i' 
str2 = 'zynv' : <type 'str'>
=> str2 = 'zynvi' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 20
ACTION: str2 += 'y' 
str2 = 'zynvi' : <type 'str'>
=> str2 = 'zynviy' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 21
ACTION: str2 += 'e' 
str2 = 'zynviy' : <type 'str'>
=> str2 = 'zynviye' : <type 'str'>
==================================================
component4 = "h"                                                        # STEP 22
ACTION: component4 = "h" 
component4 = 'gamma' : <type 'str'>
=> component4 = 'h' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 23
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 24
ACTION: str2 += 'i' 
str2 = 'zynviye' : <type 'str'>
=> str2 = 'zynviyei' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 25
ACTION: str2 += 'g' 
str2 = 'zynviyei' : <type 'str'>
=> str2 = 'zynviyeig' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 26
ACTION: str2 += 'k' 
str2 = 'zynviyeig' : <type 'str'>
=> str2 = 'zynviyeigk' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 27
ACTION: path1 += "/" + component2 
component2 = 'h' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 28
ACTION: str2 += 'z' 
str2 = 'zynviyeigk' : <type 'str'>
=> str2 = 'zynviyeigkz' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 29
ACTION: str2 += 'i' 
str2 = 'zynviyeigkz' : <type 'str'>
=> str2 = 'zynviyeigkzi' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 30
ACTION: str2 = "" 
str2 = 'zynviyeigkzi' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 31
ACTION: str2 += 'a' 
str2 = '' : <type 'str'>
=> str2 = 'a' : <type 'str'>
==================================================
component2 = "beta"                                                     # STEP 32
ACTION: component2 = "beta" 
component2 = 'h' : <type 'str'>
=> component2 = 'beta' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 33
ACTION: str2 += 'y' 
str2 = 'a' : <type 'str'>
=> str2 = 'ay' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 34
ACTION: str2 += 'n' 
str2 = 'ay' : <type 'str'>
=> str2 = 'ayn' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 35
ACTION: str2 += 'x' 
str2 = 'ayn' : <type 'str'>
=> str2 = 'aynx' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 36
ACTION: str2 += 'a' 
str2 = 'aynx' : <type 'str'>
=> str2 = 'aynxa' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 37
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
bytes0 = 0                                                              # STEP 38
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 39
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 40
ACTION: path2 += "/" + component0 
component0 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
component0 = "d"                                                        # STEP 41
ACTION: component0 = "d" 
component0 = 'd' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 42
ACTION: str2 += 'x' 
str2 = 'aynxa' : <type 'str'>
=> str2 = 'aynxax' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 43
ACTION: str2 += 'a' 
str2 = 'aynxax' : <type 'str'>
=> str2 = 'aynxaxa' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 44
ACTION: path1 += "/" + component3 
component3 = 'omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test/h' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/h/omega' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 45
ACTION: str2 += 'j' 
str2 = 'aynxaxa' : <type 'str'>
=> str2 = 'aynxaxaj' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 46
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 47
ACTION: str2 += 'w' 
str2 = 'aynxaxaj' : <type 'str'>
=> str2 = 'aynxaxajw' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 48
ACTION: bytes3 += 1 
bytes3 = 1 : <type 'int'>
=> bytes3 = 2 : <type 'int'>
==================================================
component3 = "epsilon"                                                  # STEP 49
ACTION: component3 = "epsilon" 
component3 = 'omega' : <type 'str'>
=> component3 = 'epsilon' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 50
ACTION: path3 += "/" + component2 
component2 = 'beta' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
component2 = "omega"                                                    # STEP 51
ACTION: component2 = "omega" 
component2 = 'beta' : <type 'str'>
=> component2 = 'omega' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 52
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str2 += 'r'                                                             # STEP 53
ACTION: str2 += 'r' 
str2 = 'aynxaxajw' : <type 'str'>
=> str2 = 'aynxaxajwr' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 54
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str3 = ""                                                               # STEP 55
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 56
ACTION: str2 += 'r' 
str2 = 'aynxaxajwr' : <type 'str'>
=> str2 = 'aynxaxajwrr' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 57
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d3e3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
os0.link(path2,path1)                                                   # STEP 58
ACTION: os0.link(path2,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d3e3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
path1 = '/Volumes/ramdisk/test/h/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/h'
REFERENCE ACTION: os_REF0.link(path2,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
str2 += 'q'                                                             # STEP 59
ACTION: str2 += 'q' 
str2 = 'aynxaxajwrr' : <type 'str'>
=> str2 = 'aynxaxajwrrq' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 60
ACTION: bytes3 = 0 
bytes3 = 2 : <type 'int'>
=> bytes3 = 0 : <type 'int'>
==================================================
result = os0.path.islink(path1)                                         # STEP 61
ACTION: result = os0.path.islink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d3e3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/h/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path1) 
==================================================
path2 += "/" + component3                                               # STEP 62
ACTION: path2 += "/" + component3 
component3 = 'epsilon' : <type 'str'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/d/epsilon' : <type 'str'>
==================================================
stat0 = os0.lstat(path2)                                                # STEP 63
ACTION: stat0 = os0.lstat(path2) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d3e3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d/epsilon' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/d': '/Volumes/ramdisk/test/d/epsilon'
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/d/epsilon'
==================================================
os0.rename(path2,path1)                                                 # STEP 64
ACTION: os0.rename(path2,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d3e3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d/epsilon' : <type 'str'>
path1 = '/Volumes/ramdisk/test/h/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake filesystem object: can not rename nonexistent file: '/Volumes/ramdisk/test/d/epsilon'
REFERENCE ACTION: os_REF0.rename(path2,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
result = os0.path.isdir(path4)                                          # STEP 65
ACTION: result = os0.path.isdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102d3e3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path4) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (False) == (True) ',), <traceback object at 0x102ba2bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 30409, in act567
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
0.0266737937927 TOTAL RUNTIME
1 EXECUTED
66 TOTAL TEST OPERATIONS
0.00151038169861 TIME SPENT EXECUTING TEST OPERATIONS
0.00430178642273 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.26633453369e-05 TIME SPENT CHECKING PROPERTIES
0.00154304504395 TOTAL TIME SPENT RUNNING SUT
0.00329995155334 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
