Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.54535.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1020c9b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15861, in act357
    assert (type(raised) == type(refRaised))
Original test has 35 steps

SAVING TEST AS failure.54535.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "e"                                                         # STEP 0
ACTION: component2 = "e" 
component2 = None : <type 'NoneType'>
=> component2 = 'e' : <type 'str'>
==================================================
component0 = "b"                                                         # STEP 1
ACTION: component0 = "b" 
component0 = None : <type 'NoneType'>
=> component0 = 'b' : <type 'str'>
==================================================
component3 = "f"                                                         # STEP 2
ACTION: component3 = "f" 
component3 = None : <type 'NoneType'>
=> component3 = 'f' : <type 'str'>
==================================================
component1 = "f"                                                         # STEP 3
ACTION: component1 = "f" 
component1 = None : <type 'NoneType'>
=> component1 = 'f' : <type 'str'>
==================================================
component4 = "gamma"                                                     # STEP 4
ACTION: component4 = "gamma" 
component4 = None : <type 'NoneType'>
=> component4 = 'gamma' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 5
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str2 = ""                                                                # STEP 6
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 7
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str1 = ""                                                                # STEP 8
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'e'                                                              # STEP 9
ACTION: str1 += 'e' 
str1 = '' : <type 'str'>
=> str1 = 'e' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 10
ACTION: str1 += 'u' 
str1 = 'e' : <type 'str'>
=> str1 = 'eu' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 11
ACTION: str2 += 'h' 
str2 = '' : <type 'str'>
=> str2 = 'h' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 12
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str2 += 'v'                                                             # STEP 13
ACTION: str2 += 'v' 
str2 = 'h' : <type 'str'>
=> str2 = 'hv' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 14
ACTION: str2 += 'w' 
str2 = 'hv' : <type 'str'>
=> str2 = 'hvw' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 15
ACTION: str2 += 'q' 
str2 = 'hvw' : <type 'str'>
=> str2 = 'hvwq' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 16
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101783150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 += 'c'                                                             # STEP 17
ACTION: str1 += 'c' 
str1 = 'eu' : <type 'str'>
=> str1 = 'euc' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 18
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 19
ACTION: str1 += 'd' 
str1 = 'euc' : <type 'str'>
=> str1 = 'eucd' : <type 'str'>
==================================================
result = os0.path.islink(path1)                                         # STEP 20
ACTION: result = os0.path.islink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101783150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path1) 
==================================================
result = os0.path.isfile(path1)                                         # STEP 21
ACTION: result = os0.path.isfile(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101783150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path1) 
==================================================
str2 += 'n'                                                             # STEP 22
ACTION: str2 += 'n' 
str2 = 'hvwq' : <type 'str'>
=> str2 = 'hvwqn' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 23
ACTION: str2 += 't' 
str2 = 'hvwqn' : <type 'str'>
=> str2 = 'hvwqnt' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 24
ACTION: str1 += 'b' 
str1 = 'eucd' : <type 'str'>
=> str1 = 'eucdb' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 25
ACTION: str2 += 'n' 
str2 = 'hvwqnt' : <type 'str'>
=> str2 = 'hvwqntn' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 26
ACTION: str1 += 'g' 
str1 = 'eucdb' : <type 'str'>
=> str1 = 'eucdbg' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 27
ACTION: str2 = "" 
str2 = 'hvwqntn' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 28
ACTION: str2 += 'x' 
str2 = '' : <type 'str'>
=> str2 = 'x' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 29
ACTION: str2 += 'g' 
str2 = 'x' : <type 'str'>
=> str2 = 'xg' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 30
ACTION: path1 += "/" + component3 
component3 = 'f' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 31
ACTION: str1 += 'y' 
str1 = 'eucdbg' : <type 'str'>
=> str1 = 'eucdbgy' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 32
ACTION: str1 += 'e' 
str1 = 'eucdbgy' : <type 'str'>
=> str1 = 'eucdbgye' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 33
ACTION: str1 += 'r' 
str1 = 'eucdbgye' : <type 'str'>
=> str1 = 'eucdbgyer' : <type 'str'>
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 34
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101783150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/f' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/f'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1025164d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15861, in act357
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0440309047699 TOTAL RUNTIME
2 EXECUTED
235 TOTAL TEST OPERATIONS
0.00547337532043 TIME SPENT EXECUTING TEST OPERATIONS
0.0124859809875 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000116586685181 TIME SPENT CHECKING PROPERTIES
0.00558996200562 TOTAL TIME SPENT RUNNING SUT
0.00602984428406 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
