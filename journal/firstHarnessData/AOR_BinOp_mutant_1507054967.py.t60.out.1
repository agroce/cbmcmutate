Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.65223.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for /: 'str' and 'str'",), <traceback object at 0x102474f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 27691, in act525
    result = self.p_os[0].readlink(self.p_path[2])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3535, in readlink
    return self.filesystem.ReadLink(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2308, in ReadLink
    link_obj = self.LResolveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1862, in LResolveObject
    (parent_directory, child_name) = self.SplitPath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1390, in SplitPath
    return ((drive / sep.join(path_components)), basename)
Original test has 23 steps

SAVING TEST AS failure.65223.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "gamma"                                                     # STEP 0
ACTION: component3 = "gamma" 
component3 = None : <type 'NoneType'>
=> component3 = 'gamma' : <type 'str'>
==================================================
component2 = "gamma"                                                     # STEP 1
ACTION: component2 = "gamma" 
component2 = None : <type 'NoneType'>
=> component2 = 'gamma' : <type 'str'>
==================================================
component4 = "a"                                                         # STEP 2
ACTION: component4 = "a" 
component4 = None : <type 'NoneType'>
=> component4 = 'a' : <type 'str'>
==================================================
component1 = "a"                                                         # STEP 3
ACTION: component1 = "a" 
component1 = None : <type 'NoneType'>
=> component1 = 'a' : <type 'str'>
==================================================
component0 = "omega"                                                     # STEP 4
ACTION: component0 = "omega" 
component0 = None : <type 'NoneType'>
=> component0 = 'omega' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 6
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path3 += "/" + component0                                                # STEP 7
ACTION: path3 += "/" + component0 
component0 = 'omega' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 8
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
component0 = "lambda"                                                    # STEP 9
ACTION: component0 = "lambda" 
component0 = 'omega' : <type 'str'>
=> component0 = 'lambda' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 10
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 11
ACTION: str1 += 'y' 
str1 = '' : <type 'str'>
=> str1 = 'y' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 12
ACTION: str1 += 'i' 
str1 = 'y' : <type 'str'>
=> str1 = 'yi' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 14
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102649bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 += 'q'                                                             # STEP 15
ACTION: str1 += 'q' 
str1 = 'yi' : <type 'str'>
=> str1 = 'yiq' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 16
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 17
ACTION: str1 += 'q' 
str1 = 'yiq' : <type 'str'>
=> str1 = 'yiqq' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 18
ACTION: str1 += 'n' 
str1 = 'yiqq' : <type 'str'>
=> str1 = 'yiqqn' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 19
ACTION: str2 += 'h' 
str2 = '' : <type 'str'>
=> str2 = 'h' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 20
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 21
ACTION: str4 += " " 
str4 = '' : <type 'str'>
=> str4 = ' ' : <type 'str'>
==================================================
result = os0.readlink(path2)                                            # STEP 22
ACTION: result = os0.readlink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102649bd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unsupported operand type(s) for /: 'str' and 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for /: 'str' and 'str'",), <traceback object at 0x10254b758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 27691, in act525
    result = self.p_os[0].readlink(self.p_path[2])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3535, in readlink
    return self.filesystem.ReadLink(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2308, in ReadLink
    link_obj = self.LResolveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1862, in LResolveObject
    (parent_directory, child_name) = self.SplitPath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1390, in SplitPath
    return ((drive / sep.join(path_components)), basename)
STOPPING TESTING DUE TO FAILED TEST
0.0318608283997 TOTAL RUNTIME
1 EXECUTED
23 TOTAL TEST OPERATIONS
0.00200629234314 TIME SPENT EXECUTING TEST OPERATIONS
0.00170040130615 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.47819519043e-05 TIME SPENT CHECKING PROPERTIES
0.00202107429504 TOTAL TIME SPENT RUNNING SUT
0.00371408462524 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
