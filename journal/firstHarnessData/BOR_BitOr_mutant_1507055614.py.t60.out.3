Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.55198.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102b67488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 16453, in act365
    assert (type(raised) == type(refRaised))
Original test has 50 steps

SAVING TEST AS failure.55198.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes4 = 0                                                               # STEP 0
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component1 = "a"                                                         # STEP 1
ACTION: component1 = "a" 
component1 = None : <type 'NoneType'>
=> component1 = 'a' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 2
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component2 = "alpha"                                                     # STEP 3
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
component3 = "h"                                                         # STEP 4
ACTION: component3 = "h" 
component3 = None : <type 'NoneType'>
=> component3 = 'h' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "g"                                                         # STEP 6
ACTION: component0 = "g" 
component0 = None : <type 'NoneType'>
=> component0 = 'g' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 7
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'l'                                                              # STEP 8
ACTION: str2 += 'l' 
str2 = '' : <type 'str'>
=> str2 = 'l' : <type 'str'>
==================================================
str2 += 'q'                                                              # STEP 9
ACTION: str2 += 'q' 
str2 = 'l' : <type 'str'>
=> str2 = 'lq' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 10
ACTION: str2 += 'c' 
str2 = 'lq' : <type 'str'>
=> str2 = 'lqc' : <type 'str'>
==================================================
component4 = "gamma"                                                    # STEP 11
ACTION: component4 = "gamma" 
component4 = None : <type 'NoneType'>
=> component4 = 'gamma' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 12
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 13
ACTION: str2 += 'o' 
str2 = 'lqc' : <type 'str'>
=> str2 = 'lqco' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 14
ACTION: path4 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 15
ACTION: str2 += 'd' 
str2 = 'lqco' : <type 'str'>
=> str2 = 'lqcod' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 16
ACTION: str2 += 'v' 
str2 = 'lqcod' : <type 'str'>
=> str2 = 'lqcodv' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 17
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 18
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str4 = ""                                                               # STEP 19
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 20
ACTION: str4 += 'l' 
str4 = '' : <type 'str'>
=> str4 = 'l' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 21
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 22
ACTION: str2 += 'd' 
str2 = 'lqcodv' : <type 'str'>
=> str2 = 'lqcodvd' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 23
ACTION: str4 += 'f' 
str4 = 'l' : <type 'str'>
=> str4 = 'lf' : <type 'str'>
==================================================
result = os0.path.lexists(path0)                                        # STEP 24
ACTION: result = os0.path.lexists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path0) 
==================================================
str0 += 'c'                                                             # STEP 25
ACTION: str0 += 'c' 
str0 = '' : <type 'str'>
=> str0 = 'c' : <type 'str'>
==================================================
component2 = "omega"                                                    # STEP 26
ACTION: component2 = "omega" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'omega' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 27
ACTION: str2 += 'v' 
str2 = 'lqcodvd' : <type 'str'>
=> str2 = 'lqcodvdv' : <type 'str'>
==================================================
stat2 = os0.lstat(path4)                                                # STEP 28
ACTION: stat2 = os0.lstat(path4) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: stat_REF2 = os_REF0.lstat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha'
==================================================
fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 29
ACTION: fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
os0.write(fd1,str2)                                                     # STEP 30
ACTION: os0.write(fd1,str2) 
str2 = 'lqcodvdv' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF1,str2) 
==================================================
str0 += 'n'                                                             # STEP 31
ACTION: str0 += 'n' 
str0 = 'c' : <type 'str'>
=> str0 = 'cn' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 32
ACTION: str0 += 'o' 
str0 = 'cn' : <type 'str'>
=> str0 = 'cno' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 33
ACTION: str0 += 'g' 
str0 = 'cno' : <type 'str'>
=> str0 = 'cnog' : <type 'str'>
==================================================
os0.link(path4,path4)                                                   # STEP 34
ACTION: os0.link(path4,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: os_REF0.link(path4,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.islink(path4)                                         # STEP 35
ACTION: result = os0.path.islink(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path4) 
==================================================
result = os0.path.getsize(path4)                                        # STEP 36
ACTION: result = os0.path.getsize(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path4) 
==================================================
str4 += 'l'                                                             # STEP 37
ACTION: str4 += 'l' 
str4 = 'lf' : <type 'str'>
=> str4 = 'lfl' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 38
ACTION: str2 += 'j' 
str2 = 'lqcodvdv' : <type 'str'>
=> str2 = 'lqcodvdvj' : <type 'str'>
==================================================
result = os0.path.islink(path4)                                         # STEP 39
ACTION: result = os0.path.islink(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path4) 
==================================================
result = os0.path.islink(path0)                                         # STEP 40
ACTION: result = os0.path.islink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path0) 
==================================================
result = os0.read(fd1,bytes0)                                           # STEP 41
ACTION: result = os0.read(fd1,bytes0) 
bytes0 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
stat4 = os0.fstat(fd1)                                                  # STEP 42
ACTION: stat4 = os0.fstat(fd1) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1031ad8d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.fstat(fd_REF1) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=9410598, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=8, st_atime=1507278112, st_mtime=1507278112, st_ctime=1507278112) : <type 'posix.stat_result'>
==================================================
stat2 = os0.stat(path4)                                                 # STEP 43
ACTION: stat2 = os0.stat(path4) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1031ad850> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path4) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=9410598, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=8, st_atime=1507278112, st_mtime=1507278112, st_ctime=1507278112) : <type 'posix.stat_result'>
==================================================
str0 += 'e'                                                             # STEP 44
ACTION: str0 += 'e' 
str0 = 'cnog' : <type 'str'>
=> str0 = 'cnoge' : <type 'str'>
==================================================
os0.rmdir(path4)                                                        # STEP 45
ACTION: os0.rmdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Fake os module: not a directory: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: os_REF0.rmdir(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/alpha'
==================================================
path0 += "/" + component2                                               # STEP 46
ACTION: path0 += "/" + component2 
component2 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
os0.write(fd1,str0)                                                     # STEP 47
ACTION: os0.write(fd1,str0) 
str0 = 'cnoge' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF1,str0) 
==================================================
str2 += 'd'                                                             # STEP 48
ACTION: str2 += 'd' 
str2 = 'lqcodvdvj' : <type 'str'>
=> str2 = 'lqcodvdvjd' : <type 'str'>
==================================================
fd0 = os0.open(path4, os.O_CREAT)                                       # STEP 49
ACTION: fd0 = os0.open(path4, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b7e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 13] Permission denied: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path4, os.O_CREAT) 
=> fd_REF0 = 5 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10318ed40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 16453, in act365
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.143219947815 TOTAL RUNTIME
4 EXECUTED
650 TOTAL TEST OPERATIONS
0.0747585296631 TIME SPENT EXECUTING TEST OPERATIONS
0.0307881832123 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000300168991089 TIME SPENT CHECKING PROPERTIES
0.0750586986542 TOTAL TIME SPENT RUNNING SUT
0.0123307704926 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
