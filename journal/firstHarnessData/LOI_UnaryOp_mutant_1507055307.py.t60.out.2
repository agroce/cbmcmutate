Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.66023.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1030b8488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31557, in act586
    assert (type(raised) == type(refRaised))
Original test has 110 steps

SAVING TEST AS failure.66023.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path2 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "epsilon"                                                   # STEP 1
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
component3 = "alpha"                                                     # STEP 2
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 3
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
component0 = "e"                                                         # STEP 4
ACTION: component0 = "e" 
component0 = None : <type 'NoneType'>
=> component0 = 'e' : <type 'str'>
==================================================
str2 += 'z'                                                              # STEP 5
ACTION: str2 += 'z' 
str2 = '' : <type 'str'>
=> str2 = 'z' : <type 'str'>
==================================================
str2 += 'g'                                                              # STEP 6
ACTION: str2 += 'g' 
str2 = 'z' : <type 'str'>
=> str2 = 'zg' : <type 'str'>
==================================================
str2 += 'n'                                                              # STEP 7
ACTION: str2 += 'n' 
str2 = 'zg' : <type 'str'>
=> str2 = 'zgn' : <type 'str'>
==================================================
component2 = "alpha"                                                     # STEP 8
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
str2 += 'g'                                                              # STEP 9
ACTION: str2 += 'g' 
str2 = 'zgn' : <type 'str'>
=> str2 = 'zgng' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 10
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component1 = "omega"                                                    # STEP 11
ACTION: component1 = "omega" 
component1 = None : <type 'NoneType'>
=> component1 = 'omega' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 12
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 14
ACTION: str2 += 'o' 
str2 = 'zgng' : <type 'str'>
=> str2 = 'zgngo' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 15
ACTION: path0 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 16
ACTION: path0 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/epsilon/alpha' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 17
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.path.abspath(path3)                                        # STEP 18
ACTION: result = os0.path.abspath(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path3) 
==================================================
result = os0.path.islink(path3)                                         # STEP 19
ACTION: result = os0.path.islink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path3) 
==================================================
result = os0.path.lexists(path2)                                        # STEP 20
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
stat1 = os0.lstat(path0)                                                # STEP 21
ACTION: stat1 = os0.lstat(path0) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/epsilon/alpha' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/epsilon/alpha'
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon/alpha'
==================================================
result = os0.path.abspath(path2)                                        # STEP 22
ACTION: result = os0.path.abspath(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path2) 
==================================================
str2 += 'r'                                                             # STEP 23
ACTION: str2 += 'r' 
str2 = 'zgngo' : <type 'str'>
=> str2 = 'zgngor' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 24
ACTION: str2 += 'b' 
str2 = 'zgngor' : <type 'str'>
=> str2 = 'zgngorb' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/epsilon/alpha' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "b"                                                        # STEP 26
ACTION: component4 = "b" 
component4 = 'epsilon' : <type 'str'>
=> component4 = 'b' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 27
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 28
ACTION: str1 += 't' 
str1 = '' : <type 'str'>
=> str1 = 't' : <type 'str'>
==================================================
result = os0.path.dirname(path2)                                        # STEP 29
ACTION: result = os0.path.dirname(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path2) 
==================================================
result = os0.path.isfile(path0)                                         # STEP 30
ACTION: result = os0.path.isfile(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path0) 
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 31
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 32
ACTION: str1 += 'p' 
str1 = 't' : <type 'str'>
=> str1 = 'tp' : <type 'str'>
==================================================
os0.link(path0,path2)                                                   # STEP 33
ACTION: os0.link(path0,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path0,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.isdir(path2)                                          # STEP 34
ACTION: result = os0.path.isdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path2) 
==================================================
str1 += 'p'                                                             # STEP 35
ACTION: str1 += 'p' 
str1 = 'tp' : <type 'str'>
=> str1 = 'tpp' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 36
ACTION: path2 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
os0.link(path0,path2)                                                   # STEP 37
ACTION: os0.link(path0,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Cannot create hard link to directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path0,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted
==================================================
str2 += 'i'                                                             # STEP 38
ACTION: str2 += 'i' 
str2 = 'zgngorb' : <type 'str'>
=> str2 = 'zgngorbi' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 39
ACTION: path3 += "/" + component4 
component4 = 'b' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
os0.link(path1,path2)                                                   # STEP 40
ACTION: os0.link(path1,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Cannot create hard link to directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path1,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted
==================================================
fd1 = os0.open(path2, os.O_RDONLY)                                      # STEP 41
ACTION: fd1 = os0.open(path2, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha'
==================================================
str2 += 'u'                                                             # STEP 42
ACTION: str2 += 'u' 
str2 = 'zgngorbi' : <type 'str'>
=> str2 = 'zgngorbiu' : <type 'str'>
==================================================
stat4 = os0.lstat(path3)                                                # STEP 43
ACTION: stat4 = os0.lstat(path3) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/b'
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/b'
==================================================
str1 += 'k'                                                             # STEP 44
ACTION: str1 += 'k' 
str1 = 'tpp' : <type 'str'>
=> str1 = 'tppk' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                         # STEP 45
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
result = os0.path.isfile(path2)                                         # STEP 46
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
component3 = "omega"                                                    # STEP 47
ACTION: component3 = "omega" 
component3 = 'alpha' : <type 'str'>
=> component3 = 'omega' : <type 'str'>
==================================================
component4 = "g"                                                        # STEP 48
ACTION: component4 = "g" 
component4 = 'b' : <type 'str'>
=> component4 = 'g' : <type 'str'>
==================================================
result = os0.readlink(path1)                                            # STEP 49
ACTION: result = os0.readlink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
os0.link(path2,path0)                                                   # STEP 50
ACTION: os0.link(path2,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path2,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
stat4 = os0.stat(path2)                                                 # STEP 51
ACTION: stat4 = os0.stat(path2) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102e82310> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path2) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=22655782, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507464689, st_mtime=1507464689, st_ctime=1507464689) : <type 'posix.stat_result'>
==================================================
path3 += "/" + component4                                               # STEP 52
ACTION: path3 += "/" + component4 
component4 = 'g' : <type 'str'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b/g' : <type 'str'>
==================================================
result = os0.path.lexists(path1)                                        # STEP 53
ACTION: result = os0.path.lexists(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path1) 
==================================================
result = os0.path.exists(path0)                                         # STEP 54
ACTION: result = os0.path.exists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path0) 
==================================================
str1 += 'q'                                                             # STEP 55
ACTION: str1 += 'q' 
str1 = 'tppk' : <type 'str'>
=> str1 = 'tppkq' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 56
ACTION: str1 += 'l' 
str1 = 'tppkq' : <type 'str'>
=> str1 = 'tppkql' : <type 'str'>
==================================================
result = os0.path.lexists(path2)                                        # STEP 57
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
str1 += " "                                                             # STEP 58
ACTION: str1 += " " 
str1 = 'tppkql' : <type 'str'>
=> str1 = 'tppkql ' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 59
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/b/g' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
fd0 = os0.open(path2, os.O_CREAT)                                       # STEP 60
ACTION: fd0 = os0.open(path2, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
result = os0.path.isabs(path0)                                          # STEP 61
ACTION: result = os0.path.isabs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path0) 
==================================================
path0 += "/" + component3                                               # STEP 62
ACTION: path0 += "/" + component3 
component3 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 63
ACTION: str1 += 'a' 
str1 = 'tppkql ' : <type 'str'>
=> str1 = 'tppkql a' : <type 'str'>
==================================================
component4 = "alpha"                                                    # STEP 64
ACTION: component4 = "alpha" 
component4 = 'g' : <type 'str'>
=> component4 = 'alpha' : <type 'str'>
==================================================
result = os0.path.isabs(path2)                                          # STEP 65
ACTION: result = os0.path.isabs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path2) 
==================================================
os0.remove(path3)                                                       # STEP 66
ACTION: os0.remove(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
result = os0.readlink(path0)                                            # STEP 67
ACTION: result = os0.readlink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake path does not exist: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: result_REF = os_REF0.readlink(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega'
==================================================
bytes4 += 1                                                             # STEP 68
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str2 += 'c'                                                             # STEP 69
ACTION: str2 += 'c' 
str2 = 'zgngorbiu' : <type 'str'>
=> str2 = 'zgngorbiuc' : <type 'str'>
==================================================
result = sorted(os0.listdir(path1))                                     # STEP 70
ACTION: result = sorted(os0.listdir(path1)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path1)) 
==================================================
os0.link(path2,path2)                                                   # STEP 71
ACTION: os0.link(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: os_REF0.link(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.remove(path0)                                                       # STEP 72
ACTION: os0.remove(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: os_REF0.remove(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega'
==================================================
result = os0.readlink(path2)                                            # STEP 73
ACTION: result = os0.readlink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: result_REF = os_REF0.readlink(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test/alpha'
==================================================
component3 = "a"                                                        # STEP 74
ACTION: component3 = "a" 
component3 = 'omega' : <type 'str'>
=> component3 = 'a' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 75
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
bytes4 += 1                                                             # STEP 76
ACTION: bytes4 += 1 
bytes4 = 1 : <type 'int'>
=> bytes4 = 2 : <type 'int'>
==================================================
path0 += "/" + component4                                               # STEP 77
ACTION: path0 += "/" + component4 
component4 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/omega/alpha' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 78
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
os0.mkdir(path3)                                                        # STEP 79
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = sorted(os0.listdir(path2))                                     # STEP 80
ACTION: result = sorted(os0.listdir(path2)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Fake os module: not a directory: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path2)) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/alpha'
==================================================
result = os0.read(fd0,bytes4)                                           # STEP 81
ACTION: result = os0.read(fd0,bytes4) 
bytes4 = 2 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes4) 
==================================================
stat1 = os0.lstat(path2)                                                # STEP 82
ACTION: stat1 = os0.lstat(path2) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102e5bad0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path2) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=22655782, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507464689, st_mtime=1507464689, st_ctime=1507464689) : <type 'posix.stat_result'>
==================================================
str3 += 'e'                                                             # STEP 83
ACTION: str3 += 'e' 
str3 = '' : <type 'str'>
=> str3 = 'e' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 84
ACTION: str3 += 'h' 
str3 = 'e' : <type 'str'>
=> str3 = 'eh' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 85
ACTION: path0 += "/" + component3 
component3 = 'a' : <type 'str'>
path0 = '/Volumes/ramdisk/test/omega/alpha' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/omega/alpha/a' : <type 'str'>
==================================================
stat2 = os0.fstat(fd0)                                                  # STEP 86
ACTION: stat2 = os0.fstat(fd0) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102e4fbd0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF0) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=22655782, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507464689, st_mtime=1507464689, st_ctime=1507464689) : <type 'posix.stat_result'>
==================================================
str2 += 't'                                                             # STEP 87
ACTION: str2 += 't' 
str2 = 'zgngorbiuc' : <type 'str'>
=> str2 = 'zgngorbiuct' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 88
ACTION: str2 += 'u' 
str2 = 'zgngorbiuct' : <type 'str'>
=> str2 = 'zgngorbiuctu' : <type 'str'>
==================================================
result = os0.path.lexists(path2)                                        # STEP 89
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
os0.link(path2,path2)                                                   # STEP 90
ACTION: os0.link(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: os_REF0.link(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str2 += 'm'                                                             # STEP 91
ACTION: str2 += 'm' 
str2 = 'zgngorbiuctu' : <type 'str'>
=> str2 = 'zgngorbiuctum' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 92
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component3 = "beta"                                                     # STEP 93
ACTION: component3 = "beta" 
component3 = 'a' : <type 'str'>
=> component3 = 'beta' : <type 'str'>
==================================================
result = os0.read(fd0,bytes4)                                           # STEP 94
ACTION: result = os0.read(fd0,bytes4) 
bytes4 = 2 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes4) 
==================================================
str2 += 'l'                                                             # STEP 95
ACTION: str2 += 'l' 
str2 = 'zgngorbiuctum' : <type 'str'>
=> str2 = 'zgngorbiuctuml' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 96
ACTION: str2 += 'n' 
str2 = 'zgngorbiuctuml' : <type 'str'>
=> str2 = 'zgngorbiuctumln' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 97
ACTION: component4 = "beta" 
component4 = 'alpha' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 98
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.link(path1,path1)                                                   # STEP 99
ACTION: os0.link(path1,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path1,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
stat3 = os0.stat(path0)                                                # STEP 100
ACTION: stat3 = os0.stat(path0) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/omega/alpha/a' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/omega/alpha/a'
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/alpha/a'
==================================================
str2 += 'l'                                                            # STEP 101
ACTION: str2 += 'l' 
str2 = 'zgngorbiuctumln' : <type 'str'>
=> str2 = 'zgngorbiuctumlnl' : <type 'str'>
==================================================
stat3 = os0.fstat(fd1)                                                 # STEP 102
ACTION: stat3 = os0.fstat(fd1) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102e4fc10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.fstat(fd_REF1) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=22655782, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507464689, st_mtime=1507464689, st_ctime=1507464689) : <type 'posix.stat_result'>
==================================================
path0 += "/" + component3                                              # STEP 103
ACTION: path0 += "/" + component3 
component3 = 'beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/omega/alpha/a' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/omega/alpha/a/beta' : <type 'str'>
==================================================
component3 = "c"                                                       # STEP 104
ACTION: component3 = "c" 
component3 = 'beta' : <type 'str'>
=> component3 = 'c' : <type 'str'>
==================================================
path3 += "/" + component4                                              # STEP 105
ACTION: path3 += "/" + component4 
component4 = 'beta' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str3 += 'd'                                                            # STEP 106
ACTION: str3 += 'd' 
str3 = 'eh' : <type 'str'>
=> str3 = 'ehd' : <type 'str'>
==================================================
bytes0 += 1                                                            # STEP 107
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
os0.link(path2,path3)                                                  # STEP 108
ACTION: os0.link(path2,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.link(path2,path3) 
==================================================
result = os0.path.getsize(path3)                                       # STEP 109
ACTION: result = os0.path.getsize(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e5b3d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path3) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1030abfc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31557, in act586
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.481068134308 TOTAL RUNTIME
12 EXECUTED
2310 TOTAL TEST OPERATIONS
0.288665533066 TIME SPENT EXECUTING TEST OPERATIONS
0.0980243682861 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00108313560486 TIME SPENT CHECKING PROPERTIES
0.289748668671 TOTAL TIME SPENT RUNNING SUT
0.0312330722809 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
