Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.55769.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('endswith first arg must be str, unicode, or tuple, not NoneType',), <traceback object at 0x1033985a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31156, in act580
    result = self.p_os[0].path.islink(self.p_path[2])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2816, in islink
    return self.filesystem.IsLink(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2443, in IsLink
    return self._IsType(path, stat.S_IFLNK, follow_symlinks=False)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2412, in _IsType
    obj = self.ResolveObject(path, follow_symlinks)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1839, in ResolveObject
    return self.LResolveObject(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1858, in LResolveObject
    if (path.endswith(sep) or (alt_sep or path.endswith(alt_sep))):
Original test has 75 steps

SAVING TEST AS failure.55769.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes4 = 0                                                               # STEP 0
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component3 = "d"                                                         # STEP 1
ACTION: component3 = "d" 
component3 = None : <type 'NoneType'>
=> component3 = 'd' : <type 'str'>
==================================================
component4 = "delta"                                                     # STEP 2
ACTION: component4 = "delta" 
component4 = None : <type 'NoneType'>
=> component4 = 'delta' : <type 'str'>
==================================================
component2 = "b"                                                         # STEP 3
ACTION: component2 = "b" 
component2 = None : <type 'NoneType'>
=> component2 = 'b' : <type 'str'>
==================================================
component0 = "d"                                                         # STEP 4
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 5
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 6
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component1 = "beta"                                                      # STEP 7
ACTION: component1 = "beta" 
component1 = None : <type 'NoneType'>
=> component1 = 'beta' : <type 'str'>
==================================================
str3 += 'r'                                                              # STEP 8
ACTION: str3 += 'r' 
str3 = '' : <type 'str'>
=> str3 = 'r' : <type 'str'>
==================================================
str3 += 'y'                                                              # STEP 9
ACTION: str3 += 'y' 
str3 = 'r' : <type 'str'>
=> str3 = 'ry' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 10
ACTION: str4 += 't' 
str4 = '' : <type 'str'>
=> str4 = 't' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 11
ACTION: str3 += 'q' 
str3 = 'ry' : <type 'str'>
=> str3 = 'ryq' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 12
ACTION: str3 += 'w' 
str3 = 'ryq' : <type 'str'>
=> str3 = 'ryqw' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 13
ACTION: str3 += 'w' 
str3 = 'ryqw' : <type 'str'>
=> str3 = 'ryqww' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 14
ACTION: str4 += " " 
str4 = 't' : <type 'str'>
=> str4 = 't ' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 15
ACTION: str3 += 'p' 
str3 = 'ryqww' : <type 'str'>
=> str3 = 'ryqwwp' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 16
ACTION: str3 += 's' 
str3 = 'ryqwwp' : <type 'str'>
=> str3 = 'ryqwwps' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 17
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 18
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031d3090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str3 += 'x'                                                             # STEP 19
ACTION: str3 += 'x' 
str3 = 'ryqwwps' : <type 'str'>
=> str3 = 'ryqwwpsx' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 20
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 21
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str1 += 'b'                                                             # STEP 22
ACTION: str1 += 'b' 
str1 = '' : <type 'str'>
=> str1 = 'b' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 23
ACTION: str4 += 'i' 
str4 = 't ' : <type 'str'>
=> str4 = 't i' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 24
ACTION: str3 += 'y' 
str3 = 'ryqwwpsx' : <type 'str'>
=> str3 = 'ryqwwpsxy' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 25
ACTION: str3 += 'r' 
str3 = 'ryqwwpsxy' : <type 'str'>
=> str3 = 'ryqwwpsxyr' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 26
ACTION: str1 += 'j' 
str1 = 'b' : <type 'str'>
=> str1 = 'bj' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 27
ACTION: str1 += 'c' 
str1 = 'bj' : <type 'str'>
=> str1 = 'bjc' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 28
ACTION: str1 += 'y' 
str1 = 'bjc' : <type 'str'>
=> str1 = 'bjcy' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 29
ACTION: str3 += 't' 
str3 = 'ryqwwpsxyr' : <type 'str'>
=> str3 = 'ryqwwpsxyrt' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 30
ACTION: str4 += 'y' 
str4 = 't i' : <type 'str'>
=> str4 = 't iy' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 31
ACTION: str4 += 'm' 
str4 = 't iy' : <type 'str'>
=> str4 = 't iym' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 32
ACTION: str4 += 'x' 
str4 = 't iym' : <type 'str'>
=> str4 = 't iymx' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 33
ACTION: str4 += 'c' 
str4 = 't iymx' : <type 'str'>
=> str4 = 't iymxc' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 34
ACTION: str4 += 'w' 
str4 = 't iymxc' : <type 'str'>
=> str4 = 't iymxcw' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 35
ACTION: str4 += 'v' 
str4 = 't iymxcw' : <type 'str'>
=> str4 = 't iymxcwv' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 36
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str1 += 'y'                                                             # STEP 37
ACTION: str1 += 'y' 
str1 = 'bjcy' : <type 'str'>
=> str1 = 'bjcyy' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 38
ACTION: str4 += 'q' 
str4 = 't iymxcwv' : <type 'str'>
=> str4 = 't iymxcwvq' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 39
ACTION: str4 += 'v' 
str4 = 't iymxcwvq' : <type 'str'>
=> str4 = 't iymxcwvqv' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 40
ACTION: str3 += 'g' 
str3 = 'ryqwwpsxyrt' : <type 'str'>
=> str3 = 'ryqwwpsxyrtg' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 41
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 42
ACTION: str3 += " " 
str3 = 'ryqwwpsxyrtg' : <type 'str'>
=> str3 = 'ryqwwpsxyrtg ' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 43
ACTION: bytes4 = 0 
bytes4 = 1 : <type 'int'>
=> bytes4 = 0 : <type 'int'>
==================================================
str1 += 'f'                                                             # STEP 44
ACTION: str1 += 'f' 
str1 = 'bjcyy' : <type 'str'>
=> str1 = 'bjcyyf' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 45
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str1 += 'u'                                                             # STEP 46
ACTION: str1 += 'u' 
str1 = 'bjcyyf' : <type 'str'>
=> str1 = 'bjcyyfu' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 47
ACTION: str2 += 'x' 
str2 = '' : <type 'str'>
=> str2 = 'x' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 48
ACTION: str1 += 'v' 
str1 = 'bjcyyfu' : <type 'str'>
=> str1 = 'bjcyyfuv' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 49
ACTION: str3 += 's' 
str3 = 'ryqwwpsxyrtg ' : <type 'str'>
=> str3 = 'ryqwwpsxyrtg s' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 50
ACTION: str1 += 'j' 
str1 = 'bjcyyfuv' : <type 'str'>
=> str1 = 'bjcyyfuvj' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 51
ACTION: str4 += 'h' 
str4 = 't iymxcwvqv' : <type 'str'>
=> str4 = 't iymxcwvqvh' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 52
ACTION: str1 += 'a' 
str1 = 'bjcyyfuvj' : <type 'str'>
=> str1 = 'bjcyyfuvja' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 53
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str4 += 'x'                                                             # STEP 54
ACTION: str4 += 'x' 
str4 = 't iymxcwvqvh' : <type 'str'>
=> str4 = 't iymxcwvqvhx' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 55
ACTION: str2 += 'j' 
str2 = 'x' : <type 'str'>
=> str2 = 'xj' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 56
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 57
ACTION: str1 += 'c' 
str1 = 'bjcyyfuvja' : <type 'str'>
=> str1 = 'bjcyyfuvjac' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 58
ACTION: str2 += 'g' 
str2 = 'xj' : <type 'str'>
=> str2 = 'xjg' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 59
ACTION: str1 += 'm' 
str1 = 'bjcyyfuvjac' : <type 'str'>
=> str1 = 'bjcyyfuvjacm' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 60
ACTION: str4 += 'h' 
str4 = 't iymxcwvqvhx' : <type 'str'>
=> str4 = 't iymxcwvqvhxh' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 61
ACTION: str3 += 'o' 
str3 = 'ryqwwpsxyrtg s' : <type 'str'>
=> str3 = 'ryqwwpsxyrtg so' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 62
ACTION: str3 += 'd' 
str3 = 'ryqwwpsxyrtg so' : <type 'str'>
=> str3 = 'ryqwwpsxyrtg sod' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 63
ACTION: str2 += 'd' 
str2 = 'xjg' : <type 'str'>
=> str2 = 'xjgd' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 64
ACTION: str3 += 't' 
str3 = 'ryqwwpsxyrtg sod' : <type 'str'>
=> str3 = 'ryqwwpsxyrtg sodt' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 65
ACTION: str1 += 'n' 
str1 = 'bjcyyfuvjacm' : <type 'str'>
=> str1 = 'bjcyyfuvjacmn' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 66
ACTION: str4 += 'x' 
str4 = 't iymxcwvqvhxh' : <type 'str'>
=> str4 = 't iymxcwvqvhxhx' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 67
ACTION: str1 += 'b' 
str1 = 'bjcyyfuvjacmn' : <type 'str'>
=> str1 = 'bjcyyfuvjacmnb' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 68
ACTION: str4 = "" 
str4 = 't iymxcwvqvhxhx' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 69
ACTION: bytes3 += 1 
bytes3 = 1 : <type 'int'>
=> bytes3 = 2 : <type 'int'>
==================================================
str3 += 'm'                                                             # STEP 70
ACTION: str3 += 'm' 
str3 = 'ryqwwpsxyrtg sodt' : <type 'str'>
=> str3 = 'ryqwwpsxyrtg sodtm' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 71
ACTION: str3 += 'l' 
str3 = 'ryqwwpsxyrtg sodtm' : <type 'str'>
=> str3 = 'ryqwwpsxyrtg sodtml' : <type 'str'>
==================================================
result = os0.path.isfile(path2)                                         # STEP 72
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031d3090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
str3 += 'r'                                                             # STEP 73
ACTION: str3 += 'r' 
str3 = 'ryqwwpsxyrtg sodtml' : <type 'str'>
=> str3 = 'ryqwwpsxyrtg sodtmlr' : <type 'str'>
==================================================
result = os0.path.islink(path2)                                         # STEP 74
ACTION: result = os0.path.islink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031d3090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> endswith first arg must be str, unicode, or tuple, not NoneType
ERROR: (<type 'exceptions.TypeError'>, TypeError('endswith first arg must be str, unicode, or tuple, not NoneType',), <traceback object at 0x1026adb48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31156, in act580
    result = self.p_os[0].path.islink(self.p_path[2])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2816, in islink
    return self.filesystem.IsLink(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2443, in IsLink
    return self._IsType(path, stat.S_IFLNK, follow_symlinks=False)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2412, in _IsType
    obj = self.ResolveObject(path, follow_symlinks)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1839, in ResolveObject
    return self.LResolveObject(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1858, in LResolveObject
    if (path.endswith(sep) or (alt_sep or path.endswith(alt_sep))):
STOPPING TESTING DUE TO FAILED TEST
0.0320138931274 TOTAL RUNTIME
1 EXECUTED
75 TOTAL TEST OPERATIONS
0.00301456451416 TIME SPENT EXECUTING TEST OPERATIONS
0.00381088256836 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.2200088501e-05 TIME SPENT CHECKING PROPERTIES
0.00305676460266 TOTAL TIME SPENT RUNNING SUT
0.0029079914093 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
