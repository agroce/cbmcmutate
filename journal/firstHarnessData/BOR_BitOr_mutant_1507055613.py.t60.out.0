Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.48661.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.OSError'>, OSError(13, 'Permission Denied'), <traceback object at 0x103c3ed88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2075, in CreateDirectory
    current_dir.AddEntry(new_dir)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 685, in AddEntry
    raise OSError(errno.EACCES, 'Permission Denied', self.GetPath())
Original test has 53 steps

SAVING TEST AS failure.48661.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "f"                                                         # STEP 0
ACTION: component1 = "f" 
component1 = None : <type 'NoneType'>
=> component1 = 'f' : <type 'str'>
==================================================
component2 = "a"                                                         # STEP 1
ACTION: component2 = "a" 
component2 = None : <type 'NoneType'>
=> component2 = 'a' : <type 'str'>
==================================================
component0 = "f"                                                         # STEP 2
ACTION: component0 = "f" 
component0 = None : <type 'NoneType'>
=> component0 = 'f' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 3
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str0 = ""                                                                # STEP 4
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component4 = "c"                                                         # STEP 5
ACTION: component4 = "c" 
component4 = None : <type 'NoneType'>
=> component4 = 'c' : <type 'str'>
==================================================
str0 += 'k'                                                              # STEP 6
ACTION: str0 += 'k' 
str0 = '' : <type 'str'>
=> str0 = 'k' : <type 'str'>
==================================================
str0 += 'z'                                                              # STEP 7
ACTION: str0 += 'z' 
str0 = 'k' : <type 'str'>
=> str0 = 'kz' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'f'                                                              # STEP 9
ACTION: str0 += 'f' 
str0 = 'kz' : <type 'str'>
=> str0 = 'kzf' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 10
ACTION: str0 += 't' 
str0 = 'kzf' : <type 'str'>
=> str0 = 'kzft' : <type 'str'>
==================================================
component3 = "gamma"                                                    # STEP 11
ACTION: component3 = "gamma" 
component3 = None : <type 'NoneType'>
=> component3 = 'gamma' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 12
ACTION: str0 += 'i' 
str0 = 'kzft' : <type 'str'>
=> str0 = 'kzfti' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 13
ACTION: str0 += 'g' 
str0 = 'kzfti' : <type 'str'>
=> str0 = 'kzftig' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 14
ACTION: str0 += 'l' 
str0 = 'kzftig' : <type 'str'>
=> str0 = 'kzftigl' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 15
ACTION: str0 += 'r' 
str0 = 'kzftigl' : <type 'str'>
=> str0 = 'kzftiglr' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 16
ACTION: str0 += 'i' 
str0 = 'kzftiglr' : <type 'str'>
=> str0 = 'kzftiglri' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 17
ACTION: str0 += 'a' 
str0 = 'kzftiglri' : <type 'str'>
=> str0 = 'kzftiglria' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 18
ACTION: str0 += 'k' 
str0 = 'kzftiglria' : <type 'str'>
=> str0 = 'kzftiglriak' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 19
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
bytes0 = 0                                                              # STEP 20
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str0 += 'b'                                                             # STEP 21
ACTION: str0 += 'b' 
str0 = 'kzftiglriak' : <type 'str'>
=> str0 = 'kzftiglriakb' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 22
ACTION: str0 += 'k' 
str0 = 'kzftiglriakb' : <type 'str'>
=> str0 = 'kzftiglriakbk' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 23
ACTION: str0 += 'a' 
str0 = 'kzftiglriakbk' : <type 'str'>
=> str0 = 'kzftiglriakbka' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 24
ACTION: path0 += "/" + component0 
component0 = 'f' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
component0 = "e"                                                        # STEP 25
ACTION: component0 = "e" 
component0 = 'f' : <type 'str'>
=> component0 = 'e' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 26
ACTION: str0 += 'o' 
str0 = 'kzftiglriakbka' : <type 'str'>
=> str0 = 'kzftiglriakbkao' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 27
ACTION: str0 += 'x' 
str0 = 'kzftiglriakbkao' : <type 'str'>
=> str0 = 'kzftiglriakbkaox' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 28
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 29
ACTION: str1 += 'c' 
str1 = '' : <type 'str'>
=> str1 = 'c' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 30
ACTION: str0 += 'b' 
str0 = 'kzftiglriakbkaox' : <type 'str'>
=> str0 = 'kzftiglriakbkaoxb' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 31
ACTION: str1 += 'g' 
str1 = 'c' : <type 'str'>
=> str1 = 'cg' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 32
ACTION: str1 += 'j' 
str1 = 'cg' : <type 'str'>
=> str1 = 'cgj' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 33
ACTION: str1 += 'x' 
str1 = 'cgj' : <type 'str'>
=> str1 = 'cgjx' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 34
ACTION: str1 += 'n' 
str1 = 'cgjx' : <type 'str'>
=> str1 = 'cgjxn' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 35
ACTION: str0 = "" 
str0 = 'kzftiglriakbkaoxb' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 36
ACTION: str0 += 'h' 
str0 = '' : <type 'str'>
=> str0 = 'h' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 37
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str1 += 'j'                                                             # STEP 38
ACTION: str1 += 'j' 
str1 = 'cgjxn' : <type 'str'>
=> str1 = 'cgjxnj' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 39
ACTION: str0 += 'x' 
str0 = 'h' : <type 'str'>
=> str0 = 'hx' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 40
ACTION: str1 += 's' 
str1 = 'cgjxnj' : <type 'str'>
=> str1 = 'cgjxnjs' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 41
ACTION: str0 = "" 
str0 = 'hx' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 42
ACTION: str0 += 'm' 
str0 = '' : <type 'str'>
=> str0 = 'm' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 43
ACTION: str0 += 'g' 
str0 = 'm' : <type 'str'>
=> str0 = 'mg' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 44
ACTION: path0 += "/" + component4 
component4 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test/f' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/f/c' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 45
ACTION: str0 += 'm' 
str0 = 'mg' : <type 'str'>
=> str0 = 'mgm' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 46
ACTION: str0 += 'm' 
str0 = 'mgm' : <type 'str'>
=> str0 = 'mgmm' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 47
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/f/c' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 48
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str1 += 's'                                                             # STEP 49
ACTION: str1 += 's' 
str1 = 'cgjxnjs' : <type 'str'>
=> str1 = 'cgjxnjss' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 50
ACTION: bytes1 = 0 
bytes1 = 1 : <type 'int'>
=> bytes1 = 0 : <type 'int'>
==================================================
str1 += 'p'                                                             # STEP 51
ACTION: str1 += 'p' 
str1 = 'cgjxnjss' : <type 'str'>
=> str1 = 'cgjxnjssp' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 52
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 13] Permission Denied: '/'
ERROR: (<type 'exceptions.OSError'>, OSError(13, 'Permission Denied'), <traceback object at 0x1042e0c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2075, in CreateDirectory
    current_dir.AddEntry(new_dir)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 685, in AddEntry
    raise OSError(errno.EACCES, 'Permission Denied', self.GetPath())
STOPPING TESTING DUE TO FAILED TEST
0.0451180934906 TOTAL RUNTIME
1 EXECUTED
53 TOTAL TEST OPERATIONS
0.00143527984619 TIME SPENT EXECUTING TEST OPERATIONS
0.0050003528595 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.5749206543e-05 TIME SPENT CHECKING PROPERTIES
0.00146102905273 TOTAL TIME SPENT RUNNING SUT
0.00378680229187 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
