Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.57501.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (False) == (True) ',), <traceback object at 0x1015bd5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 30649, in act571
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 52 steps

SAVING TEST AS failure.57501.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "beta"                                                      # STEP 0
ACTION: component3 = "beta" 
component3 = None : <type 'NoneType'>
=> component3 = 'beta' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 1
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component0 = "beta"                                                      # STEP 2
ACTION: component0 = "beta" 
component0 = None : <type 'NoneType'>
=> component0 = 'beta' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 3
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component1 = "e"                                                         # STEP 4
ACTION: component1 = "e" 
component1 = None : <type 'NoneType'>
=> component1 = 'e' : <type 'str'>
==================================================
component4 = "h"                                                         # STEP 5
ACTION: component4 = "h" 
component4 = None : <type 'NoneType'>
=> component4 = 'h' : <type 'str'>
==================================================
component2 = "e"                                                         # STEP 6
ACTION: component2 = "e" 
component2 = None : <type 'NoneType'>
=> component2 = 'e' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 7
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes1 += 1                                                              # STEP 8
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str0 = ""                                                                # STEP 9
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 10
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str2 = ""                                                               # STEP 11
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 12
ACTION: str2 += 'm' 
str2 = '' : <type 'str'>
=> str2 = 'm' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 13
ACTION: str0 += 'j' 
str0 = '' : <type 'str'>
=> str0 = 'j' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 14
ACTION: str0 += 'x' 
str0 = 'j' : <type 'str'>
=> str0 = 'jx' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 15
ACTION: str0 += 'n' 
str0 = 'jx' : <type 'str'>
=> str0 = 'jxn' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 16
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 17
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 18
ACTION: str2 += 'v' 
str2 = 'm' : <type 'str'>
=> str2 = 'mv' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 19
ACTION: str1 += 'z' 
str1 = '' : <type 'str'>
=> str1 = 'z' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 20
ACTION: str0 += 'k' 
str0 = 'jxn' : <type 'str'>
=> str0 = 'jxnk' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 21
ACTION: str2 += 'o' 
str2 = 'mv' : <type 'str'>
=> str2 = 'mvo' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 22
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 23
ACTION: str2 += 'h' 
str2 = 'mvo' : <type 'str'>
=> str2 = 'mvoh' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 24
ACTION: str1 += 't' 
str1 = 'z' : <type 'str'>
=> str1 = 'zt' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 25
ACTION: str2 += 'c' 
str2 = 'mvoh' : <type 'str'>
=> str2 = 'mvohc' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 26
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101c75750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.path.isfile(path1)                                         # STEP 27
ACTION: result = os0.path.isfile(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101c75750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path1) 
==================================================
result = os0.readlink(path3)                                            # STEP 28
ACTION: result = os0.readlink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101c75750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
str1 += 'e'                                                             # STEP 29
ACTION: str1 += 'e' 
str1 = 'zt' : <type 'str'>
=> str1 = 'zte' : <type 'str'>
==================================================
os0.link(path3,path2)                                                   # STEP 30
ACTION: os0.link(path3,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101c75750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path3,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.isdir(path1)                                          # STEP 31
ACTION: result = os0.path.isdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101c75750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path1) 
==================================================
os0.symlink(path3,path1)                                                # STEP 32
ACTION: os0.symlink(path3,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101c75750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path3,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str1 += 'r'                                                             # STEP 33
ACTION: str1 += 'r' 
str1 = 'zte' : <type 'str'>
=> str1 = 'zter' : <type 'str'>
==================================================
result = os0.path.abspath(path1)                                        # STEP 34
ACTION: result = os0.path.abspath(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101c75750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path1) 
==================================================
str0 += 'x'                                                             # STEP 35
ACTION: str0 += 'x' 
str0 = 'jxnk' : <type 'str'>
=> str0 = 'jxnkx' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 36
ACTION: path1 += "/" + component4 
component4 = 'h' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
os0.mkdir(path1)                                                        # STEP 37
ACTION: os0.mkdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101c75750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/h' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.mkdir(path1) 
==================================================
path3 += "/" + component1                                               # STEP 38
ACTION: path3 += "/" + component1 
component1 = 'e' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
stat3 = os0.stat(path1)                                                 # STEP 39
ACTION: stat3 = os0.stat(path1) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101c75750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/h' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103694090> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path1) 
=> stat_REF3 = posix.stat_result(st_mode=16877, st_ino=12415477, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507320140, st_mtime=1507320140, st_ctime=1507320140) : <type 'posix.stat_result'>
==================================================
os0.remove(path1)                                                       # STEP 40
ACTION: os0.remove(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101c75750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/h' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test/h'
REFERENCE ACTION: os_REF0.remove(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test/h'
==================================================
str2 += 't'                                                             # STEP 41
ACTION: str2 += 't' 
str2 = 'mvohc' : <type 'str'>
=> str2 = 'mvohct' : <type 'str'>
==================================================
result = os0.readlink(path2)                                            # STEP 42
ACTION: result = os0.readlink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101c75750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 43
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101c75750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
component1 = "delta"                                                    # STEP 44
ACTION: component1 = "delta" 
component1 = 'e' : <type 'str'>
=> component1 = 'delta' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 45
ACTION: str2 += 'a' 
str2 = 'mvohct' : <type 'str'>
=> str2 = 'mvohcta' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 46
ACTION: str0 += 'd' 
str0 = 'jxnkx' : <type 'str'>
=> str0 = 'jxnkxd' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 47
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 48
ACTION: str3 += 'g' 
str3 = '' : <type 'str'>
=> str3 = 'g' : <type 'str'>
==================================================
stat2 = os0.fstat(fd0)                                                  # STEP 49
ACTION: stat2 = os0.fstat(fd0) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101c75750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x101c347d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF0) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=12415478, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507320140, st_mtime=1507320140, st_ctime=1507320140) : <type 'posix.stat_result'>
==================================================
str1 += 'a'                                                             # STEP 50
ACTION: str1 += 'a' 
str1 = 'zter' : <type 'str'>
=> str1 = 'ztera' : <type 'str'>
==================================================
result = os0.path.isfile(path3)                                         # STEP 51
ACTION: result = os0.path.isfile(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101c75750> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path3) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (False) == (True) ',), <traceback object at 0x1017f95a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 30649, in act571
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
0.18875002861 TOTAL RUNTIME
4 EXECUTED
652 TOTAL TEST OPERATIONS
0.114129543304 TIME SPENT EXECUTING TEST OPERATIONS
0.0323731899261 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000346183776855 TIME SPENT CHECKING PROPERTIES
0.114475727081 TOTAL TIME SPENT RUNNING SUT
0.0123620033264 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
