Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.55923.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('an integer is required',), <traceback object at 0x103ed8638>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 24139, in act474
    self.p_stat[2] = self.p_os[0].stat(self.p_path[1])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3551, in stat
    return self.filesystem.GetStat(entry_path, follow_symlinks)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1081, in GetStat
    file_object = self.ResolveObject(entry_path, follow_symlinks, allow_fd=True)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1829, in ResolveObject
    return self.GetOpenFile(file_path).GetObject()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1209, in GetOpenFile
    raise TypeError('an integer is required')
Original test has 51 steps

SAVING TEST AS failure.55923.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "gamma"                                                     # STEP 0
ACTION: component2 = "gamma" 
component2 = None : <type 'NoneType'>
=> component2 = 'gamma' : <type 'str'>
==================================================
component0 = "a"                                                         # STEP 1
ACTION: component0 = "a" 
component0 = None : <type 'NoneType'>
=> component0 = 'a' : <type 'str'>
==================================================
component3 = "c"                                                         # STEP 2
ACTION: component3 = "c" 
component3 = None : <type 'NoneType'>
=> component3 = 'c' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 3
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103b93090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
component4 = "alpha"                                                     # STEP 4
ACTION: component4 = "alpha" 
component4 = None : <type 'NoneType'>
=> component4 = 'alpha' : <type 'str'>
==================================================
component1 = "c"                                                         # STEP 5
ACTION: component1 = "c" 
component1 = None : <type 'NoneType'>
=> component1 = 'c' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 6
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 7
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
bytes2 = 0                                                               # STEP 8
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str1 += 'e'                                                              # STEP 9
ACTION: str1 += 'e' 
str1 = '' : <type 'str'>
=> str1 = 'e' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 10
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 11
ACTION: str1 += 'o' 
str1 = 'e' : <type 'str'>
=> str1 = 'eo' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 12
ACTION: str1 += 'o' 
str1 = 'eo' : <type 'str'>
=> str1 = 'eoo' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 13
ACTION: str1 += 'e' 
str1 = 'eoo' : <type 'str'>
=> str1 = 'eooe' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 14
ACTION: str1 += 'g' 
str1 = 'eooe' : <type 'str'>
=> str1 = 'eooeg' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 15
ACTION: str1 += 'd' 
str1 = 'eooeg' : <type 'str'>
=> str1 = 'eooegd' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 16
ACTION: str1 += 'h' 
str1 = 'eooegd' : <type 'str'>
=> str1 = 'eooegdh' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 17
ACTION: str1 += 'b' 
str1 = 'eooegdh' : <type 'str'>
=> str1 = 'eooegdhb' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 18
ACTION: str1 += 'p' 
str1 = 'eooegdhb' : <type 'str'>
=> str1 = 'eooegdhbp' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 19
ACTION: str0 += 'p' 
str0 = '' : <type 'str'>
=> str0 = 'p' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 20
ACTION: str0 += 'h' 
str0 = 'p' : <type 'str'>
=> str0 = 'ph' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 21
ACTION: str1 += 'f' 
str1 = 'eooegdhbp' : <type 'str'>
=> str1 = 'eooegdhbpf' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 22
ACTION: str1 += 'x' 
str1 = 'eooegdhbpf' : <type 'str'>
=> str1 = 'eooegdhbpfx' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 23
ACTION: str1 += 'l' 
str1 = 'eooegdhbpfx' : <type 'str'>
=> str1 = 'eooegdhbpfxl' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 24
ACTION: str1 += 'v' 
str1 = 'eooegdhbpfxl' : <type 'str'>
=> str1 = 'eooegdhbpfxlv' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 25
ACTION: str1 += 'z' 
str1 = 'eooegdhbpfxlv' : <type 'str'>
=> str1 = 'eooegdhbpfxlvz' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 26
ACTION: str1 += 'e' 
str1 = 'eooegdhbpfxlvz' : <type 'str'>
=> str1 = 'eooegdhbpfxlvze' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 27
ACTION: str1 += 'c' 
str1 = 'eooegdhbpfxlvze' : <type 'str'>
=> str1 = 'eooegdhbpfxlvzec' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 28
ACTION: str1 += 'd' 
str1 = 'eooegdhbpfxlvzec' : <type 'str'>
=> str1 = 'eooegdhbpfxlvzecd' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 29
ACTION: str0 += 'y' 
str0 = 'ph' : <type 'str'>
=> str0 = 'phy' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 30
ACTION: str0 += 'p' 
str0 = 'phy' : <type 'str'>
=> str0 = 'phyp' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 31
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 32
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.mkdir(path4)                                                        # STEP 33
ACTION: os0.mkdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103b93090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
str1 += 'z'                                                             # STEP 34
ACTION: str1 += 'z' 
str1 = 'eooegdhbpfxlvzecd' : <type 'str'>
=> str1 = 'eooegdhbpfxlvzecdz' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 35
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 36
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 37
ACTION: str0 += 'p' 
str0 = 'phyp' : <type 'str'>
=> str0 = 'phypp' : <type 'str'>
==================================================
result = sorted(os0.listdir(path1))                                     # STEP 38
ACTION: result = sorted(os0.listdir(path1)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103b93090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path1)) 
==================================================
str1 += 'y'                                                             # STEP 39
ACTION: str1 += 'y' 
str1 = 'eooegdhbpfxlvzecdz' : <type 'str'>
=> str1 = 'eooegdhbpfxlvzecdzy' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 40
ACTION: str0 += 'z' 
str0 = 'phypp' : <type 'str'>
=> str0 = 'phyppz' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 41
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
path1 += "/" + component2                                               # STEP 42
ACTION: path1 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 43
ACTION: path0 += "/" + component0 
component0 = 'a' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 44
ACTION: path0 += "/" + component1 
component1 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test/a' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/a/c' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 45
ACTION: str0 += 'r' 
str0 = 'phyppz' : <type 'str'>
=> str0 = 'phyppzr' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 46
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str0 += 'v'                                                             # STEP 47
ACTION: str0 += 'v' 
str0 = 'phyppzr' : <type 'str'>
=> str0 = 'phyppzrv' : <type 'str'>
==================================================
fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 48
ACTION: fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103b93090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_WRONLY | os.O_APPEND) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma'
==================================================
path1 += "/" + component0                                               # STEP 49
ACTION: path1 += "/" + component0 
component0 = 'a' : <type 'str'>
path1 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma/a' : <type 'str'>
==================================================
stat2 = os0.stat(path1)                                                 # STEP 50
ACTION: stat2 = os0.stat(path1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103b93090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/gamma/a' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> an integer is required
ERROR: (<type 'exceptions.TypeError'>, TypeError('an integer is required',), <traceback object at 0x1043ea710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 24139, in act474
    self.p_stat[2] = self.p_os[0].stat(self.p_path[1])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3551, in stat
    return self.filesystem.GetStat(entry_path, follow_symlinks)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1081, in GetStat
    file_object = self.ResolveObject(entry_path, follow_symlinks, allow_fd=True)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1829, in ResolveObject
    return self.GetOpenFile(file_path).GetObject()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1209, in GetOpenFile
    raise TypeError('an integer is required')
STOPPING TESTING DUE TO FAILED TEST
0.0340969562531 TOTAL RUNTIME
1 EXECUTED
51 TOTAL TEST OPERATIONS
0.00391626358032 TIME SPENT EXECUTING TEST OPERATIONS
0.00376844406128 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.24113464355e-05 TIME SPENT CHECKING PROPERTIES
0.00393867492676 TOTAL TIME SPENT RUNNING SUT
0.00298714637756 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
