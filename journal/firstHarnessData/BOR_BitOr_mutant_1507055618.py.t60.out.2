Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.49647.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102b231b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 11919, in act301
    assert (type(raised) == type(refRaised))
Original test has 55 steps

SAVING TEST AS failure.49647.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str0 = ""                                                                # STEP 0
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'l'                                                              # STEP 1
ACTION: str0 += 'l' 
str0 = '' : <type 'str'>
=> str0 = 'l' : <type 'str'>
==================================================
component2 = "alpha"                                                     # STEP 2
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 3
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
component0 = "h"                                                         # STEP 4
ACTION: component0 = "h" 
component0 = None : <type 'NoneType'>
=> component0 = 'h' : <type 'str'>
==================================================
str0 += 'a'                                                              # STEP 5
ACTION: str0 += 'a' 
str0 = 'l' : <type 'str'>
=> str0 = 'la' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 6
ACTION: str0 = "" 
str0 = 'la' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'n'                                                              # STEP 7
ACTION: str0 += 'n' 
str0 = '' : <type 'str'>
=> str0 = 'n' : <type 'str'>
==================================================
str0 += 'd'                                                              # STEP 8
ACTION: str0 += 'd' 
str0 = 'n' : <type 'str'>
=> str0 = 'nd' : <type 'str'>
==================================================
str0 += 'n'                                                              # STEP 9
ACTION: str0 += 'n' 
str0 = 'nd' : <type 'str'>
=> str0 = 'ndn' : <type 'str'>
==================================================
component1 = "d"                                                        # STEP 10
ACTION: component1 = "d" 
component1 = None : <type 'NoneType'>
=> component1 = 'd' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 11
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 12
ACTION: str1 += 'o' 
str1 = '' : <type 'str'>
=> str1 = 'o' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 13
ACTION: str0 += 'g' 
str0 = 'ndn' : <type 'str'>
=> str0 = 'ndng' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 14
ACTION: str0 += 't' 
str0 = 'ndng' : <type 'str'>
=> str0 = 'ndngt' : <type 'str'>
==================================================
component4 = "h"                                                        # STEP 15
ACTION: component4 = "h" 
component4 = None : <type 'NoneType'>
=> component4 = 'h' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 16
ACTION: str0 += 'r' 
str0 = 'ndngt' : <type 'str'>
=> str0 = 'ndngtr' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 17
ACTION: str0 += 'g' 
str0 = 'ndngtr' : <type 'str'>
=> str0 = 'ndngtrg' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 18
ACTION: str1 += 'u' 
str1 = 'o' : <type 'str'>
=> str1 = 'ou' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 19
ACTION: str0 += 't' 
str0 = 'ndngtrg' : <type 'str'>
=> str0 = 'ndngtrgt' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 20
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 21
ACTION: str0 += 'm' 
str0 = 'ndngtrgt' : <type 'str'>
=> str0 = 'ndngtrgtm' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 22
ACTION: str0 += 'b' 
str0 = 'ndngtrgtm' : <type 'str'>
=> str0 = 'ndngtrgtmb' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 23
ACTION: str0 += 'i' 
str0 = 'ndngtrgtmb' : <type 'str'>
=> str0 = 'ndngtrgtmbi' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 24
ACTION: str1 += 'w' 
str1 = 'ou' : <type 'str'>
=> str1 = 'ouw' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 25
ACTION: str0 = "" 
str0 = 'ndngtrgtmbi' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 26
ACTION: str0 += 'm' 
str0 = '' : <type 'str'>
=> str0 = 'm' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 27
ACTION: str1 += 'n' 
str1 = 'ouw' : <type 'str'>
=> str1 = 'ouwn' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 28
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 29
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 30
ACTION: str1 += 'o' 
str1 = 'ouwn' : <type 'str'>
=> str1 = 'ouwno' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 31
ACTION: str1 += 'n' 
str1 = 'ouwno' : <type 'str'>
=> str1 = 'ouwnon' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 32
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 33
ACTION: str1 += 'r' 
str1 = 'ouwnon' : <type 'str'>
=> str1 = 'ouwnonr' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 34
ACTION: path1 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 35
ACTION: str1 += 'e' 
str1 = 'ouwnonr' : <type 'str'>
=> str1 = 'ouwnonre' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 36
ACTION: str0 += 'y' 
str0 = 'm' : <type 'str'>
=> str0 = 'my' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 37
ACTION: path4 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 38
ACTION: str0 += 'q' 
str0 = 'my' : <type 'str'>
=> str0 = 'myq' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 39
ACTION: path4 += "/" + component3 
component3 = 'a' : <type 'str'>
path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/alpha/a' : <type 'str'>
==================================================
component3 = "a"                                                        # STEP 40
ACTION: component3 = "a" 
component3 = 'a' : <type 'str'>
==================================================
component2 = "gamma"                                                    # STEP 41
ACTION: component2 = "gamma" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'gamma' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 42
ACTION: str0 += 'u' 
str0 = 'myq' : <type 'str'>
=> str0 = 'myqu' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 43
ACTION: str0 += 'u' 
str0 = 'myqu' : <type 'str'>
=> str0 = 'myquu' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 44
ACTION: str0 += 'm' 
str0 = 'myquu' : <type 'str'>
=> str0 = 'myquum' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 45
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c8e9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.path.isfile(path1)                                         # STEP 46
ACTION: result = os0.path.isfile(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c8e9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path1) 
==================================================
path0 += "/" + component2                                               # STEP 47
ACTION: path0 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
os0.symlink(path1,path4)                                                # STEP 48
ACTION: os0.symlink(path1,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c8e9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
path4 = '/Volumes/ramdisk/test/alpha/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: os_REF0.symlink(path1,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
str1 += 'u'                                                             # STEP 49
ACTION: str1 += 'u' 
str1 = 'ouwnonre' : <type 'str'>
=> str1 = 'ouwnonreu' : <type 'str'>
==================================================
result = os0.readlink(path0)                                            # STEP 50
ACTION: result = os0.readlink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c8e9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake path does not exist: '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: result_REF = os_REF0.readlink(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma'
==================================================
os0.symlink(path3,path1)                                                # STEP 51
ACTION: os0.symlink(path3,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c8e9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path3,path1) 
==================================================
stat3 = os0.lstat(path1)                                                # STEP 52
ACTION: stat3 = os0.lstat(path1) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c8e9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102c58f90> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path1) 
=> stat_REF3 = posix.stat_result(st_mode=41453, st_ino=3605737, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=21, st_atime=1507197370, st_mtime=1507197370, st_ctime=1507197370) : <type 'posix.stat_result'>
==================================================
stat0 = os0.stat(path4)                                                 # STEP 53
ACTION: stat0 = os0.stat(path4) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c8e9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/alpha/a' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in fake filesystem: '/Volumes/ramdisk/test/alpha/a'
REFERENCE ACTION: stat_REF0 = os_REF0.stat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha/a'
==================================================
os0.link(path1,path0)                                                   # STEP 54
ACTION: os0.link(path1,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c8e9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.link(path1,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102cab200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 11919, in act301
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.163751840591 TOTAL RUNTIME
4 EXECUTED
655 TOTAL TEST OPERATIONS
0.0904488563538 TIME SPENT EXECUTING TEST OPERATIONS
0.0312864780426 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000328540802002 TIME SPENT CHECKING PROPERTIES
0.0907773971558 TOTAL TIME SPENT RUNNING SUT
0.0116238594055 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
