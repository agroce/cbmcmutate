Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62252.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102d6f560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31557, in act586
    assert (type(raised) == type(refRaised))
Original test has 44 steps

SAVING TEST AS failure.62252.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "lambda"                                                    # STEP 0
ACTION: component0 = "lambda" 
component0 = None : <type 'NoneType'>
=> component0 = 'lambda' : <type 'str'>
==================================================
component1 = "phi"                                                       # STEP 1
ACTION: component1 = "phi" 
component1 = None : <type 'NoneType'>
=> component1 = 'phi' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "gamma"                                                     # STEP 3
ACTION: component2 = "gamma" 
component2 = None : <type 'NoneType'>
=> component2 = 'gamma' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 4
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component4 = "f"                                                         # STEP 5
ACTION: component4 = "f" 
component4 = None : <type 'NoneType'>
=> component4 = 'f' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 6
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component3 = "gamma"                                                     # STEP 7
ACTION: component3 = "gamma" 
component3 = None : <type 'NoneType'>
=> component3 = 'gamma' : <type 'str'>
==================================================
str4 += 'j'                                                              # STEP 8
ACTION: str4 += 'j' 
str4 = '' : <type 'str'>
=> str4 = 'j' : <type 'str'>
==================================================
str4 += 'd'                                                              # STEP 9
ACTION: str4 += 'd' 
str4 = 'j' : <type 'str'>
=> str4 = 'jd' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 10
ACTION: str4 += 'y' 
str4 = 'jd' : <type 'str'>
=> str4 = 'jdy' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 11
ACTION: str4 += 'z' 
str4 = 'jdy' : <type 'str'>
=> str4 = 'jdyz' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 12
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 13
ACTION: str4 += 'x' 
str4 = 'jdyz' : <type 'str'>
=> str4 = 'jdyzx' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 14
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str4 += 'k'                                                             # STEP 15
ACTION: str4 += 'k' 
str4 = 'jdyzx' : <type 'str'>
=> str4 = 'jdyzxk' : <type 'str'>
==================================================
result = sorted(os0.listdir(path3))                                     # STEP 16
ACTION: result = sorted(os0.listdir(path3)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path3)) 
==================================================
str4 += 'u'                                                             # STEP 17
ACTION: str4 += 'u' 
str4 = 'jdyzxk' : <type 'str'>
=> str4 = 'jdyzxku' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 18
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 19
ACTION: str4 += 'o' 
str4 = 'jdyzxku' : <type 'str'>
=> str4 = 'jdyzxkuo' : <type 'str'>
==================================================
result = os0.path.islink(path2)                                         # STEP 20
ACTION: result = os0.path.islink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path2) 
==================================================
os0.mkdir(path2)                                                        # STEP 21
ACTION: os0.mkdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
os0.symlink(path2,path4)                                                # STEP 22
ACTION: os0.symlink(path2,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path2,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str4 += 'f'                                                             # STEP 23
ACTION: str4 += 'f' 
str4 = 'jdyzxkuo' : <type 'str'>
=> str4 = 'jdyzxkuof' : <type 'str'>
==================================================
os0.symlink(path2,path2)                                                # STEP 24
ACTION: os0.symlink(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.abspath(path4)                                        # STEP 25
ACTION: result = os0.path.abspath(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path4) 
==================================================
str4 += 's'                                                             # STEP 26
ACTION: str4 += 's' 
str4 = 'jdyzxkuof' : <type 'str'>
=> str4 = 'jdyzxkuofs' : <type 'str'>
==================================================
os0.link(path3,path3)                                                   # STEP 27
ACTION: os0.link(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str4 += 'o'                                                             # STEP 28
ACTION: str4 += 'o' 
str4 = 'jdyzxkuofs' : <type 'str'>
=> str4 = 'jdyzxkuofso' : <type 'str'>
==================================================
os0.symlink(path4,path4)                                                # STEP 29
ACTION: os0.symlink(path4,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path4,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str4 += " "                                                             # STEP 30
ACTION: str4 += " " 
str4 = 'jdyzxkuofso' : <type 'str'>
=> str4 = 'jdyzxkuofso ' : <type 'str'>
==================================================
os0.symlink(path3,path3)                                                # STEP 31
ACTION: os0.symlink(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.makedirs(path4)                                                     # STEP 32
ACTION: os0.makedirs(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = os0.path.isdir(path4)                                          # STEP 33
ACTION: result = os0.path.isdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path4) 
==================================================
os0.link(path3,path4)                                                   # STEP 34
ACTION: os0.link(path3,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path3,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str4 += 's'                                                             # STEP 35
ACTION: str4 += 's' 
str4 = 'jdyzxkuofso ' : <type 'str'>
=> str4 = 'jdyzxkuofso s' : <type 'str'>
==================================================
os0.mkdir(path3)                                                        # STEP 36
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
path3 += "/" + component1                                               # STEP 37
ACTION: path3 += "/" + component1 
component1 = 'phi' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
result = os0.path.exists(path3)                                         # STEP 38
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
os0.remove(path2)                                                       # STEP 39
ACTION: os0.remove(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
result = os0.path.isfile(path2)                                         # STEP 40
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
path2 += "/" + component3                                               # STEP 41
ACTION: path2 += "/" + component3 
component3 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 42
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.getsize(path3)                                        # STEP 43
ACTION: result = os0.path.getsize(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102706a10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/phi'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10287e248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31557, in act586
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.160261869431 TOTAL RUNTIME
4 EXECUTED
644 TOTAL TEST OPERATIONS
0.0966129302979 TIME SPENT EXECUTING TEST OPERATIONS
0.0260174274445 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000307559967041 TIME SPENT CHECKING PROPERTIES
0.0969204902649 TOTAL TIME SPENT RUNNING SUT
0.0107200145721 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
