Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.51142.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102e924d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 27970, in act529
    assert (type(raised) == type(refRaised))
Original test has 48 steps

SAVING TEST AS failure.51142.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "h"                                                         # STEP 0
ACTION: component4 = "h" 
component4 = None : <type 'NoneType'>
=> component4 = 'h' : <type 'str'>
==================================================
component0 = "c"                                                         # STEP 1
ACTION: component0 = "c" 
component0 = None : <type 'NoneType'>
=> component0 = 'c' : <type 'str'>
==================================================
component2 = "d"                                                         # STEP 2
ACTION: component2 = "d" 
component2 = None : <type 'NoneType'>
=> component2 = 'd' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 3
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
bytes0 = 0                                                               # STEP 4
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component1 = "c"                                                         # STEP 5
ACTION: component1 = "c" 
component1 = None : <type 'NoneType'>
=> component1 = 'c' : <type 'str'>
==================================================
component3 = "alpha"                                                     # STEP 6
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = sorted(os0.listdir(path3))                                      # STEP 8
ACTION: result = sorted(os0.listdir(path3)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path3)) 
==================================================
bytes3 = 0                                                               # STEP 9
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 = ""                                                               # STEP 10
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 11
ACTION: str3 += 'x' 
str3 = '' : <type 'str'>
=> str3 = 'x' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 12
ACTION: str3 += 'b' 
str3 = 'x' : <type 'str'>
=> str3 = 'xb' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 13
ACTION: str3 += 'x' 
str3 = 'xb' : <type 'str'>
=> str3 = 'xbx' : <type 'str'>
==================================================
result = sorted(os0.listdir(path3))                                     # STEP 14
ACTION: result = sorted(os0.listdir(path3)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path3)) 
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 15
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 16
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.isfile(path1)                                         # STEP 17
ACTION: result = os0.path.isfile(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path1) 
==================================================
str3 += 'h'                                                             # STEP 18
ACTION: str3 += 'h' 
str3 = 'xbx' : <type 'str'>
=> str3 = 'xbxh' : <type 'str'>
==================================================
result = os0.readlink(path3)                                            # STEP 19
ACTION: result = os0.readlink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
result = os0.path.exists(path3)                                         # STEP 20
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
str3 += 'c'                                                             # STEP 21
ACTION: str3 += 'c' 
str3 = 'xbxh' : <type 'str'>
=> str3 = 'xbxhc' : <type 'str'>
==================================================
result = os0.readlink(path0)                                            # STEP 22
ACTION: result = os0.readlink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
result = os0.path.isdir(path0)                                          # STEP 23
ACTION: result = os0.path.isdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path0) 
==================================================
str2 = ""                                                               # STEP 24
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
os0.symlink(path1,path0)                                                # STEP 25
ACTION: os0.symlink(path1,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path1,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str3 += 'x'                                                             # STEP 26
ACTION: str3 += 'x' 
str3 = 'xbxhc' : <type 'str'>
=> str3 = 'xbxhcx' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 27
ACTION: str2 += " " 
str2 = '' : <type 'str'>
=> str2 = ' ' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 28
ACTION: str2 += 'e' 
str2 = ' ' : <type 'str'>
=> str2 = ' e' : <type 'str'>
==================================================
os0.link(path3,path1)                                                   # STEP 29
ACTION: os0.link(path3,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path3,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str2 += 't'                                                             # STEP 30
ACTION: str2 += 't' 
str2 = ' e' : <type 'str'>
=> str2 = ' et' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 31
ACTION: str3 += 'i' 
str3 = 'xbxhcx' : <type 'str'>
=> str3 = 'xbxhcxi' : <type 'str'>
==================================================
result = os0.path.lexists(path0)                                        # STEP 32
ACTION: result = os0.path.lexists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path0) 
==================================================
result = sorted(os0.listdir(path0))                                     # STEP 33
ACTION: result = sorted(os0.listdir(path0)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path0)) 
==================================================
str3 += 'f'                                                             # STEP 34
ACTION: str3 += 'f' 
str3 = 'xbxhcxi' : <type 'str'>
=> str3 = 'xbxhcxif' : <type 'str'>
==================================================
os0.mkdir(path1)                                                        # STEP 35
ACTION: os0.mkdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = sorted(os0.listdir(path0))                                     # STEP 36
ACTION: result = sorted(os0.listdir(path0)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path0)) 
==================================================
str0 = ""                                                               # STEP 37
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 38
ACTION: str0 += 'd' 
str0 = '' : <type 'str'>
=> str0 = 'd' : <type 'str'>
==================================================
os0.makedirs(path0)                                                     # STEP 39
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
os0.makedirs(path0)                                                     # STEP 40
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
str3 += 'a'                                                             # STEP 41
ACTION: str3 += 'a' 
str3 = 'xbxhcxif' : <type 'str'>
=> str3 = 'xbxhcxifa' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 42
ACTION: str2 += 'g' 
str2 = ' et' : <type 'str'>
=> str2 = ' etg' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 43
ACTION: path0 += "/" + component1 
component1 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 44
ACTION: str0 += 'j' 
str0 = 'd' : <type 'str'>
=> str0 = 'dj' : <type 'str'>
==================================================
stat2 = os0.lstat(path0)                                                # STEP 45
ACTION: stat2 = os0.lstat(path0) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/c'
REFERENCE ACTION: stat_REF2 = os_REF0.lstat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/c'
==================================================
str2 += 'y'                                                             # STEP 46
ACTION: str2 += 'y' 
str2 = ' etg' : <type 'str'>
=> str2 = ' etgy' : <type 'str'>
==================================================
os0.rename(path0,path1)                                                 # STEP 47
ACTION: os0.rename(path0,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038b2c10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.IOError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/c'
REFERENCE ACTION: os_REF0.rename(path0,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1038bc128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 27970, in act529
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.048278093338 TOTAL RUNTIME
1 EXECUTED
48 TOTAL TEST OPERATIONS
0.0096378326416 TIME SPENT EXECUTING TEST OPERATIONS
0.00357842445374 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.6968460083e-05 TIME SPENT CHECKING PROPERTIES
0.00968480110168 TOTAL TIME SPENT RUNNING SUT
0.00359106063843 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
