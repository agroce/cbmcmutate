Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62072.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10386e560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1313, in NormalizeCase
    path_components = self.GetPathComponents(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1544, in GetPathComponents
    assert (not (drive or path_components))
Original test has 107 steps

SAVING TEST AS failure.62072.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "omega"                                                     # STEP 0
ACTION: component3 = "omega" 
component3 = None : <type 'NoneType'>
=> component3 = 'omega' : <type 'str'>
==================================================
component1 = "gamma"                                                     # STEP 1
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 2
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component4 = "g"                                                         # STEP 3
ACTION: component4 = "g" 
component4 = None : <type 'NoneType'>
=> component4 = 'g' : <type 'str'>
==================================================
component0 = "omega"                                                     # STEP 4
ACTION: component0 = "omega" 
component0 = None : <type 'NoneType'>
=> component0 = 'omega' : <type 'str'>
==================================================
component2 = "alpha"                                                     # STEP 5
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 6
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str3 += 'q'                                                              # STEP 7
ACTION: str3 += 'q' 
str3 = '' : <type 'str'>
=> str3 = 'q' : <type 'str'>
==================================================
str4 += 'c'                                                              # STEP 8
ACTION: str4 += 'c' 
str4 = '' : <type 'str'>
=> str4 = 'c' : <type 'str'>
==================================================
str3 += 'c'                                                              # STEP 9
ACTION: str3 += 'c' 
str3 = 'q' : <type 'str'>
=> str3 = 'qc' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 10
ACTION: str3 += 'j' 
str3 = 'qc' : <type 'str'>
=> str3 = 'qcj' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 11
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 12
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str3 = ""                                                               # STEP 13
ACTION: str3 = "" 
str3 = 'qcj' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 14
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 15
ACTION: str4 += 'j' 
str4 = 'c' : <type 'str'>
=> str4 = 'cj' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 16
ACTION: str3 += 'u' 
str3 = '' : <type 'str'>
=> str3 = 'u' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 17
ACTION: path3 += "/" + component4 
component4 = 'g' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 18
ACTION: str4 += 'e' 
str4 = 'cj' : <type 'str'>
=> str4 = 'cje' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 19
ACTION: str0 += 'd' 
str0 = '' : <type 'str'>
=> str0 = 'd' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 20
ACTION: str3 += 'q' 
str3 = 'u' : <type 'str'>
=> str3 = 'uq' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 21
ACTION: str4 += 'b' 
str4 = 'cje' : <type 'str'>
=> str4 = 'cjeb' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 22
ACTION: str3 += 'd' 
str3 = 'uq' : <type 'str'>
=> str3 = 'uqd' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 23
ACTION: component4 = "beta" 
component4 = 'g' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 24
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 25
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str0 += 'p'                                                             # STEP 26
ACTION: str0 += 'p' 
str0 = 'd' : <type 'str'>
=> str0 = 'dp' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 27
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 28
ACTION: path3 += "/" + component0 
component0 = 'omega' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 29
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 30
ACTION: str4 += 'r' 
str4 = 'cjeb' : <type 'str'>
=> str4 = 'cjebr' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 31
ACTION: str4 += 'u' 
str4 = 'cjebr' : <type 'str'>
=> str4 = 'cjebru' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 32
ACTION: str4 += 't' 
str4 = 'cjebru' : <type 'str'>
=> str4 = 'cjebrut' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 33
ACTION: str0 += 'x' 
str0 = 'dp' : <type 'str'>
=> str0 = 'dpx' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 34
ACTION: str0 += 'g' 
str0 = 'dpx' : <type 'str'>
=> str0 = 'dpxg' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 35
ACTION: str4 += 'z' 
str4 = 'cjebrut' : <type 'str'>
=> str4 = 'cjebrutz' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 36
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component0 = "f"                                                        # STEP 37
ACTION: component0 = "f" 
component0 = 'omega' : <type 'str'>
=> component0 = 'f' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 38
ACTION: str0 += " " 
str0 = 'dpxg' : <type 'str'>
=> str0 = 'dpxg ' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 39
ACTION: str4 += 'i' 
str4 = 'cjebrutz' : <type 'str'>
=> str4 = 'cjebrutzi' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 40
ACTION: str3 += 'q' 
str3 = 'uqd' : <type 'str'>
=> str3 = 'uqdq' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 41
ACTION: str4 += 'u' 
str4 = 'cjebrutzi' : <type 'str'>
=> str4 = 'cjebrutziu' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 42
ACTION: str3 += 's' 
str3 = 'uqdq' : <type 'str'>
=> str3 = 'uqdqs' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 43
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 44
ACTION: str3 += 'k' 
str3 = 'uqdqs' : <type 'str'>
=> str3 = 'uqdqsk' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 45
ACTION: str0 += 'l' 
str0 = 'dpxg ' : <type 'str'>
=> str0 = 'dpxg l' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 46
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str4 += 'h'                                                             # STEP 47
ACTION: str4 += 'h' 
str4 = 'cjebrutziu' : <type 'str'>
=> str4 = 'cjebrutziuh' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 48
ACTION: str3 += 'x' 
str3 = 'uqdqsk' : <type 'str'>
=> str3 = 'uqdqskx' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 49
ACTION: str4 += 'y' 
str4 = 'cjebrutziuh' : <type 'str'>
=> str4 = 'cjebrutziuhy' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 50
ACTION: str0 += 'h' 
str0 = 'dpxg l' : <type 'str'>
=> str0 = 'dpxg lh' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 51
ACTION: str0 += 'y' 
str0 = 'dpxg lh' : <type 'str'>
=> str0 = 'dpxg lhy' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 52
ACTION: str0 += 'h' 
str0 = 'dpxg lhy' : <type 'str'>
=> str0 = 'dpxg lhyh' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 53
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 54
ACTION: str3 += 'k' 
str3 = 'uqdqskx' : <type 'str'>
=> str3 = 'uqdqskxk' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 55
ACTION: str0 += 'q' 
str0 = 'dpxg lhyh' : <type 'str'>
=> str0 = 'dpxg lhyhq' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 56
ACTION: path2 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 57
ACTION: str4 += 'i' 
str4 = 'cjebrutziuhy' : <type 'str'>
=> str4 = 'cjebrutziuhyi' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 58
ACTION: str0 += 'n' 
str0 = 'dpxg lhyhq' : <type 'str'>
=> str0 = 'dpxg lhyhqn' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 59
ACTION: path2 += "/" + component3 
component3 = 'omega' : <type 'str'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha/omega' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 60
ACTION: str3 += 'j' 
str3 = 'uqdqskxk' : <type 'str'>
=> str3 = 'uqdqskxkj' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 61
ACTION: path0 += "/" + component0 
component0 = 'f' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
component2 = "beta"                                                     # STEP 62
ACTION: component2 = "beta" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'beta' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 63
ACTION: str4 += 't' 
str4 = 'cjebrutziuhyi' : <type 'str'>
=> str4 = 'cjebrutziuhyit' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 64
ACTION: str0 += 'b' 
str0 = 'dpxg lhyhqn' : <type 'str'>
=> str0 = 'dpxg lhyhqnb' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 65
ACTION: str0 += 'v' 
str0 = 'dpxg lhyhqnb' : <type 'str'>
=> str0 = 'dpxg lhyhqnbv' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 66
ACTION: str4 += 'a' 
str4 = 'cjebrutziuhyit' : <type 'str'>
=> str4 = 'cjebrutziuhyita' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 67
ACTION: str3 += 'c' 
str3 = 'uqdqskxkj' : <type 'str'>
=> str3 = 'uqdqskxkjc' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 68
ACTION: str4 += 'q' 
str4 = 'cjebrutziuhyita' : <type 'str'>
=> str4 = 'cjebrutziuhyitaq' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 69
ACTION: str4 += 'n' 
str4 = 'cjebrutziuhyitaq' : <type 'str'>
=> str4 = 'cjebrutziuhyitaqn' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 70
ACTION: path3 += "/" + component3 
component3 = 'omega' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 71
ACTION: str1 += 'o' 
str1 = '' : <type 'str'>
=> str1 = 'o' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 72
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
bytes1 = 0                                                              # STEP 73
ACTION: bytes1 = 0 
bytes1 = 1 : <type 'int'>
=> bytes1 = 0 : <type 'int'>
==================================================
str4 += 'd'                                                             # STEP 74
ACTION: str4 += 'd' 
str4 = 'cjebrutziuhyitaqn' : <type 'str'>
=> str4 = 'cjebrutziuhyitaqnd' : <type 'str'>
==================================================
component0 = "epsilon"                                                  # STEP 75
ACTION: component0 = "epsilon" 
component0 = 'f' : <type 'str'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
component3 = "lambda"                                                   # STEP 76
ACTION: component3 = "lambda" 
component3 = 'omega' : <type 'str'>
=> component3 = 'lambda' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 77
ACTION: str3 += 'd' 
str3 = 'uqdqskxkjc' : <type 'str'>
=> str3 = 'uqdqskxkjcd' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 78
ACTION: str4 += 't' 
str4 = 'cjebrutziuhyitaqnd' : <type 'str'>
=> str4 = 'cjebrutziuhyitaqndt' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 79
ACTION: str4 += 'u' 
str4 = 'cjebrutziuhyitaqndt' : <type 'str'>
=> str4 = 'cjebrutziuhyitaqndtu' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 80
ACTION: str0 = "" 
str0 = 'dpxg lhyhqnbv' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 81
ACTION: str0 += 'w' 
str0 = '' : <type 'str'>
=> str0 = 'w' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 82
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 83
ACTION: str1 += 's' 
str1 = 'o' : <type 'str'>
=> str1 = 'os' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 84
ACTION: str4 += 'm' 
str4 = 'cjebrutziuhyitaqndtu' : <type 'str'>
=> str4 = 'cjebrutziuhyitaqndtum' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 85
ACTION: str1 += 'e' 
str1 = 'os' : <type 'str'>
=> str1 = 'ose' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 86
ACTION: str4 += 's' 
str4 = 'cjebrutziuhyitaqndtum' : <type 'str'>
=> str4 = 'cjebrutziuhyitaqndtums' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 87
ACTION: str1 += 'r' 
str1 = 'ose' : <type 'str'>
=> str1 = 'oser' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 88
ACTION: str3 += 'v' 
str3 = 'uqdqskxkjcd' : <type 'str'>
=> str3 = 'uqdqskxkjcdv' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 89
ACTION: str1 += 'h' 
str1 = 'oser' : <type 'str'>
=> str1 = 'oserh' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 90
ACTION: str0 += 'p' 
str0 = 'w' : <type 'str'>
=> str0 = 'wp' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 91
ACTION: str2 += 'q' 
str2 = '' : <type 'str'>
=> str2 = 'q' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 92
ACTION: path0 += "/" + component4 
component4 = 'beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/f' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/f/beta' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 93
ACTION: str0 += 'r' 
str0 = 'wp' : <type 'str'>
=> str0 = 'wpr' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 94
ACTION: str3 += 'e' 
str3 = 'uqdqskxkjcdv' : <type 'str'>
=> str3 = 'uqdqskxkjcdve' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 95
ACTION: str3 += 'v' 
str3 = 'uqdqskxkjcdve' : <type 'str'>
=> str3 = 'uqdqskxkjcdvev' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 96
ACTION: str4 += 'o' 
str4 = 'cjebrutziuhyitaqndtums' : <type 'str'>
=> str4 = 'cjebrutziuhyitaqndtumso' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 97
ACTION: str0 += 'p' 
str0 = 'wpr' : <type 'str'>
=> str0 = 'wprp' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 98
ACTION: str2 += 'c' 
str2 = 'q' : <type 'str'>
=> str2 = 'qc' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 99
ACTION: str2 += 'd' 
str2 = 'qc' : <type 'str'>
=> str2 = 'qcd' : <type 'str'>
==================================================
path0 += "/" + component0                                              # STEP 100
ACTION: path0 += "/" + component0 
component0 = 'epsilon' : <type 'str'>
path0 = '/Volumes/ramdisk/test/f/beta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/f/beta/epsilon' : <type 'str'>
==================================================
str1 += 'v'                                                            # STEP 101
ACTION: str1 += 'v' 
str1 = 'oserh' : <type 'str'>
=> str1 = 'oserhv' : <type 'str'>
==================================================
component0 = "h"                                                       # STEP 102
ACTION: component0 = "h" 
component0 = 'epsilon' : <type 'str'>
=> component0 = 'h' : <type 'str'>
==================================================
path0 += "/" + component2                                              # STEP 103
ACTION: path0 += "/" + component2 
component2 = 'beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/f/beta/epsilon' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/f/beta/epsilon/beta' : <type 'str'>
==================================================
component4 = "f"                                                       # STEP 104
ACTION: component4 = "f" 
component4 = 'beta' : <type 'str'>
=> component4 = 'f' : <type 'str'>
==================================================
str4 += 'g'                                                            # STEP 105
ACTION: str4 += 'g' 
str4 = 'cjebrutziuhyitaqndtumso' : <type 'str'>
=> str4 = 'cjebrutziuhyitaqndtumsog' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 106
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.AssertionError'> 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1007aa368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1313, in NormalizeCase
    path_components = self.GetPathComponents(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1544, in GetPathComponents
    assert (not (drive or path_components))
STOPPING TESTING DUE TO FAILED TEST
0.0294370651245 TOTAL RUNTIME
1 EXECUTED
107 TOTAL TEST OPERATIONS
0.00172829627991 TIME SPENT EXECUTING TEST OPERATIONS
0.00430536270142 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.6968460083e-05 TIME SPENT CHECKING PROPERTIES
0.00177526473999 TOTAL TIME SPENT RUNNING SUT
0.0032000541687 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
