Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.60836.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1038267a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 16157, in act361
    assert (type(raised) == type(refRaised))
Original test has 37 steps

SAVING TEST AS failure.60836.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "b"                                                         # STEP 0
ACTION: component1 = "b" 
component1 = None : <type 'NoneType'>
=> component1 = 'b' : <type 'str'>
==================================================
component2 = "delta"                                                     # STEP 1
ACTION: component2 = "delta" 
component2 = None : <type 'NoneType'>
=> component2 = 'delta' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 2
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component4 = "alpha"                                                     # STEP 3
ACTION: component4 = "alpha" 
component4 = None : <type 'NoneType'>
=> component4 = 'alpha' : <type 'str'>
==================================================
component3 = "e"                                                         # STEP 4
ACTION: component3 = "e" 
component3 = None : <type 'NoneType'>
=> component3 = 'e' : <type 'str'>
==================================================
component0 = "lambda"                                                    # STEP 5
ACTION: component0 = "lambda" 
component0 = None : <type 'NoneType'>
=> component0 = 'lambda' : <type 'str'>
==================================================
str4 += " "                                                              # STEP 6
ACTION: str4 += " " 
str4 = '' : <type 'str'>
=> str4 = ' ' : <type 'str'>
==================================================
str4 += 'g'                                                              # STEP 7
ACTION: str4 += 'g' 
str4 = ' ' : <type 'str'>
=> str4 = ' g' : <type 'str'>
==================================================
str4 += 'k'                                                              # STEP 8
ACTION: str4 += 'k' 
str4 = ' g' : <type 'str'>
=> str4 = ' gk' : <type 'str'>
==================================================
str4 += 'k'                                                              # STEP 9
ACTION: str4 += 'k' 
str4 = ' gk' : <type 'str'>
=> str4 = ' gkk' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 10
ACTION: str4 += 'l' 
str4 = ' gkk' : <type 'str'>
=> str4 = ' gkkl' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 11
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str4 += 'n'                                                             # STEP 12
ACTION: str4 += 'n' 
str4 = ' gkkl' : <type 'str'>
=> str4 = ' gkkln' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 13
ACTION: str4 += 'h' 
str4 = ' gkkln' : <type 'str'>
=> str4 = ' gkklnh' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 14
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str4 += " "                                                             # STEP 15
ACTION: str4 += " " 
str4 = ' gkklnh' : <type 'str'>
=> str4 = ' gkklnh ' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 16
ACTION: str4 += 'k' 
str4 = ' gkklnh ' : <type 'str'>
=> str4 = ' gkklnh k' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 17
ACTION: str4 += 'p' 
str4 = ' gkklnh k' : <type 'str'>
=> str4 = ' gkklnh kp' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 18
ACTION: str4 += 'e' 
str4 = ' gkklnh kp' : <type 'str'>
=> str4 = ' gkklnh kpe' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 19
ACTION: str4 += 'c' 
str4 = ' gkklnh kpe' : <type 'str'>
=> str4 = ' gkklnh kpec' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 20
ACTION: str4 += 'a' 
str4 = ' gkklnh kpec' : <type 'str'>
=> str4 = ' gkklnh kpeca' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 21
ACTION: str4 += " " 
str4 = ' gkklnh kpeca' : <type 'str'>
=> str4 = ' gkklnh kpeca ' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 22
ACTION: str4 += 'j' 
str4 = ' gkklnh kpeca ' : <type 'str'>
=> str4 = ' gkklnh kpeca j' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 23
ACTION: str4 += 's' 
str4 = ' gkklnh kpeca j' : <type 'str'>
=> str4 = ' gkklnh kpeca js' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 24
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 25
ACTION: str4 += 'l' 
str4 = ' gkklnh kpeca js' : <type 'str'>
=> str4 = ' gkklnh kpeca jsl' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 26
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 27
ACTION: str1 += 'r' 
str1 = '' : <type 'str'>
=> str1 = 'r' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 28
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 29
ACTION: bytes4 += 1 
bytes4 = 1 : <type 'int'>
=> bytes4 = 2 : <type 'int'>
==================================================
str2 += 'i'                                                             # STEP 30
ACTION: str2 += 'i' 
str2 = '' : <type 'str'>
=> str2 = 'i' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 31
ACTION: path0 += "/" + component3 
component3 = 'e' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 32
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101bdce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 += 'b'                                                             # STEP 33
ACTION: str1 += 'b' 
str1 = 'r' : <type 'str'>
=> str1 = 'rb' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 34
ACTION: str1 += 'a' 
str1 = 'rb' : <type 'str'>
=> str1 = 'rba' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 35
ACTION: str1 += 'm' 
str1 = 'rba' : <type 'str'>
=> str1 = 'rbam' : <type 'str'>
==================================================
fd0 = os0.open(path0, os.O_CREAT)                                       # STEP 36
ACTION: fd0 = os0.open(path0, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101bdce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/e' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path0, os.O_CREAT) 
=> fd_REF0 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103865c20>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 16157, in act361
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0262351036072 TOTAL RUNTIME
1 EXECUTED
37 TOTAL TEST OPERATIONS
0.00144600868225 TIME SPENT EXECUTING TEST OPERATIONS
0.00348138809204 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.66893005371e-05 TIME SPENT CHECKING PROPERTIES
0.00146269798279 TOTAL TIME SPENT RUNNING SUT
0.00322699546814 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
