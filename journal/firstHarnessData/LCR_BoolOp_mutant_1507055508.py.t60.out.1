Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.64946.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('an integer is required',), <traceback object at 0x101f39bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 23021, in act458
    result = sorted(self.p_os[0].listdir(self.p_path[0]))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3440, in listdir
    return self.filesystem.ListDir(target_directory)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2531, in ListDir
    target_directory = self.ResolvePath(target_directory, allow_fd=True)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1704, in ResolvePath
    return self.GetOpenFile(file_path).GetObject().GetPath()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1209, in GetOpenFile
    raise TypeError('an integer is required')
Original test has 71 steps

SAVING TEST AS failure.64946.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path1 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "e"                                                         # STEP 1
ACTION: component4 = "e" 
component4 = None : <type 'NoneType'>
=> component4 = 'e' : <type 'str'>
==================================================
component1 = "d"                                                         # STEP 2
ACTION: component1 = "d" 
component1 = None : <type 'NoneType'>
=> component1 = 'd' : <type 'str'>
==================================================
component0 = "epsilon"                                                   # STEP 3
ACTION: component0 = "epsilon" 
component0 = None : <type 'NoneType'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
component3 = "h"                                                         # STEP 4
ACTION: component3 = "h" 
component3 = None : <type 'NoneType'>
=> component3 = 'h' : <type 'str'>
==================================================
component2 = "delta"                                                     # STEP 5
ACTION: component2 = "delta" 
component2 = None : <type 'NoneType'>
=> component2 = 'delta' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 6
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component4                                                # STEP 8
ACTION: path3 += "/" + component4 
component4 = 'e' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
str0 += 'f'                                                              # STEP 9
ACTION: str0 += 'f' 
str0 = '' : <type 'str'>
=> str0 = 'f' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 10
ACTION: str0 += 'w' 
str0 = 'f' : <type 'str'>
=> str0 = 'fw' : <type 'str'>
==================================================
component4 = "g"                                                        # STEP 11
ACTION: component4 = "g" 
component4 = 'e' : <type 'str'>
=> component4 = 'g' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 12
ACTION: str0 += 'i' 
str0 = 'fw' : <type 'str'>
=> str0 = 'fwi' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 13
ACTION: path3 += "/" + component2 
component2 = 'delta' : <type 'str'>
path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/e/delta' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 14
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
bytes2 = 0                                                              # STEP 15
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
bytes1 = 0                                                              # STEP 16
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
component2 = "omega"                                                    # STEP 17
ACTION: component2 = "omega" 
component2 = 'delta' : <type 'str'>
=> component2 = 'omega' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 18
ACTION: str0 += 'h' 
str0 = 'fwi' : <type 'str'>
=> str0 = 'fwih' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 19
ACTION: str0 += 't' 
str0 = 'fwih' : <type 'str'>
=> str0 = 'fwiht' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 20
ACTION: str0 += 'e' 
str0 = 'fwiht' : <type 'str'>
=> str0 = 'fwihte' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 21
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str0 += 'a'                                                             # STEP 22
ACTION: str0 += 'a' 
str0 = 'fwihte' : <type 'str'>
=> str0 = 'fwihtea' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 23
ACTION: str0 += 's' 
str0 = 'fwihtea' : <type 'str'>
=> str0 = 'fwihteas' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 24
ACTION: str0 = "" 
str0 = 'fwihteas' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 25
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 26
ACTION: str0 += 'v' 
str0 = '' : <type 'str'>
=> str0 = 'v' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 27
ACTION: str3 += 'q' 
str3 = '' : <type 'str'>
=> str3 = 'q' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 28
ACTION: str0 += 'j' 
str0 = 'v' : <type 'str'>
=> str0 = 'vj' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 29
ACTION: str3 += 'b' 
str3 = 'q' : <type 'str'>
=> str3 = 'qb' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 30
ACTION: str0 += 'g' 
str0 = 'vj' : <type 'str'>
=> str0 = 'vjg' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 31
ACTION: str3 += 'a' 
str3 = 'qb' : <type 'str'>
=> str3 = 'qba' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 32
ACTION: str3 += 'a' 
str3 = 'qba' : <type 'str'>
=> str3 = 'qbaa' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 33
ACTION: str0 = "" 
str0 = 'vjg' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 34
ACTION: str3 += 'e' 
str3 = 'qbaa' : <type 'str'>
=> str3 = 'qbaae' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 35
ACTION: str3 += 'r' 
str3 = 'qbaae' : <type 'str'>
=> str3 = 'qbaaer' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 36
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 37
ACTION: str0 += 'n' 
str0 = '' : <type 'str'>
=> str0 = 'n' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 38
ACTION: str2 += 'o' 
str2 = '' : <type 'str'>
=> str2 = 'o' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 39
ACTION: str0 += 't' 
str0 = 'n' : <type 'str'>
=> str0 = 'nt' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 40
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 41
ACTION: str0 += 'l' 
str0 = 'nt' : <type 'str'>
=> str0 = 'ntl' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 42
ACTION: str3 += 'v' 
str3 = 'qbaaer' : <type 'str'>
=> str3 = 'qbaaerv' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 43
ACTION: str0 += 'o' 
str0 = 'ntl' : <type 'str'>
=> str0 = 'ntlo' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 44
ACTION: str3 += 'c' 
str3 = 'qbaaerv' : <type 'str'>
=> str3 = 'qbaaervc' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 45
ACTION: str2 += 'g' 
str2 = 'o' : <type 'str'>
=> str2 = 'og' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 46
ACTION: path3 += "/" + component3 
component3 = 'h' : <type 'str'>
path3 = '/Volumes/ramdisk/test/e/delta' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/e/delta/h' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 47
ACTION: str2 += " " 
str2 = 'og' : <type 'str'>
=> str2 = 'og ' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 48
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str0 += 'y'                                                             # STEP 49
ACTION: str0 += 'y' 
str0 = 'ntlo' : <type 'str'>
=> str0 = 'ntloy' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 50
ACTION: str3 = "" 
str3 = 'qbaaervc' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 51
ACTION: str0 += 'o' 
str0 = 'ntloy' : <type 'str'>
=> str0 = 'ntloyo' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 52
ACTION: path3 += "/" + component1 
component1 = 'd' : <type 'str'>
path3 = '/Volumes/ramdisk/test/e/delta/h' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/e/delta/h/d' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 53
ACTION: str3 += 'o' 
str3 = '' : <type 'str'>
=> str3 = 'o' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 54
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 55
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 56
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 57
ACTION: str2 += 'b' 
str2 = 'og ' : <type 'str'>
=> str2 = 'og b' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 58
ACTION: path0 += "/" + component2 
component2 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
component2 = "phi"                                                      # STEP 59
ACTION: component2 = "phi" 
component2 = 'omega' : <type 'str'>
=> component2 = 'phi' : <type 'str'>
==================================================
component1 = "f"                                                        # STEP 60
ACTION: component1 = "f" 
component1 = 'd' : <type 'str'>
=> component1 = 'f' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 61
ACTION: str3 += 'q' 
str3 = 'o' : <type 'str'>
=> str3 = 'oq' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 62
ACTION: str0 += 'h' 
str0 = 'ntloyo' : <type 'str'>
=> str0 = 'ntloyoh' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 63
ACTION: str3 += 'i' 
str3 = 'oq' : <type 'str'>
=> str3 = 'oqi' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 64
ACTION: str0 += 'u' 
str0 = 'ntloyoh' : <type 'str'>
=> str0 = 'ntloyohu' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 65
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 66
ACTION: str3 += 'b' 
str3 = 'oqi' : <type 'str'>
=> str3 = 'oqib' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 67
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024e1790> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
path0 += "/" + component2                                               # STEP 68
ACTION: path0 += "/" + component2 
component2 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 69
ACTION: str2 += 'z' 
str2 = 'og b' : <type 'str'>
=> str2 = 'og bz' : <type 'str'>
==================================================
result = sorted(os0.listdir(path0))                                     # STEP 70
ACTION: result = sorted(os0.listdir(path0)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024e1790> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> an integer is required
ERROR: (<type 'exceptions.TypeError'>, TypeError('an integer is required',), <traceback object at 0x10213bea8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 23021, in act458
    result = sorted(self.p_os[0].listdir(self.p_path[0]))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3440, in listdir
    return self.filesystem.ListDir(target_directory)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2531, in ListDir
    target_directory = self.ResolvePath(target_directory, allow_fd=True)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1704, in ResolvePath
    return self.GetOpenFile(file_path).GetObject().GetPath()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1209, in GetOpenFile
    raise TypeError('an integer is required')
STOPPING TESTING DUE TO FAILED TEST
0.0451641082764 TOTAL RUNTIME
2 EXECUTED
271 TOTAL TEST OPERATIONS
0.00952529907227 TIME SPENT EXECUTING TEST OPERATIONS
0.011935710907 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000102043151855 TIME SPENT CHECKING PROPERTIES
0.00962734222412 TOTAL TIME SPENT RUNNING SUT
0.00541996955872 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
