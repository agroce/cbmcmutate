Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.50787.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.KeyError'>, KeyError('epsilon',), <traceback object at 0x1021e0cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9799, in act268
    self.p_os[0].makedirs(self.p_path[2])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3662, in makedirs
    self.filesystem.MakeDirectories(dir_name, mode, exist_ok)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2381, in MakeDirectories
    current_dir = current_dir.contents[component]
Original test has 76 steps

SAVING TEST AS failure.50787.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
bytes2 = 0                                                               # STEP 0
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
component2 = "a"                                                         # STEP 1
ACTION: component2 = "a" 
component2 = None : <type 'NoneType'>
=> component2 = 'a' : <type 'str'>
==================================================
component1 = "a"                                                         # STEP 2
ACTION: component1 = "a" 
component1 = None : <type 'NoneType'>
=> component1 = 'a' : <type 'str'>
==================================================
component4 = "epsilon"                                                   # STEP 3
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
component3 = "lambda"                                                    # STEP 4
ACTION: component3 = "lambda" 
component3 = None : <type 'NoneType'>
=> component3 = 'lambda' : <type 'str'>
==================================================
component0 = "f"                                                         # STEP 5
ACTION: component0 = "f" 
component0 = None : <type 'NoneType'>
=> component0 = 'f' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 6
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'p'                                                              # STEP 7
ACTION: str1 += 'p' 
str1 = '' : <type 'str'>
=> str1 = 'p' : <type 'str'>
==================================================
str1 += 'd'                                                              # STEP 8
ACTION: str1 += 'd' 
str1 = 'p' : <type 'str'>
=> str1 = 'pd' : <type 'str'>
==================================================
str1 += 'q'                                                              # STEP 9
ACTION: str1 += 'q' 
str1 = 'pd' : <type 'str'>
=> str1 = 'pdq' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 10
ACTION: str1 += 'w' 
str1 = 'pdq' : <type 'str'>
=> str1 = 'pdqw' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 11
ACTION: str1 += 'y' 
str1 = 'pdqw' : <type 'str'>
=> str1 = 'pdqwy' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 12
ACTION: str1 += 'u' 
str1 = 'pdqwy' : <type 'str'>
=> str1 = 'pdqwyu' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 13
ACTION: str1 += 'd' 
str1 = 'pdqwyu' : <type 'str'>
=> str1 = 'pdqwyud' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 14
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10233a310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 += 'b'                                                             # STEP 15
ACTION: str1 += 'b' 
str1 = 'pdqwyud' : <type 'str'>
=> str1 = 'pdqwyudb' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 16
ACTION: str1 += 'x' 
str1 = 'pdqwyudb' : <type 'str'>
=> str1 = 'pdqwyudbx' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 17
ACTION: str1 += 'b' 
str1 = 'pdqwyudbx' : <type 'str'>
=> str1 = 'pdqwyudbxb' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 18
ACTION: str1 += 'e' 
str1 = 'pdqwyudbxb' : <type 'str'>
=> str1 = 'pdqwyudbxbe' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 19
ACTION: str1 += 'j' 
str1 = 'pdqwyudbxbe' : <type 'str'>
=> str1 = 'pdqwyudbxbej' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 20
ACTION: str1 += 's' 
str1 = 'pdqwyudbxbej' : <type 'str'>
=> str1 = 'pdqwyudbxbejs' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 21
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 22
ACTION: str1 += 'a' 
str1 = 'pdqwyudbxbejs' : <type 'str'>
=> str1 = 'pdqwyudbxbejsa' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 23
ACTION: str1 = "" 
str1 = 'pdqwyudbxbejsa' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 24
ACTION: str2 += 'r' 
str2 = '' : <type 'str'>
=> str2 = 'r' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 25
ACTION: str2 += 'm' 
str2 = 'r' : <type 'str'>
=> str2 = 'rm' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 26
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 27
ACTION: str2 += 'n' 
str2 = 'rm' : <type 'str'>
=> str2 = 'rmn' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 28
ACTION: str1 += 'w' 
str1 = '' : <type 'str'>
=> str1 = 'w' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 29
ACTION: str4 += 'c' 
str4 = '' : <type 'str'>
=> str4 = 'c' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 30
ACTION: str4 += 'x' 
str4 = 'c' : <type 'str'>
=> str4 = 'cx' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 31
ACTION: str2 += 'j' 
str2 = 'rmn' : <type 'str'>
=> str2 = 'rmnj' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 32
ACTION: str1 += 'b' 
str1 = 'w' : <type 'str'>
=> str1 = 'wb' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 33
ACTION: str1 += 'f' 
str1 = 'wb' : <type 'str'>
=> str1 = 'wbf' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 34
ACTION: str2 += 's' 
str2 = 'rmnj' : <type 'str'>
=> str2 = 'rmnjs' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 35
ACTION: str4 += 'p' 
str4 = 'cx' : <type 'str'>
=> str4 = 'cxp' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 36
ACTION: str4 += 'a' 
str4 = 'cxp' : <type 'str'>
=> str4 = 'cxpa' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 37
ACTION: str2 += 'l' 
str2 = 'rmnjs' : <type 'str'>
=> str2 = 'rmnjsl' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 38
ACTION: str4 += 'o' 
str4 = 'cxpa' : <type 'str'>
=> str4 = 'cxpao' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 39
ACTION: str4 += 'y' 
str4 = 'cxpao' : <type 'str'>
=> str4 = 'cxpaoy' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 40
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str1 += 'g'                                                             # STEP 41
ACTION: str1 += 'g' 
str1 = 'wbf' : <type 'str'>
=> str1 = 'wbfg' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 42
ACTION: str1 += 'r' 
str1 = 'wbfg' : <type 'str'>
=> str1 = 'wbfgr' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 43
ACTION: str2 += 'r' 
str2 = 'rmnjsl' : <type 'str'>
=> str2 = 'rmnjslr' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 44
ACTION: str4 += 'v' 
str4 = 'cxpaoy' : <type 'str'>
=> str4 = 'cxpaoyv' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 45
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.symlink(path2,path2)                                                # STEP 46
ACTION: os0.symlink(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10233a310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str1 += 'f'                                                             # STEP 47
ACTION: str1 += 'f' 
str1 = 'wbfgr' : <type 'str'>
=> str1 = 'wbfgrf' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 48
ACTION: str2 += 'g' 
str2 = 'rmnjslr' : <type 'str'>
=> str2 = 'rmnjslrg' : <type 'str'>
==================================================
result = os0.path.lexists(path2)                                        # STEP 49
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10233a310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
str1 += 'n'                                                             # STEP 50
ACTION: str1 += 'n' 
str1 = 'wbfgrf' : <type 'str'>
=> str1 = 'wbfgrfn' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 51
ACTION: str2 += 't' 
str2 = 'rmnjslrg' : <type 'str'>
=> str2 = 'rmnjslrgt' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 52
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str4 += 'e'                                                             # STEP 53
ACTION: str4 += 'e' 
str4 = 'cxpaoyv' : <type 'str'>
=> str4 = 'cxpaoyve' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 54
ACTION: path2 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 55
ACTION: str1 += 'j' 
str1 = 'wbfgrfn' : <type 'str'>
=> str1 = 'wbfgrfnj' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 56
ACTION: str1 += 'l' 
str1 = 'wbfgrfnj' : <type 'str'>
=> str1 = 'wbfgrfnjl' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 57
ACTION: str1 += 's' 
str1 = 'wbfgrfnjl' : <type 'str'>
=> str1 = 'wbfgrfnjls' : <type 'str'>
==================================================
result = sorted(os0.listdir(path2))                                     # STEP 58
ACTION: result = sorted(os0.listdir(path2)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10233a310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path2)) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon'
==================================================
str2 = ""                                                               # STEP 59
ACTION: str2 = "" 
str2 = 'rmnjslrgt' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
component4 = "gamma"                                                    # STEP 60
ACTION: component4 = "gamma" 
component4 = 'epsilon' : <type 'str'>
=> component4 = 'gamma' : <type 'str'>
==================================================
stat1 = os0.stat(path2)                                                 # STEP 61
ACTION: stat1 = os0.stat(path2) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10233a310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: stat_REF1 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon'
==================================================
str4 += 'f'                                                             # STEP 62
ACTION: str4 += 'f' 
str4 = 'cxpaoyve' : <type 'str'>
=> str4 = 'cxpaoyvef' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 63
ACTION: path2 += "/" + component3 
component3 = 'lambda' : <type 'str'>
path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon/lambda' : <type 'str'>
==================================================
component3 = "h"                                                        # STEP 64
ACTION: component3 = "h" 
component3 = 'lambda' : <type 'str'>
=> component3 = 'h' : <type 'str'>
==================================================
result = os0.path.lexists(path2)                                        # STEP 65
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10233a310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
bytes0 += 1                                                             # STEP 66
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str1 += 'i'                                                             # STEP 67
ACTION: str1 += 'i' 
str1 = 'wbfgrfnjls' : <type 'str'>
=> str1 = 'wbfgrfnjlsi' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 68
ACTION: str4 += 'j' 
str4 = 'cxpaoyvef' : <type 'str'>
=> str4 = 'cxpaoyvefj' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                         # STEP 69
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10233a310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon/lambda' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon/lambda'
==================================================
str4 += 'g'                                                             # STEP 70
ACTION: str4 += 'g' 
str4 = 'cxpaoyvefj' : <type 'str'>
=> str4 = 'cxpaoyvefjg' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 71
ACTION: str4 += 'n' 
str4 = 'cxpaoyvefjg' : <type 'str'>
=> str4 = 'cxpaoyvefjgn' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 72
ACTION: path2 += "/" + component3 
component3 = 'h' : <type 'str'>
path2 = '/Volumes/ramdisk/test/epsilon/lambda' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon/lambda/h' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 73
ACTION: str2 += 'b' 
str2 = '' : <type 'str'>
=> str2 = 'b' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 74
ACTION: str4 += 's' 
str4 = 'cxpaoyvefjgn' : <type 'str'>
=> str4 = 'cxpaoyvefjgns' : <type 'str'>
==================================================
os0.makedirs(path2)                                                     # STEP 75
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10233a310> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon/lambda/h' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.KeyError'> 'epsilon'
ERROR: (<type 'exceptions.KeyError'>, KeyError('epsilon',), <traceback object at 0x102244830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9799, in act268
    self.p_os[0].makedirs(self.p_path[2])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3662, in makedirs
    self.filesystem.MakeDirectories(dir_name, mode, exist_ok)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2381, in MakeDirectories
    current_dir = current_dir.contents[component]
STOPPING TESTING DUE TO FAILED TEST
0.0528151988983 TOTAL RUNTIME
2 EXECUTED
276 TOTAL TEST OPERATIONS
0.00737142562866 TIME SPENT EXECUTING TEST OPERATIONS
0.0139293670654 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000121593475342 TIME SPENT CHECKING PROPERTIES
0.007493019104 TOTAL TIME SPENT RUNNING SUT
0.00547099113464 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
