Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.53124.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102c21f38>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31368, in act583
    assert (type(raised) == type(refRaised))
Original test has 27 steps

SAVING TEST AS failure.53124.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "g"                                                         # STEP 0
ACTION: component2 = "g" 
component2 = None : <type 'NoneType'>
=> component2 = 'g' : <type 'str'>
==================================================
component0 = "omega"                                                     # STEP 1
ACTION: component0 = "omega" 
component0 = None : <type 'NoneType'>
=> component0 = 'omega' : <type 'str'>
==================================================
component1 = "c"                                                         # STEP 2
ACTION: component1 = "c" 
component1 = None : <type 'NoneType'>
=> component1 = 'c' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 3
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
component4 = "epsilon"                                                   # STEP 4
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 5
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
os0 = newFakeOS()                                                        # STEP 6
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b44d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str2 = ""                                                                # STEP 7
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'p'                                                              # STEP 8
ACTION: str2 += 'p' 
str2 = '' : <type 'str'>
=> str2 = 'p' : <type 'str'>
==================================================
str2 += " "                                                              # STEP 9
ACTION: str2 += " " 
str2 = 'p' : <type 'str'>
=> str2 = 'p ' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 10
ACTION: str2 += 't' 
str2 = 'p ' : <type 'str'>
=> str2 = 'p t' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 11
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 12
ACTION: str2 += 'i' 
str2 = 'p t' : <type 'str'>
=> str2 = 'p ti' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 13
ACTION: path0 += "/" + component2 
component2 = 'g' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 14
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component2 = "omega"                                                    # STEP 15
ACTION: component2 = "omega" 
component2 = 'g' : <type 'str'>
=> component2 = 'omega' : <type 'str'>
==================================================
fd1 = os0.open(path0, os.O_RDWR)                                        # STEP 16
ACTION: fd1 = os0.open(path0, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b44d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
==================================================
str2 += 'w'                                                             # STEP 17
ACTION: str2 += 'w' 
str2 = 'p ti' : <type 'str'>
=> str2 = 'p tiw' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 18
ACTION: str2 += 'i' 
str2 = 'p tiw' : <type 'str'>
=> str2 = 'p tiwi' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 19
ACTION: str3 += 'u' 
str3 = '' : <type 'str'>
=> str3 = 'u' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 20
ACTION: str3 += 'q' 
str3 = 'u' : <type 'str'>
=> str3 = 'uq' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 21
ACTION: str2 += 'z' 
str2 = 'p tiwi' : <type 'str'>
=> str2 = 'p tiwiz' : <type 'str'>
==================================================
result = os0.path.exists(path0)                                         # STEP 22
ACTION: result = os0.path.exists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b44d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path0) 
==================================================
str3 += 'q'                                                             # STEP 23
ACTION: str3 += 'q' 
str3 = 'uq' : <type 'str'>
=> str3 = 'uqq' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 24
ACTION: str3 += 'h' 
str3 = 'uqq' : <type 'str'>
=> str3 = 'uqqh' : <type 'str'>
==================================================
fd0 = os0.open(path0, os.O_RDWR)                                        # STEP 25
ACTION: fd0 = os0.open(path0, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b44d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path0, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
==================================================
result = os0.path.getsize(path0)                                        # STEP 26
ACTION: result = os0.path.getsize(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b44d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102978d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31368, in act583
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.179883956909 TOTAL RUNTIME
2 EXECUTED
227 TOTAL TEST OPERATIONS
0.134012937546 TIME SPENT EXECUTING TEST OPERATIONS
0.012336730957 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00013279914856 TIME SPENT CHECKING PROPERTIES
0.134145736694 TOTAL TIME SPENT RUNNING SUT
0.0083019733429 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
