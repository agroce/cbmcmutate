Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.54032.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('an integer is required',), <traceback object at 0x100f8b098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1704, in ResolvePath
    return self.GetOpenFile(file_path).GetObject().GetPath()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1209, in GetOpenFile
    raise TypeError('an integer is required')
Original test has 102 steps

SAVING TEST AS failure.54032.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "c"                                                         # STEP 0
ACTION: component2 = "c" 
component2 = None : <type 'NoneType'>
=> component2 = 'c' : <type 'str'>
==================================================
component4 = "d"                                                         # STEP 1
ACTION: component4 = "d" 
component4 = None : <type 'NoneType'>
=> component4 = 'd' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 2
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 3
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 's'                                                              # STEP 4
ACTION: str1 += 's' 
str1 = '' : <type 'str'>
=> str1 = 's' : <type 'str'>
==================================================
str1 += 'c'                                                              # STEP 5
ACTION: str1 += 'c' 
str1 = 's' : <type 'str'>
=> str1 = 'sc' : <type 'str'>
==================================================
component1 = "gamma"                                                     # STEP 6
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
str1 += 'z'                                                              # STEP 7
ACTION: str1 += 'z' 
str1 = 'sc' : <type 'str'>
=> str1 = 'scz' : <type 'str'>
==================================================
component3 = "alpha"                                                     # STEP 8
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
str1 += 'r'                                                              # STEP 9
ACTION: str1 += 'r' 
str1 = 'scz' : <type 'str'>
=> str1 = 'sczr' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 10
ACTION: path2 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 11
ACTION: path2 += "/" + component2 
component2 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha/c' : <type 'str'>
==================================================
component0 = "d"                                                        # STEP 12
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
component3 = "b"                                                        # STEP 13
ACTION: component3 = "b" 
component3 = 'alpha' : <type 'str'>
=> component3 = 'b' : <type 'str'>
==================================================
component2 = "beta"                                                     # STEP 14
ACTION: component2 = "beta" 
component2 = 'c' : <type 'str'>
=> component2 = 'beta' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 15
ACTION: path2 += "/" + component4 
component4 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test/alpha/c' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha/c/d' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 16
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str1 += " "                                                             # STEP 17
ACTION: str1 += " " 
str1 = 'sczr' : <type 'str'>
=> str1 = 'sczr ' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 18
ACTION: str1 += 'c' 
str1 = 'sczr ' : <type 'str'>
=> str1 = 'sczr c' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 19
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 20
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 21
ACTION: component4 = "beta" 
component4 = 'd' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 22
ACTION: str4 += 'r' 
str4 = '' : <type 'str'>
=> str4 = 'r' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 23
ACTION: str4 += 'x' 
str4 = 'r' : <type 'str'>
=> str4 = 'rx' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 24
ACTION: path0 += "/" + component4 
component4 = 'beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 25
ACTION: str1 += 'h' 
str1 = 'sczr c' : <type 'str'>
=> str1 = 'sczr ch' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 26
ACTION: str1 += 'd' 
str1 = 'sczr ch' : <type 'str'>
=> str1 = 'sczr chd' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 27
ACTION: str4 += 'p' 
str4 = 'rx' : <type 'str'>
=> str4 = 'rxp' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 28
ACTION: str1 += 's' 
str1 = 'sczr chd' : <type 'str'>
=> str1 = 'sczr chds' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 29
ACTION: str4 += 'z' 
str4 = 'rxp' : <type 'str'>
=> str4 = 'rxpz' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 30
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 31
ACTION: str4 += 'l' 
str4 = 'rxpz' : <type 'str'>
=> str4 = 'rxpzl' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 32
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str4 += 'h'                                                             # STEP 33
ACTION: str4 += 'h' 
str4 = 'rxpzl' : <type 'str'>
=> str4 = 'rxpzlh' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 34
ACTION: str3 += 'm' 
str3 = '' : <type 'str'>
=> str3 = 'm' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 35
ACTION: str1 += 'x' 
str1 = 'sczr chds' : <type 'str'>
=> str1 = 'sczr chdsx' : <type 'str'>
==================================================
component4 = "phi"                                                      # STEP 36
ACTION: component4 = "phi" 
component4 = 'beta' : <type 'str'>
=> component4 = 'phi' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 37
ACTION: path2 += "/" + component2 
component2 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/alpha/c/d' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha/c/d/beta' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 38
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str1 += 'w'                                                             # STEP 39
ACTION: str1 += 'w' 
str1 = 'sczr chdsx' : <type 'str'>
=> str1 = 'sczr chdsxw' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 40
ACTION: str1 += 'z' 
str1 = 'sczr chdsxw' : <type 'str'>
=> str1 = 'sczr chdsxwz' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 41
ACTION: str4 += 'i' 
str4 = 'rxpzlh' : <type 'str'>
=> str4 = 'rxpzlhi' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 42
ACTION: str3 += 't' 
str3 = 'm' : <type 'str'>
=> str3 = 'mt' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 43
ACTION: str1 += 'b' 
str1 = 'sczr chdsxwz' : <type 'str'>
=> str1 = 'sczr chdsxwzb' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 44
ACTION: str4 += 'f' 
str4 = 'rxpzlhi' : <type 'str'>
=> str4 = 'rxpzlhif' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 45
ACTION: str3 += 'n' 
str3 = 'mt' : <type 'str'>
=> str3 = 'mtn' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 46
ACTION: str4 += 'z' 
str4 = 'rxpzlhif' : <type 'str'>
=> str4 = 'rxpzlhifz' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 47
ACTION: path2 += "/" + component4 
component4 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test/alpha/c/d/beta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha/c/d/beta/phi' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 48
ACTION: str3 += 'z' 
str3 = 'mtn' : <type 'str'>
=> str3 = 'mtnz' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 49
ACTION: str4 += 'i' 
str4 = 'rxpzlhifz' : <type 'str'>
=> str4 = 'rxpzlhifzi' : <type 'str'>
==================================================
component2 = "phi"                                                      # STEP 50
ACTION: component2 = "phi" 
component2 = 'beta' : <type 'str'>
=> component2 = 'phi' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 51
ACTION: str3 += 'w' 
str3 = 'mtnz' : <type 'str'>
=> str3 = 'mtnzw' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 52
ACTION: str3 += 'm' 
str3 = 'mtnzw' : <type 'str'>
=> str3 = 'mtnzwm' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 53
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 54
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 55
ACTION: str3 += 'x' 
str3 = 'mtnzwm' : <type 'str'>
=> str3 = 'mtnzwmx' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 56
ACTION: str4 += 'q' 
str4 = 'rxpzlhifzi' : <type 'str'>
=> str4 = 'rxpzlhifziq' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 57
ACTION: str4 += 'w' 
str4 = 'rxpzlhifziq' : <type 'str'>
=> str4 = 'rxpzlhifziqw' : <type 'str'>
==================================================
component4 = "phi"                                                      # STEP 58
ACTION: component4 = "phi" 
component4 = 'phi' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 59
ACTION: path2 += "/" + component4 
component4 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test/alpha/c/d/beta/phi' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha/c/d/beta/phi/phi' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 60
ACTION: str1 = "" 
str1 = 'sczr chdsxwzb' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
component4 = "lambda"                                                   # STEP 61
ACTION: component4 = "lambda" 
component4 = 'phi' : <type 'str'>
=> component4 = 'lambda' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 62
ACTION: str1 += 'j' 
str1 = '' : <type 'str'>
=> str1 = 'j' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 63
ACTION: path0 += "/" + component4 
component4 = 'lambda' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 64
ACTION: str4 += 'b' 
str4 = 'rxpzlhifziqw' : <type 'str'>
=> str4 = 'rxpzlhifziqwb' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 65
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/alpha/c/d/beta/phi/phi' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 66
ACTION: path0 += "/" + component0 
component0 = 'd' : <type 'str'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/lambda/d' : <type 'str'>
==================================================
component4 = "a"                                                        # STEP 67
ACTION: component4 = "a" 
component4 = 'lambda' : <type 'str'>
=> component4 = 'a' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 68
ACTION: str4 += 'h' 
str4 = 'rxpzlhifziqwb' : <type 'str'>
=> str4 = 'rxpzlhifziqwbh' : <type 'str'>
==================================================
component0 = "gamma"                                                    # STEP 69
ACTION: component0 = "gamma" 
component0 = 'd' : <type 'str'>
=> component0 = 'gamma' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 70
ACTION: str4 += 'w' 
str4 = 'rxpzlhifziqwbh' : <type 'str'>
=> str4 = 'rxpzlhifziqwbhw' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 71
ACTION: str1 += 'a' 
str1 = 'j' : <type 'str'>
=> str1 = 'ja' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 72
ACTION: str4 += 'z' 
str4 = 'rxpzlhifziqwbhw' : <type 'str'>
=> str4 = 'rxpzlhifziqwbhwz' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 73
ACTION: str1 += 'u' 
str1 = 'ja' : <type 'str'>
=> str1 = 'jau' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 74
ACTION: str1 += 'a' 
str1 = 'jau' : <type 'str'>
=> str1 = 'jaua' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 75
ACTION: str4 += 'n' 
str4 = 'rxpzlhifziqwbhwz' : <type 'str'>
=> str4 = 'rxpzlhifziqwbhwzn' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 76
ACTION: str4 += 'a' 
str4 = 'rxpzlhifziqwbhwzn' : <type 'str'>
=> str4 = 'rxpzlhifziqwbhwzna' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 77
ACTION: str1 += 'l' 
str1 = 'jaua' : <type 'str'>
=> str1 = 'jaual' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 78
ACTION: str4 += 's' 
str4 = 'rxpzlhifziqwbhwzna' : <type 'str'>
=> str4 = 'rxpzlhifziqwbhwznas' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 79
ACTION: str1 += " " 
str1 = 'jaual' : <type 'str'>
=> str1 = 'jaual ' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 80
ACTION: bytes3 = 0 
bytes3 = 1 : <type 'int'>
=> bytes3 = 0 : <type 'int'>
==================================================
bytes4 += 1                                                             # STEP 81
ACTION: bytes4 += 1 
bytes4 = 1 : <type 'int'>
=> bytes4 = 2 : <type 'int'>
==================================================
str1 += 'w'                                                             # STEP 82
ACTION: str1 += 'w' 
str1 = 'jaual ' : <type 'str'>
=> str1 = 'jaual w' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 83
ACTION: str1 += 'b' 
str1 = 'jaual w' : <type 'str'>
=> str1 = 'jaual wb' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 84
ACTION: str4 += 'g' 
str4 = 'rxpzlhifziqwbhwznas' : <type 'str'>
=> str4 = 'rxpzlhifziqwbhwznasg' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 85
ACTION: str4 += 'p' 
str4 = 'rxpzlhifziqwbhwznasg' : <type 'str'>
=> str4 = 'rxpzlhifziqwbhwznasgp' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 86
ACTION: str4 += 'm' 
str4 = 'rxpzlhifziqwbhwznasgp' : <type 'str'>
=> str4 = 'rxpzlhifziqwbhwznasgpm' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 87
ACTION: str1 += 'c' 
str1 = 'jaual wb' : <type 'str'>
=> str1 = 'jaual wbc' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 88
ACTION: str1 += 't' 
str1 = 'jaual wbc' : <type 'str'>
=> str1 = 'jaual wbct' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 89
ACTION: str4 += 'x' 
str4 = 'rxpzlhifziqwbhwznasgpm' : <type 'str'>
=> str4 = 'rxpzlhifziqwbhwznasgpmx' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 90
ACTION: path0 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path0 = '/Volumes/ramdisk/test/lambda/d' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/lambda/d/gamma' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 91
ACTION: path2 += "/" + component4 
component4 = 'a' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 92
ACTION: str1 += 'l' 
str1 = 'jaual wbct' : <type 'str'>
=> str1 = 'jaual wbctl' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 93
ACTION: str1 += 'd' 
str1 = 'jaual wbctl' : <type 'str'>
=> str1 = 'jaual wbctld' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 94
ACTION: path0 += "/" + component4 
component4 = 'a' : <type 'str'>
path0 = '/Volumes/ramdisk/test/lambda/d/gamma' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/lambda/d/gamma/a' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 95
ACTION: str4 += 'd' 
str4 = 'rxpzlhifziqwbhwznasgpmx' : <type 'str'>
=> str4 = 'rxpzlhifziqwbhwznasgpmxd' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 96
ACTION: str4 += 'o' 
str4 = 'rxpzlhifziqwbhwznasgpmxd' : <type 'str'>
=> str4 = 'rxpzlhifziqwbhwznasgpmxdo' : <type 'str'>
==================================================
component0 = "g"                                                        # STEP 97
ACTION: component0 = "g" 
component0 = 'gamma' : <type 'str'>
=> component0 = 'g' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 98
ACTION: str1 += 's' 
str1 = 'jaual wbctld' : <type 'str'>
=> str1 = 'jaual wbctlds' : <type 'str'>
==================================================
component4 = "alpha"                                                    # STEP 99
ACTION: component4 = "alpha" 
component4 = 'a' : <type 'str'>
=> component4 = 'alpha' : <type 'str'>
==================================================
str1 += 'x'                                                            # STEP 100
ACTION: str1 += 'x' 
str1 = 'jaual wbctlds' : <type 'str'>
=> str1 = 'jaual wbctldsx' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 101
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> an integer is required
ERROR: (<type 'exceptions.TypeError'>, TypeError('an integer is required',), <traceback object at 0x1021c7b90>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1704, in ResolvePath
    return self.GetOpenFile(file_path).GetObject().GetPath()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1209, in GetOpenFile
    raise TypeError('an integer is required')
STOPPING TESTING DUE TO FAILED TEST
0.0345721244812 TOTAL RUNTIME
1 EXECUTED
102 TOTAL TEST OPERATIONS
0.00255584716797 TIME SPENT EXECUTING TEST OPERATIONS
0.00566387176514 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.14848327637e-05 TIME SPENT CHECKING PROPERTIES
0.00259733200073 TOTAL TIME SPENT RUNNING SUT
0.00374293327332 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
