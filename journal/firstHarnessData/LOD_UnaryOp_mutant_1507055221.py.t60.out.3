Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.60251.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102ce7b00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22504, in act449
    assert (type(raised) == type(refRaised))
Original test has 95 steps

SAVING TEST AS failure.60251.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "beta"                                                      # STEP 0
ACTION: component0 = "beta" 
component0 = None : <type 'NoneType'>
=> component0 = 'beta' : <type 'str'>
==================================================
component2 = "d"                                                         # STEP 1
ACTION: component2 = "d" 
component2 = None : <type 'NoneType'>
=> component2 = 'd' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 2
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 3
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
component4 = "a"                                                         # STEP 4
ACTION: component4 = "a" 
component4 = None : <type 'NoneType'>
=> component4 = 'a' : <type 'str'>
==================================================
str2 += 'h'                                                              # STEP 5
ACTION: str2 += 'h' 
str2 = '' : <type 'str'>
=> str2 = 'h' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 6
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str2 += 'h'                                                              # STEP 7
ACTION: str2 += 'h' 
str2 = 'h' : <type 'str'>
=> str2 = 'hh' : <type 'str'>
==================================================
str2 += 'k'                                                              # STEP 8
ACTION: str2 += 'k' 
str2 = 'hh' : <type 'str'>
=> str2 = 'hhk' : <type 'str'>
==================================================
str2 += 'x'                                                              # STEP 9
ACTION: str2 += 'x' 
str2 = 'hhk' : <type 'str'>
=> str2 = 'hhkx' : <type 'str'>
==================================================
component1 = "b"                                                        # STEP 10
ACTION: component1 = "b" 
component1 = None : <type 'NoneType'>
=> component1 = 'b' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 11
ACTION: str2 += 't' 
str2 = 'hhkx' : <type 'str'>
=> str2 = 'hhkxt' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 12
ACTION: str2 += 'z' 
str2 = 'hhkxt' : <type 'str'>
=> str2 = 'hhkxtz' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 13
ACTION: str2 += 'e' 
str2 = 'hhkxtz' : <type 'str'>
=> str2 = 'hhkxtze' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 14
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 15
ACTION: str0 += 'x' 
str0 = '' : <type 'str'>
=> str0 = 'x' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 16
ACTION: str2 += 'y' 
str2 = 'hhkxtze' : <type 'str'>
=> str2 = 'hhkxtzey' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 17
ACTION: str2 += " " 
str2 = 'hhkxtzey' : <type 'str'>
=> str2 = 'hhkxtzey ' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 18
ACTION: str0 += 'c' 
str0 = 'x' : <type 'str'>
=> str0 = 'xc' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 19
ACTION: str2 += 'm' 
str2 = 'hhkxtzey ' : <type 'str'>
=> str2 = 'hhkxtzey m' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 20
ACTION: str0 += 'g' 
str0 = 'xc' : <type 'str'>
=> str0 = 'xcg' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 21
ACTION: str0 += 'z' 
str0 = 'xcg' : <type 'str'>
=> str0 = 'xcgz' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 22
ACTION: str0 += 'n' 
str0 = 'xcgz' : <type 'str'>
=> str0 = 'xcgzn' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 23
ACTION: str0 += 'a' 
str0 = 'xcgzn' : <type 'str'>
=> str0 = 'xcgzna' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 24
ACTION: str2 += 'k' 
str2 = 'hhkxtzey m' : <type 'str'>
=> str2 = 'hhkxtzey mk' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 25
ACTION: str2 += 'n' 
str2 = 'hhkxtzey mk' : <type 'str'>
=> str2 = 'hhkxtzey mkn' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 26
ACTION: str2 = "" 
str2 = 'hhkxtzey mkn' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 27
ACTION: str2 += 'b' 
str2 = '' : <type 'str'>
=> str2 = 'b' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 28
ACTION: str2 += 'y' 
str2 = 'b' : <type 'str'>
=> str2 = 'by' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 29
ACTION: str0 += 'h' 
str0 = 'xcgzna' : <type 'str'>
=> str0 = 'xcgznah' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 30
ACTION: str2 += 'q' 
str2 = 'by' : <type 'str'>
=> str2 = 'byq' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 31
ACTION: str2 += 'o' 
str2 = 'byq' : <type 'str'>
=> str2 = 'byqo' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 32
ACTION: str0 += 'u' 
str0 = 'xcgznah' : <type 'str'>
=> str0 = 'xcgznahu' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 33
ACTION: str2 += 'r' 
str2 = 'byqo' : <type 'str'>
=> str2 = 'byqor' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 34
ACTION: str0 += 'd' 
str0 = 'xcgznahu' : <type 'str'>
=> str0 = 'xcgznahud' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 35
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 36
ACTION: str2 += 't' 
str2 = 'byqor' : <type 'str'>
=> str2 = 'byqort' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 37
ACTION: str2 += 'j' 
str2 = 'byqort' : <type 'str'>
=> str2 = 'byqortj' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 38
ACTION: str0 += 'd' 
str0 = 'xcgznahud' : <type 'str'>
=> str0 = 'xcgznahudd' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 39
ACTION: str0 += 'q' 
str0 = 'xcgznahudd' : <type 'str'>
=> str0 = 'xcgznahuddq' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 40
ACTION: str0 += 'g' 
str0 = 'xcgznahuddq' : <type 'str'>
=> str0 = 'xcgznahuddqg' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 41
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 42
ACTION: str0 += 'e' 
str0 = 'xcgznahuddqg' : <type 'str'>
=> str0 = 'xcgznahuddqge' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 43
ACTION: str2 += 'j' 
str2 = 'byqortj' : <type 'str'>
=> str2 = 'byqortjj' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 44
ACTION: str4 += 'q' 
str4 = '' : <type 'str'>
=> str4 = 'q' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 45
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
bytes1 += 1                                                             # STEP 46
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
path2 += "/" + component3                                               # STEP 47
ACTION: path2 += "/" + component3 
component3 = 'a' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 48
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 49
ACTION: path2 += "/" + component1 
component1 = 'b' : <type 'str'>
path2 = '/Volumes/ramdisk/test/a' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/a/b' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 50
ACTION: path1 += "/" + component0 
component0 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
component0 = "alpha"                                                    # STEP 51
ACTION: component0 = "alpha" 
component0 = 'beta' : <type 'str'>
=> component0 = 'alpha' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 52
ACTION: str2 += 'y' 
str2 = 'byqortjj' : <type 'str'>
=> str2 = 'byqortjjy' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 53
ACTION: str2 += 'b' 
str2 = 'byqortjjy' : <type 'str'>
=> str2 = 'byqortjjyb' : <type 'str'>
==================================================
str0 += 'f'                                                             # STEP 54
ACTION: str0 += 'f' 
str0 = 'xcgznahuddqge' : <type 'str'>
=> str0 = 'xcgznahuddqgef' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 55
ACTION: str0 = "" 
str0 = 'xcgznahuddqgef' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 56
ACTION: str0 += 'e' 
str0 = '' : <type 'str'>
=> str0 = 'e' : <type 'str'>
==================================================
component3 = "delta"                                                    # STEP 57
ACTION: component3 = "delta" 
component3 = 'a' : <type 'str'>
=> component3 = 'delta' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 58
ACTION: str4 += 'j' 
str4 = 'q' : <type 'str'>
=> str4 = 'qj' : <type 'str'>
==================================================
component1 = "a"                                                        # STEP 59
ACTION: component1 = "a" 
component1 = 'b' : <type 'str'>
=> component1 = 'a' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 60
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str4 += 't'                                                             # STEP 61
ACTION: str4 += 't' 
str4 = 'qj' : <type 'str'>
=> str4 = 'qjt' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 62
ACTION: str2 += 'x' 
str2 = 'byqortjjyb' : <type 'str'>
=> str2 = 'byqortjjybx' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 63
ACTION: path2 += "/" + component1 
component1 = 'a' : <type 'str'>
path2 = '/Volumes/ramdisk/test/a/b' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/a/b/a' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 64
ACTION: str0 += " " 
str0 = 'e' : <type 'str'>
=> str0 = 'e ' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 65
ACTION: str0 += 'l' 
str0 = 'e ' : <type 'str'>
=> str0 = 'e l' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 66
ACTION: str4 += 'n' 
str4 = 'qjt' : <type 'str'>
=> str4 = 'qjtn' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 67
ACTION: str4 += 'v' 
str4 = 'qjtn' : <type 'str'>
=> str4 = 'qjtnv' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 68
ACTION: str4 += 'j' 
str4 = 'qjtnv' : <type 'str'>
=> str4 = 'qjtnvj' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 69
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c7a390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str0 += 'w'                                                             # STEP 70
ACTION: str0 += 'w' 
str0 = 'e l' : <type 'str'>
=> str0 = 'e lw' : <type 'str'>
==================================================
os0.makedirs(path2)                                                     # STEP 71
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c7a390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/a/b/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path2) 
==================================================
str3 = ""                                                               # STEP 72
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 73
ACTION: str0 += 'q' 
str0 = 'e lw' : <type 'str'>
=> str0 = 'e lwq' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 74
ACTION: str3 += 'b' 
str3 = '' : <type 'str'>
=> str3 = 'b' : <type 'str'>
==================================================
result = os0.path.abspath(path2)                                        # STEP 75
ACTION: result = os0.path.abspath(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c7a390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/a/b/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path2) 
==================================================
str4 += 's'                                                             # STEP 76
ACTION: str4 += 's' 
str4 = 'qjtnvj' : <type 'str'>
=> str4 = 'qjtnvjs' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 77
ACTION: str3 += 'i' 
str3 = 'b' : <type 'str'>
=> str3 = 'bi' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 78
ACTION: str2 += 'z' 
str2 = 'byqortjjybx' : <type 'str'>
=> str2 = 'byqortjjybxz' : <type 'str'>
==================================================
os0.symlink(path2,path1)                                                # STEP 79
ACTION: os0.symlink(path2,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c7a390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/a/b/a' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path2,path1) 
==================================================
str0 += 'j'                                                             # STEP 80
ACTION: str0 += 'j' 
str0 = 'e lwq' : <type 'str'>
=> str0 = 'e lwqj' : <type 'str'>
==================================================
stat1 = os0.stat(path1)                                                 # STEP 81
ACTION: stat1 = os0.stat(path1) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c7a390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102f88d50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.stat(path1) 
=> stat_REF1 = posix.stat_result(st_mode=16877, st_ino=14926103, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507356018, st_mtime=1507356018, st_ctime=1507356018) : <type 'posix.stat_result'>
==================================================
str4 += 'g'                                                             # STEP 82
ACTION: str4 += 'g' 
str4 = 'qjtnvjs' : <type 'str'>
=> str4 = 'qjtnvjsg' : <type 'str'>
==================================================
component1 = "alpha"                                                    # STEP 83
ACTION: component1 = "alpha" 
component1 = 'a' : <type 'str'>
=> component1 = 'alpha' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 84
ACTION: str4 += 'x' 
str4 = 'qjtnvjsg' : <type 'str'>
=> str4 = 'qjtnvjsgx' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 85
ACTION: str0 += 'n' 
str0 = 'e lwqj' : <type 'str'>
=> str0 = 'e lwqjn' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 86
ACTION: str0 += 'd' 
str0 = 'e lwqjn' : <type 'str'>
=> str0 = 'e lwqjnd' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 87
ACTION: str4 += 'e' 
str4 = 'qjtnvjsgx' : <type 'str'>
=> str4 = 'qjtnvjsgxe' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 88
ACTION: str2 += 'a' 
str2 = 'byqortjjybxz' : <type 'str'>
=> str2 = 'byqortjjybxza' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 89
ACTION: str4 += " " 
str4 = 'qjtnvjsgxe' : <type 'str'>
=> str4 = 'qjtnvjsgxe ' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 90
ACTION: str4 += 'h' 
str4 = 'qjtnvjsgxe ' : <type 'str'>
=> str4 = 'qjtnvjsgxe h' : <type 'str'>
==================================================
stat3 = os0.stat(path2)                                                 # STEP 91
ACTION: stat3 = os0.stat(path2) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c7a390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/a/b/a' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102f882d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path2) 
=> stat_REF3 = posix.stat_result(st_mode=16877, st_ino=14926103, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507356018, st_mtime=1507356018, st_ctime=1507356018) : <type 'posix.stat_result'>
==================================================
str3 += 'k'                                                             # STEP 92
ACTION: str3 += 'k' 
str3 = 'bi' : <type 'str'>
=> str3 = 'bik' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 93
ACTION: str4 += 'w' 
str4 = 'qjtnvjsgxe h' : <type 'str'>
=> str4 = 'qjtnvjsgxe hw' : <type 'str'>
==================================================
os0.rmdir(path1)                                                        # STEP 94
ACTION: os0.rmdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c7a390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.rmdir(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/beta'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103fa03f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22504, in act449
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
8.98114776611 TOTAL RUNTIME
154 EXECUTED
30695 TOTAL TEST OPERATIONS
6.95908546448 TIME SPENT EXECUTING TEST OPERATIONS
1.34751820564 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0161364078522 TIME SPENT CHECKING PROPERTIES
6.97522187233 TOTAL TIME SPENT RUNNING SUT
0.448384284973 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
