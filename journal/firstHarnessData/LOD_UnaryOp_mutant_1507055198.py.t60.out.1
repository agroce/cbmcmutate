Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.60065.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1023e8bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 29044, in act545
    assert (type(raised) == type(refRaised))
Original test has 28 steps

SAVING TEST AS failure.60065.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "h"                                                         # STEP 0
ACTION: component2 = "h" 
component2 = None : <type 'NoneType'>
=> component2 = 'h' : <type 'str'>
==================================================
component1 = "a"                                                         # STEP 1
ACTION: component1 = "a" 
component1 = None : <type 'NoneType'>
=> component1 = 'a' : <type 'str'>
==================================================
component0 = "gamma"                                                     # STEP 2
ACTION: component0 = "gamma" 
component0 = None : <type 'NoneType'>
=> component0 = 'gamma' : <type 'str'>
==================================================
component4 = "omega"                                                     # STEP 3
ACTION: component4 = "omega" 
component4 = None : <type 'NoneType'>
=> component4 = 'omega' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 4
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component3 = "e"                                                         # STEP 5
ACTION: component3 = "e" 
component3 = None : <type 'NoneType'>
=> component3 = 'e' : <type 'str'>
==================================================
path3 += "/" + component1                                                # STEP 6
ACTION: path3 += "/" + component1 
component1 = 'a' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
component1 = "phi"                                                       # STEP 7
ACTION: component1 = "phi" 
component1 = 'a' : <type 'str'>
=> component1 = 'phi' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 8
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 9
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 10
ACTION: str3 += 't' 
str3 = '' : <type 'str'>
=> str3 = 't' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 11
ACTION: str2 += 'i' 
str2 = '' : <type 'str'>
=> str2 = 'i' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 12
ACTION: str3 += 'z' 
str3 = 't' : <type 'str'>
=> str3 = 'tz' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 14
ACTION: str3 += 'u' 
str3 = 'tz' : <type 'str'>
=> str3 = 'tzu' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 15
ACTION: str2 += 'q' 
str2 = 'i' : <type 'str'>
=> str2 = 'iq' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 16
ACTION: str2 += 'e' 
str2 = 'iq' : <type 'str'>
=> str2 = 'iqe' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 17
ACTION: str3 += 'u' 
str3 = 'tzu' : <type 'str'>
=> str3 = 'tzuu' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 18
ACTION: str3 += 's' 
str3 = 'tzuu' : <type 'str'>
=> str3 = 'tzuus' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 19
ACTION: str3 += 'u' 
str3 = 'tzuus' : <type 'str'>
=> str3 = 'tzuusu' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 20
ACTION: str2 += 'a' 
str2 = 'iqe' : <type 'str'>
=> str2 = 'iqea' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 21
ACTION: str2 += 'm' 
str2 = 'iqea' : <type 'str'>
=> str2 = 'iqeam' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 22
ACTION: path3 += "/" + component4 
component4 = 'omega' : <type 'str'>
path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/a/omega' : <type 'str'>
==================================================
component4 = "f"                                                        # STEP 23
ACTION: component4 = "f" 
component4 = 'omega' : <type 'str'>
=> component4 = 'f' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 24
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024c3ed0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str3 += " "                                                             # STEP 25
ACTION: str3 += " " 
str3 = 'tzuusu' : <type 'str'>
=> str3 = 'tzuusu ' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 26
ACTION: path2 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
os0.rename(path3,path2)                                                 # STEP 27
ACTION: os0.rename(path3,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024c3ed0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/a/omega' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.IOError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: os_REF0.rename(path3,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1006c31b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 29044, in act545
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0381369590759 TOTAL RUNTIME
2 EXECUTED
228 TOTAL TEST OPERATIONS
0.00421833992004 TIME SPENT EXECUTING TEST OPERATIONS
0.0112752914429 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
9.25064086914e-05 TIME SPENT CHECKING PROPERTIES
0.00431084632874 TOTAL TIME SPENT RUNNING SUT
0.00562787055969 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
