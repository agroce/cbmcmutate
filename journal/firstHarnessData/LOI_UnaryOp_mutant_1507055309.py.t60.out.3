Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.64770.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1038896c8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9657, in act265
    assert (type(raised) == type(refRaised))
Original test has 127 steps

SAVING TEST AS failure.64770.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "phi"                                                       # STEP 0
ACTION: component2 = "phi" 
component2 = None : <type 'NoneType'>
=> component2 = 'phi' : <type 'str'>
==================================================
component3 = "phi"                                                       # STEP 1
ACTION: component3 = "phi" 
component3 = None : <type 'NoneType'>
=> component3 = 'phi' : <type 'str'>
==================================================
component1 = "epsilon"                                                   # STEP 2
ACTION: component1 = "epsilon" 
component1 = None : <type 'NoneType'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
component4 = "h"                                                         # STEP 3
ACTION: component4 = "h" 
component4 = None : <type 'NoneType'>
=> component4 = 'h' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 4
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path4 += "/" + component1                                                # STEP 6
ACTION: path4 += "/" + component1 
component1 = 'epsilon' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
component0 = "e"                                                         # STEP 7
ACTION: component0 = "e" 
component0 = None : <type 'NoneType'>
=> component0 = 'e' : <type 'str'>
==================================================
path2 += "/" + component1                                                # STEP 8
ACTION: path2 += "/" + component1 
component1 = 'epsilon' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 9
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 10
ACTION: str1 += 'x' 
str1 = '' : <type 'str'>
=> str1 = 'x' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 11
ACTION: str1 += 'm' 
str1 = 'x' : <type 'str'>
=> str1 = 'xm' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 12
ACTION: path2 += "/" + component0 
component0 = 'e' : <type 'str'>
path2 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon/e' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 13
ACTION: str1 += 'i' 
str1 = 'xm' : <type 'str'>
=> str1 = 'xmi' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 14
ACTION: str1 += 'p' 
str1 = 'xmi' : <type 'str'>
=> str1 = 'xmip' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 15
ACTION: str1 += 'd' 
str1 = 'xmip' : <type 'str'>
=> str1 = 'xmipd' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 16
ACTION: str1 += 'z' 
str1 = 'xmipd' : <type 'str'>
=> str1 = 'xmipdz' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 17
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 18
ACTION: str1 += 'o' 
str1 = 'xmipdz' : <type 'str'>
=> str1 = 'xmipdzo' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 19
ACTION: str1 += 't' 
str1 = 'xmipdzo' : <type 'str'>
=> str1 = 'xmipdzot' : <type 'str'>
==================================================
component1 = "omega"                                                    # STEP 20
ACTION: component1 = "omega" 
component1 = 'epsilon' : <type 'str'>
=> component1 = 'omega' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 21
ACTION: str1 += 'c' 
str1 = 'xmipdzot' : <type 'str'>
=> str1 = 'xmipdzotc' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 22
ACTION: str3 += 'h' 
str3 = '' : <type 'str'>
=> str3 = 'h' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 23
ACTION: path4 += "/" + component0 
component0 = 'e' : <type 'str'>
path4 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/epsilon/e' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 24
ACTION: str1 += " " 
str1 = 'xmipdzotc' : <type 'str'>
=> str1 = 'xmipdzotc ' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 25
ACTION: str3 += " " 
str3 = 'h' : <type 'str'>
=> str3 = 'h ' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 26
ACTION: str1 += 'j' 
str1 = 'xmipdzotc ' : <type 'str'>
=> str1 = 'xmipdzotc j' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 27
ACTION: str1 += 'b' 
str1 = 'xmipdzotc j' : <type 'str'>
=> str1 = 'xmipdzotc jb' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 28
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str1 += 'v'                                                             # STEP 29
ACTION: str1 += 'v' 
str1 = 'xmipdzotc jb' : <type 'str'>
=> str1 = 'xmipdzotc jbv' : <type 'str'>
==================================================
component0 = "gamma"                                                    # STEP 30
ACTION: component0 = "gamma" 
component0 = 'e' : <type 'str'>
=> component0 = 'gamma' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 31
ACTION: str3 += 'e' 
str3 = 'h ' : <type 'str'>
=> str3 = 'h e' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 32
ACTION: str1 += 'k' 
str1 = 'xmipdzotc jbv' : <type 'str'>
=> str1 = 'xmipdzotc jbvk' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 33
ACTION: str1 += 'c' 
str1 = 'xmipdzotc jbvk' : <type 'str'>
=> str1 = 'xmipdzotc jbvkc' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 34
ACTION: path4 += "/" + component1 
component1 = 'omega' : <type 'str'>
path4 = '/Volumes/ramdisk/test/epsilon/e' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/epsilon/e/omega' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 35
ACTION: str3 += 'h' 
str3 = 'h e' : <type 'str'>
=> str3 = 'h eh' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 36
ACTION: str1 += 'm' 
str1 = 'xmipdzotc jbvkc' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcm' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 37
ACTION: str3 = "" 
str3 = 'h eh' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 38
ACTION: str3 += 'd' 
str3 = '' : <type 'str'>
=> str3 = 'd' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 39
ACTION: path2 += "/" + component1 
component1 = 'omega' : <type 'str'>
path2 = '/Volumes/ramdisk/test/epsilon/e' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon/e/omega' : <type 'str'>
==================================================
component1 = "f"                                                        # STEP 40
ACTION: component1 = "f" 
component1 = 'omega' : <type 'str'>
=> component1 = 'f' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 41
ACTION: str1 += 'c' 
str1 = 'xmipdzotc jbvkcm' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmc' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 42
ACTION: path4 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test/epsilon/e/omega' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/epsilon/e/omega/gamma' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 43
ACTION: str1 += 'c' 
str1 = 'xmipdzotc jbvkcmc' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmcc' : <type 'str'>
==================================================
component0 = "c"                                                        # STEP 44
ACTION: component0 = "c" 
component0 = 'gamma' : <type 'str'>
=> component0 = 'c' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 45
ACTION: str3 += 'd' 
str3 = 'd' : <type 'str'>
=> str3 = 'dd' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 46
ACTION: path2 += "/" + component4 
component4 = 'h' : <type 'str'>
path2 = '/Volumes/ramdisk/test/epsilon/e/omega' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon/e/omega/h' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 47
ACTION: str3 += 'i' 
str3 = 'dd' : <type 'str'>
=> str3 = 'ddi' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 48
ACTION: str1 += 'v' 
str1 = 'xmipdzotc jbvkcmcc' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmccv' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 49
ACTION: str1 += 'o' 
str1 = 'xmipdzotc jbvkcmccv' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmccvo' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 50
ACTION: str1 += 'k' 
str1 = 'xmipdzotc jbvkcmccvo' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmccvok' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 51
ACTION: str1 += 'l' 
str1 = 'xmipdzotc jbvkcmccvok' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmccvokl' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 52
ACTION: path2 += "/" + component4 
component4 = 'h' : <type 'str'>
path2 = '/Volumes/ramdisk/test/epsilon/e/omega/h' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon/e/omega/h/h' : <type 'str'>
==================================================
component4 = "epsilon"                                                  # STEP 53
ACTION: component4 = "epsilon" 
component4 = 'h' : <type 'str'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 54
ACTION: str3 += 'e' 
str3 = 'ddi' : <type 'str'>
=> str3 = 'ddie' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 55
ACTION: str1 += 'f' 
str1 = 'xmipdzotc jbvkcmccvokl' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmccvoklf' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 56
ACTION: str3 += 'c' 
str3 = 'ddie' : <type 'str'>
=> str3 = 'ddiec' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 57
ACTION: str3 += 'q' 
str3 = 'ddiec' : <type 'str'>
=> str3 = 'ddiecq' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 58
ACTION: str1 += 's' 
str1 = 'xmipdzotc jbvkcmccvoklf' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmccvoklfs' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 59
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/epsilon/e/omega/gamma' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 60
ACTION: str3 = "" 
str3 = 'ddiecq' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 61
ACTION: str1 += 'e' 
str1 = 'xmipdzotc jbvkcmccvoklfs' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmccvoklfse' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 62
ACTION: str3 += " " 
str3 = '' : <type 'str'>
=> str3 = ' ' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 63
ACTION: str3 += 'n' 
str3 = ' ' : <type 'str'>
=> str3 = ' n' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 64
ACTION: str3 += " " 
str3 = ' n' : <type 'str'>
=> str3 = ' n ' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 65
ACTION: str1 += 'v' 
str1 = 'xmipdzotc jbvkcmccvoklfse' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmccvoklfsev' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 66
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str1 += 'k'                                                             # STEP 67
ACTION: str1 += 'k' 
str1 = 'xmipdzotc jbvkcmccvoklfsev' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmccvoklfsevk' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 68
ACTION: str1 += 'g' 
str1 = 'xmipdzotc jbvkcmccvoklfsevk' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmccvoklfsevkg' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 69
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 70
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 71
ACTION: str1 += 'h' 
str1 = 'xmipdzotc jbvkcmccvoklfsevkg' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmccvoklfsevkgh' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 72
ACTION: path3 += "/" + component1 
component1 = 'f' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 73
ACTION: str3 += 'm' 
str3 = ' n ' : <type 'str'>
=> str3 = ' n m' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 74
ACTION: str0 += 'h' 
str0 = '' : <type 'str'>
=> str0 = 'h' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 75
ACTION: path3 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f/epsilon' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 76
ACTION: str3 += 'c' 
str3 = ' n m' : <type 'str'>
=> str3 = ' n mc' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 77
ACTION: str3 += 'k' 
str3 = ' n mc' : <type 'str'>
=> str3 = ' n mck' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 78
ACTION: str0 += 't' 
str0 = 'h' : <type 'str'>
=> str0 = 'ht' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 79
ACTION: str3 += 'c' 
str3 = ' n mck' : <type 'str'>
=> str3 = ' n mckc' : <type 'str'>
==================================================
component1 = "alpha"                                                    # STEP 80
ACTION: component1 = "alpha" 
component1 = 'f' : <type 'str'>
=> component1 = 'alpha' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 81
ACTION: str1 += 'f' 
str1 = 'xmipdzotc jbvkcmccvoklfsevkgh' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmccvoklfsevkghf' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 82
ACTION: str3 += 'p' 
str3 = ' n mckc' : <type 'str'>
=> str3 = ' n mckcp' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 83
ACTION: str3 += 'a' 
str3 = ' n mckcp' : <type 'str'>
=> str3 = ' n mckcpa' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 84
ACTION: str3 += 'x' 
str3 = ' n mckcpa' : <type 'str'>
=> str3 = ' n mckcpax' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 85
ACTION: str3 += 'l' 
str3 = ' n mckcpax' : <type 'str'>
=> str3 = ' n mckcpaxl' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 86
ACTION: path4 += "/" + component0 
component0 = 'c' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 87
ACTION: path4 += "/" + component3 
component3 = 'phi' : <type 'str'>
path4 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/c/phi' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 88
ACTION: str3 += 'y' 
str3 = ' n mckcpaxl' : <type 'str'>
=> str3 = ' n mckcpaxly' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 89
ACTION: str3 += 'j' 
str3 = ' n mckcpaxly' : <type 'str'>
=> str3 = ' n mckcpaxlyj' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 90
ACTION: component0 = "omega" 
component0 = 'c' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 91
ACTION: str3 += 'z' 
str3 = ' n mckcpaxlyj' : <type 'str'>
=> str3 = ' n mckcpaxlyjz' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 92
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/c/phi' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "lambda"                                                   # STEP 93
ACTION: component4 = "lambda" 
component4 = 'epsilon' : <type 'str'>
=> component4 = 'lambda' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 94
ACTION: str0 += " " 
str0 = 'ht' : <type 'str'>
=> str0 = 'ht ' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 95
ACTION: str3 += " " 
str3 = ' n mckcpaxlyjz' : <type 'str'>
=> str3 = ' n mckcpaxlyjz ' : <type 'str'>
==================================================
component3 = "delta"                                                    # STEP 96
ACTION: component3 = "delta" 
component3 = 'phi' : <type 'str'>
=> component3 = 'delta' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 97
ACTION: str0 += 'i' 
str0 = 'ht ' : <type 'str'>
=> str0 = 'ht i' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 98
ACTION: str1 += 't' 
str1 = 'xmipdzotc jbvkcmccvoklfsevkghf' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmccvoklfsevkghft' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 99
ACTION: str3 += 's' 
str3 = ' n mckcpaxlyjz ' : <type 'str'>
=> str3 = ' n mckcpaxlyjz s' : <type 'str'>
==================================================
str1 += 'm'                                                            # STEP 100
ACTION: str1 += 'm' 
str1 = 'xmipdzotc jbvkcmccvoklfsevkghft' : <type 'str'>
=> str1 = 'xmipdzotc jbvkcmccvoklfsevkghftm' : <type 'str'>
==================================================
str0 += 'q'                                                            # STEP 101
ACTION: str0 += 'q' 
str0 = 'ht i' : <type 'str'>
=> str0 = 'ht iq' : <type 'str'>
==================================================
str0 += 'b'                                                            # STEP 102
ACTION: str0 += 'b' 
str0 = 'ht iq' : <type 'str'>
=> str0 = 'ht iqb' : <type 'str'>
==================================================
str0 += 'j'                                                            # STEP 103
ACTION: str0 += 'j' 
str0 = 'ht iqb' : <type 'str'>
=> str0 = 'ht iqbj' : <type 'str'>
==================================================
path2 += "/" + component4                                              # STEP 104
ACTION: path2 += "/" + component4 
component4 = 'lambda' : <type 'str'>
path2 = '/Volumes/ramdisk/test/epsilon/e/omega/h/h' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon/e/omega/h/h/lambda' : <type 'str'>
==================================================
str1 = ""                                                              # STEP 105
ACTION: str1 = "" 
str1 = 'xmipdzotc jbvkcmccvoklfsevkghftm' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
bytes2 = 0                                                             # STEP 106
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str0 += 'h'                                                            # STEP 107
ACTION: str0 += 'h' 
str0 = 'ht iqbj' : <type 'str'>
=> str0 = 'ht iqbjh' : <type 'str'>
==================================================
str1 += " "                                                            # STEP 108
ACTION: str1 += " " 
str1 = '' : <type 'str'>
=> str1 = ' ' : <type 'str'>
==================================================
str1 += 'z'                                                            # STEP 109
ACTION: str1 += 'z' 
str1 = ' ' : <type 'str'>
=> str1 = ' z' : <type 'str'>
==================================================
component4 = "a"                                                       # STEP 110
ACTION: component4 = "a" 
component4 = 'lambda' : <type 'str'>
=> component4 = 'a' : <type 'str'>
==================================================
str0 += 'h'                                                            # STEP 111
ACTION: str0 += 'h' 
str0 = 'ht iqbjh' : <type 'str'>
=> str0 = 'ht iqbjhh' : <type 'str'>
==================================================
str0 += 'b'                                                            # STEP 112
ACTION: str0 += 'b' 
str0 = 'ht iqbjhh' : <type 'str'>
=> str0 = 'ht iqbjhhb' : <type 'str'>
==================================================
str3 += 'o'                                                            # STEP 113
ACTION: str3 += 'o' 
str3 = ' n mckcpaxlyjz s' : <type 'str'>
=> str3 = ' n mckcpaxlyjz so' : <type 'str'>
==================================================
str3 += 'b'                                                            # STEP 114
ACTION: str3 += 'b' 
str3 = ' n mckcpaxlyjz so' : <type 'str'>
=> str3 = ' n mckcpaxlyjz sob' : <type 'str'>
==================================================
path4 += "/" + component2                                              # STEP 115
ACTION: path4 += "/" + component2 
component2 = 'phi' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
str3 += 'l'                                                            # STEP 116
ACTION: str3 += 'l' 
str3 = ' n mckcpaxlyjz sob' : <type 'str'>
=> str3 = ' n mckcpaxlyjz sobl' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 117
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10265ed50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                        # STEP 118
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10265ed50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/epsilon/e/omega/h/h/lambda' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/epsilon/e/omega/h/h'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon/e/omega/h/h/lambda'
==================================================
stat2 = os0.stat(path3)                                                # STEP 119
ACTION: stat2 = os0.stat(path3) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10265ed50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/f/epsilon' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/f/epsilon'
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/f/epsilon'
==================================================
str3 += 'n'                                                            # STEP 120
ACTION: str3 += 'n' 
str3 = ' n mckcpaxlyjz sobl' : <type 'str'>
=> str3 = ' n mckcpaxlyjz sobln' : <type 'str'>
==================================================
stat2 = os0.stat(path4)                                                # STEP 121
ACTION: stat2 = os0.stat(path4) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10265ed50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/phi' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/phi'
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/phi'
==================================================
str0 += 'm'                                                            # STEP 122
ACTION: str0 += 'm' 
str0 = 'ht iqbjhhb' : <type 'str'>
=> str0 = 'ht iqbjhhbm' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)           # STEP 123
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10265ed50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/f/epsilon' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/f'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/f/epsilon'
==================================================
result = sorted(os0.listdir(path3))                                    # STEP 124
ACTION: result = sorted(os0.listdir(path3)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10265ed50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/f/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/f/epsilon'
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path3)) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/f/epsilon'
==================================================
path2 += "/" + component1                                              # STEP 125
ACTION: path2 += "/" + component1 
component1 = 'alpha' : <type 'str'>
path2 = '/Volumes/ramdisk/test/epsilon/e/omega/h/h/lambda' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/epsilon/e/omega/h/h/lambda/alpha' : <type 'str'>
==================================================
os0.mkdir(path4)                                                       # STEP 126
ACTION: os0.mkdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10265ed50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Empty directory name
REFERENCE ACTION: os_REF0.mkdir(path4) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103921a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9657, in act265
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.399879932404 TOTAL RUNTIME
9 EXECUTED
1727 TOTAL TEST OPERATIONS
0.254631280899 TIME SPENT EXECUTING TEST OPERATIONS
0.0818638801575 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000931739807129 TIME SPENT CHECKING PROPERTIES
0.255563020706 TOTAL TIME SPENT RUNNING SUT
0.0289146900177 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
