Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.65406.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AttributeError'>, AttributeError("'str' object has no attribute 'keys'",), <traceback object at 0x102ddcdd0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 23201, in act461
    result = sorted(self.p_os[0].listdir(self.p_path[3]))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3440, in listdir
    return self.filesystem.ListDir(target_directory)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2537, in ListDir
    return list(directory_contents.keys())
Original test has 90 steps

SAVING TEST AS failure.65406.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "h"                                                         # STEP 0
ACTION: component3 = "h" 
component3 = None : <type 'NoneType'>
=> component3 = 'h' : <type 'str'>
==================================================
component1 = "lambda"                                                    # STEP 1
ACTION: component1 = "lambda" 
component1 = None : <type 'NoneType'>
=> component1 = 'lambda' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 2
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
component0 = "d"                                                         # STEP 3
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
str2 += 's'                                                              # STEP 4
ACTION: str2 += 's' 
str2 = '' : <type 'str'>
=> str2 = 's' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 5
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str2 += 'r'                                                              # STEP 6
ACTION: str2 += 'r' 
str2 = 's' : <type 'str'>
=> str2 = 'sr' : <type 'str'>
==================================================
str1 += 'v'                                                              # STEP 7
ACTION: str1 += 'v' 
str1 = '' : <type 'str'>
=> str1 = 'v' : <type 'str'>
==================================================
str2 += " "                                                              # STEP 8
ACTION: str2 += " " 
str2 = 'sr' : <type 'str'>
=> str2 = 'sr ' : <type 'str'>
==================================================
str2 += 'b'                                                              # STEP 9
ACTION: str2 += 'b' 
str2 = 'sr ' : <type 'str'>
=> str2 = 'sr b' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 10
ACTION: str2 += 's' 
str2 = 'sr b' : <type 'str'>
=> str2 = 'sr bs' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 11
ACTION: str1 += 'q' 
str1 = 'v' : <type 'str'>
=> str1 = 'vq' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 12
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "alpha"                                                    # STEP 13
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 14
ACTION: str1 += 'w' 
str1 = 'vq' : <type 'str'>
=> str1 = 'vqw' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 15
ACTION: str2 += 'p' 
str2 = 'sr bs' : <type 'str'>
=> str2 = 'sr bsp' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 16
ACTION: str1 += 'l' 
str1 = 'vqw' : <type 'str'>
=> str1 = 'vqwl' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 17
ACTION: str2 += 'm' 
str2 = 'sr bsp' : <type 'str'>
=> str2 = 'sr bspm' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 18
ACTION: str1 += 'n' 
str1 = 'vqwl' : <type 'str'>
=> str1 = 'vqwln' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 19
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str1 += 'u'                                                             # STEP 20
ACTION: str1 += 'u' 
str1 = 'vqwln' : <type 'str'>
=> str1 = 'vqwlnu' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 21
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
component4 = "epsilon"                                                  # STEP 22
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 23
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
os0.mkdir(path3)                                                        # STEP 24
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
str1 += 't'                                                             # STEP 25
ACTION: str1 += 't' 
str1 = 'vqwlnu' : <type 'str'>
=> str1 = 'vqwlnut' : <type 'str'>
==================================================
result = os0.readlink(path3)                                            # STEP 26
ACTION: result = os0.readlink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
str1 += 'g'                                                             # STEP 27
ACTION: str1 += 'g' 
str1 = 'vqwlnut' : <type 'str'>
=> str1 = 'vqwlnutg' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 28
ACTION: str1 += 'b' 
str1 = 'vqwlnutg' : <type 'str'>
=> str1 = 'vqwlnutgb' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 29
ACTION: str2 += 'h' 
str2 = 'sr bspm' : <type 'str'>
=> str2 = 'sr bspmh' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 30
ACTION: str1 += 'h' 
str1 = 'vqwlnutgb' : <type 'str'>
=> str1 = 'vqwlnutgbh' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 31
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
os0.mkdir(path3)                                                        # STEP 32
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = os0.path.dirname(path3)                                        # STEP 33
ACTION: result = os0.path.dirname(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path3) 
==================================================
str1 += 'h'                                                             # STEP 34
ACTION: str1 += 'h' 
str1 = 'vqwlnutgbh' : <type 'str'>
=> str1 = 'vqwlnutgbhh' : <type 'str'>
==================================================
os0.mkdir(path3)                                                        # STEP 35
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
str1 += " "                                                             # STEP 36
ACTION: str1 += " " 
str1 = 'vqwlnutgbhh' : <type 'str'>
=> str1 = 'vqwlnutgbhh ' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 37
ACTION: str1 += 'u' 
str1 = 'vqwlnutgbhh ' : <type 'str'>
=> str1 = 'vqwlnutgbhh u' : <type 'str'>
==================================================
os0.link(path3,path3)                                                   # STEP 38
ACTION: os0.link(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.isfile(path3)                                         # STEP 39
ACTION: result = os0.path.isfile(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path3) 
==================================================
str2 += 'j'                                                             # STEP 40
ACTION: str2 += 'j' 
str2 = 'sr bspmh' : <type 'str'>
=> str2 = 'sr bspmhj' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 41
ACTION: str1 += " " 
str1 = 'vqwlnutgbhh u' : <type 'str'>
=> str1 = 'vqwlnutgbhh u ' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 42
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 43
ACTION: str1 += 'u' 
str1 = 'vqwlnutgbhh u ' : <type 'str'>
=> str1 = 'vqwlnutgbhh u u' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 44
ACTION: str1 += 'b' 
str1 = 'vqwlnutgbhh u u' : <type 'str'>
=> str1 = 'vqwlnutgbhh u ub' : <type 'str'>
==================================================
result = os0.path.isabs(path3)                                          # STEP 45
ACTION: result = os0.path.isabs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path3) 
==================================================
result = os0.path.abspath(path1)                                        # STEP 46
ACTION: result = os0.path.abspath(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path1) 
==================================================
str2 += 'a'                                                             # STEP 47
ACTION: str2 += 'a' 
str2 = 'sr bspmhj' : <type 'str'>
=> str2 = 'sr bspmhja' : <type 'str'>
==================================================
result = os0.path.isdir(path1)                                          # STEP 48
ACTION: result = os0.path.isdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path1) 
==================================================
str2 += 'g'                                                             # STEP 49
ACTION: str2 += 'g' 
str2 = 'sr bspmhja' : <type 'str'>
=> str2 = 'sr bspmhjag' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 50
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.symlink(path3,path1)                                                # STEP 51
ACTION: os0.symlink(path3,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path3,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str2 += 's'                                                             # STEP 52
ACTION: str2 += 's' 
str2 = 'sr bspmhjag' : <type 'str'>
=> str2 = 'sr bspmhjags' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 53
ACTION: str2 += 'y' 
str2 = 'sr bspmhjags' : <type 'str'>
=> str2 = 'sr bspmhjagsy' : <type 'str'>
==================================================
os0.symlink(path3,path1)                                                # STEP 54
ACTION: os0.symlink(path3,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path3,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str3 = ""                                                               # STEP 55
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 56
ACTION: str3 += 'g' 
str3 = '' : <type 'str'>
=> str3 = 'g' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 57
ACTION: str2 += 'o' 
str2 = 'sr bspmhjagsy' : <type 'str'>
=> str2 = 'sr bspmhjagsyo' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 58
ACTION: str3 += 'v' 
str3 = 'g' : <type 'str'>
=> str3 = 'gv' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 59
ACTION: str1 += 'p' 
str1 = 'vqwlnutgbhh u ub' : <type 'str'>
=> str1 = 'vqwlnutgbhh u ubp' : <type 'str'>
==================================================
result = os0.path.dirname(path1)                                        # STEP 60
ACTION: result = os0.path.dirname(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path1) 
==================================================
str1 += 'q'                                                             # STEP 61
ACTION: str1 += 'q' 
str1 = 'vqwlnutgbhh u ubp' : <type 'str'>
=> str1 = 'vqwlnutgbhh u ubpq' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 62
ACTION: path1 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 63
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
result = os0.readlink(path1)                                            # STEP 64
ACTION: result = os0.readlink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake path does not exist: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: result_REF = os_REF0.readlink(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon'
==================================================
path3 += "/" + component1                                               # STEP 65
ACTION: path3 += "/" + component1 
component1 = 'lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 66
ACTION: fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
str3 += 'x'                                                             # STEP 67
ACTION: str3 += 'x' 
str3 = 'gv' : <type 'str'>
=> str3 = 'gvx' : <type 'str'>
==================================================
component1 = "phi"                                                      # STEP 68
ACTION: component1 = "phi" 
component1 = 'lambda' : <type 'str'>
=> component1 = 'phi' : <type 'str'>
==================================================
stat3 = os0.fstat(fd0)                                                  # STEP 69
ACTION: stat3 = os0.fstat(fd0) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1038f5890> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.fstat(fd_REF0) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=21815180, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507453150, st_mtime=1507453150, st_ctime=1507453150) : <type 'posix.stat_result'>
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 70
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY) 
=> fd_REF1 = 5 : <type 'int'>
==================================================
component4 = "b"                                                        # STEP 71
ACTION: component4 = "b" 
component4 = 'epsilon' : <type 'str'>
=> component4 = 'b' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 72
ACTION: str3 += 'm' 
str3 = 'gvx' : <type 'str'>
=> str3 = 'gvxm' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 73
ACTION: str3 += 'l' 
str3 = 'gvxm' : <type 'str'>
=> str3 = 'gvxml' : <type 'str'>
==================================================
stat2 = os0.stat(path3)                                                 # STEP 74
ACTION: stat2 = os0.stat(path3) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10388cd10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path3) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=21815181, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507453150, st_mtime=1507453150, st_ctime=1507453150) : <type 'posix.stat_result'>
==================================================
stat0 = os0.stat(path3)                                                 # STEP 75
ACTION: stat0 = os0.stat(path3) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102c221d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.stat(path3) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=21815181, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507453150, st_mtime=1507453150, st_ctime=1507453150) : <type 'posix.stat_result'>
==================================================
stat4 = os0.lstat(path1)                                                # STEP 76
ACTION: stat4 = os0.lstat(path1) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102c22210> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path1) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=21815180, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507453150, st_mtime=1507453150, st_ctime=1507453150) : <type 'posix.stat_result'>
==================================================
str3 += 'k'                                                             # STEP 77
ACTION: str3 += 'k' 
str3 = 'gvxml' : <type 'str'>
=> str3 = 'gvxmlk' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 78
ACTION: str0 += 'h' 
str0 = '' : <type 'str'>
=> str0 = 'h' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 79
ACTION: str3 += 'y' 
str3 = 'gvxmlk' : <type 'str'>
=> str3 = 'gvxmlky' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 80
ACTION: str0 += 'm' 
str0 = 'h' : <type 'str'>
=> str0 = 'hm' : <type 'str'>
==================================================
result = os0.read(fd1,bytes0)                                           # STEP 81
ACTION: result = os0.read(fd1,bytes0) 
bytes0 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
str2 += 'b'                                                             # STEP 82
ACTION: str2 += 'b' 
str2 = 'sr bspmhjagsyo' : <type 'str'>
=> str2 = 'sr bspmhjagsyob' : <type 'str'>
==================================================
stat1 = os0.lstat(path1)                                                # STEP 83
ACTION: stat1 = os0.lstat(path1) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102c222d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path1) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=21815180, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507453150, st_mtime=1507453150, st_ctime=1507453150) : <type 'posix.stat_result'>
==================================================
str3 += 'j'                                                             # STEP 84
ACTION: str3 += 'j' 
str3 = 'gvxmlky' : <type 'str'>
=> str3 = 'gvxmlkyj' : <type 'str'>
==================================================
result = stat3.st_size                                                  # STEP 85
ACTION: result = stat3.st_size 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1038f5890> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=21815180, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507453150, st_mtime=1507453150, st_ctime=1507453150) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF3.st_size 
==================================================
result = os0.read(fd1,bytes3)                                           # STEP 86
ACTION: result = os0.read(fd1,bytes3) 
bytes3 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
str3 += " "                                                             # STEP 87
ACTION: str3 += " " 
str3 = 'gvxmlkyj' : <type 'str'>
=> str3 = 'gvxmlkyj ' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 88
ACTION: bytes0 = 0 
bytes0 = 0 : <type 'int'>
==================================================
result = sorted(os0.listdir(path3))                                     # STEP 89
ACTION: result = sorted(os0.listdir(path3)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10388ce50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'str' object has no attribute 'keys'
ERROR: (<type 'exceptions.AttributeError'>, AttributeError("'str' object has no attribute 'keys'",), <traceback object at 0x102c80680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 23201, in act461
    result = sorted(self.p_os[0].listdir(self.p_path[3]))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3440, in listdir
    return self.filesystem.ListDir(target_directory)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2537, in ListDir
    return list(directory_contents.keys())
STOPPING TESTING DUE TO FAILED TEST
0.0539510250092 TOTAL RUNTIME
1 EXECUTED
90 TOTAL TEST OPERATIONS
0.0121519565582 TIME SPENT EXECUTING TEST OPERATIONS
0.00503206253052 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
5.07831573486e-05 TIME SPENT CHECKING PROPERTIES
0.0122027397156 TOTAL TIME SPENT RUNNING SUT
0.00367283821106 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
