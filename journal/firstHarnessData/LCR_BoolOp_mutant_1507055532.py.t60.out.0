Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.55402.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (False) == (True) ',), <traceback object at 0x103199128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31009, in act577
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 35 steps

SAVING TEST AS failure.55402.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "omega"                                                     # STEP 0
ACTION: component0 = "omega" 
component0 = None : <type 'NoneType'>
=> component0 = 'omega' : <type 'str'>
==================================================
component2 = "lambda"                                                    # STEP 1
ACTION: component2 = "lambda" 
component2 = None : <type 'NoneType'>
=> component2 = 'lambda' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "lambda"                                                    # STEP 3
ACTION: component4 = "lambda" 
component4 = None : <type 'NoneType'>
=> component4 = 'lambda' : <type 'str'>
==================================================
component1 = "d"                                                         # STEP 4
ACTION: component1 = "d" 
component1 = None : <type 'NoneType'>
=> component1 = 'd' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component0                                                # STEP 6
ACTION: path2 += "/" + component0 
component0 = 'omega' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
component0 = "alpha"                                                     # STEP 7
ACTION: component0 = "alpha" 
component0 = 'omega' : <type 'str'>
=> component0 = 'alpha' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 8
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
path2 += "/" + component0                                                # STEP 9
ACTION: path2 += "/" + component0 
component0 = 'alpha' : <type 'str'>
path2 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/omega/alpha' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 10
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 11
ACTION: str4 += 'e' 
str4 = '' : <type 'str'>
=> str4 = 'e' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 12
ACTION: str4 += 'e' 
str4 = 'e' : <type 'str'>
=> str4 = 'ee' : <type 'str'>
==================================================
component0 = "g"                                                        # STEP 13
ACTION: component0 = "g" 
component0 = 'alpha' : <type 'str'>
=> component0 = 'g' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 14
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031fba10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
bytes1 = 0                                                              # STEP 15
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
path2 += "/" + component3                                               # STEP 16
ACTION: path2 += "/" + component3 
component3 = 'a' : <type 'str'>
path2 = '/Volumes/ramdisk/test/omega/alpha' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/omega/alpha/a' : <type 'str'>
==================================================
os0.mkdir(path2)                                                        # STEP 17
ACTION: os0.mkdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031fba10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/omega/alpha/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/omega/alpha'
REFERENCE ACTION: os_REF0.mkdir(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/alpha/a'
==================================================
os0.link(path2,path4)                                                   # STEP 18
ACTION: os0.link(path2,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031fba10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/omega/alpha/a' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path2,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
component3 = "alpha"                                                    # STEP 19
ACTION: component3 = "alpha" 
component3 = 'a' : <type 'str'>
=> component3 = 'alpha' : <type 'str'>
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 20
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031fba10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/omega/alpha/a' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/omega/alpha'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/alpha/a'
==================================================
str4 += 'z'                                                             # STEP 21
ACTION: str4 += 'z' 
str4 = 'ee' : <type 'str'>
=> str4 = 'eez' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 22
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 23
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031fba10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/omega/alpha/a' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/omega/alpha'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/alpha/a'
==================================================
stat4 = os0.lstat(path2)                                                # STEP 24
ACTION: stat4 = os0.lstat(path2) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031fba10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/omega/alpha/a' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/omega/alpha/a'
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/alpha/a'
==================================================
os0.mkdir(path4)                                                        # STEP 25
ACTION: os0.mkdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031fba10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
path1 += "/" + component0                                               # STEP 26
ACTION: path1 += "/" + component0 
component0 = 'g' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
fd0 = os0.open(path1, os.O_CREAT)                                       # STEP 27
ACTION: fd0 = os0.open(path1, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031fba10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_CREAT) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
result = os0.path.isfile(path2)                                         # STEP 28
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031fba10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/omega/alpha/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
str4 += 'v'                                                             # STEP 29
ACTION: str4 += 'v' 
str4 = 'eez' : <type 'str'>
=> str4 = 'eezv' : <type 'str'>
==================================================
os0.symlink(path1,path4)                                                # STEP 30
ACTION: os0.symlink(path1,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031fba10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path1,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_EXCL)                           # STEP 31
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031fba10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/g'
==================================================
os0.makedirs(path2)                                                     # STEP 32
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031fba10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/omega/alpha/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path2) 
==================================================
fd1 = os0.open(path1, os.O_RDONLY)                                      # STEP 33
ACTION: fd1 = os0.open(path1, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031fba10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_RDONLY) 
=> fd_REF1 = 5 : <type 'int'>
==================================================
result = os0.path.isabs(path4)                                          # STEP 34
ACTION: result = os0.path.isabs(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1031fba10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path4) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (False) == (True) ',), <traceback object at 0x104248710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31009, in act577
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
0.0610721111298 TOTAL RUNTIME
2 EXECUTED
235 TOTAL TEST OPERATIONS
0.0110998153687 TIME SPENT EXECUTING TEST OPERATIONS
0.0124943256378 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000123262405396 TIME SPENT CHECKING PROPERTIES
0.011223077774 TOTAL TIME SPENT RUNNING SUT
0.00634002685547 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
