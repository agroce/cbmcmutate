Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59091.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103b02d40>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20475, in act420
    assert (type(raised) == type(refRaised))
Original test has 68 steps

SAVING TEST AS failure.59091.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "delta"                                                     # STEP 0
ACTION: component4 = "delta" 
component4 = None : <type 'NoneType'>
=> component4 = 'delta' : <type 'str'>
==================================================
component2 = "alpha"                                                     # STEP 1
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
component1 = "lambda"                                                    # STEP 2
ACTION: component1 = "lambda" 
component1 = None : <type 'NoneType'>
=> component1 = 'lambda' : <type 'str'>
==================================================
component3 = "beta"                                                      # STEP 3
ACTION: component3 = "beta" 
component3 = None : <type 'NoneType'>
=> component3 = 'beta' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 4
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
component0 = "alpha"                                                     # STEP 5
ACTION: component0 = "alpha" 
component0 = None : <type 'NoneType'>
=> component0 = 'alpha' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 6
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
bytes3 = 0                                                               # STEP 7
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
bytes3 += 1                                                              # STEP 8
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
bytes3 = 0                                                               # STEP 9
ACTION: bytes3 = 0 
bytes3 = 1 : <type 'int'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 = ""                                                               # STEP 10
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 11
ACTION: str3 += 'c' 
str3 = '' : <type 'str'>
=> str3 = 'c' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 12
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 13
ACTION: str2 += 'b' 
str2 = '' : <type 'str'>
=> str2 = 'b' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 14
ACTION: str3 += 'l' 
str3 = 'c' : <type 'str'>
=> str3 = 'cl' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 15
ACTION: str2 += 'c' 
str2 = 'b' : <type 'str'>
=> str2 = 'bc' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 16
ACTION: str3 += 'z' 
str3 = 'cl' : <type 'str'>
=> str3 = 'clz' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 17
ACTION: str3 += 'h' 
str3 = 'clz' : <type 'str'>
=> str3 = 'clzh' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 18
ACTION: str2 += 'b' 
str2 = 'bc' : <type 'str'>
=> str2 = 'bcb' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 19
ACTION: str2 += 'x' 
str2 = 'bcb' : <type 'str'>
=> str2 = 'bcbx' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 20
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str2 += 'p'                                                             # STEP 21
ACTION: str2 += 'p' 
str2 = 'bcbx' : <type 'str'>
=> str2 = 'bcbxp' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 22
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes3 += 1                                                             # STEP 23
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str3 += " "                                                             # STEP 24
ACTION: str3 += " " 
str3 = 'clzh' : <type 'str'>
=> str3 = 'clzh ' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 26
ACTION: bytes2 += 1 
bytes2 = 1 : <type 'int'>
=> bytes2 = 2 : <type 'int'>
==================================================
str2 += 'e'                                                             # STEP 27
ACTION: str2 += 'e' 
str2 = 'bcbxp' : <type 'str'>
=> str2 = 'bcbxpe' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 28
ACTION: str3 += 'w' 
str3 = 'clzh ' : <type 'str'>
=> str3 = 'clzh w' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 29
ACTION: str3 += 'y' 
str3 = 'clzh w' : <type 'str'>
=> str3 = 'clzh wy' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 30
ACTION: str3 += 'p' 
str3 = 'clzh wy' : <type 'str'>
=> str3 = 'clzh wyp' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 31
ACTION: str2 += 'x' 
str2 = 'bcbxpe' : <type 'str'>
=> str2 = 'bcbxpex' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 32
ACTION: str3 += 'c' 
str3 = 'clzh wyp' : <type 'str'>
=> str3 = 'clzh wypc' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 33
ACTION: str2 += 'l' 
str2 = 'bcbxpex' : <type 'str'>
=> str2 = 'bcbxpexl' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 34
ACTION: str2 += 'e' 
str2 = 'bcbxpexl' : <type 'str'>
=> str2 = 'bcbxpexle' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 35
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 36
ACTION: str2 += 't' 
str2 = 'bcbxpexle' : <type 'str'>
=> str2 = 'bcbxpexlet' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 37
ACTION: bytes3 += 1 
bytes3 = 1 : <type 'int'>
=> bytes3 = 2 : <type 'int'>
==================================================
str3 += 'h'                                                             # STEP 38
ACTION: str3 += 'h' 
str3 = 'clzh wypc' : <type 'str'>
=> str3 = 'clzh wypch' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 39
ACTION: str3 += 'u' 
str3 = 'clzh wypch' : <type 'str'>
=> str3 = 'clzh wypchu' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 40
ACTION: bytes3 = 0 
bytes3 = 2 : <type 'int'>
=> bytes3 = 0 : <type 'int'>
==================================================
str2 += 'l'                                                             # STEP 41
ACTION: str2 += 'l' 
str2 = 'bcbxpexlet' : <type 'str'>
=> str2 = 'bcbxpexletl' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 42
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10355cf50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
bytes1 += 1                                                             # STEP 43
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
path1 += "/" + component2                                               # STEP 44
ACTION: path1 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 45
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 46
ACTION: fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10355cf50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
str2 += 'l'                                                             # STEP 47
ACTION: str2 += 'l' 
str2 = 'bcbxpexletl' : <type 'str'>
=> str2 = 'bcbxpexletll' : <type 'str'>
==================================================
component2 = "e"                                                        # STEP 48
ACTION: component2 = "e" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'e' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 49
ACTION: str3 += 'f' 
str3 = 'clzh wypchu' : <type 'str'>
=> str3 = 'clzh wypchuf' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 50
ACTION: str3 += 'b' 
str3 = 'clzh wypchuf' : <type 'str'>
=> str3 = 'clzh wypchufb' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 51
ACTION: str3 += 'j' 
str3 = 'clzh wypchufb' : <type 'str'>
=> str3 = 'clzh wypchufbj' : <type 'str'>
==================================================
result = os0.read(fd0,bytes2)                                           # STEP 52
ACTION: result = os0.read(fd0,bytes2) 
bytes2 = 2 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10355cf50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
stat4 = os0.fstat(fd0)                                                  # STEP 53
ACTION: stat4 = os0.fstat(fd0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10355cf50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103c3d890> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.fstat(fd_REF0) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=13301892, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507333022, st_mtime=1507333022, st_ctime=1507333022) : <type 'posix.stat_result'>
==================================================
str4 += 'a'                                                             # STEP 54
ACTION: str4 += 'a' 
str4 = '' : <type 'str'>
=> str4 = 'a' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 55
ACTION: str2 += 'g' 
str2 = 'bcbxpexletll' : <type 'str'>
=> str2 = 'bcbxpexletllg' : <type 'str'>
==================================================
fd1 = os0.open(path1, os.O_CREAT)                                       # STEP 56
ACTION: fd1 = os0.open(path1, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10355cf50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT) 
=> fd_REF1 = 5 : <type 'int'>
==================================================
os0.makedirs(path1)                                                     # STEP 57
ACTION: os0.makedirs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10355cf50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: os_REF0.makedirs(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/alpha'
==================================================
str4 += 'b'                                                             # STEP 58
ACTION: str4 += 'b' 
str4 = 'a' : <type 'str'>
=> str4 = 'ab' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 59
ACTION: str3 += 'e' 
str3 = 'clzh wypchufbj' : <type 'str'>
=> str3 = 'clzh wypchufbje' : <type 'str'>
==================================================
stat3 = os0.fstat(fd1)                                                  # STEP 60
ACTION: stat3 = os0.fstat(fd1) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10355cf50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103c3df10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.fstat(fd_REF1) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=13301892, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507333022, st_mtime=1507333022, st_ctime=1507333022) : <type 'posix.stat_result'>
==================================================
str2 += 'v'                                                             # STEP 61
ACTION: str2 += 'v' 
str2 = 'bcbxpexletllg' : <type 'str'>
=> str2 = 'bcbxpexletllgv' : <type 'str'>
==================================================
result = os0.path.islink(path1)                                         # STEP 62
ACTION: result = os0.path.islink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10355cf50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path1) 
==================================================
stat1 = os0.stat(path1)                                                 # STEP 63
ACTION: stat1 = os0.stat(path1) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10355cf50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103c3d950> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.stat(path1) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=13301892, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507333022, st_mtime=1507333022, st_ctime=1507333022) : <type 'posix.stat_result'>
==================================================
str4 += 'y'                                                             # STEP 64
ACTION: str4 += 'y' 
str4 = 'ab' : <type 'str'>
=> str4 = 'aby' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 65
ACTION: str4 += 'u' 
str4 = 'aby' : <type 'str'>
=> str4 = 'abyu' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 66
ACTION: str2 += 'v' 
str2 = 'bcbxpexletllgv' : <type 'str'>
=> str2 = 'bcbxpexletllgvv' : <type 'str'>
==================================================
os0.write(fd1,str2)                                                     # STEP 67
ACTION: os0.write(fd1,str2) 
str2 = 'bcbxpexletllgvv' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10355cf50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF1,str2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103bf9a70>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20475, in act420
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0388588905334 TOTAL RUNTIME
1 EXECUTED
68 TOTAL TEST OPERATIONS
0.00537037849426 TIME SPENT EXECUTING TEST OPERATIONS
0.0059335231781 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.19480895996e-05 TIME SPENT CHECKING PROPERTIES
0.00540232658386 TOTAL TIME SPENT RUNNING SUT
0.00392889976501 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
