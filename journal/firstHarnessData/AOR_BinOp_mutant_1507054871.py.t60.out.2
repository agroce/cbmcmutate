Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.48097.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('integer division or modulo by zero',), <traceback object at 0x1033c8248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15895, in act358
    self.p_fd[1] = self.p_os[0].open(self.p_path[2], os.O_CREAT | os.O_WRONLY | os.O_EXCL)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4566, in Call
    file_object = self.filesystem.CreateFileInternally(real_path, create_missing_dirs=False, apply_umask=True, raw_io=self.raw_io)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2225, in CreateFileInternally
    file_object._set_initial_contents(contents)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 462, in _set_initial_contents
    self.filesystem.ChangeDiskUsage((st_size / current_size), self.name, self.st_dev)
Original test has 53 steps

SAVING TEST AS failure.48097.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "f"                                                         # STEP 0
ACTION: component1 = "f" 
component1 = None : <type 'NoneType'>
=> component1 = 'f' : <type 'str'>
==================================================
component0 = "g"                                                         # STEP 1
ACTION: component0 = "g" 
component0 = None : <type 'NoneType'>
=> component0 = 'g' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 2
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
component3 = "h"                                                         # STEP 3
ACTION: component3 = "h" 
component3 = None : <type 'NoneType'>
=> component3 = 'h' : <type 'str'>
==================================================
component2 = "g"                                                         # STEP 4
ACTION: component2 = "g" 
component2 = None : <type 'NoneType'>
=> component2 = 'g' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 5
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
bytes0 += 1                                                              # STEP 6
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
bytes0 += 1                                                              # STEP 7
ACTION: bytes0 += 1 
bytes0 = 1 : <type 'int'>
=> bytes0 = 2 : <type 'int'>
==================================================
str3 = ""                                                                # STEP 8
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 9
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 10
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 11
ACTION: str4 += 'r' 
str4 = '' : <type 'str'>
=> str4 = 'r' : <type 'str'>
==================================================
component4 = "e"                                                        # STEP 12
ACTION: component4 = "e" 
component4 = None : <type 'NoneType'>
=> component4 = 'e' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 13
ACTION: str4 += 'h' 
str4 = 'r' : <type 'str'>
=> str4 = 'rh' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 14
ACTION: str2 += " " 
str2 = '' : <type 'str'>
=> str2 = ' ' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 15
ACTION: str2 += 'i' 
str2 = ' ' : <type 'str'>
=> str2 = ' i' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 16
ACTION: str2 += 'b' 
str2 = ' i' : <type 'str'>
=> str2 = ' ib' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 17
ACTION: str3 += 'b' 
str3 = '' : <type 'str'>
=> str3 = 'b' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 18
ACTION: str2 += 'a' 
str2 = ' ib' : <type 'str'>
=> str2 = ' iba' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 19
ACTION: str3 += 'n' 
str3 = 'b' : <type 'str'>
=> str3 = 'bn' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 20
ACTION: str4 += 'o' 
str4 = 'rh' : <type 'str'>
=> str4 = 'rho' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 21
ACTION: str2 = "" 
str2 = ' iba' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 22
ACTION: str4 += 'a' 
str4 = 'rho' : <type 'str'>
=> str4 = 'rhoa' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 23
ACTION: str3 += " " 
str3 = 'bn' : <type 'str'>
=> str3 = 'bn ' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 24
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033e4390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str3 += 'l'                                                             # STEP 25
ACTION: str3 += 'l' 
str3 = 'bn ' : <type 'str'>
=> str3 = 'bn l' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 26
ACTION: str4 += 'd' 
str4 = 'rhoa' : <type 'str'>
=> str4 = 'rhoad' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 27
ACTION: str3 += 'u' 
str3 = 'bn l' : <type 'str'>
=> str3 = 'bn lu' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 28
ACTION: str4 += 'v' 
str4 = 'rhoad' : <type 'str'>
=> str4 = 'rhoadv' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 29
ACTION: str2 += 'y' 
str2 = '' : <type 'str'>
=> str2 = 'y' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 30
ACTION: bytes0 += 1 
bytes0 = 2 : <type 'int'>
=> bytes0 = 3 : <type 'int'>
==================================================
str4 += 'z'                                                             # STEP 31
ACTION: str4 += 'z' 
str4 = 'rhoadv' : <type 'str'>
=> str4 = 'rhoadvz' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 32
ACTION: str3 = "" 
str3 = 'bn lu' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 33
ACTION: str3 += 'o' 
str3 = '' : <type 'str'>
=> str3 = 'o' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 34
ACTION: str3 += 'i' 
str3 = 'o' : <type 'str'>
=> str3 = 'oi' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 35
ACTION: str3 += 'm' 
str3 = 'oi' : <type 'str'>
=> str3 = 'oim' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 36
ACTION: str4 += 'c' 
str4 = 'rhoadvz' : <type 'str'>
=> str4 = 'rhoadvzc' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 37
ACTION: str3 += 's' 
str3 = 'oim' : <type 'str'>
=> str3 = 'oims' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 38
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 39
ACTION: str2 += 'y' 
str2 = 'y' : <type 'str'>
=> str2 = 'yy' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 40
ACTION: str3 += 't' 
str3 = 'oims' : <type 'str'>
=> str3 = 'oimst' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 41
ACTION: str3 += " " 
str3 = 'oimst' : <type 'str'>
=> str3 = 'oimst ' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 42
ACTION: str2 += 't' 
str2 = 'yy' : <type 'str'>
=> str2 = 'yyt' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 43
ACTION: str3 += 'k' 
str3 = 'oimst ' : <type 'str'>
=> str3 = 'oimst k' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 44
ACTION: path2 += "/" + component1 
component1 = 'f' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 45
ACTION: fd1 = os0.open(path2, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033e4390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/f' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/f'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_WRONLY | os.O_APPEND) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/f'
==================================================
fd0 = os0.open(path2, os.O_RDWR)                                        # STEP 46
ACTION: fd0 = os0.open(path2, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033e4390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/f' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/f'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/f'
==================================================
str2 += 'v'                                                             # STEP 47
ACTION: str2 += 'v' 
str2 = 'yyt' : <type 'str'>
=> str2 = 'yytv' : <type 'str'>
==================================================
os0.link(path2,path2)                                                   # STEP 48
ACTION: os0.link(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033e4390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/f' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/f'
REFERENCE ACTION: os_REF0.link(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
str4 += 'w'                                                             # STEP 49
ACTION: str4 += 'w' 
str4 = 'rhoadvzc' : <type 'str'>
=> str4 = 'rhoadvzcw' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 50
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 51
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 52
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1033e4390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/f' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.ZeroDivisionError'> integer division or modulo by zero
ERROR: (<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('integer division or modulo by zero',), <traceback object at 0x1039f9710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15895, in act358
    self.p_fd[1] = self.p_os[0].open(self.p_path[2], os.O_CREAT | os.O_WRONLY | os.O_EXCL)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4566, in Call
    file_object = self.filesystem.CreateFileInternally(real_path, create_missing_dirs=False, apply_umask=True, raw_io=self.raw_io)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2225, in CreateFileInternally
    file_object._set_initial_contents(contents)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 462, in _set_initial_contents
    self.filesystem.ChangeDiskUsage((st_size / current_size), self.name, self.st_dev)
STOPPING TESTING DUE TO FAILED TEST
0.0295450687408 TOTAL RUNTIME
1 EXECUTED
53 TOTAL TEST OPERATIONS
0.00288200378418 TIME SPENT EXECUTING TEST OPERATIONS
0.00349855422974 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.62260437012e-05 TIME SPENT CHECKING PROPERTIES
0.00290822982788 TOTAL TIME SPENT RUNNING SUT
0.00311899185181 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
