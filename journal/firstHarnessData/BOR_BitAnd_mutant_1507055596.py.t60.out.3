Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62032.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1025384d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 14085, in act333
    assert (type(raised) == type(refRaised))
Original test has 33 steps

SAVING TEST AS failure.62032.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "alpha"                                                     # STEP 0
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
component3 = "f"                                                         # STEP 1
ACTION: component3 = "f" 
component3 = None : <type 'NoneType'>
=> component3 = 'f' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 2
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component0 = "phi"                                                       # STEP 3
ACTION: component0 = "phi" 
component0 = None : <type 'NoneType'>
=> component0 = 'phi' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 4
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101e3a990> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str4 += 'q'                                                              # STEP 5
ACTION: str4 += 'q' 
str4 = '' : <type 'str'>
=> str4 = 'q' : <type 'str'>
==================================================
str4 += 'l'                                                              # STEP 6
ACTION: str4 += 'l' 
str4 = 'q' : <type 'str'>
=> str4 = 'ql' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 7
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component1 = "d"                                                         # STEP 8
ACTION: component1 = "d" 
component1 = None : <type 'NoneType'>
=> component1 = 'd' : <type 'str'>
==================================================
str0 += 'p'                                                              # STEP 9
ACTION: str0 += 'p' 
str0 = '' : <type 'str'>
=> str0 = 'p' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 10
ACTION: str0 += 'c' 
str0 = 'p' : <type 'str'>
=> str0 = 'pc' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 11
ACTION: str4 += 'k' 
str4 = 'ql' : <type 'str'>
=> str4 = 'qlk' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 12
ACTION: str4 += 'z' 
str4 = 'qlk' : <type 'str'>
=> str4 = 'qlkz' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 13
ACTION: component4 = "beta" 
component4 = None : <type 'NoneType'>
=> component4 = 'beta' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 14
ACTION: str4 += 'z' 
str4 = 'qlkz' : <type 'str'>
=> str4 = 'qlkzz' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 15
ACTION: str0 += 'e' 
str0 = 'pc' : <type 'str'>
=> str0 = 'pce' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 16
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 17
ACTION: str4 += 'h' 
str4 = 'qlkzz' : <type 'str'>
=> str4 = 'qlkzzh' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 18
ACTION: str4 += 'h' 
str4 = 'qlkzzh' : <type 'str'>
=> str4 = 'qlkzzhh' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 19
ACTION: str0 += 'x' 
str0 = 'pce' : <type 'str'>
=> str0 = 'pcex' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 20
ACTION: str0 += 't' 
str0 = 'pcex' : <type 'str'>
=> str0 = 'pcext' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 21
ACTION: str0 += 'p' 
str0 = 'pcext' : <type 'str'>
=> str0 = 'pcextp' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 22
ACTION: str0 += 's' 
str0 = 'pcextp' : <type 'str'>
=> str0 = 'pcextps' : <type 'str'>
==================================================
result = os0.path.dirname(path2)                                        # STEP 23
ACTION: result = os0.path.dirname(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101e3a990> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path2) 
==================================================
str4 += 'f'                                                             # STEP 24
ACTION: str4 += 'f' 
str4 = 'qlkzzhh' : <type 'str'>
=> str4 = 'qlkzzhhf' : <type 'str'>
==================================================
str0 += 'f'                                                             # STEP 25
ACTION: str0 += 'f' 
str0 = 'pcextps' : <type 'str'>
=> str0 = 'pcextpsf' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 26
ACTION: path2 += "/" + component1 
component1 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
os0.mkdir(path2)                                                        # STEP 27
ACTION: os0.mkdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101e3a990> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.mkdir(path2) 
==================================================
str4 += 'c'                                                             # STEP 28
ACTION: str4 += 'c' 
str4 = 'qlkzzhhf' : <type 'str'>
=> str4 = 'qlkzzhhfc' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 29
ACTION: str0 += 'w' 
str0 = 'pcextpsf' : <type 'str'>
=> str0 = 'pcextpsfw' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 30
ACTION: str4 += 'o' 
str4 = 'qlkzzhhfc' : <type 'str'>
=> str4 = 'qlkzzhhfco' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 31
ACTION: path2 += "/" + component1 
component1 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/d/d' : <type 'str'>
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 32
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101e3a990> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d/d' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in the fake filesystem: '/Volumes/ramdisk/test/d'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF0 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1024557e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 14085, in act333
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.248780965805 TOTAL RUNTIME
4 EXECUTED
633 TOTAL TEST OPERATIONS
0.186680793762 TIME SPENT EXECUTING TEST OPERATIONS
0.0269153118134 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000328302383423 TIME SPENT CHECKING PROPERTIES
0.187009096146 TOTAL TIME SPENT RUNNING SUT
0.0110099315643 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
