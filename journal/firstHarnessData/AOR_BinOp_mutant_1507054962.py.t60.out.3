Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62582.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for //: 'str' and 'str'",), <traceback object at 0x1052442d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1329, in NormalizeCase
    return components_to_path()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1305, in components_to_path
    normalized_path = (sep // normalized_path)
Original test has 26 steps

SAVING TEST AS failure.62582.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "e"                                                         # STEP 0
ACTION: component1 = "e" 
component1 = None : <type 'NoneType'>
=> component1 = 'e' : <type 'str'>
==================================================
component4 = "g"                                                         # STEP 1
ACTION: component4 = "g" 
component4 = None : <type 'NoneType'>
=> component4 = 'g' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 2
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
bytes2 = 0                                                               # STEP 3
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
component0 = "omega"                                                     # STEP 4
ACTION: component0 = "omega" 
component0 = None : <type 'NoneType'>
=> component0 = 'omega' : <type 'str'>
==================================================
component2 = "alpha"                                                     # STEP 5
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 6
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'i'                                                              # STEP 7
ACTION: str0 += 'i' 
str0 = '' : <type 'str'>
=> str0 = 'i' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 8
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 't'                                                              # STEP 9
ACTION: str2 += 't' 
str2 = '' : <type 'str'>
=> str2 = 't' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 10
ACTION: str0 += 'd' 
str0 = 'i' : <type 'str'>
=> str0 = 'id' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 11
ACTION: str2 += 'i' 
str2 = 't' : <type 'str'>
=> str2 = 'ti' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 12
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str0 += 'a'                                                             # STEP 13
ACTION: str0 += 'a' 
str0 = 'id' : <type 'str'>
=> str0 = 'ida' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 14
ACTION: str2 += 'o' 
str2 = 'ti' : <type 'str'>
=> str2 = 'tio' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 15
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component3 = "gamma"                                                    # STEP 16
ACTION: component3 = "gamma" 
component3 = None : <type 'NoneType'>
=> component3 = 'gamma' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 17
ACTION: str4 += 'o' 
str4 = '' : <type 'str'>
=> str4 = 'o' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 18
ACTION: str0 += 'd' 
str0 = 'ida' : <type 'str'>
=> str0 = 'idad' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 19
ACTION: str4 += 'c' 
str4 = 'o' : <type 'str'>
=> str4 = 'oc' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 20
ACTION: str4 += 'b' 
str4 = 'oc' : <type 'str'>
=> str4 = 'ocb' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 21
ACTION: str2 += 'z' 
str2 = 'tio' : <type 'str'>
=> str2 = 'tioz' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 22
ACTION: str4 += 'l' 
str4 = 'ocb' : <type 'str'>
=> str4 = 'ocbl' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 23
ACTION: str4 += 'g' 
str4 = 'ocbl' : <type 'str'>
=> str4 = 'ocblg' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 24
ACTION: str4 += 'r' 
str4 = 'ocblg' : <type 'str'>
=> str4 = 'ocblgr' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 25
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unsupported operand type(s) for //: 'str' and 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for //: 'str' and 'str'",), <traceback object at 0x10517a098>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1329, in NormalizeCase
    return components_to_path()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1305, in components_to_path
    normalized_path = (sep // normalized_path)
STOPPING TESTING DUE TO FAILED TEST
0.0458309650421 TOTAL RUNTIME
2 EXECUTED
226 TOTAL TEST OPERATIONS
0.00525879859924 TIME SPENT EXECUTING TEST OPERATIONS
0.0142283439636 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000153779983521 TIME SPENT CHECKING PROPERTIES
0.00541257858276 TOTAL TIME SPENT RUNNING SUT
0.00702595710754 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
