Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.53475.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1005aa368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15935, in act358
    assert (type(raised) == type(refRaised))
Original test has 63 steps

SAVING TEST AS failure.53475.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "phi"                                                       # STEP 0
ACTION: component3 = "phi" 
component3 = None : <type 'NoneType'>
=> component3 = 'phi' : <type 'str'>
==================================================
component2 = "alpha"                                                     # STEP 1
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component2                                                # STEP 3
ACTION: path2 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
component0 = "gamma"                                                     # STEP 4
ACTION: component0 = "gamma" 
component0 = None : <type 'NoneType'>
=> component0 = 'gamma' : <type 'str'>
==================================================
component2 = "phi"                                                       # STEP 5
ACTION: component2 = "phi" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'phi' : <type 'str'>
==================================================
component4 = "alpha"                                                     # STEP 6
ACTION: component4 = "alpha" 
component4 = None : <type 'NoneType'>
=> component4 = 'alpha' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 7
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component1 = "delta"                                                     # STEP 8
ACTION: component1 = "delta" 
component1 = None : <type 'NoneType'>
=> component1 = 'delta' : <type 'str'>
==================================================
str4 += 'k'                                                              # STEP 9
ACTION: str4 += 'k' 
str4 = '' : <type 'str'>
=> str4 = 'k' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 10
ACTION: str4 += 'a' 
str4 = 'k' : <type 'str'>
=> str4 = 'ka' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 11
ACTION: str4 += 'h' 
str4 = 'ka' : <type 'str'>
=> str4 = 'kah' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 12
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 13
ACTION: path2 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha/gamma' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 14
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 15
ACTION: str0 += 'z' 
str0 = '' : <type 'str'>
=> str0 = 'z' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 16
ACTION: str4 += 'w' 
str4 = 'kah' : <type 'str'>
=> str4 = 'kahw' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 18
ACTION: str0 += 'm' 
str0 = 'z' : <type 'str'>
=> str0 = 'zm' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 19
ACTION: str4 += 'a' 
str4 = 'kahw' : <type 'str'>
=> str4 = 'kahwa' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 20
ACTION: str0 += 'q' 
str0 = 'zm' : <type 'str'>
=> str0 = 'zmq' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 21
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str0 += 'c'                                                             # STEP 22
ACTION: str0 += 'c' 
str0 = 'zmq' : <type 'str'>
=> str0 = 'zmqc' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 23
ACTION: path2 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/alpha/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha/gamma/gamma' : <type 'str'>
==================================================
component0 = "delta"                                                    # STEP 24
ACTION: component0 = "delta" 
component0 = 'gamma' : <type 'str'>
=> component0 = 'delta' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 25
ACTION: str3 += 'n' 
str3 = '' : <type 'str'>
=> str3 = 'n' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 26
ACTION: str0 += 'p' 
str0 = 'zmqc' : <type 'str'>
=> str0 = 'zmqcp' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 27
ACTION: str4 += 'z' 
str4 = 'kahwa' : <type 'str'>
=> str4 = 'kahwaz' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 28
ACTION: str3 += 'n' 
str3 = 'n' : <type 'str'>
=> str3 = 'nn' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 29
ACTION: str3 += 'w' 
str3 = 'nn' : <type 'str'>
=> str3 = 'nnw' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 30
ACTION: str3 += 'o' 
str3 = 'nnw' : <type 'str'>
=> str3 = 'nnwo' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 31
ACTION: path0 += "/" + component4 
component4 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 32
ACTION: str4 += 'y' 
str4 = 'kahwaz' : <type 'str'>
=> str4 = 'kahwazy' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 33
ACTION: path2 += "/" + component0 
component0 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/alpha/gamma/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha/gamma/gamma/delta' : <type 'str'>
==================================================
component0 = "beta"                                                     # STEP 34
ACTION: component0 = "beta" 
component0 = 'delta' : <type 'str'>
=> component0 = 'beta' : <type 'str'>
==================================================
component4 = "c"                                                        # STEP 35
ACTION: component4 = "c" 
component4 = 'alpha' : <type 'str'>
=> component4 = 'c' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 36
ACTION: str4 += 's' 
str4 = 'kahwazy' : <type 'str'>
=> str4 = 'kahwazys' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 37
ACTION: str3 += 'x' 
str3 = 'nnwo' : <type 'str'>
=> str3 = 'nnwox' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 38
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 39
ACTION: str3 += 'n' 
str3 = 'nnwox' : <type 'str'>
=> str3 = 'nnwoxn' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 40
ACTION: str3 += 'b' 
str3 = 'nnwoxn' : <type 'str'>
=> str3 = 'nnwoxnb' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 41
ACTION: str0 += 'n' 
str0 = 'zmqcp' : <type 'str'>
=> str0 = 'zmqcpn' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 42
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 43
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
path2 += "/" + component0                                               # STEP 44
ACTION: path2 += "/" + component0 
component0 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/alpha/gamma/gamma/delta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/alpha/gamma/gamma/delta/beta' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 45
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str2 += 'r'                                                             # STEP 46
ACTION: str2 += 'r' 
str2 = '' : <type 'str'>
=> str2 = 'r' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 47
ACTION: str4 += 'y' 
str4 = 'kahwazys' : <type 'str'>
=> str4 = 'kahwazysy' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 48
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 49
ACTION: str4 += 'u' 
str4 = 'kahwazysy' : <type 'str'>
=> str4 = 'kahwazysyu' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 50
ACTION: path0 += "/" + component4 
component4 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 51
ACTION: str0 += 'w' 
str0 = 'zmqcpn' : <type 'str'>
=> str0 = 'zmqcpnw' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 52
ACTION: str4 += 'v' 
str4 = 'kahwazysyu' : <type 'str'>
=> str4 = 'kahwazysyuv' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 53
ACTION: str4 += 'u' 
str4 = 'kahwazysyuv' : <type 'str'>
=> str4 = 'kahwazysyuvu' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 54
ACTION: str4 += 'h' 
str4 = 'kahwazysyuvu' : <type 'str'>
=> str4 = 'kahwazysyuvuh' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 55
ACTION: str2 += 'p' 
str2 = 'r' : <type 'str'>
=> str2 = 'rp' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 56
ACTION: str2 += 'x' 
str2 = 'rp' : <type 'str'>
=> str2 = 'rpx' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 57
ACTION: str4 += 'd' 
str4 = 'kahwazysyuvuh' : <type 'str'>
=> str4 = 'kahwazysyuvuhd' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 58
ACTION: str4 += 'x' 
str4 = 'kahwazysyuvuhd' : <type 'str'>
=> str4 = 'kahwazysyuvuhdx' : <type 'str'>
==================================================
component4 = "c"                                                        # STEP 59
ACTION: component4 = "c" 
component4 = 'c' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 60
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1005a7a50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.path.isdir(path0)                                          # STEP 61
ACTION: result = os0.path.isdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1005a7a50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path0) 
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 62
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1005a7a50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/alpha/gamma/gamma/delta/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha/gamma/gamma/delta/beta'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1027dac68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15935, in act358
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0458431243896 TOTAL RUNTIME
2 EXECUTED
263 TOTAL TEST OPERATIONS
0.00512313842773 TIME SPENT EXECUTING TEST OPERATIONS
0.0113201141357 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000119209289551 TIME SPENT CHECKING PROPERTIES
0.00524234771729 TOTAL TIME SPENT RUNNING SUT
0.00569105148315 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
