Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.55230.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('an integer is required',), <traceback object at 0x103289ab8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21519, in act435
    self.p_stat[1] = self.p_os[0].fstat(self.p_fd[0])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3375, in fstat
    file_object = self.filesystem.GetOpenFile(file_des).GetObject()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1209, in GetOpenFile
    raise TypeError('an integer is required')
Original test has 36 steps

SAVING TEST AS failure.55230.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "lambda"                                                    # STEP 0
ACTION: component2 = "lambda" 
component2 = None : <type 'NoneType'>
=> component2 = 'lambda' : <type 'str'>
==================================================
component4 = "f"                                                         # STEP 1
ACTION: component4 = "f" 
component4 = None : <type 'NoneType'>
=> component4 = 'f' : <type 'str'>
==================================================
component0 = "gamma"                                                     # STEP 2
ACTION: component0 = "gamma" 
component0 = None : <type 'NoneType'>
=> component0 = 'gamma' : <type 'str'>
==================================================
component3 = "gamma"                                                     # STEP 3
ACTION: component3 = "gamma" 
component3 = None : <type 'NoneType'>
=> component3 = 'gamma' : <type 'str'>
==================================================
component1 = "b"                                                         # STEP 4
ACTION: component1 = "b" 
component1 = None : <type 'NoneType'>
=> component1 = 'b' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 6
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103297150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
path3 += "/" + component0                                                # STEP 7
ACTION: path3 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                            # STEP 8
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103297150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_EXCL) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
bytes0 = 0                                                               # STEP 9
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str2 = ""                                                               # STEP 10
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 11
ACTION: str2 += 's' 
str2 = '' : <type 'str'>
=> str2 = 's' : <type 'str'>
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 12
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103297150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/gamma'
==================================================
str2 += 's'                                                             # STEP 13
ACTION: str2 += 's' 
str2 = 's' : <type 'str'>
=> str2 = 'ss' : <type 'str'>
==================================================
result = os0.path.abspath(path3)                                        # STEP 14
ACTION: result = os0.path.abspath(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103297150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path3) 
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 15
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.link(path3,path3)                                                   # STEP 16
ACTION: os0.link(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103297150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: os_REF0.link(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str2 += 'b'                                                             # STEP 17
ACTION: str2 += 'b' 
str2 = 'ss' : <type 'str'>
=> str2 = 'ssb' : <type 'str'>
==================================================
os0.rename(path3,path4)                                                 # STEP 18
ACTION: os0.rename(path3,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103297150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake filesystem object: can not rename to non-empty directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.rename(path3,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory
==================================================
stat4 = os0.stat(path3)                                                 # STEP 19
ACTION: stat4 = os0.stat(path3) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103297150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104ee7650> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path3) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=9454519, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507278719, st_mtime=1507278719, st_ctime=1507278719) : <type 'posix.stat_result'>
==================================================
path3 += "/" + component1                                               # STEP 20
ACTION: path3 += "/" + component1 
component1 = 'b' : <type 'str'>
path3 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/gamma/b' : <type 'str'>
==================================================
component0 = "f"                                                        # STEP 21
ACTION: component0 = "f" 
component0 = 'gamma' : <type 'str'>
=> component0 = 'f' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 22
ACTION: str2 += 'f' 
str2 = 'ssb' : <type 'str'>
=> str2 = 'ssbf' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 23
ACTION: str2 += 't' 
str2 = 'ssbf' : <type 'str'>
=> str2 = 'ssbft' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 24
ACTION: str2 += 'i' 
str2 = 'ssbft' : <type 'str'>
=> str2 = 'ssbfti' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 25
ACTION: str2 += 'n' 
str2 = 'ssbfti' : <type 'str'>
=> str2 = 'ssbftin' : <type 'str'>
==================================================
fd1 = os0.open(path3, os.O_CREAT)                                       # STEP 26
ACTION: fd1 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103297150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/gamma/b' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in the fake filesystem: '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/gamma/b'
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 27
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103297150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/gamma/b' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in the fake filesystem: '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/gamma/b'
==================================================
os0.rename(path3,path4)                                                 # STEP 28
ACTION: os0.rename(path3,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103297150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/gamma/b' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake filesystem object: can not rename nonexistent file: '/Volumes/ramdisk/test/gamma/b'
REFERENCE ACTION: os_REF0.rename(path3,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory
==================================================
os0.makedirs(path4)                                                     # STEP 29
ACTION: os0.makedirs(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103297150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
str2 += 'x'                                                             # STEP 30
ACTION: str2 += 'x' 
str2 = 'ssbftin' : <type 'str'>
=> str2 = 'ssbftinx' : <type 'str'>
==================================================
component1 = "lambda"                                                   # STEP 31
ACTION: component1 = "lambda" 
component1 = 'b' : <type 'str'>
=> component1 = 'lambda' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 32
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.link(path2,path2)                                                   # STEP 33
ACTION: os0.link(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103297150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.isdir(path4)                                          # STEP 34
ACTION: result = os0.path.isdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103297150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path4) 
==================================================
stat1 = os0.fstat(fd0)                                                  # STEP 35
ACTION: stat1 = os0.fstat(fd0) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103297150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> an integer is required
ERROR: (<type 'exceptions.TypeError'>, TypeError('an integer is required',), <traceback object at 0x1032897e8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21519, in act435
    self.p_stat[1] = self.p_os[0].fstat(self.p_fd[0])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3375, in fstat
    file_object = self.filesystem.GetOpenFile(file_des).GetObject()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1209, in GetOpenFile
    raise TypeError('an integer is required')
STOPPING TESTING DUE TO FAILED TEST
0.0590150356293 TOTAL RUNTIME
2 EXECUTED
236 TOTAL TEST OPERATIONS
0.0169463157654 TIME SPENT EXECUTING TEST OPERATIONS
0.0107138156891 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000100374221802 TIME SPENT CHECKING PROPERTIES
0.0170466899872 TOTAL TIME SPENT RUNNING SUT
0.00513410568237 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
