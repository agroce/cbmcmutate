Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.50553.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102440a28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 14159, in act334
    assert (type(raised) == type(refRaised))
Original test has 33 steps

SAVING TEST AS failure.50553.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "phi"                                                       # STEP 0
ACTION: component0 = "phi" 
component0 = None : <type 'NoneType'>
=> component0 = 'phi' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 1
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component2 = "alpha"                                                     # STEP 2
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
component4 = "beta"                                                      # STEP 3
ACTION: component4 = "beta" 
component4 = None : <type 'NoneType'>
=> component4 = 'beta' : <type 'str'>
==================================================
component3 = "h"                                                         # STEP 4
ACTION: component3 = "h" 
component3 = None : <type 'NoneType'>
=> component3 = 'h' : <type 'str'>
==================================================
str4 += 'l'                                                              # STEP 5
ACTION: str4 += 'l' 
str4 = '' : <type 'str'>
=> str4 = 'l' : <type 'str'>
==================================================
str4 += 'n'                                                              # STEP 6
ACTION: str4 += 'n' 
str4 = 'l' : <type 'str'>
=> str4 = 'ln' : <type 'str'>
==================================================
str4 += 'f'                                                              # STEP 7
ACTION: str4 += 'f' 
str4 = 'ln' : <type 'str'>
=> str4 = 'lnf' : <type 'str'>
==================================================
str4 += 'b'                                                              # STEP 8
ACTION: str4 += 'b' 
str4 = 'lnf' : <type 'str'>
=> str4 = 'lnfb' : <type 'str'>
==================================================
component1 = "delta"                                                     # STEP 9
ACTION: component1 = "delta" 
component1 = None : <type 'NoneType'>
=> component1 = 'delta' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 10
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 11
ACTION: str3 += 'c' 
str3 = '' : <type 'str'>
=> str3 = 'c' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 12
ACTION: str3 += 'v' 
str3 = 'c' : <type 'str'>
=> str3 = 'cv' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 13
ACTION: str4 += 'c' 
str4 = 'lnfb' : <type 'str'>
=> str4 = 'lnfbc' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 14
ACTION: str3 += 'h' 
str3 = 'cv' : <type 'str'>
=> str3 = 'cvh' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 15
ACTION: str3 += " " 
str3 = 'cvh' : <type 'str'>
=> str3 = 'cvh ' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 16
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 17
ACTION: str4 += 'u' 
str4 = 'lnfbc' : <type 'str'>
=> str4 = 'lnfbcu' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 18
ACTION: str4 += 'k' 
str4 = 'lnfbcu' : <type 'str'>
=> str4 = 'lnfbcuk' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 19
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10271a2d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
path3 += "/" + component2                                               # STEP 20
ACTION: path3 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 21
ACTION: str4 += 'c' 
str4 = 'lnfbcuk' : <type 'str'>
=> str4 = 'lnfbcukc' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 22
ACTION: str3 += 'm' 
str3 = 'cvh ' : <type 'str'>
=> str3 = 'cvh m' : <type 'str'>
==================================================
component2 = "epsilon"                                                  # STEP 23
ACTION: component2 = "epsilon" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'epsilon' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 24
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
bytes3 = 0                                                              # STEP 25
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 += 'e'                                                             # STEP 26
ACTION: str3 += 'e' 
str3 = 'cvh m' : <type 'str'>
=> str3 = 'cvh me' : <type 'str'>
==================================================
result = os0.path.abspath(path3)                                        # STEP 27
ACTION: result = os0.path.abspath(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10271a2d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path3) 
==================================================
bytes2 += 1                                                             # STEP 28
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
os0.link(path3,path3)                                                   # STEP 29
ACTION: os0.link(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10271a2d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
result = os0.path.abspath(path3)                                        # STEP 30
ACTION: result = os0.path.abspath(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10271a2d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path3) 
==================================================
str4 += 'q'                                                             # STEP 31
ACTION: str4 += 'q' 
str4 = 'lnfbcukc' : <type 'str'>
=> str4 = 'lnfbcukcq' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 32
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10271a2d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF0 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104510d88>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 14159, in act334
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0465049743652 TOTAL RUNTIME
2 EXECUTED
233 TOTAL TEST OPERATIONS
0.00553321838379 TIME SPENT EXECUTING TEST OPERATIONS
0.0130245685577 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000111818313599 TIME SPENT CHECKING PROPERTIES
0.00564503669739 TOTAL TIME SPENT RUNNING SUT
0.00600171089172 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
