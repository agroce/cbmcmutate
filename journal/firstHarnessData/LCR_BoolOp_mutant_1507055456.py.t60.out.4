Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.47972.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AttributeError'>, AttributeError("'dict' object has no attribute 'encode'",), <traceback object at 0x1033ea290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17, in newFakeOS
    fs = pyfakefs.fake_filesystem.FakeFilesystem()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 863, in __init__
    self.root = FakeDirectory(self.path_separator, filesystem=self)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 649, in __init__
    FakeFile.__init__(self, name, (stat.S_IFDIR | perm_bits), {}, filesystem=filesystem)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 368, in __init__
    self._byte_contents = self._encode_contents(contents)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 443, in _encode_contents
    contents = contents.encode((self.encoding or locale.getpreferredencoding(False)), self.errors)
Original test has 178 steps

SAVING TEST AS failure.47972.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "e"                                                         # STEP 0
ACTION: component0 = "e" 
component0 = None : <type 'NoneType'>
=> component0 = 'e' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 1
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "b"                                                         # STEP 2
ACTION: component4 = "b" 
component4 = None : <type 'NoneType'>
=> component4 = 'b' : <type 'str'>
==================================================
component1 = "gamma"                                                     # STEP 3
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 4
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component2 = "beta"                                                      # STEP 5
ACTION: component2 = "beta" 
component2 = None : <type 'NoneType'>
=> component2 = 'beta' : <type 'str'>
==================================================
str3 += 'x'                                                              # STEP 6
ACTION: str3 += 'x' 
str3 = '' : <type 'str'>
=> str3 = 'x' : <type 'str'>
==================================================
str3 += 'r'                                                              # STEP 7
ACTION: str3 += 'r' 
str3 = 'x' : <type 'str'>
=> str3 = 'xr' : <type 'str'>
==================================================
str3 += 'j'                                                              # STEP 8
ACTION: str3 += 'j' 
str3 = 'xr' : <type 'str'>
=> str3 = 'xrj' : <type 'str'>
==================================================
str3 += 'h'                                                              # STEP 9
ACTION: str3 += 'h' 
str3 = 'xrj' : <type 'str'>
=> str3 = 'xrjh' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 10
ACTION: str3 += 'q' 
str3 = 'xrjh' : <type 'str'>
=> str3 = 'xrjhq' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 11
ACTION: path4 += "/" + component2 
component2 = 'beta' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 12
ACTION: str3 += 'u' 
str3 = 'xrjhq' : <type 'str'>
=> str3 = 'xrjhqu' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 13
ACTION: path4 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/beta/gamma' : <type 'str'>
==================================================
component3 = "alpha"                                                    # STEP 14
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 15
ACTION: str3 += 'p' 
str3 = 'xrjhqu' : <type 'str'>
=> str3 = 'xrjhqup' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 16
ACTION: str3 += 'p' 
str3 = 'xrjhqup' : <type 'str'>
=> str3 = 'xrjhqupp' : <type 'str'>
==================================================
component1 = "e"                                                        # STEP 17
ACTION: component1 = "e" 
component1 = 'gamma' : <type 'str'>
=> component1 = 'e' : <type 'str'>
==================================================
component2 = "phi"                                                      # STEP 18
ACTION: component2 = "phi" 
component2 = 'beta' : <type 'str'>
=> component2 = 'phi' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 19
ACTION: str3 += 'i' 
str3 = 'xrjhqupp' : <type 'str'>
=> str3 = 'xrjhquppi' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 20
ACTION: path4 += "/" + component0 
component0 = 'e' : <type 'str'>
path4 = '/Volumes/ramdisk/test/beta/gamma' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/beta/gamma/e' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 21
ACTION: str3 += 'l' 
str3 = 'xrjhquppi' : <type 'str'>
=> str3 = 'xrjhquppil' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 22
ACTION: str3 += 'z' 
str3 = 'xrjhquppil' : <type 'str'>
=> str3 = 'xrjhquppilz' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 23
ACTION: str3 += 'k' 
str3 = 'xrjhquppilz' : <type 'str'>
=> str3 = 'xrjhquppilzk' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 24
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/beta/gamma/e' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 25
ACTION: str3 += 'u' 
str3 = 'xrjhquppilzk' : <type 'str'>
=> str3 = 'xrjhquppilzku' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 26
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component0 = "phi"                                                      # STEP 27
ACTION: component0 = "phi" 
component0 = 'e' : <type 'str'>
=> component0 = 'phi' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 28
ACTION: str3 += 's' 
str3 = 'xrjhquppilzku' : <type 'str'>
=> str3 = 'xrjhquppilzkus' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 29
ACTION: str3 += 'f' 
str3 = 'xrjhquppilzkus' : <type 'str'>
=> str3 = 'xrjhquppilzkusf' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 30
ACTION: str3 += 'k' 
str3 = 'xrjhquppilzkusf' : <type 'str'>
=> str3 = 'xrjhquppilzkusfk' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 31
ACTION: str3 += 'd' 
str3 = 'xrjhquppilzkusfk' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkd' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 32
ACTION: str3 += 'v' 
str3 = 'xrjhquppilzkusfkd' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkdv' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 33
ACTION: str3 += 'e' 
str3 = 'xrjhquppilzkusfkdv' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkdve' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 34
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 35
ACTION: str4 += 'd' 
str4 = '' : <type 'str'>
=> str4 = 'd' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 36
ACTION: str3 += 'b' 
str3 = 'xrjhquppilzkusfkdve' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkdveb' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 37
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 38
ACTION: str4 = "" 
str4 = 'd' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 39
ACTION: str4 += 'i' 
str4 = '' : <type 'str'>
=> str4 = 'i' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 40
ACTION: str3 += 'i' 
str3 = 'xrjhquppilzkusfkdveb' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkdvebi' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 41
ACTION: str4 += 'v' 
str4 = 'i' : <type 'str'>
=> str4 = 'iv' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 42
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 43
ACTION: path0 += "/" + component2 
component2 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
component2 = "alpha"                                                    # STEP 44
ACTION: component2 = "alpha" 
component2 = 'phi' : <type 'str'>
=> component2 = 'alpha' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 45
ACTION: str4 += 'y' 
str4 = 'iv' : <type 'str'>
=> str4 = 'ivy' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 46
ACTION: str3 += 'f' 
str3 = 'xrjhquppilzkusfkdvebi' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkdvebif' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 47
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 48
ACTION: str2 += 'k' 
str2 = '' : <type 'str'>
=> str2 = 'k' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 49
ACTION: str3 += 'a' 
str3 = 'xrjhquppilzkusfkdvebif' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkdvebifa' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 50
ACTION: str3 += 'i' 
str3 = 'xrjhquppilzkusfkdvebifa' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkdvebifai' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 51
ACTION: str0 += 'b' 
str0 = '' : <type 'str'>
=> str0 = 'b' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 52
ACTION: str3 += 't' 
str3 = 'xrjhquppilzkusfkdvebifai' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkdvebifait' : <type 'str'>
==================================================
str4 += 'p'                                                             # STEP 53
ACTION: str4 += 'p' 
str4 = 'ivy' : <type 'str'>
=> str4 = 'ivyp' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 54
ACTION: str0 += 'x' 
str0 = 'b' : <type 'str'>
=> str0 = 'bx' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 55
ACTION: str3 += 'x' 
str3 = 'xrjhquppilzkusfkdvebifait' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkdvebifaitx' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 56
ACTION: str4 += 't' 
str4 = 'ivyp' : <type 'str'>
=> str4 = 'ivypt' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 57
ACTION: str2 += 'r' 
str2 = 'k' : <type 'str'>
=> str2 = 'kr' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 58
ACTION: path4 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 59
ACTION: str2 += 'x' 
str2 = 'kr' : <type 'str'>
=> str2 = 'krx' : <type 'str'>
==================================================
component3 = "epsilon"                                                  # STEP 60
ACTION: component3 = "epsilon" 
component3 = 'alpha' : <type 'str'>
=> component3 = 'epsilon' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 61
ACTION: str3 += 'j' 
str3 = 'xrjhquppilzkusfkdvebifaitx' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkdvebifaitxj' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 62
ACTION: str2 += 'q' 
str2 = 'krx' : <type 'str'>
=> str2 = 'krxq' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 63
ACTION: str4 += 'l' 
str4 = 'ivypt' : <type 'str'>
=> str4 = 'ivyptl' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 64
ACTION: str2 += 'r' 
str2 = 'krxq' : <type 'str'>
=> str2 = 'krxqr' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 65
ACTION: str4 += 'f' 
str4 = 'ivyptl' : <type 'str'>
=> str4 = 'ivyptlf' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 66
ACTION: str2 += 'f' 
str2 = 'krxqr' : <type 'str'>
=> str2 = 'krxqrf' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 67
ACTION: str0 += 'h' 
str0 = 'bx' : <type 'str'>
=> str0 = 'bxh' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 68
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 69
ACTION: path4 += "/" + component0 
component0 = 'phi' : <type 'str'>
path4 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/alpha/phi' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 70
ACTION: str4 += 'z' 
str4 = 'ivyptlf' : <type 'str'>
=> str4 = 'ivyptlfz' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 71
ACTION: str0 += 'd' 
str0 = 'bxh' : <type 'str'>
=> str0 = 'bxhd' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 72
ACTION: str0 += 't' 
str0 = 'bxhd' : <type 'str'>
=> str0 = 'bxhdt' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 73
ACTION: str2 += 'm' 
str2 = 'krxqrf' : <type 'str'>
=> str2 = 'krxqrfm' : <type 'str'>
==================================================
component0 = "delta"                                                    # STEP 74
ACTION: component0 = "delta" 
component0 = 'phi' : <type 'str'>
=> component0 = 'delta' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 75
ACTION: path0 += "/" + component1 
component1 = 'e' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 76
ACTION: str4 += 'f' 
str4 = 'ivyptlfz' : <type 'str'>
=> str4 = 'ivyptlfzf' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 77
ACTION: str4 += 'b' 
str4 = 'ivyptlfzf' : <type 'str'>
=> str4 = 'ivyptlfzfb' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 78
ACTION: str2 += 'n' 
str2 = 'krxqrfm' : <type 'str'>
=> str2 = 'krxqrfmn' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 79
ACTION: str2 += 'o' 
str2 = 'krxqrfmn' : <type 'str'>
=> str2 = 'krxqrfmno' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 80
ACTION: str4 += 'j' 
str4 = 'ivyptlfzfb' : <type 'str'>
=> str4 = 'ivyptlfzfbj' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 81
ACTION: str2 += 'b' 
str2 = 'krxqrfmno' : <type 'str'>
=> str2 = 'krxqrfmnob' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 82
ACTION: str3 += 's' 
str3 = 'xrjhquppilzkusfkdvebifaitxj' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkdvebifaitxjs' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 83
ACTION: str0 += 'b' 
str0 = 'bxhdt' : <type 'str'>
=> str0 = 'bxhdtb' : <type 'str'>
==================================================
component1 = "c"                                                        # STEP 84
ACTION: component1 = "c" 
component1 = 'e' : <type 'str'>
=> component1 = 'c' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 85
ACTION: str2 += 'd' 
str2 = 'krxqrfmnob' : <type 'str'>
=> str2 = 'krxqrfmnobd' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 86
ACTION: str0 = "" 
str0 = 'bxhdtb' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 87
ACTION: str4 += 'q' 
str4 = 'ivyptlfzfbj' : <type 'str'>
=> str4 = 'ivyptlfzfbjq' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 88
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 89
ACTION: str4 += 'f' 
str4 = 'ivyptlfzfbjq' : <type 'str'>
=> str4 = 'ivyptlfzfbjqf' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 90
ACTION: str0 += 'h' 
str0 = '' : <type 'str'>
=> str0 = 'h' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 91
ACTION: str3 += 'w' 
str3 = 'xrjhquppilzkusfkdvebifaitxjs' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkdvebifaitxjsw' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 92
ACTION: str3 += 'h' 
str3 = 'xrjhquppilzkusfkdvebifaitxjsw' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkdvebifaitxjswh' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 93
ACTION: str3 += 'b' 
str3 = 'xrjhquppilzkusfkdvebifaitxjswh' : <type 'str'>
=> str3 = 'xrjhquppilzkusfkdvebifaitxjswhb' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 94
ACTION: str2 += 'e' 
str2 = 'krxqrfmnobd' : <type 'str'>
=> str2 = 'krxqrfmnobde' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 95
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
path4 += "/" + component2                                               # STEP 96
ACTION: path4 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path4 = '/Volumes/ramdisk/test/alpha/phi' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/alpha/phi/alpha' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 97
ACTION: str4 = "" 
str4 = 'ivyptlfzfbjqf' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 98
ACTION: str3 = "" 
str3 = 'xrjhquppilzkusfkdvebifaitxjswhb' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 99
ACTION: path1 += "/" + component3 
component3 = 'epsilon' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
str3 += 'r'                                                            # STEP 100
ACTION: str3 += 'r' 
str3 = '' : <type 'str'>
=> str3 = 'r' : <type 'str'>
==================================================
str2 += 'g'                                                            # STEP 101
ACTION: str2 += 'g' 
str2 = 'krxqrfmnobde' : <type 'str'>
=> str2 = 'krxqrfmnobdeg' : <type 'str'>
==================================================
component3 = "e"                                                       # STEP 102
ACTION: component3 = "e" 
component3 = 'epsilon' : <type 'str'>
=> component3 = 'e' : <type 'str'>
==================================================
str0 += 'x'                                                            # STEP 103
ACTION: str0 += 'x' 
str0 = 'h' : <type 'str'>
=> str0 = 'hx' : <type 'str'>
==================================================
str2 += 'w'                                                            # STEP 104
ACTION: str2 += 'w' 
str2 = 'krxqrfmnobdeg' : <type 'str'>
=> str2 = 'krxqrfmnobdegw' : <type 'str'>
==================================================
str4 += 'l'                                                            # STEP 105
ACTION: str4 += 'l' 
str4 = '' : <type 'str'>
=> str4 = 'l' : <type 'str'>
==================================================
str0 += 'h'                                                            # STEP 106
ACTION: str0 += 'h' 
str0 = 'hx' : <type 'str'>
=> str0 = 'hxh' : <type 'str'>
==================================================
str3 += 'b'                                                            # STEP 107
ACTION: str3 += 'b' 
str3 = 'r' : <type 'str'>
=> str3 = 'rb' : <type 'str'>
==================================================
str2 += 'o'                                                            # STEP 108
ACTION: str2 += 'o' 
str2 = 'krxqrfmnobdegw' : <type 'str'>
=> str2 = 'krxqrfmnobdegwo' : <type 'str'>
==================================================
str2 += 'r'                                                            # STEP 109
ACTION: str2 += 'r' 
str2 = 'krxqrfmnobdegwo' : <type 'str'>
=> str2 = 'krxqrfmnobdegwor' : <type 'str'>
==================================================
str2 += 'q'                                                            # STEP 110
ACTION: str2 += 'q' 
str2 = 'krxqrfmnobdegwor' : <type 'str'>
=> str2 = 'krxqrfmnobdegworq' : <type 'str'>
==================================================
component2 = "e"                                                       # STEP 111
ACTION: component2 = "e" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'e' : <type 'str'>
==================================================
str2 += 'v'                                                            # STEP 112
ACTION: str2 += 'v' 
str2 = 'krxqrfmnobdegworq' : <type 'str'>
=> str2 = 'krxqrfmnobdegworqv' : <type 'str'>
==================================================
str0 += 'z'                                                            # STEP 113
ACTION: str0 += 'z' 
str0 = 'hxh' : <type 'str'>
=> str0 = 'hxhz' : <type 'str'>
==================================================
str4 += 'v'                                                            # STEP 114
ACTION: str4 += 'v' 
str4 = 'l' : <type 'str'>
=> str4 = 'lv' : <type 'str'>
==================================================
str4 += 'q'                                                            # STEP 115
ACTION: str4 += 'q' 
str4 = 'lv' : <type 'str'>
=> str4 = 'lvq' : <type 'str'>
==================================================
str3 += 'w'                                                            # STEP 116
ACTION: str3 += 'w' 
str3 = 'rb' : <type 'str'>
=> str3 = 'rbw' : <type 'str'>
==================================================
str3 += 'f'                                                            # STEP 117
ACTION: str3 += 'f' 
str3 = 'rbw' : <type 'str'>
=> str3 = 'rbwf' : <type 'str'>
==================================================
str2 += 'o'                                                            # STEP 118
ACTION: str2 += 'o' 
str2 = 'krxqrfmnobdegworqv' : <type 'str'>
=> str2 = 'krxqrfmnobdegworqvo' : <type 'str'>
==================================================
str4 += 'v'                                                            # STEP 119
ACTION: str4 += 'v' 
str4 = 'lvq' : <type 'str'>
=> str4 = 'lvqv' : <type 'str'>
==================================================
str4 += 'y'                                                            # STEP 120
ACTION: str4 += 'y' 
str4 = 'lvqv' : <type 'str'>
=> str4 = 'lvqvy' : <type 'str'>
==================================================
str3 += 'u'                                                            # STEP 121
ACTION: str3 += 'u' 
str3 = 'rbwf' : <type 'str'>
=> str3 = 'rbwfu' : <type 'str'>
==================================================
str2 = ""                                                              # STEP 122
ACTION: str2 = "" 
str2 = 'krxqrfmnobdegworqvo' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str0 += 'n'                                                            # STEP 123
ACTION: str0 += 'n' 
str0 = 'hxhz' : <type 'str'>
=> str0 = 'hxhzn' : <type 'str'>
==================================================
str2 += 'r'                                                            # STEP 124
ACTION: str2 += 'r' 
str2 = '' : <type 'str'>
=> str2 = 'r' : <type 'str'>
==================================================
str2 += 'a'                                                            # STEP 125
ACTION: str2 += 'a' 
str2 = 'r' : <type 'str'>
=> str2 = 'ra' : <type 'str'>
==================================================
str2 += 'l'                                                            # STEP 126
ACTION: str2 += 'l' 
str2 = 'ra' : <type 'str'>
=> str2 = 'ral' : <type 'str'>
==================================================
str0 += 'g'                                                            # STEP 127
ACTION: str0 += 'g' 
str0 = 'hxhzn' : <type 'str'>
=> str0 = 'hxhzng' : <type 'str'>
==================================================
path1 += "/" + component4                                              # STEP 128
ACTION: path1 += "/" + component4 
component4 = 'b' : <type 'str'>
path1 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon/b' : <type 'str'>
==================================================
str2 += 'p'                                                            # STEP 129
ACTION: str2 += 'p' 
str2 = 'ral' : <type 'str'>
=> str2 = 'ralp' : <type 'str'>
==================================================
str4 += 'w'                                                            # STEP 130
ACTION: str4 += 'w' 
str4 = 'lvqvy' : <type 'str'>
=> str4 = 'lvqvyw' : <type 'str'>
==================================================
path1 += "/" + component1                                              # STEP 131
ACTION: path1 += "/" + component1 
component1 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test/epsilon/b' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon/b/c' : <type 'str'>
==================================================
component1 = "gamma"                                                   # STEP 132
ACTION: component1 = "gamma" 
component1 = 'c' : <type 'str'>
=> component1 = 'gamma' : <type 'str'>
==================================================
str3 += 'j'                                                            # STEP 133
ACTION: str3 += 'j' 
str3 = 'rbwfu' : <type 'str'>
=> str3 = 'rbwfuj' : <type 'str'>
==================================================
str2 += 'd'                                                            # STEP 134
ACTION: str2 += 'd' 
str2 = 'ralp' : <type 'str'>
=> str2 = 'ralpd' : <type 'str'>
==================================================
str4 += 'q'                                                            # STEP 135
ACTION: str4 += 'q' 
str4 = 'lvqvyw' : <type 'str'>
=> str4 = 'lvqvywq' : <type 'str'>
==================================================
str3 += 'r'                                                            # STEP 136
ACTION: str3 += 'r' 
str3 = 'rbwfuj' : <type 'str'>
=> str3 = 'rbwfujr' : <type 'str'>
==================================================
bytes0 = 0                                                             # STEP 137
ACTION: bytes0 = 0 
bytes0 = 1 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
str3 += " "                                                            # STEP 138
ACTION: str3 += " " 
str3 = 'rbwfujr' : <type 'str'>
=> str3 = 'rbwfujr ' : <type 'str'>
==================================================
bytes4 = 0                                                             # STEP 139
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str2 += 'o'                                                            # STEP 140
ACTION: str2 += 'o' 
str2 = 'ralpd' : <type 'str'>
=> str2 = 'ralpdo' : <type 'str'>
==================================================
str3 += 'f'                                                            # STEP 141
ACTION: str3 += 'f' 
str3 = 'rbwfujr ' : <type 'str'>
=> str3 = 'rbwfujr f' : <type 'str'>
==================================================
bytes0 += 1                                                            # STEP 142
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
component4 = "alpha"                                                   # STEP 143
ACTION: component4 = "alpha" 
component4 = 'b' : <type 'str'>
=> component4 = 'alpha' : <type 'str'>
==================================================
str3 = ""                                                              # STEP 144
ACTION: str3 = "" 
str3 = 'rbwfujr f' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str2 += 'h'                                                            # STEP 145
ACTION: str2 += 'h' 
str2 = 'ralpdo' : <type 'str'>
=> str2 = 'ralpdoh' : <type 'str'>
==================================================
str3 += 'e'                                                            # STEP 146
ACTION: str3 += 'e' 
str3 = '' : <type 'str'>
=> str3 = 'e' : <type 'str'>
==================================================
path0 += "/" + component2                                              # STEP 147
ACTION: path0 += "/" + component2 
component2 = 'e' : <type 'str'>
path0 = '/Volumes/ramdisk/test/e' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/e/e' : <type 'str'>
==================================================
str4 += 'b'                                                            # STEP 148
ACTION: str4 += 'b' 
str4 = 'lvqvywq' : <type 'str'>
=> str4 = 'lvqvywqb' : <type 'str'>
==================================================
str0 += 'w'                                                            # STEP 149
ACTION: str0 += 'w' 
str0 = 'hxhzng' : <type 'str'>
=> str0 = 'hxhzngw' : <type 'str'>
==================================================
str0 += " "                                                            # STEP 150
ACTION: str0 += " " 
str0 = 'hxhzngw' : <type 'str'>
=> str0 = 'hxhzngw ' : <type 'str'>
==================================================
str4 += 'g'                                                            # STEP 151
ACTION: str4 += 'g' 
str4 = 'lvqvywqb' : <type 'str'>
=> str4 = 'lvqvywqbg' : <type 'str'>
==================================================
bytes0 = 0                                                             # STEP 152
ACTION: bytes0 = 0 
bytes0 = 1 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
component2 = "phi"                                                     # STEP 153
ACTION: component2 = "phi" 
component2 = 'e' : <type 'str'>
=> component2 = 'phi' : <type 'str'>
==================================================
str3 += 'i'                                                            # STEP 154
ACTION: str3 += 'i' 
str3 = 'e' : <type 'str'>
=> str3 = 'ei' : <type 'str'>
==================================================
str0 += 'g'                                                            # STEP 155
ACTION: str0 += 'g' 
str0 = 'hxhzngw ' : <type 'str'>
=> str0 = 'hxhzngw g' : <type 'str'>
==================================================
path1 += "/" + component0                                              # STEP 156
ACTION: path1 += "/" + component0 
component0 = 'delta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/epsilon/b/c' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon/b/c/delta' : <type 'str'>
==================================================
str2 += 'd'                                                            # STEP 157
ACTION: str2 += 'd' 
str2 = 'ralpdoh' : <type 'str'>
=> str2 = 'ralpdohd' : <type 'str'>
==================================================
component0 = "a"                                                       # STEP 158
ACTION: component0 = "a" 
component0 = 'delta' : <type 'str'>
=> component0 = 'a' : <type 'str'>
==================================================
str3 = ""                                                              # STEP 159
ACTION: str3 = "" 
str3 = 'ei' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str2 = ""                                                              # STEP 160
ACTION: str2 = "" 
str2 = 'ralpdohd' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str3 += 'h'                                                            # STEP 161
ACTION: str3 += 'h' 
str3 = '' : <type 'str'>
=> str3 = 'h' : <type 'str'>
==================================================
path1 += "/" + component2                                              # STEP 162
ACTION: path1 += "/" + component2 
component2 = 'phi' : <type 'str'>
path1 = '/Volumes/ramdisk/test/epsilon/b/c/delta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon/b/c/delta/phi' : <type 'str'>
==================================================
str4 += 'n'                                                            # STEP 163
ACTION: str4 += 'n' 
str4 = 'lvqvywqbg' : <type 'str'>
=> str4 = 'lvqvywqbgn' : <type 'str'>
==================================================
str2 += 'n'                                                            # STEP 164
ACTION: str2 += 'n' 
str2 = '' : <type 'str'>
=> str2 = 'n' : <type 'str'>
==================================================
path4 += "/" + component0                                              # STEP 165
ACTION: path4 += "/" + component0 
component0 = 'a' : <type 'str'>
path4 = '/Volumes/ramdisk/test/alpha/phi/alpha' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/alpha/phi/alpha/a' : <type 'str'>
==================================================
str4 += " "                                                            # STEP 166
ACTION: str4 += " " 
str4 = 'lvqvywqbgn' : <type 'str'>
=> str4 = 'lvqvywqbgn ' : <type 'str'>
==================================================
path0 += "/" + component2                                              # STEP 167
ACTION: path0 += "/" + component2 
component2 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test/e/e' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/e/e/phi' : <type 'str'>
==================================================
component0 = "beta"                                                    # STEP 168
ACTION: component0 = "beta" 
component0 = 'a' : <type 'str'>
=> component0 = 'beta' : <type 'str'>
==================================================
str0 += 'h'                                                            # STEP 169
ACTION: str0 += 'h' 
str0 = 'hxhzngw g' : <type 'str'>
=> str0 = 'hxhzngw gh' : <type 'str'>
==================================================
str4 += 'd'                                                            # STEP 170
ACTION: str4 += 'd' 
str4 = 'lvqvywqbgn ' : <type 'str'>
=> str4 = 'lvqvywqbgn d' : <type 'str'>
==================================================
str2 += 'm'                                                            # STEP 171
ACTION: str2 += 'm' 
str2 = 'n' : <type 'str'>
=> str2 = 'nm' : <type 'str'>
==================================================
str1 = ""                                                              # STEP 172
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str4 += 't'                                                            # STEP 173
ACTION: str4 += 't' 
str4 = 'lvqvywqbgn d' : <type 'str'>
=> str4 = 'lvqvywqbgn dt' : <type 'str'>
==================================================
str0 += 'w'                                                            # STEP 174
ACTION: str0 += 'w' 
str0 = 'hxhzngw gh' : <type 'str'>
=> str0 = 'hxhzngw ghw' : <type 'str'>
==================================================
str1 += 'd'                                                            # STEP 175
ACTION: str1 += 'd' 
str1 = '' : <type 'str'>
=> str1 = 'd' : <type 'str'>
==================================================
str3 += 'a'                                                            # STEP 176
ACTION: str3 += 'a' 
str3 = 'h' : <type 'str'>
=> str3 = 'ha' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 177
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'dict' object has no attribute 'encode'
ERROR: (<type 'exceptions.AttributeError'>, AttributeError("'dict' object has no attribute 'encode'",), <traceback object at 0x103492b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17, in newFakeOS
    fs = pyfakefs.fake_filesystem.FakeFilesystem()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 863, in __init__
    self.root = FakeDirectory(self.path_separator, filesystem=self)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 649, in __init__
    FakeFile.__init__(self, name, (stat.S_IFDIR | perm_bits), {}, filesystem=filesystem)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 368, in __init__
    self._byte_contents = self._encode_contents(contents)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 443, in _encode_contents
    contents = contents.encode((self.encoding or locale.getpreferredencoding(False)), self.errors)
STOPPING TESTING DUE TO FAILED TEST
0.0370779037476 TOTAL RUNTIME
1 EXECUTED
178 TOTAL TEST OPERATIONS
0.00243735313416 TIME SPENT EXECUTING TEST OPERATIONS
0.00740146636963 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
9.32216644287e-05 TIME SPENT CHECKING PROPERTIES
0.00253057479858 TOTAL TIME SPENT RUNNING SUT
0.00305795669556 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
