Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.65159.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('startswith first arg must be str, unicode, or tuple, not NoneType',), <traceback object at 0x1040b1758>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31711, in act589
    result = self.p_os[0].path.abspath(self.p_path[1])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2894, in abspath
    elif ((self.filesystem.is_windows_fs and path.startswith(sep)) or ((altsep is not None) or path.startswith(altsep))):
Original test has 59 steps

SAVING TEST AS failure.65159.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "a"                                                         # STEP 0
ACTION: component4 = "a" 
component4 = None : <type 'NoneType'>
=> component4 = 'a' : <type 'str'>
==================================================
component1 = "c"                                                         # STEP 1
ACTION: component1 = "c" 
component1 = None : <type 'NoneType'>
=> component1 = 'c' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "c"                                                         # STEP 3
ACTION: component0 = "c" 
component0 = None : <type 'NoneType'>
=> component0 = 'c' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 4
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 5
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 6
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'w'                                                              # STEP 7
ACTION: str1 += 'w' 
str1 = '' : <type 'str'>
=> str1 = 'w' : <type 'str'>
==================================================
str0 += 'b'                                                              # STEP 8
ACTION: str0 += 'b' 
str0 = '' : <type 'str'>
=> str0 = 'b' : <type 'str'>
==================================================
component2 = "c"                                                         # STEP 9
ACTION: component2 = "c" 
component2 = None : <type 'NoneType'>
=> component2 = 'c' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 10
ACTION: str1 += 'c' 
str1 = 'w' : <type 'str'>
=> str1 = 'wc' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 11
ACTION: str1 += 'z' 
str1 = 'wc' : <type 'str'>
=> str1 = 'wcz' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 12
ACTION: str1 += 'q' 
str1 = 'wcz' : <type 'str'>
=> str1 = 'wczq' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 13
ACTION: str1 += 'd' 
str1 = 'wczq' : <type 'str'>
=> str1 = 'wczqd' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 14
ACTION: str0 += 't' 
str0 = 'b' : <type 'str'>
=> str0 = 'bt' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 15
ACTION: str1 += 's' 
str1 = 'wczqd' : <type 'str'>
=> str1 = 'wczqds' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 16
ACTION: path3 += "/" + component3 
component3 = 'a' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 17
ACTION: str0 += 'q' 
str0 = 'bt' : <type 'str'>
=> str0 = 'btq' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 18
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str1 += 'g'                                                             # STEP 19
ACTION: str1 += 'g' 
str1 = 'wczqds' : <type 'str'>
=> str1 = 'wczqdsg' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 20
ACTION: str1 += 'g' 
str1 = 'wczqdsg' : <type 'str'>
=> str1 = 'wczqdsgg' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 21
ACTION: str1 += 'm' 
str1 = 'wczqdsgg' : <type 'str'>
=> str1 = 'wczqdsggm' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 22
ACTION: str1 += 'e' 
str1 = 'wczqdsggm' : <type 'str'>
=> str1 = 'wczqdsggme' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 23
ACTION: str1 += 'm' 
str1 = 'wczqdsggme' : <type 'str'>
=> str1 = 'wczqdsggmem' : <type 'str'>
==================================================
component3 = "e"                                                        # STEP 24
ACTION: component3 = "e" 
component3 = 'a' : <type 'str'>
=> component3 = 'e' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 25
ACTION: str1 += 'd' 
str1 = 'wczqdsggmem' : <type 'str'>
=> str1 = 'wczqdsggmemd' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 26
ACTION: str0 += 'k' 
str0 = 'btq' : <type 'str'>
=> str0 = 'btqk' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 27
ACTION: str1 += 'p' 
str1 = 'wczqdsggmemd' : <type 'str'>
=> str1 = 'wczqdsggmemdp' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 28
ACTION: str1 += 'a' 
str1 = 'wczqdsggmemdp' : <type 'str'>
=> str1 = 'wczqdsggmemdpa' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 29
ACTION: str1 += 'k' 
str1 = 'wczqdsggmemdpa' : <type 'str'>
=> str1 = 'wczqdsggmemdpak' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 30
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 31
ACTION: str1 += 'r' 
str1 = 'wczqdsggmemdpak' : <type 'str'>
=> str1 = 'wczqdsggmemdpakr' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 32
ACTION: path1 += "/" + component4 
component4 = 'a' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 33
ACTION: str0 = "" 
str0 = 'btqk' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 34
ACTION: str1 += 'r' 
str1 = 'wczqdsggmemdpakr' : <type 'str'>
=> str1 = 'wczqdsggmemdpakrr' : <type 'str'>
==================================================
component4 = "omega"                                                    # STEP 35
ACTION: component4 = "omega" 
component4 = 'a' : <type 'str'>
=> component4 = 'omega' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 36
ACTION: str0 += 'p' 
str0 = '' : <type 'str'>
=> str0 = 'p' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 37
ACTION: str1 += 'm' 
str1 = 'wczqdsggmemdpakrr' : <type 'str'>
=> str1 = 'wczqdsggmemdpakrrm' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 38
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 39
ACTION: path1 += "/" + component2 
component2 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a/c' : <type 'str'>
==================================================
component2 = "delta"                                                    # STEP 40
ACTION: component2 = "delta" 
component2 = 'c' : <type 'str'>
=> component2 = 'delta' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 41
ACTION: str0 += 'a' 
str0 = 'p' : <type 'str'>
=> str0 = 'pa' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 42
ACTION: str1 += 'm' 
str1 = 'wczqdsggmemdpakrrm' : <type 'str'>
=> str1 = 'wczqdsggmemdpakrrmm' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 43
ACTION: path3 += "/" + component2 
component2 = 'delta' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 44
ACTION: path1 += "/" + component0 
component0 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test/a/c' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a/c/c' : <type 'str'>
==================================================
component2 = "h"                                                        # STEP 45
ACTION: component2 = "h" 
component2 = 'delta' : <type 'str'>
=> component2 = 'h' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 46
ACTION: str1 += 'w' 
str1 = 'wczqdsggmemdpakrrmm' : <type 'str'>
=> str1 = 'wczqdsggmemdpakrrmmw' : <type 'str'>
==================================================
component0 = "gamma"                                                    # STEP 47
ACTION: component0 = "gamma" 
component0 = 'c' : <type 'str'>
=> component0 = 'gamma' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 48
ACTION: str1 += 'm' 
str1 = 'wczqdsggmemdpakrrmmw' : <type 'str'>
=> str1 = 'wczqdsggmemdpakrrmmwm' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 49
ACTION: str1 += 'x' 
str1 = 'wczqdsggmemdpakrrmmwm' : <type 'str'>
=> str1 = 'wczqdsggmemdpakrrmmwmx' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 50
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str1 += 'd'                                                             # STEP 51
ACTION: str1 += 'd' 
str1 = 'wczqdsggmemdpakrrmmwmx' : <type 'str'>
=> str1 = 'wczqdsggmemdpakrrmmwmxd' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 52
ACTION: str0 += 'u' 
str0 = 'pa' : <type 'str'>
=> str0 = 'pau' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 53
ACTION: str0 += 'u' 
str0 = 'pau' : <type 'str'>
=> str0 = 'pauu' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 54
ACTION: path3 += "/" + component1 
component1 = 'c' : <type 'str'>
path3 = '/Volumes/ramdisk/test/delta' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/delta/c' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 55
ACTION: str1 += 'q' 
str1 = 'wczqdsggmemdpakrrmmwmxd' : <type 'str'>
=> str1 = 'wczqdsggmemdpakrrmmwmxdq' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 56
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 57
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104211050> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.path.abspath(path1)                                        # STEP 58
ACTION: result = os0.path.abspath(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104211050> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a/c/c' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> startswith first arg must be str, unicode, or tuple, not NoneType
ERROR: (<type 'exceptions.TypeError'>, TypeError('startswith first arg must be str, unicode, or tuple, not NoneType',), <traceback object at 0x1027d01b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 31711, in act589
    result = self.p_os[0].path.abspath(self.p_path[1])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2894, in abspath
    elif ((self.filesystem.is_windows_fs and path.startswith(sep)) or ((altsep is not None) or path.startswith(altsep))):
STOPPING TESTING DUE TO FAILED TEST
0.098160982132 TOTAL RUNTIME
2 EXECUTED
259 TOTAL TEST OPERATIONS
0.0501787662506 TIME SPENT EXECUTING TEST OPERATIONS
0.0113914012909 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000136137008667 TIME SPENT CHECKING PROPERTIES
0.0503149032593 TOTAL TIME SPENT RUNNING SUT
0.0107488632202 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
