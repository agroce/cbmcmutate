Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.64580.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10164bef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17563, in act380
    assert (type(raised) == type(refRaised))
Original test has 153 steps

SAVING TEST AS failure.64580.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "epsilon"                                                   # STEP 0
ACTION: component4 = "epsilon" 
component4 = None : <type 'NoneType'>
=> component4 = 'epsilon' : <type 'str'>
==================================================
component2 = "lambda"                                                    # STEP 1
ACTION: component2 = "lambda" 
component2 = None : <type 'NoneType'>
=> component2 = 'lambda' : <type 'str'>
==================================================
component1 = "c"                                                         # STEP 2
ACTION: component1 = "c" 
component1 = None : <type 'NoneType'>
=> component1 = 'c' : <type 'str'>
==================================================
component0 = "gamma"                                                     # STEP 3
ACTION: component0 = "gamma" 
component0 = None : <type 'NoneType'>
=> component0 = 'gamma' : <type 'str'>
==================================================
component3 = "f"                                                         # STEP 4
ACTION: component3 = "f" 
component3 = None : <type 'NoneType'>
=> component3 = 'f' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 5
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
bytes1 = 0                                                               # STEP 6
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 8
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str3 = ""                                                                # STEP 9
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 10
ACTION: path2 += "/" + component1 
component1 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 11
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
bytes1 += 1                                                             # STEP 12
ACTION: bytes1 += 1 
bytes1 = 1 : <type 'int'>
=> bytes1 = 2 : <type 'int'>
==================================================
str3 += 'k'                                                             # STEP 13
ACTION: str3 += 'k' 
str3 = '' : <type 'str'>
=> str3 = 'k' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 14
ACTION: str3 += 'o' 
str3 = 'k' : <type 'str'>
=> str3 = 'ko' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 15
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 += 'c'                                                             # STEP 16
ACTION: str3 += 'c' 
str3 = 'ko' : <type 'str'>
=> str3 = 'koc' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 17
ACTION: str3 += 'h' 
str3 = 'koc' : <type 'str'>
=> str3 = 'koch' : <type 'str'>
==================================================
component1 = "a"                                                        # STEP 18
ACTION: component1 = "a" 
component1 = 'c' : <type 'str'>
=> component1 = 'a' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 19
ACTION: str3 = "" 
str3 = 'koch' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 20
ACTION: str3 += 'e' 
str3 = '' : <type 'str'>
=> str3 = 'e' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 21
ACTION: str3 += 'j' 
str3 = 'e' : <type 'str'>
=> str3 = 'ej' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 22
ACTION: str3 += 'c' 
str3 = 'ej' : <type 'str'>
=> str3 = 'ejc' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 23
ACTION: path2 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/lambda' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 24
ACTION: path2 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c/lambda' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/lambda/lambda' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 25
ACTION: str3 += 'k' 
str3 = 'ejc' : <type 'str'>
=> str3 = 'ejck' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 26
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
component2 = "d"                                                        # STEP 27
ACTION: component2 = "d" 
component2 = 'lambda' : <type 'str'>
=> component2 = 'd' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 28
ACTION: str1 += 'v' 
str1 = '' : <type 'str'>
=> str1 = 'v' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 29
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 30
ACTION: str1 += 'm' 
str1 = 'v' : <type 'str'>
=> str1 = 'vm' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 31
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
path2 += "/" + component3                                               # STEP 32
ACTION: path2 += "/" + component3 
component3 = 'f' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c/lambda/lambda' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/lambda/lambda/f' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 33
ACTION: str1 += 'f' 
str1 = 'vm' : <type 'str'>
=> str1 = 'vmf' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 34
ACTION: str1 += 'f' 
str1 = 'vmf' : <type 'str'>
=> str1 = 'vmff' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 35
ACTION: str3 += 'f' 
str3 = 'ejck' : <type 'str'>
=> str3 = 'ejckf' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 36
ACTION: path1 += "/" + component4 
component4 = 'epsilon' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 37
ACTION: str3 += 't' 
str3 = 'ejckf' : <type 'str'>
=> str3 = 'ejckft' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 38
ACTION: str3 += 'f' 
str3 = 'ejckft' : <type 'str'>
=> str3 = 'ejckftf' : <type 'str'>
==================================================
component3 = "c"                                                        # STEP 39
ACTION: component3 = "c" 
component3 = 'f' : <type 'str'>
=> component3 = 'c' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 40
ACTION: str1 += 's' 
str1 = 'vmff' : <type 'str'>
=> str1 = 'vmffs' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 41
ACTION: str3 += 's' 
str3 = 'ejckftf' : <type 'str'>
=> str3 = 'ejckftfs' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 42
ACTION: str3 += 'j' 
str3 = 'ejckftfs' : <type 'str'>
=> str3 = 'ejckftfsj' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 43
ACTION: str1 += 'a' 
str1 = 'vmffs' : <type 'str'>
=> str1 = 'vmffsa' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 44
ACTION: str1 += 'z' 
str1 = 'vmffsa' : <type 'str'>
=> str1 = 'vmffsaz' : <type 'str'>
==================================================
component4 = "phi"                                                      # STEP 45
ACTION: component4 = "phi" 
component4 = 'epsilon' : <type 'str'>
=> component4 = 'phi' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 46
ACTION: str1 += 'j' 
str1 = 'vmffsaz' : <type 'str'>
=> str1 = 'vmffsazj' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 47
ACTION: str3 += 'n' 
str3 = 'ejckftfsj' : <type 'str'>
=> str3 = 'ejckftfsjn' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 48
ACTION: str1 += 'y' 
str1 = 'vmffsazj' : <type 'str'>
=> str1 = 'vmffsazjy' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 49
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 50
ACTION: str3 += 'o' 
str3 = 'ejckftfsjn' : <type 'str'>
=> str3 = 'ejckftfsjno' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 51
ACTION: str1 += 'a' 
str1 = 'vmffsazjy' : <type 'str'>
=> str1 = 'vmffsazjya' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 52
ACTION: path2 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c/lambda/lambda/f' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 53
ACTION: component0 = "omega" 
component0 = 'gamma' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 54
ACTION: str3 += 'a' 
str3 = 'ejckftfsjno' : <type 'str'>
=> str3 = 'ejckftfsjnoa' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 55
ACTION: str1 += 'g' 
str1 = 'vmffsazjya' : <type 'str'>
=> str1 = 'vmffsazjyag' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 56
ACTION: str1 += 'j' 
str1 = 'vmffsazjyag' : <type 'str'>
=> str1 = 'vmffsazjyagj' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 57
ACTION: str1 += 'q' 
str1 = 'vmffsazjyagj' : <type 'str'>
=> str1 = 'vmffsazjyagjq' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 58
ACTION: path1 += "/" + component1 
component1 = 'a' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 59
ACTION: str3 += 'v' 
str3 = 'ejckftfsjnoa' : <type 'str'>
=> str3 = 'ejckftfsjnoav' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 60
ACTION: path1 += "/" + component1 
component1 = 'a' : <type 'str'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a/a' : <type 'str'>
==================================================
component1 = "h"                                                        # STEP 61
ACTION: component1 = "h" 
component1 = 'a' : <type 'str'>
=> component1 = 'h' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 62
ACTION: str3 += 'z' 
str3 = 'ejckftfsjnoav' : <type 'str'>
=> str3 = 'ejckftfsjnoavz' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 63
ACTION: str3 = "" 
str3 = 'ejckftfsjnoavz' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 64
ACTION: path2 += "/" + component1 
component1 = 'h' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 65
ACTION: str1 += 'n' 
str1 = 'vmffsazjyagjq' : <type 'str'>
=> str1 = 'vmffsazjyagjqn' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 66
ACTION: path1 += "/" + component1 
component1 = 'h' : <type 'str'>
path1 = '/Volumes/ramdisk/test/a/a' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a/a/h' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 67
ACTION: str1 += 'f' 
str1 = 'vmffsazjyagjqn' : <type 'str'>
=> str1 = 'vmffsazjyagjqnf' : <type 'str'>
==================================================
component1 = "c"                                                        # STEP 68
ACTION: component1 = "c" 
component1 = 'h' : <type 'str'>
=> component1 = 'c' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 69
ACTION: str3 += 's' 
str3 = '' : <type 'str'>
=> str3 = 's' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 70
ACTION: str1 += 'i' 
str1 = 'vmffsazjyagjqnf' : <type 'str'>
=> str1 = 'vmffsazjyagjqnfi' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 71
ACTION: path1 += "/" + component3 
component3 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test/a/a/h' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a/a/h/c' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 72
ACTION: str1 += 'k' 
str1 = 'vmffsazjyagjqnfi' : <type 'str'>
=> str1 = 'vmffsazjyagjqnfik' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 73
ACTION: str3 += 'h' 
str3 = 's' : <type 'str'>
=> str3 = 'sh' : <type 'str'>
==================================================
component3 = "lambda"                                                   # STEP 74
ACTION: component3 = "lambda" 
component3 = 'c' : <type 'str'>
=> component3 = 'lambda' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 75
ACTION: str1 += 'n' 
str1 = 'vmffsazjyagjqnfik' : <type 'str'>
=> str1 = 'vmffsazjyagjqnfikn' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 76
ACTION: str3 += 'x' 
str3 = 'sh' : <type 'str'>
=> str3 = 'shx' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 77
ACTION: str1 += 'p' 
str1 = 'vmffsazjyagjqnfikn' : <type 'str'>
=> str1 = 'vmffsazjyagjqnfiknp' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 78
ACTION: str3 += 'h' 
str3 = 'shx' : <type 'str'>
=> str3 = 'shxh' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 79
ACTION: str1 += 'j' 
str1 = 'vmffsazjyagjqnfiknp' : <type 'str'>
=> str1 = 'vmffsazjyagjqnfiknpj' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 80
ACTION: str1 += 'u' 
str1 = 'vmffsazjyagjqnfiknpj' : <type 'str'>
=> str1 = 'vmffsazjyagjqnfiknpju' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 81
ACTION: str1 += 'g' 
str1 = 'vmffsazjyagjqnfiknpju' : <type 'str'>
=> str1 = 'vmffsazjyagjqnfiknpjug' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 82
ACTION: str3 += 'x' 
str3 = 'shxh' : <type 'str'>
=> str3 = 'shxhx' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 83
ACTION: str1 += 'q' 
str1 = 'vmffsazjyagjqnfiknpjug' : <type 'str'>
=> str1 = 'vmffsazjyagjqnfiknpjugq' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 84
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 85
ACTION: str1 += " " 
str1 = 'vmffsazjyagjqnfiknpjugq' : <type 'str'>
=> str1 = 'vmffsazjyagjqnfiknpjugq ' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 86
ACTION: str2 += 'i' 
str2 = '' : <type 'str'>
=> str2 = 'i' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 87
ACTION: path1 += "/" + component1 
component1 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test/a/a/h/c' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a/a/h/c/c' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 88
ACTION: str2 += 'g' 
str2 = 'i' : <type 'str'>
=> str2 = 'ig' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 89
ACTION: str1 += 't' 
str1 = 'vmffsazjyagjqnfiknpjugq ' : <type 'str'>
=> str1 = 'vmffsazjyagjqnfiknpjugq t' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 90
ACTION: str2 += 'x' 
str2 = 'ig' : <type 'str'>
=> str2 = 'igx' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 91
ACTION: path2 += "/" + component4 
component4 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h/phi' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 92
ACTION: str2 += 'j' 
str2 = 'igx' : <type 'str'>
=> str2 = 'igxj' : <type 'str'>
==================================================
component1 = "delta"                                                    # STEP 93
ACTION: component1 = "delta" 
component1 = 'c' : <type 'str'>
=> component1 = 'delta' : <type 'str'>
==================================================
component4 = "g"                                                        # STEP 94
ACTION: component4 = "g" 
component4 = 'phi' : <type 'str'>
=> component4 = 'g' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 95
ACTION: str1 += " " 
str1 = 'vmffsazjyagjqnfiknpjugq t' : <type 'str'>
=> str1 = 'vmffsazjyagjqnfiknpjugq t ' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 96
ACTION: bytes4 = 0 
bytes4 = 1 : <type 'int'>
=> bytes4 = 0 : <type 'int'>
==================================================
str2 += 'l'                                                             # STEP 97
ACTION: str2 += 'l' 
str2 = 'igxj' : <type 'str'>
=> str2 = 'igxjl' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 98
ACTION: str2 += " " 
str2 = 'igxjl' : <type 'str'>
=> str2 = 'igxjl ' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 99
ACTION: str1 += 'a' 
str1 = 'vmffsazjyagjqnfiknpjugq t ' : <type 'str'>
=> str1 = 'vmffsazjyagjqnfiknpjugq t a' : <type 'str'>
==================================================
str1 = ""                                                              # STEP 100
ACTION: str1 = "" 
str1 = 'vmffsazjyagjqnfiknpjugq t a' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str3 += 'v'                                                            # STEP 101
ACTION: str3 += 'v' 
str3 = 'shxhx' : <type 'str'>
=> str3 = 'shxhxv' : <type 'str'>
==================================================
path2 += "/" + component2                                              # STEP 102
ACTION: path2 += "/" + component2 
component2 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h/phi' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h/phi/d' : <type 'str'>
==================================================
component2 = "beta"                                                    # STEP 103
ACTION: component2 = "beta" 
component2 = 'd' : <type 'str'>
=> component2 = 'beta' : <type 'str'>
==================================================
str2 += 'x'                                                            # STEP 104
ACTION: str2 += 'x' 
str2 = 'igxjl ' : <type 'str'>
=> str2 = 'igxjl x' : <type 'str'>
==================================================
str1 += 'h'                                                            # STEP 105
ACTION: str1 += 'h' 
str1 = '' : <type 'str'>
=> str1 = 'h' : <type 'str'>
==================================================
str1 += 'i'                                                            # STEP 106
ACTION: str1 += 'i' 
str1 = 'h' : <type 'str'>
=> str1 = 'hi' : <type 'str'>
==================================================
str2 += 'y'                                                            # STEP 107
ACTION: str2 += 'y' 
str2 = 'igxjl x' : <type 'str'>
=> str2 = 'igxjl xy' : <type 'str'>
==================================================
str2 += 'm'                                                            # STEP 108
ACTION: str2 += 'm' 
str2 = 'igxjl xy' : <type 'str'>
=> str2 = 'igxjl xym' : <type 'str'>
==================================================
str2 += 'l'                                                            # STEP 109
ACTION: str2 += 'l' 
str2 = 'igxjl xym' : <type 'str'>
=> str2 = 'igxjl xyml' : <type 'str'>
==================================================
str1 += 'j'                                                            # STEP 110
ACTION: str1 += 'j' 
str1 = 'hi' : <type 'str'>
=> str1 = 'hij' : <type 'str'>
==================================================
str1 += 'z'                                                            # STEP 111
ACTION: str1 += 'z' 
str1 = 'hij' : <type 'str'>
=> str1 = 'hijz' : <type 'str'>
==================================================
path1 += "/" + component4                                              # STEP 112
ACTION: path1 += "/" + component4 
component4 = 'g' : <type 'str'>
path1 = '/Volumes/ramdisk/test/a/a/h/c/c' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a/a/h/c/c/g' : <type 'str'>
==================================================
component4 = "b"                                                       # STEP 113
ACTION: component4 = "b" 
component4 = 'g' : <type 'str'>
=> component4 = 'b' : <type 'str'>
==================================================
str2 += 'o'                                                            # STEP 114
ACTION: str2 += 'o' 
str2 = 'igxjl xyml' : <type 'str'>
=> str2 = 'igxjl xymlo' : <type 'str'>
==================================================
str2 += 'd'                                                            # STEP 115
ACTION: str2 += 'd' 
str2 = 'igxjl xymlo' : <type 'str'>
=> str2 = 'igxjl xymlod' : <type 'str'>
==================================================
str2 += 'z'                                                            # STEP 116
ACTION: str2 += 'z' 
str2 = 'igxjl xymlod' : <type 'str'>
=> str2 = 'igxjl xymlodz' : <type 'str'>
==================================================
str2 += 'x'                                                            # STEP 117
ACTION: str2 += 'x' 
str2 = 'igxjl xymlodz' : <type 'str'>
=> str2 = 'igxjl xymlodzx' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                        # STEP 118
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'f'                                                            # STEP 119
ACTION: str2 += 'f' 
str2 = 'igxjl xymlodzx' : <type 'str'>
=> str2 = 'igxjl xymlodzxf' : <type 'str'>
==================================================
str1 += 'b'                                                            # STEP 120
ACTION: str1 += 'b' 
str1 = 'hijz' : <type 'str'>
=> str1 = 'hijzb' : <type 'str'>
==================================================
str1 += 'q'                                                            # STEP 121
ACTION: str1 += 'q' 
str1 = 'hijzb' : <type 'str'>
=> str1 = 'hijzbq' : <type 'str'>
==================================================
bytes4 += 1                                                            # STEP 122
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str3 += 'b'                                                            # STEP 123
ACTION: str3 += 'b' 
str3 = 'shxhxv' : <type 'str'>
=> str3 = 'shxhxvb' : <type 'str'>
==================================================
path1 += "/" + component4                                              # STEP 124
ACTION: path1 += "/" + component4 
component4 = 'b' : <type 'str'>
path1 = '/Volumes/ramdisk/test/a/a/h/c/c/g' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a/a/h/c/c/g/b' : <type 'str'>
==================================================
component4 = "h"                                                       # STEP 125
ACTION: component4 = "h" 
component4 = 'b' : <type 'str'>
=> component4 = 'h' : <type 'str'>
==================================================
str1 += 'e'                                                            # STEP 126
ACTION: str1 += 'e' 
str1 = 'hijzbq' : <type 'str'>
=> str1 = 'hijzbqe' : <type 'str'>
==================================================
str3 += 'z'                                                            # STEP 127
ACTION: str3 += 'z' 
str3 = 'shxhxvb' : <type 'str'>
=> str3 = 'shxhxvbz' : <type 'str'>
==================================================
str1 = ""                                                              # STEP 128
ACTION: str1 = "" 
str1 = 'hijzbqe' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
bytes1 = 0                                                             # STEP 129
ACTION: bytes1 = 0 
bytes1 = 2 : <type 'int'>
=> bytes1 = 0 : <type 'int'>
==================================================
str3 += 'l'                                                            # STEP 130
ACTION: str3 += 'l' 
str3 = 'shxhxvbz' : <type 'str'>
=> str3 = 'shxhxvbzl' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                        # STEP 131
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/a/a/h/c/c/g/b' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'd'                                                            # STEP 132
ACTION: str3 += 'd' 
str3 = 'shxhxvbzl' : <type 'str'>
=> str3 = 'shxhxvbzld' : <type 'str'>
==================================================
path4 += "/" + component0                                              # STEP 133
ACTION: path4 += "/" + component0 
component0 = 'omega' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                        # STEP 134
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'c'                                                            # STEP 135
ACTION: str3 += 'c' 
str3 = 'shxhxvbzld' : <type 'str'>
=> str3 = 'shxhxvbzldc' : <type 'str'>
==================================================
str2 += 'a'                                                            # STEP 136
ACTION: str2 += 'a' 
str2 = 'igxjl xymlodzxf' : <type 'str'>
=> str2 = 'igxjl xymlodzxfa' : <type 'str'>
==================================================
path2 += "/" + component2                                              # STEP 137
ACTION: path2 += "/" + component2 
component2 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h/phi/d' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h/phi/d/beta' : <type 'str'>
==================================================
path3 += "/" + component4                                              # STEP 138
ACTION: path3 += "/" + component4 
component4 = 'h' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 139
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f6c250> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
path1 += "/" + component0                                              # STEP 140
ACTION: path1 += "/" + component0 
component0 = 'omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
component4 = "beta"                                                    # STEP 141
ACTION: component4 = "beta" 
component4 = 'h' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
str1 += 'h'                                                            # STEP 142
ACTION: str1 += 'h' 
str1 = '' : <type 'str'>
=> str1 = 'h' : <type 'str'>
==================================================
stat1 = os0.lstat(path1)                                               # STEP 143
ACTION: stat1 = os0.lstat(path1) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f6c250> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega'
==================================================
os0.symlink(path2,path2)                                               # STEP 144
ACTION: os0.symlink(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f6c250> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h/phi/d/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h/phi/d'
REFERENCE ACTION: os_REF0.symlink(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
result = os0.path.dirname(path4)                                       # STEP 145
ACTION: result = os0.path.dirname(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f6c250> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path4) 
==================================================
stat1 = os0.lstat(path1)                                               # STEP 146
ACTION: stat1 = os0.lstat(path1) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f6c250> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega'
==================================================
stat4 = os0.stat(path2)                                                # STEP 147
ACTION: stat4 = os0.stat(path2) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f6c250> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h/phi/d/beta' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h/phi/d/beta'
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h/phi/d/beta'
==================================================
fd1 = os0.open(path1, os.O_RDONLY)                                     # STEP 148
ACTION: fd1 = os0.open(path1, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f6c250> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega'
==================================================
str4 = ""                                                              # STEP 149
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
stat4 = os0.lstat(path4)                                               # STEP 150
ACTION: stat4 = os0.lstat(path4) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f6c250> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega'
==================================================
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                       # STEP 151
ACTION: fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f6c250> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h/phi/d/beta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h/phi/d/beta'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_WRONLY | os.O_APPEND) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/c/lambda/lambda/f/gamma/h/phi/d/beta'
==================================================
fd1 = os0.open(path4, os.O_CREAT | os.O_EXCL)                          # STEP 152
ACTION: fd1 = os0.open(path4, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f6c250> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path4, os.O_CREAT | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101b24998>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17563, in act380
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0440289974213 TOTAL RUNTIME
1 EXECUTED
153 TOTAL TEST OPERATIONS
0.0064070224762 TIME SPENT EXECUTING TEST OPERATIONS
0.00721216201782 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
7.00950622559e-05 TIME SPENT CHECKING PROPERTIES
0.00647711753845 TOTAL TIME SPENT RUNNING SUT
0.00308895111084 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
