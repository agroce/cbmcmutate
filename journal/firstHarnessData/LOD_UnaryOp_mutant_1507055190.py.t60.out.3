Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.48855.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1029ea560>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 14529, in act339
    assert (type(raised) == type(refRaised))
Original test has 117 steps

SAVING TEST AS failure.48855.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path0 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "beta"                                                      # STEP 1
ACTION: component0 = "beta" 
component0 = None : <type 'NoneType'>
=> component0 = 'beta' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 2
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
bytes0 = 0                                                               # STEP 3
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component2 = "beta"                                                      # STEP 4
ACTION: component2 = "beta" 
component2 = None : <type 'NoneType'>
=> component2 = 'beta' : <type 'str'>
==================================================
component3 = "f"                                                         # STEP 5
ACTION: component3 = "f" 
component3 = None : <type 'NoneType'>
=> component3 = 'f' : <type 'str'>
==================================================
component4 = "g"                                                         # STEP 6
ACTION: component4 = "g" 
component4 = None : <type 'NoneType'>
=> component4 = 'g' : <type 'str'>
==================================================
path0 += "/" + component4                                                # STEP 7
ACTION: path0 += "/" + component4 
component4 = 'g' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
path0 += "/" + component2                                                # STEP 8
ACTION: path0 += "/" + component2 
component2 = 'beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/beta' : <type 'str'>
==================================================
component1 = "gamma"                                                     # STEP 9
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 10
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 11
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 12
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 13
ACTION: path0 += "/" + component2 
component2 = 'beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g/beta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/beta/beta' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 14
ACTION: path2 += "/" + component2 
component2 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 15
ACTION: path1 += "/" + component0 
component0 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
component2 = "epsilon"                                                  # STEP 16
ACTION: component2 = "epsilon" 
component2 = 'beta' : <type 'str'>
=> component2 = 'epsilon' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 17
ACTION: path1 += "/" + component0 
component0 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 18
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
component4 = "alpha"                                                    # STEP 19
ACTION: component4 = "alpha" 
component4 = 'g' : <type 'str'>
=> component4 = 'alpha' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 20
ACTION: bytes0 += 1 
bytes0 = 1 : <type 'int'>
=> bytes0 = 2 : <type 'int'>
==================================================
path2 += "/" + component1                                               # STEP 21
ACTION: path2 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta/gamma' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 22
ACTION: path1 += "/" + component0 
component0 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta/beta/beta' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 23
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 24
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str0 += 'b'                                                             # STEP 25
ACTION: str0 += 'b' 
str0 = '' : <type 'str'>
=> str0 = 'b' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 26
ACTION: path0 += "/" + component4 
component4 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g/beta/beta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/beta/beta/alpha' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 27
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str0 += 't'                                                             # STEP 28
ACTION: str0 += 't' 
str0 = 'b' : <type 'str'>
=> str0 = 'bt' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 29
ACTION: str0 += 'a' 
str0 = 'bt' : <type 'str'>
=> str0 = 'bta' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 30
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component1 = "h"                                                        # STEP 31
ACTION: component1 = "h" 
component1 = 'gamma' : <type 'str'>
=> component1 = 'h' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 32
ACTION: path2 += "/" + component1 
component1 = 'h' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta/gamma/h' : <type 'str'>
==================================================
component1 = "c"                                                        # STEP 33
ACTION: component1 = "c" 
component1 = 'h' : <type 'str'>
=> component1 = 'c' : <type 'str'>
==================================================
component4 = "f"                                                        # STEP 34
ACTION: component4 = "f" 
component4 = 'alpha' : <type 'str'>
=> component4 = 'f' : <type 'str'>
==================================================
component0 = "delta"                                                    # STEP 35
ACTION: component0 = "delta" 
component0 = 'beta' : <type 'str'>
=> component0 = 'delta' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 36
ACTION: str0 += 'g' 
str0 = 'bta' : <type 'str'>
=> str0 = 'btag' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 37
ACTION: str0 += 'y' 
str0 = 'btag' : <type 'str'>
=> str0 = 'btagy' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 38
ACTION: str0 += 'b' 
str0 = 'btagy' : <type 'str'>
=> str0 = 'btagyb' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 39
ACTION: str0 += 't' 
str0 = 'btagyb' : <type 'str'>
=> str0 = 'btagybt' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 40
ACTION: path0 += "/" + component0 
component0 = 'delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g/beta/beta/alpha' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/beta/beta/alpha/delta' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 41
ACTION: str0 += 'k' 
str0 = 'btagybt' : <type 'str'>
=> str0 = 'btagybtk' : <type 'str'>
==================================================
component0 = "beta"                                                     # STEP 42
ACTION: component0 = "beta" 
component0 = 'delta' : <type 'str'>
=> component0 = 'beta' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 43
ACTION: str0 += 'v' 
str0 = 'btagybtk' : <type 'str'>
=> str0 = 'btagybtkv' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 44
ACTION: path0 += "/" + component0 
component0 = 'beta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g/beta/beta/alpha/delta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/beta/beta/alpha/delta/beta' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 45
ACTION: str0 += 'k' 
str0 = 'btagybtkv' : <type 'str'>
=> str0 = 'btagybtkvk' : <type 'str'>
==================================================
component0 = "f"                                                        # STEP 46
ACTION: component0 = "f" 
component0 = 'beta' : <type 'str'>
=> component0 = 'f' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 47
ACTION: str0 += 'l' 
str0 = 'btagybtkvk' : <type 'str'>
=> str0 = 'btagybtkvkl' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 48
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 49
ACTION: path3 += "/" + component3 
component3 = 'f' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 50
ACTION: path3 += "/" + component1 
component1 = 'c' : <type 'str'>
path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f/c' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 51
ACTION: str0 += 's' 
str0 = 'btagybtkvkl' : <type 'str'>
=> str0 = 'btagybtkvkls' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 52
ACTION: str4 += " " 
str4 = '' : <type 'str'>
=> str4 = ' ' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 53
ACTION: str0 += 'v' 
str0 = 'btagybtkvkls' : <type 'str'>
=> str0 = 'btagybtkvklsv' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 54
ACTION: str0 += 's' 
str0 = 'btagybtkvklsv' : <type 'str'>
=> str0 = 'btagybtkvklsvs' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 55
ACTION: str0 += 's' 
str0 = 'btagybtkvklsvs' : <type 'str'>
=> str0 = 'btagybtkvklsvss' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 56
ACTION: path1 += "/" + component2 
component2 = 'epsilon' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta/beta/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta/beta/beta/epsilon' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 57
ACTION: str4 += 'q' 
str4 = ' ' : <type 'str'>
=> str4 = ' q' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 58
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
component2 = "lambda"                                                   # STEP 59
ACTION: component2 = "lambda" 
component2 = 'epsilon' : <type 'str'>
=> component2 = 'lambda' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 60
ACTION: bytes4 = 0 
bytes4 = 1 : <type 'int'>
=> bytes4 = 0 : <type 'int'>
==================================================
path0 += "/" + component0                                               # STEP 61
ACTION: path0 += "/" + component0 
component0 = 'f' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g/beta/beta/alpha/delta/beta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/beta/beta/alpha/delta/beta/f' : <type 'str'>
==================================================
component0 = "alpha"                                                    # STEP 62
ACTION: component0 = "alpha" 
component0 = 'f' : <type 'str'>
=> component0 = 'alpha' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 63
ACTION: str4 += 'w' 
str4 = ' q' : <type 'str'>
=> str4 = ' qw' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 64
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/f/c' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 65
ACTION: str0 += 'k' 
str0 = 'btagybtkvklsvss' : <type 'str'>
=> str0 = 'btagybtkvklsvssk' : <type 'str'>
==================================================
component3 = "g"                                                        # STEP 66
ACTION: component3 = "g" 
component3 = 'f' : <type 'str'>
=> component3 = 'g' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 67
ACTION: str0 += " " 
str0 = 'btagybtkvklsvssk' : <type 'str'>
=> str0 = 'btagybtkvklsvssk ' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 68
ACTION: str0 += 'v' 
str0 = 'btagybtkvklsvssk ' : <type 'str'>
=> str0 = 'btagybtkvklsvssk v' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 69
ACTION: path2 += "/" + component3 
component3 = 'g' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta/gamma/h' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta/gamma/h/g' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 70
ACTION: path0 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g/beta/beta/alpha/delta/beta/f' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/beta/beta/alpha/delta/beta/f/lambda' : <type 'str'>
==================================================
component3 = "gamma"                                                    # STEP 71
ACTION: component3 = "gamma" 
component3 = 'g' : <type 'str'>
=> component3 = 'gamma' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 72
ACTION: str4 += 'b' 
str4 = ' qw' : <type 'str'>
=> str4 = ' qwb' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 73
ACTION: str0 += 'g' 
str0 = 'btagybtkvklsvssk v' : <type 'str'>
=> str0 = 'btagybtkvklsvssk vg' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 74
ACTION: str4 += 'u' 
str4 = ' qwb' : <type 'str'>
=> str4 = ' qwbu' : <type 'str'>
==================================================
component1 = "d"                                                        # STEP 75
ACTION: component1 = "d" 
component1 = 'c' : <type 'str'>
=> component1 = 'd' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 76
ACTION: str0 += 'u' 
str0 = 'btagybtkvklsvssk vg' : <type 'str'>
=> str0 = 'btagybtkvklsvssk vgu' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 77
ACTION: path1 += "/" + component1 
component1 = 'd' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta/beta/beta/epsilon' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta/beta/beta/epsilon/d' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 78
ACTION: path2 += "/" + component3 
component3 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta/gamma/h/g' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta/gamma/h/g/gamma' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 79
ACTION: str0 += 'm' 
str0 = 'btagybtkvklsvssk vgu' : <type 'str'>
=> str0 = 'btagybtkvklsvssk vgum' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 80
ACTION: path3 += "/" + component4 
component4 = 'f' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
component3 = "g"                                                        # STEP 81
ACTION: component3 = "g" 
component3 = 'gamma' : <type 'str'>
=> component3 = 'g' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 82
ACTION: str0 += 'n' 
str0 = 'btagybtkvklsvssk vgum' : <type 'str'>
=> str0 = 'btagybtkvklsvssk vgumn' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 83
ACTION: str4 += " " 
str4 = ' qwbu' : <type 'str'>
=> str4 = ' qwbu ' : <type 'str'>
==================================================
component2 = "delta"                                                    # STEP 84
ACTION: component2 = "delta" 
component2 = 'lambda' : <type 'str'>
=> component2 = 'delta' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 85
ACTION: str0 = "" 
str0 = 'btagybtkvklsvssk vgumn' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
component1 = "g"                                                        # STEP 86
ACTION: component1 = "g" 
component1 = 'd' : <type 'str'>
=> component1 = 'g' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 87
ACTION: bytes2 = 0 
bytes2 = 1 : <type 'int'>
=> bytes2 = 0 : <type 'int'>
==================================================
str4 += 'v'                                                             # STEP 88
ACTION: str4 += 'v' 
str4 = ' qwbu ' : <type 'str'>
=> str4 = ' qwbu v' : <type 'str'>
==================================================
component4 = "lambda"                                                   # STEP 89
ACTION: component4 = "lambda" 
component4 = 'f' : <type 'str'>
=> component4 = 'lambda' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 90
ACTION: str0 += 'z' 
str0 = '' : <type 'str'>
=> str0 = 'z' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 91
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path0 += "/" + component0                                               # STEP 92
ACTION: path0 += "/" + component0 
component0 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g/beta/beta/alpha/delta/beta/f/lambda' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/beta/beta/alpha/delta/beta/f/lambda/alpha' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 93
ACTION: str4 += 'l' 
str4 = ' qwbu v' : <type 'str'>
=> str4 = ' qwbu vl' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 94
ACTION: str4 += 'a' 
str4 = ' qwbu vl' : <type 'str'>
=> str4 = ' qwbu vla' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 95
ACTION: component0 = "omega" 
component0 = 'alpha' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 96
ACTION: path4 += "/" + component3 
component3 = 'g' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 97
ACTION: str0 += 'c' 
str0 = 'z' : <type 'str'>
=> str0 = 'zc' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 98
ACTION: str4 += 'e' 
str4 = ' qwbu vla' : <type 'str'>
=> str4 = ' qwbu vlae' : <type 'str'>
==================================================
component3 = "omega"                                                    # STEP 99
ACTION: component3 = "omega" 
component3 = 'g' : <type 'str'>
=> component3 = 'omega' : <type 'str'>
==================================================
bytes0 = 0                                                             # STEP 100
ACTION: bytes0 = 0 
bytes0 = 2 : <type 'int'>
=> bytes0 = 0 : <type 'int'>
==================================================
str0 += 't'                                                            # STEP 101
ACTION: str0 += 't' 
str0 = 'zc' : <type 'str'>
=> str0 = 'zct' : <type 'str'>
==================================================
path1 += "/" + component0                                              # STEP 102
ACTION: path1 += "/" + component0 
component0 = 'omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta/beta/beta/epsilon/d' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta/beta/beta/epsilon/d/omega' : <type 'str'>
==================================================
str4 += 'u'                                                            # STEP 103
ACTION: str4 += 'u' 
str4 = ' qwbu vlae' : <type 'str'>
=> str4 = ' qwbu vlaeu' : <type 'str'>
==================================================
path2 += "/" + component3                                              # STEP 104
ACTION: path2 += "/" + component3 
component3 = 'omega' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta/gamma/h/g/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta/gamma/h/g/gamma/omega' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 105
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b64190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str0 += 'q'                                                            # STEP 106
ACTION: str0 += 'q' 
str0 = 'zct' : <type 'str'>
=> str0 = 'zctq' : <type 'str'>
==================================================
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                       # STEP 107
ACTION: fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b64190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path4, os.O_WRONLY | os.O_APPEND) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
==================================================
stat1 = os0.lstat(path0)                                               # STEP 108
ACTION: stat1 = os0.lstat(path0) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b64190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/g/beta/beta/alpha/delta/beta/f/lambda/alpha' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in fake filesystem: '/Volumes/ramdisk/test/g/beta/beta/alpha/delta/beta/f/lambda/alpha'
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g/beta/beta/alpha/delta/beta/f/lambda/alpha'
==================================================
bytes0 += 1                                                            # STEP 109
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
stat0 = os0.lstat(path4)                                               # STEP 110
ACTION: stat0 = os0.lstat(path4) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b64190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in fake filesystem: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 111
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b64190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/gamma/h/g/gamma/omega' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/beta/gamma/h/g/gamma'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/gamma/h/g/gamma/omega'
==================================================
fd1 = os0.open(path3, os.O_WRONLY | os.O_APPEND)                       # STEP 112
ACTION: fd1 = os0.open(path3, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b64190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/f'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_WRONLY | os.O_APPEND) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/f'
==================================================
result = os0.path.islink(path4)                                        # STEP 113
ACTION: result = os0.path.islink(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b64190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path4) 
==================================================
component3 = "d"                                                       # STEP 114
ACTION: component3 = "d" 
component3 = 'omega' : <type 'str'>
=> component3 = 'd' : <type 'str'>
==================================================
stat2 = os0.stat(path2)                                                # STEP 115
ACTION: stat2 = os0.stat(path2) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b64190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/beta/gamma/h/g/gamma/omega' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in fake filesystem: '/Volumes/ramdisk/test/beta/gamma/h/g/gamma/omega'
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta/gamma/h/g/gamma/omega'
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 116
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b64190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.IOError'> [Errno 20] Not a directory in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102fed488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 14529, in act339
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0429730415344 TOTAL RUNTIME
1 EXECUTED
117 TOTAL TEST OPERATIONS
0.00559449195862 TIME SPENT EXECUTING TEST OPERATIONS
0.00638699531555 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.81605529785e-05 TIME SPENT CHECKING PROPERTIES
0.0056426525116 TOTAL TIME SPENT RUNNING SUT
0.00293803215027 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
