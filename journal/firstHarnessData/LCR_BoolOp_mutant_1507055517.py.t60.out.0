Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.54018.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1036e6050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 28908, in act543
    assert (type(raised) == type(refRaised))
Original test has 37 steps

SAVING TEST AS failure.54018.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "delta"                                                     # STEP 0
ACTION: component3 = "delta" 
component3 = None : <type 'NoneType'>
=> component3 = 'delta' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 1
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "g"                                                         # STEP 2
ACTION: component0 = "g" 
component0 = None : <type 'NoneType'>
=> component0 = 'g' : <type 'str'>
==================================================
component1 = "a"                                                         # STEP 3
ACTION: component1 = "a" 
component1 = None : <type 'NoneType'>
=> component1 = 'a' : <type 'str'>
==================================================
component2 = "a"                                                         # STEP 4
ACTION: component2 = "a" 
component2 = None : <type 'NoneType'>
=> component2 = 'a' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "a"                                                         # STEP 6
ACTION: component4 = "a" 
component4 = None : <type 'NoneType'>
=> component4 = 'a' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 7
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 8
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path3 += "/" + component3                                                # STEP 9
ACTION: path3 += "/" + component3 
component3 = 'delta' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
component3 = "gamma"                                                    # STEP 10
ACTION: component3 = "gamma" 
component3 = 'delta' : <type 'str'>
=> component3 = 'gamma' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 11
ACTION: path4 += "/" + component1 
component1 = 'a' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 12
ACTION: str2 += 'k' 
str2 = '' : <type 'str'>
=> str2 = 'k' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/a' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 14
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/delta' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 15
ACTION: str2 += 'a' 
str2 = 'k' : <type 'str'>
=> str2 = 'ka' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 16
ACTION: str2 += 'z' 
str2 = 'ka' : <type 'str'>
=> str2 = 'kaz' : <type 'str'>
==================================================
component1 = "f"                                                        # STEP 17
ACTION: component1 = "f" 
component1 = 'a' : <type 'str'>
=> component1 = 'f' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 18
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 19
ACTION: str1 += 'e' 
str1 = '' : <type 'str'>
=> str1 = 'e' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 20
ACTION: str1 = "" 
str1 = 'e' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 21
ACTION: path3 += "/" + component2 
component2 = 'a' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 22
ACTION: str1 += 'i' 
str1 = '' : <type 'str'>
=> str1 = 'i' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 23
ACTION: str2 += 'r' 
str2 = 'kaz' : <type 'str'>
=> str2 = 'kazr' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 24
ACTION: str1 += 'x' 
str1 = 'i' : <type 'str'>
=> str1 = 'ix' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 25
ACTION: str1 += 'a' 
str1 = 'ix' : <type 'str'>
=> str1 = 'ixa' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 26
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038aaad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str2 += 'i'                                                             # STEP 27
ACTION: str2 += 'i' 
str2 = 'kazr' : <type 'str'>
=> str2 = 'kazri' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 28
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 29
ACTION: str2 += 'g' 
str2 = 'kazri' : <type 'str'>
=> str2 = 'kazrig' : <type 'str'>
==================================================
os0.link(path3,path3)                                                   # STEP 30
ACTION: os0.link(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038aaad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: os_REF0.link(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
result = os0.path.isabs(path0)                                          # STEP 31
ACTION: result = os0.path.isabs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038aaad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path0) 
==================================================
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 32
ACTION: fd0 = os0.open(path3, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038aaad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/a'
==================================================
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 33
ACTION: fd0 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038aaad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
result = os0.path.islink(path3)                                         # STEP 34
ACTION: result = os0.path.islink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038aaad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path3) 
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 35
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038aaad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/a'
==================================================
os0.rename(path3,path0)                                                 # STEP 36
ACTION: os0.rename(path3,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1038aaad0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/a' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.rename(path3,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1036e6c68>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 28908, in act543
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.952427148819 TOTAL RUNTIME
23 EXECUTED
4437 TOTAL TEST OPERATIONS
0.633240938187 TIME SPENT EXECUTING TEST OPERATIONS
0.197902202606 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00213837623596 TIME SPENT CHECKING PROPERTIES
0.635379314423 TOTAL TIME SPENT RUNNING SUT
0.0618584156036 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
