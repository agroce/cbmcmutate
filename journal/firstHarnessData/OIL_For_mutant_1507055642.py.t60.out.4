Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.48014.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (True) == (False) ',), <traceback object at 0x1029aa3b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 30349, in act566
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 168 steps

SAVING TEST AS failure.48014.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path1 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component1 = "g"                                                         # STEP 1
ACTION: component1 = "g" 
component1 = None : <type 'NoneType'>
=> component1 = 'g' : <type 'str'>
==================================================
component0 = "gamma"                                                     # STEP 2
ACTION: component0 = "gamma" 
component0 = None : <type 'NoneType'>
=> component0 = 'gamma' : <type 'str'>
==================================================
component4 = "gamma"                                                     # STEP 3
ACTION: component4 = "gamma" 
component4 = None : <type 'NoneType'>
=> component4 = 'gamma' : <type 'str'>
==================================================
component2 = "lambda"                                                    # STEP 4
ACTION: component2 = "lambda" 
component2 = None : <type 'NoneType'>
=> component2 = 'lambda' : <type 'str'>
==================================================
component3 = "beta"                                                      # STEP 5
ACTION: component3 = "beta" 
component3 = None : <type 'NoneType'>
=> component3 = 'beta' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 6
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
path1 += "/" + component3                                                # STEP 7
ACTION: path1 += "/" + component3 
component3 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str1 += 'c'                                                              # STEP 8
ACTION: str1 += 'c' 
str1 = '' : <type 'str'>
=> str1 = 'c' : <type 'str'>
==================================================
str1 += 'f'                                                              # STEP 9
ACTION: str1 += 'f' 
str1 = 'c' : <type 'str'>
=> str1 = 'cf' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 10
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str1 += 'p'                                                             # STEP 11
ACTION: str1 += 'p' 
str1 = 'cf' : <type 'str'>
=> str1 = 'cfp' : <type 'str'>
==================================================
component3 = "gamma"                                                    # STEP 12
ACTION: component3 = "gamma" 
component3 = 'beta' : <type 'str'>
=> component3 = 'gamma' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 14
ACTION: str1 += 'k' 
str1 = 'cfp' : <type 'str'>
=> str1 = 'cfpk' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 15
ACTION: str1 += 'n' 
str1 = 'cfpk' : <type 'str'>
=> str1 = 'cfpkn' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 16
ACTION: str1 = "" 
str1 = 'cfpkn' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 17
ACTION: path1 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
component0 = "lambda"                                                   # STEP 18
ACTION: component0 = "lambda" 
component0 = 'gamma' : <type 'str'>
=> component0 = 'lambda' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 19
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 20
ACTION: str2 += 'q' 
str2 = '' : <type 'str'>
=> str2 = 'q' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 21
ACTION: str1 += 'p' 
str1 = '' : <type 'str'>
=> str1 = 'p' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 22
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 23
ACTION: str1 += 'k' 
str1 = 'p' : <type 'str'>
=> str1 = 'pk' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 24
ACTION: str4 += 'y' 
str4 = '' : <type 'str'>
=> str4 = 'y' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 25
ACTION: str4 += 'u' 
str4 = 'y' : <type 'str'>
=> str4 = 'yu' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 26
ACTION: str2 += 'b' 
str2 = 'q' : <type 'str'>
=> str2 = 'qb' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 27
ACTION: str2 += 'v' 
str2 = 'qb' : <type 'str'>
=> str2 = 'qbv' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 28
ACTION: str4 += 'h' 
str4 = 'yu' : <type 'str'>
=> str4 = 'yuh' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 29
ACTION: str2 += 'p' 
str2 = 'qbv' : <type 'str'>
=> str2 = 'qbvp' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 30
ACTION: str1 += 'y' 
str1 = 'pk' : <type 'str'>
=> str1 = 'pky' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 31
ACTION: str1 += 'f' 
str1 = 'pky' : <type 'str'>
=> str1 = 'pkyf' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 32
ACTION: str4 += 'b' 
str4 = 'yuh' : <type 'str'>
=> str4 = 'yuhb' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 33
ACTION: str2 += 'j' 
str2 = 'qbvp' : <type 'str'>
=> str2 = 'qbvpj' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 34
ACTION: str2 += 'y' 
str2 = 'qbvpj' : <type 'str'>
=> str2 = 'qbvpjy' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 35
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str1 += 'g'                                                             # STEP 36
ACTION: str1 += 'g' 
str1 = 'pkyf' : <type 'str'>
=> str1 = 'pkyfg' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 37
ACTION: str2 += 'j' 
str2 = 'qbvpjy' : <type 'str'>
=> str2 = 'qbvpjyj' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 38
ACTION: str1 += 'k' 
str1 = 'pkyfg' : <type 'str'>
=> str1 = 'pkyfgk' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 39
ACTION: str1 += 'j' 
str1 = 'pkyfgk' : <type 'str'>
=> str1 = 'pkyfgkj' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 40
ACTION: str1 += 'a' 
str1 = 'pkyfgkj' : <type 'str'>
=> str1 = 'pkyfgkja' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 41
ACTION: str2 += 'k' 
str2 = 'qbvpjyj' : <type 'str'>
=> str2 = 'qbvpjyjk' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 42
ACTION: str1 += 'j' 
str1 = 'pkyfgkja' : <type 'str'>
=> str1 = 'pkyfgkjaj' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 43
ACTION: str1 += 'b' 
str1 = 'pkyfgkjaj' : <type 'str'>
=> str1 = 'pkyfgkjajb' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 44
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 45
ACTION: str1 += 'm' 
str1 = 'pkyfgkjajb' : <type 'str'>
=> str1 = 'pkyfgkjajbm' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 46
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str1 += 'a'                                                             # STEP 47
ACTION: str1 += 'a' 
str1 = 'pkyfgkjajbm' : <type 'str'>
=> str1 = 'pkyfgkjajbma' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 48
ACTION: path2 += "/" + component3 
component3 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
component3 = "f"                                                        # STEP 49
ACTION: component3 = "f" 
component3 = 'gamma' : <type 'str'>
=> component3 = 'f' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 50
ACTION: str4 += 'g' 
str4 = 'yuhb' : <type 'str'>
=> str4 = 'yuhbg' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 51
ACTION: str2 += 'g' 
str2 = 'qbvpjyjk' : <type 'str'>
=> str2 = 'qbvpjyjkg' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 52
ACTION: str2 += 'f' 
str2 = 'qbvpjyjkg' : <type 'str'>
=> str2 = 'qbvpjyjkgf' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 53
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 54
ACTION: path1 += "/" + component1 
component1 = 'g' : <type 'str'>
path1 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma/g' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 55
ACTION: str1 += 'k' 
str1 = 'pkyfgkjajbma' : <type 'str'>
=> str1 = 'pkyfgkjajbmak' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 56
ACTION: str1 += 'e' 
str1 = 'pkyfgkjajbmak' : <type 'str'>
=> str1 = 'pkyfgkjajbmake' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 57
ACTION: str4 += 'd' 
str4 = 'yuhbg' : <type 'str'>
=> str4 = 'yuhbgd' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 58
ACTION: str1 += 'x' 
str1 = 'pkyfgkjajbmake' : <type 'str'>
=> str1 = 'pkyfgkjajbmakex' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 59
ACTION: str1 += 'u' 
str1 = 'pkyfgkjajbmakex' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexu' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 60
ACTION: str4 += 'h' 
str4 = 'yuhbgd' : <type 'str'>
=> str4 = 'yuhbgdh' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 61
ACTION: str3 += 'z' 
str3 = '' : <type 'str'>
=> str3 = 'z' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 62
ACTION: str3 += 'o' 
str3 = 'z' : <type 'str'>
=> str3 = 'zo' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 63
ACTION: str3 += 'i' 
str3 = 'zo' : <type 'str'>
=> str3 = 'zoi' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 64
ACTION: str1 += 'i' 
str1 = 'pkyfgkjajbmakexu' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexui' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 65
ACTION: str2 += 'b' 
str2 = 'qbvpjyjkgf' : <type 'str'>
=> str2 = 'qbvpjyjkgfb' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 66
ACTION: str3 += 'y' 
str3 = 'zoi' : <type 'str'>
=> str3 = 'zoiy' : <type 'str'>
==================================================
str2 += 'k'                                                             # STEP 67
ACTION: str2 += 'k' 
str2 = 'qbvpjyjkgfb' : <type 'str'>
=> str2 = 'qbvpjyjkgfbk' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 68
ACTION: str1 += 'u' 
str1 = 'pkyfgkjajbmakexui' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiu' : <type 'str'>
==================================================
component1 = "epsilon"                                                  # STEP 69
ACTION: component1 = "epsilon" 
component1 = 'g' : <type 'str'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 70
ACTION: str1 += 'e' 
str1 = 'pkyfgkjajbmakexuiu' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiue' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 71
ACTION: str1 += 'q' 
str1 = 'pkyfgkjajbmakexuiue' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiueq' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 72
ACTION: str3 += 'f' 
str3 = 'zoiy' : <type 'str'>
=> str3 = 'zoiyf' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 73
ACTION: str3 += 'b' 
str3 = 'zoiyf' : <type 'str'>
=> str3 = 'zoiyfb' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 74
ACTION: path1 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path1 = '/Volumes/ramdisk/test/gamma/g' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma/g/lambda' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 75
ACTION: str1 += 'z' 
str1 = 'pkyfgkjajbmakexuiueq' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiueqz' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 76
ACTION: str4 += 'k' 
str4 = 'yuhbgdh' : <type 'str'>
=> str4 = 'yuhbgdhk' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 77
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
path1 += "/" + component0                                               # STEP 78
ACTION: path1 += "/" + component0 
component0 = 'lambda' : <type 'str'>
path1 = '/Volumes/ramdisk/test/gamma/g/lambda' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma/g/lambda/lambda' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 79
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
component2 = "b"                                                        # STEP 80
ACTION: component2 = "b" 
component2 = 'lambda' : <type 'str'>
=> component2 = 'b' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 81
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 82
ACTION: str1 += 'y' 
str1 = 'pkyfgkjajbmakexuiueqz' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiueqzy' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 83
ACTION: str0 += 'h' 
str0 = '' : <type 'str'>
=> str0 = 'h' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 84
ACTION: str4 += 's' 
str4 = 'yuhbgdhk' : <type 'str'>
=> str4 = 'yuhbgdhks' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 85
ACTION: str4 += 'l' 
str4 = 'yuhbgdhks' : <type 'str'>
=> str4 = 'yuhbgdhksl' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 86
ACTION: str3 += 'f' 
str3 = 'zoiyfb' : <type 'str'>
=> str3 = 'zoiyfbf' : <type 'str'>
==================================================
component0 = "d"                                                        # STEP 87
ACTION: component0 = "d" 
component0 = 'lambda' : <type 'str'>
=> component0 = 'd' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 88
ACTION: str1 += 'u' 
str1 = 'pkyfgkjajbmakexuiueqzy' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiueqzyu' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 89
ACTION: str0 += " " 
str0 = 'h' : <type 'str'>
=> str0 = 'h ' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 90
ACTION: str4 += 'b' 
str4 = 'yuhbgdhksl' : <type 'str'>
=> str4 = 'yuhbgdhkslb' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 91
ACTION: path2 += "/" + component4 
component4 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma/gamma' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 92
ACTION: str4 += 'x' 
str4 = 'yuhbgdhkslb' : <type 'str'>
=> str4 = 'yuhbgdhkslbx' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 93
ACTION: str1 += 's' 
str1 = 'pkyfgkjajbmakexuiueqzyu' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiueqzyus' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 94
ACTION: str1 += 'd' 
str1 = 'pkyfgkjajbmakexuiueqzyus' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiueqzyusd' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 95
ACTION: str0 += 'm' 
str0 = 'h ' : <type 'str'>
=> str0 = 'h m' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 96
ACTION: str0 += 'l' 
str0 = 'h m' : <type 'str'>
=> str0 = 'h ml' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 97
ACTION: str0 += 't' 
str0 = 'h ml' : <type 'str'>
=> str0 = 'h mlt' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 98
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 99
ACTION: str1 += 'k' 
str1 = 'pkyfgkjajbmakexuiueqzyusd' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiueqzyusdk' : <type 'str'>
==================================================
str2 += 'c'                                                            # STEP 100
ACTION: str2 += 'c' 
str2 = 'qbvpjyjkgfbk' : <type 'str'>
=> str2 = 'qbvpjyjkgfbkc' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                        # STEP 101
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 = ""                                                              # STEP 102
ACTION: str2 = "" 
str2 = 'qbvpjyjkgfbkc' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
path2 += "/" + component4                                              # STEP 103
ACTION: path2 += "/" + component4 
component4 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma/gamma/gamma' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                        # STEP 104
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "e"                                                       # STEP 105
ACTION: component4 = "e" 
component4 = 'gamma' : <type 'str'>
=> component4 = 'e' : <type 'str'>
==================================================
str1 += 'h'                                                            # STEP 106
ACTION: str1 += 'h' 
str1 = 'pkyfgkjajbmakexuiueqzyusdk' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiueqzyusdkh' : <type 'str'>
==================================================
str0 += 'p'                                                            # STEP 107
ACTION: str0 += 'p' 
str0 = 'h mlt' : <type 'str'>
=> str0 = 'h mltp' : <type 'str'>
==================================================
str0 = ""                                                              # STEP 108
ACTION: str0 = "" 
str0 = 'h mltp' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str4 += 'u'                                                            # STEP 109
ACTION: str4 += 'u' 
str4 = 'yuhbgdhkslbx' : <type 'str'>
=> str4 = 'yuhbgdhkslbxu' : <type 'str'>
==================================================
str3 += 't'                                                            # STEP 110
ACTION: str3 += 't' 
str3 = 'zoiyfbf' : <type 'str'>
=> str3 = 'zoiyfbft' : <type 'str'>
==================================================
str4 += 'd'                                                            # STEP 111
ACTION: str4 += 'd' 
str4 = 'yuhbgdhkslbxu' : <type 'str'>
=> str4 = 'yuhbgdhkslbxud' : <type 'str'>
==================================================
str3 += 'v'                                                            # STEP 112
ACTION: str3 += 'v' 
str3 = 'zoiyfbft' : <type 'str'>
=> str3 = 'zoiyfbftv' : <type 'str'>
==================================================
str0 += 'a'                                                            # STEP 113
ACTION: str0 += 'a' 
str0 = '' : <type 'str'>
=> str0 = 'a' : <type 'str'>
==================================================
str2 += 'o'                                                            # STEP 114
ACTION: str2 += 'o' 
str2 = '' : <type 'str'>
=> str2 = 'o' : <type 'str'>
==================================================
str4 += 'f'                                                            # STEP 115
ACTION: str4 += 'f' 
str4 = 'yuhbgdhkslbxud' : <type 'str'>
=> str4 = 'yuhbgdhkslbxudf' : <type 'str'>
==================================================
str3 += 'u'                                                            # STEP 116
ACTION: str3 += 'u' 
str3 = 'zoiyfbftv' : <type 'str'>
=> str3 = 'zoiyfbftvu' : <type 'str'>
==================================================
str3 += 'j'                                                            # STEP 117
ACTION: str3 += 'j' 
str3 = 'zoiyfbftvu' : <type 'str'>
=> str3 = 'zoiyfbftvuj' : <type 'str'>
==================================================
str2 += 'm'                                                            # STEP 118
ACTION: str2 += 'm' 
str2 = 'o' : <type 'str'>
=> str2 = 'om' : <type 'str'>
==================================================
str2 += 'j'                                                            # STEP 119
ACTION: str2 += 'j' 
str2 = 'om' : <type 'str'>
=> str2 = 'omj' : <type 'str'>
==================================================
str3 += 'g'                                                            # STEP 120
ACTION: str3 += 'g' 
str3 = 'zoiyfbftvuj' : <type 'str'>
=> str3 = 'zoiyfbftvujg' : <type 'str'>
==================================================
str1 += 'y'                                                            # STEP 121
ACTION: str1 += 'y' 
str1 = 'pkyfgkjajbmakexuiueqzyusdkh' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiueqzyusdkhy' : <type 'str'>
==================================================
str2 += 'r'                                                            # STEP 122
ACTION: str2 += 'r' 
str2 = 'omj' : <type 'str'>
=> str2 = 'omjr' : <type 'str'>
==================================================
str0 += 'y'                                                            # STEP 123
ACTION: str0 += 'y' 
str0 = 'a' : <type 'str'>
=> str0 = 'ay' : <type 'str'>
==================================================
str0 += 'p'                                                            # STEP 124
ACTION: str0 += 'p' 
str0 = 'ay' : <type 'str'>
=> str0 = 'ayp' : <type 'str'>
==================================================
str1 += 'r'                                                            # STEP 125
ACTION: str1 += 'r' 
str1 = 'pkyfgkjajbmakexuiueqzyusdkhy' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiueqzyusdkhyr' : <type 'str'>
==================================================
str2 += 'g'                                                            # STEP 126
ACTION: str2 += 'g' 
str2 = 'omjr' : <type 'str'>
=> str2 = 'omjrg' : <type 'str'>
==================================================
str2 += 'p'                                                            # STEP 127
ACTION: str2 += 'p' 
str2 = 'omjrg' : <type 'str'>
=> str2 = 'omjrgp' : <type 'str'>
==================================================
bytes4 += 1                                                            # STEP 128
ACTION: bytes4 += 1 
bytes4 = 1 : <type 'int'>
=> bytes4 = 2 : <type 'int'>
==================================================
str0 += 'f'                                                            # STEP 129
ACTION: str0 += 'f' 
str0 = 'ayp' : <type 'str'>
=> str0 = 'aypf' : <type 'str'>
==================================================
str2 += 'h'                                                            # STEP 130
ACTION: str2 += 'h' 
str2 = 'omjrgp' : <type 'str'>
=> str2 = 'omjrgph' : <type 'str'>
==================================================
str3 += 'x'                                                            # STEP 131
ACTION: str3 += 'x' 
str3 = 'zoiyfbftvujg' : <type 'str'>
=> str3 = 'zoiyfbftvujgx' : <type 'str'>
==================================================
path0 += "/" + component0                                              # STEP 132
ACTION: path0 += "/" + component0 
component0 = 'd' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
path2 += "/" + component4                                              # STEP 133
ACTION: path2 += "/" + component4 
component4 = 'e' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma/gamma/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma/gamma/gamma/e' : <type 'str'>
==================================================
str1 += 'p'                                                            # STEP 134
ACTION: str1 += 'p' 
str1 = 'pkyfgkjajbmakexuiueqzyusdkhyr' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiueqzyusdkhyrp' : <type 'str'>
==================================================
str3 += 'r'                                                            # STEP 135
ACTION: str3 += 'r' 
str3 = 'zoiyfbftvujgx' : <type 'str'>
=> str3 = 'zoiyfbftvujgxr' : <type 'str'>
==================================================
str4 += 'x'                                                            # STEP 136
ACTION: str4 += 'x' 
str4 = 'yuhbgdhkslbxudf' : <type 'str'>
=> str4 = 'yuhbgdhkslbxudfx' : <type 'str'>
==================================================
path3 += "/" + component1                                              # STEP 137
ACTION: path3 += "/" + component1 
component1 = 'epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
component1 = "lambda"                                                  # STEP 138
ACTION: component1 = "lambda" 
component1 = 'epsilon' : <type 'str'>
=> component1 = 'lambda' : <type 'str'>
==================================================
path0 += "/" + component2                                              # STEP 139
ACTION: path0 += "/" + component2 
component2 = 'b' : <type 'str'>
path0 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d/b' : <type 'str'>
==================================================
str2 += 'z'                                                            # STEP 140
ACTION: str2 += 'z' 
str2 = 'omjrgph' : <type 'str'>
=> str2 = 'omjrgphz' : <type 'str'>
==================================================
str1 += 'z'                                                            # STEP 141
ACTION: str1 += 'z' 
str1 = 'pkyfgkjajbmakexuiueqzyusdkhyrp' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiueqzyusdkhyrpz' : <type 'str'>
==================================================
str3 += 'l'                                                            # STEP 142
ACTION: str3 += 'l' 
str3 = 'zoiyfbftvujgxr' : <type 'str'>
=> str3 = 'zoiyfbftvujgxrl' : <type 'str'>
==================================================
component4 = "omega"                                                   # STEP 143
ACTION: component4 = "omega" 
component4 = 'e' : <type 'str'>
=> component4 = 'omega' : <type 'str'>
==================================================
str3 += 'u'                                                            # STEP 144
ACTION: str3 += 'u' 
str3 = 'zoiyfbftvujgxrl' : <type 'str'>
=> str3 = 'zoiyfbftvujgxrlu' : <type 'str'>
==================================================
str0 += 'm'                                                            # STEP 145
ACTION: str0 += 'm' 
str0 = 'aypf' : <type 'str'>
=> str0 = 'aypfm' : <type 'str'>
==================================================
bytes2 += 1                                                            # STEP 146
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str3 += " "                                                            # STEP 147
ACTION: str3 += " " 
str3 = 'zoiyfbftvujgxrlu' : <type 'str'>
=> str3 = 'zoiyfbftvujgxrlu ' : <type 'str'>
==================================================
component0 = "delta"                                                   # STEP 148
ACTION: component0 = "delta" 
component0 = 'd' : <type 'str'>
=> component0 = 'delta' : <type 'str'>
==================================================
component2 = "gamma"                                                   # STEP 149
ACTION: component2 = "gamma" 
component2 = 'b' : <type 'str'>
=> component2 = 'gamma' : <type 'str'>
==================================================
str0 += 'm'                                                            # STEP 150
ACTION: str0 += 'm' 
str0 = 'aypfm' : <type 'str'>
=> str0 = 'aypfmm' : <type 'str'>
==================================================
str4 += 'k'                                                            # STEP 151
ACTION: str4 += 'k' 
str4 = 'yuhbgdhkslbxudfx' : <type 'str'>
=> str4 = 'yuhbgdhkslbxudfxk' : <type 'str'>
==================================================
str1 += 'k'                                                            # STEP 152
ACTION: str1 += 'k' 
str1 = 'pkyfgkjajbmakexuiueqzyusdkhyrpz' : <type 'str'>
=> str1 = 'pkyfgkjajbmakexuiueqzyusdkhyrpzk' : <type 'str'>
==================================================
bytes3 = 0                                                             # STEP 153
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 += 'e'                                                            # STEP 154
ACTION: str3 += 'e' 
str3 = 'zoiyfbftvujgxrlu ' : <type 'str'>
=> str3 = 'zoiyfbftvujgxrlu e' : <type 'str'>
==================================================
str4 += 'n'                                                            # STEP 155
ACTION: str4 += 'n' 
str4 = 'yuhbgdhkslbxudfxk' : <type 'str'>
=> str4 = 'yuhbgdhkslbxudfxkn' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                        # STEP 156
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/d/b' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes2 += 1                                                            # STEP 157
ACTION: bytes2 += 1 
bytes2 = 1 : <type 'int'>
=> bytes2 = 2 : <type 'int'>
==================================================
str2 += 'x'                                                            # STEP 158
ACTION: str2 += 'x' 
str2 = 'omjrgphz' : <type 'str'>
=> str2 = 'omjrgphzx' : <type 'str'>
==================================================
str2 += 'k'                                                            # STEP 159
ACTION: str2 += 'k' 
str2 = 'omjrgphzx' : <type 'str'>
=> str2 = 'omjrgphzxk' : <type 'str'>
==================================================
path0 += "/" + component3                                              # STEP 160
ACTION: path0 += "/" + component3 
component3 = 'f' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 161
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104f0b9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
path3 += "/" + component0                                              # STEP 162
ACTION: path3 += "/" + component0 
component0 = 'delta' : <type 'str'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/epsilon/delta' : <type 'str'>
==================================================
path1 += "/" + component4                                              # STEP 163
ACTION: path1 += "/" + component4 
component4 = 'omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test/gamma/g/lambda/lambda' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma/g/lambda/lambda/omega' : <type 'str'>
==================================================
str0 += 'x'                                                            # STEP 164
ACTION: str0 += 'x' 
str0 = 'aypfmm' : <type 'str'>
=> str0 = 'aypfmmx' : <type 'str'>
==================================================
result = os0.path.islink(path3)                                        # STEP 165
ACTION: result = os0.path.islink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104f0b9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path3) 
==================================================
result = os0.path.isfile(path2)                                        # STEP 166
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104f0b9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma/gamma/gamma/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
result = os0.path.isdir(path3)                                         # STEP 167
ACTION: result = os0.path.isdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x104f0b9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path3) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (True) == (False) ',), <traceback object at 0x1053ed3f8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 30349, in act566
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
0.0435490608215 TOTAL RUNTIME
1 EXECUTED
168 TOTAL TEST OPERATIONS
0.00446224212646 TIME SPENT EXECUTING TEST OPERATIONS
0.00703167915344 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
6.27040863037e-05 TIME SPENT CHECKING PROPERTIES
0.00452494621277 TOTAL TIME SPENT RUNNING SUT
0.00323295593262 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
