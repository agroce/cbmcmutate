Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.63316.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1037238c0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20195, in act416
    assert (type(raised) == type(refRaised))
Original test has 49 steps

SAVING TEST AS failure.63316.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "b"                                                         # STEP 0
ACTION: component3 = "b" 
component3 = None : <type 'NoneType'>
=> component3 = 'b' : <type 'str'>
==================================================
component4 = "h"                                                         # STEP 1
ACTION: component4 = "h" 
component4 = None : <type 'NoneType'>
=> component4 = 'h' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 2
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component1 = "c"                                                         # STEP 3
ACTION: component1 = "c" 
component1 = None : <type 'NoneType'>
=> component1 = 'c' : <type 'str'>
==================================================
str0 += 'x'                                                              # STEP 4
ACTION: str0 += 'x' 
str0 = '' : <type 'str'>
=> str0 = 'x' : <type 'str'>
==================================================
component0 = "phi"                                                       # STEP 5
ACTION: component0 = "phi" 
component0 = None : <type 'NoneType'>
=> component0 = 'phi' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "e"                                                         # STEP 7
ACTION: component2 = "e" 
component2 = None : <type 'NoneType'>
=> component2 = 'e' : <type 'str'>
==================================================
str0 += 't'                                                              # STEP 8
ACTION: str0 += 't' 
str0 = 'x' : <type 'str'>
=> str0 = 'xt' : <type 'str'>
==================================================
str0 += 't'                                                              # STEP 9
ACTION: str0 += 't' 
str0 = 'xt' : <type 'str'>
=> str0 = 'xtt' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 10
ACTION: str0 += 'c' 
str0 = 'xtt' : <type 'str'>
=> str0 = 'xttc' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 11
ACTION: str0 += 'l' 
str0 = 'xttc' : <type 'str'>
=> str0 = 'xttcl' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 12
ACTION: str0 += " " 
str0 = 'xttcl' : <type 'str'>
=> str0 = 'xttcl ' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 13
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str0 += 't'                                                             # STEP 14
ACTION: str0 += 't' 
str0 = 'xttcl ' : <type 'str'>
=> str0 = 'xttcl t' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 15
ACTION: path3 += "/" + component3 
component3 = 'b' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 16
ACTION: str0 += 'b' 
str0 = 'xttcl t' : <type 'str'>
=> str0 = 'xttcl tb' : <type 'str'>
==================================================
str0 += 'f'                                                             # STEP 17
ACTION: str0 += 'f' 
str0 = 'xttcl tb' : <type 'str'>
=> str0 = 'xttcl tbf' : <type 'str'>
==================================================
component3 = "h"                                                        # STEP 18
ACTION: component3 = "h" 
component3 = 'b' : <type 'str'>
=> component3 = 'h' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 19
ACTION: str0 += 'e' 
str0 = 'xttcl tbf' : <type 'str'>
=> str0 = 'xttcl tbfe' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 20
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 21
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1032e9d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd1 = os0.open(path3, os.O_CREAT)                                       # STEP 22
ACTION: fd1 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1032e9d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
stat0 = os0.lstat(path3)                                                # STEP 23
ACTION: stat0 = os0.lstat(path3) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1032e9d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103309810> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path3) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=18864067, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507411987, st_mtime=1507411987, st_ctime=1507411987) : <type 'posix.stat_result'>
==================================================
stat1 = os0.lstat(path3)                                                # STEP 24
ACTION: stat1 = os0.lstat(path3) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1032e9d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1036121d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path3) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=18864067, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507411987, st_mtime=1507411987, st_ctime=1507411987) : <type 'posix.stat_result'>
==================================================
fd0 = os0.open(path3, os.O_RDONLY)                                      # STEP 25
ACTION: fd0 = os0.open(path3, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1032e9d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_RDONLY) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
stat2 = os0.fstat(fd1)                                                  # STEP 26
ACTION: stat2 = os0.fstat(fd1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1032e9d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1032be810> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF1) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=18864067, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507411987, st_mtime=1507411987, st_ctime=1507411987) : <type 'posix.stat_result'>
==================================================
stat4 = os0.fstat(fd0)                                                  # STEP 27
ACTION: stat4 = os0.fstat(fd0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1032e9d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103612310> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.fstat(fd_REF0) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=18864067, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507411987, st_mtime=1507411987, st_ctime=1507411987) : <type 'posix.stat_result'>
==================================================
result = stat1.st_nlink                                                 # STEP 28
ACTION: result = stat1.st_nlink 
stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1036121d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF1 = posix.stat_result(st_mode=33261, st_ino=18864067, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507411987, st_mtime=1507411987, st_ctime=1507411987) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF1.st_nlink 
==================================================
result = os0.path.isdir(path3)                                          # STEP 29
ACTION: result = os0.path.isdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1032e9d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path3) 
==================================================
str3 += " "                                                             # STEP 30
ACTION: str3 += " " 
str3 = '' : <type 'str'>
=> str3 = ' ' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 31
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 32
ACTION: str0 += 'l' 
str0 = 'xttcl tbfe' : <type 'str'>
=> str0 = 'xttcl tbfel' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 33
ACTION: str3 += 'p' 
str3 = ' ' : <type 'str'>
=> str3 = ' p' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 34
ACTION: str3 += 'u' 
str3 = ' p' : <type 'str'>
=> str3 = ' pu' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 35
ACTION: str0 += 'd' 
str0 = 'xttcl tbfel' : <type 'str'>
=> str0 = 'xttcl tbfeld' : <type 'str'>
==================================================
stat1 = os0.fstat(fd1)                                                  # STEP 36
ACTION: stat1 = os0.fstat(fd1) 
stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1036121d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1032e9d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF1 = posix.stat_result(st_mode=33261, st_ino=18864067, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507411987, st_mtime=1507411987, st_ctime=1507411987) : <type 'posix.stat_result'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1025b83d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.fstat(fd_REF1) 
==================================================
os0.link(path3,path0)                                                   # STEP 37
ACTION: os0.link(path3,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1032e9d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path3,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
path3 += "/" + component2                                               # STEP 38
ACTION: path3 += "/" + component2 
component2 = 'e' : <type 'str'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b/e' : <type 'str'>
==================================================
component2 = "b"                                                        # STEP 39
ACTION: component2 = "b" 
component2 = 'e' : <type 'str'>
=> component2 = 'b' : <type 'str'>
==================================================
result = sorted(os0.listdir(path0))                                     # STEP 40
ACTION: result = sorted(os0.listdir(path0)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1032e9d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path0)) 
==================================================
str3 += 'i'                                                             # STEP 41
ACTION: str3 += 'i' 
str3 = ' pu' : <type 'str'>
=> str3 = ' pui' : <type 'str'>
==================================================
os0.mkdir(path0)                                                        # STEP 42
ACTION: os0.mkdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1032e9d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
path0 += "/" + component2                                               # STEP 43
ACTION: path0 += "/" + component2 
component2 = 'b' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 44
ACTION: str3 += 'k' 
str3 = ' pui' : <type 'str'>
=> str3 = ' puik' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 45
ACTION: str0 += 'e' 
str0 = 'xttcl tbfeld' : <type 'str'>
=> str0 = 'xttcl tbfelde' : <type 'str'>
==================================================
component2 = "b"                                                        # STEP 46
ACTION: component2 = "b" 
component2 = 'b' : <type 'str'>
==================================================
result = os0.path.isdir(path3)                                          # STEP 47
ACTION: result = os0.path.isdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1032e9d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path3) 
==================================================
os0.write(fd0,str3)                                                     # STEP 48
ACTION: os0.write(fd0,str3) 
str3 = ' puik' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1032e9d10> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF0,str3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1036a7290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20195, in act416
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.064376115799 TOTAL RUNTIME
3 EXECUTED
449 TOTAL TEST OPERATIONS
0.0104966163635 TIME SPENT EXECUTING TEST OPERATIONS
0.0215570926666 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000215768814087 TIME SPENT CHECKING PROPERTIES
0.0107123851776 TOTAL TIME SPENT RUNNING SUT
0.0083749294281 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
