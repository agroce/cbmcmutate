Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.60283.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('sequence item 0: expected string, bool found',), <traceback object at 0x101c9f5f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9915, in act270
    self.p_os[0].makedirs(self.p_path[4])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3662, in makedirs
    self.filesystem.MakeDirectories(dir_name, mode, exist_ok)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2385, in MakeDirectories
    self.CreateDirectory(dir_name, (mode & (~ self.umask)))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2088, in CreateDirectory
    raise OSError(errno.ENOTDIR, 'Not a directory', current_dir.GetPath())
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 509, in GetPath
    return self.filesystem.NormalizePath(sep.join(names[1:]))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1351, in NormalizePath
    path = self._path_separator(path).join(((((self.cwd != root_name) and self.cwd) and empty), path))
Original test has 46 steps

SAVING TEST AS failure.60283.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "beta"                                                      # STEP 0
ACTION: component2 = "beta" 
component2 = None : <type 'NoneType'>
=> component2 = 'beta' : <type 'str'>
==================================================
component1 = "c"                                                         # STEP 1
ACTION: component1 = "c" 
component1 = None : <type 'NoneType'>
=> component1 = 'c' : <type 'str'>
==================================================
component4 = "b"                                                         # STEP 2
ACTION: component4 = "b" 
component4 = None : <type 'NoneType'>
=> component4 = 'b' : <type 'str'>
==================================================
component0 = "d"                                                         # STEP 3
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
component3 = "b"                                                         # STEP 4
ACTION: component3 = "b" 
component3 = None : <type 'NoneType'>
=> component3 = 'b' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 5
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str4 = ""                                                                # STEP 6
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'n'                                                              # STEP 7
ACTION: str4 += 'n' 
str4 = '' : <type 'str'>
=> str4 = 'n' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 8
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str4 += 'i'                                                              # STEP 9
ACTION: str4 += 'i' 
str4 = 'n' : <type 'str'>
=> str4 = 'ni' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 10
ACTION: str4 += 'c' 
str4 = 'ni' : <type 'str'>
=> str4 = 'nic' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 11
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str4 += 'd'                                                             # STEP 12
ACTION: str4 += 'd' 
str4 = 'nic' : <type 'str'>
=> str4 = 'nicd' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 14
ACTION: path1 += "/" + component2 
component2 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 15
ACTION: str4 += 'j' 
str4 = 'nicd' : <type 'str'>
=> str4 = 'nicdj' : <type 'str'>
==================================================
component2 = "delta"                                                    # STEP 16
ACTION: component2 = "delta" 
component2 = 'beta' : <type 'str'>
=> component2 = 'delta' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 17
ACTION: str4 += 'g' 
str4 = 'nicdj' : <type 'str'>
=> str4 = 'nicdjg' : <type 'str'>
==================================================
result = os0.path.exists(path1)                                         # STEP 18
ACTION: result = os0.path.exists(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path1) 
==================================================
os0.makedirs(path1)                                                     # STEP 19
ACTION: os0.makedirs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path1) 
==================================================
stat4 = os0.lstat(path1)                                                # STEP 20
ACTION: stat4 = os0.lstat(path1) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x101e2e450> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path1) 
=> stat_REF4 = posix.stat_result(st_mode=16877, st_ino=14973198, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507356686, st_mtime=1507356686, st_ctime=1507356686) : <type 'posix.stat_result'>
==================================================
stat3 = os0.lstat(path1)                                                # STEP 21
ACTION: stat3 = os0.lstat(path1) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102505490> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path1) 
=> stat_REF3 = posix.stat_result(st_mode=16877, st_ino=14973198, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507356686, st_mtime=1507356686, st_ctime=1507356686) : <type 'posix.stat_result'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 22
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.remove(path1)                                                       # STEP 23
ACTION: os0.remove(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: os_REF0.remove(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test/beta'
==================================================
path4 += "/" + component4                                               # STEP 24
ACTION: path4 += "/" + component4 
component4 = 'b' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 25
ACTION: str4 += 't' 
str4 = 'nicdjg' : <type 'str'>
=> str4 = 'nicdjgt' : <type 'str'>
==================================================
stat2 = os0.lstat(path1)                                                # STEP 26
ACTION: stat2 = os0.lstat(path1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102505a10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.lstat(path1) 
=> stat_REF2 = posix.stat_result(st_mode=16877, st_ino=14973198, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507356686, st_mtime=1507356686, st_ctime=1507356686) : <type 'posix.stat_result'>
==================================================
str4 += 'g'                                                             # STEP 27
ACTION: str4 += 'g' 
str4 = 'nicdjgt' : <type 'str'>
=> str4 = 'nicdjgtg' : <type 'str'>
==================================================
result = os0.path.getsize(path4)                                        # STEP 28
ACTION: result = os0.path.getsize(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/b'
==================================================
bytes2 += 1                                                             # STEP 29
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
result = os0.path.abspath(path1)                                        # STEP 30
ACTION: result = os0.path.abspath(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path1) 
==================================================
fd1 = os0.open(path4, os.O_CREAT | os.O_EXCL)                           # STEP 31
ACTION: fd1 = os0.open(path4, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path4, os.O_CREAT | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
component4 = "e"                                                        # STEP 32
ACTION: component4 = "e" 
component4 = 'b' : <type 'str'>
=> component4 = 'e' : <type 'str'>
==================================================
result = os0.readlink(path1)                                            # STEP 33
ACTION: result = os0.readlink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: result_REF = os_REF0.readlink(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test/beta'
==================================================
os0.symlink(path1,path1)                                                # STEP 34
ACTION: os0.symlink(path1,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: os_REF0.symlink(path1,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 35
ACTION: fd0 = os0.open(path4, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path4, os.O_CREAT | os.O_WRONLY) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
path4 += "/" + component4                                               # STEP 36
ACTION: path4 += "/" + component4 
component4 = 'e' : <type 'str'>
path4 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/b/e' : <type 'str'>
==================================================
result = os0.path.lexists(path4)                                        # STEP 37
ACTION: result = os0.path.lexists(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/b/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path4) 
==================================================
stat0 = os0.fstat(fd0)                                                  # STEP 38
ACTION: stat0 = os0.fstat(fd0) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1025059d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.fstat(fd_REF0) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=14973199, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507356686, st_mtime=1507356686, st_ctime=1507356686) : <type 'posix.stat_result'>
==================================================
str4 += 'i'                                                             # STEP 39
ACTION: str4 += 'i' 
str4 = 'nicdjgtg' : <type 'str'>
=> str4 = 'nicdjgtgi' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 40
ACTION: path1 += "/" + component1 
component1 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta/c' : <type 'str'>
==================================================
component1 = "beta"                                                     # STEP 41
ACTION: component1 = "beta" 
component1 = 'c' : <type 'str'>
=> component1 = 'beta' : <type 'str'>
==================================================
os0.write(fd0,str4)                                                     # STEP 42
ACTION: os0.write(fd0,str4) 
str4 = 'nicdjgtgi' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF0,str4) 
==================================================
os0.close(fd0)                                                          # STEP 43
ACTION: os0.close(fd0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
REFERENCE ACTION: os_REF0.close(fd_REF0) 
==================================================
component4 = "f"                                                        # STEP 44
ACTION: component4 = "f" 
component4 = 'e' : <type 'str'>
=> component4 = 'f' : <type 'str'>
==================================================
os0.makedirs(path4)                                                     # STEP 45
ACTION: os0.makedirs(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101ada8d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/b/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> sequence item 0: expected string, bool found
ERROR: (<type 'exceptions.TypeError'>, TypeError('sequence item 0: expected string, bool found',), <traceback object at 0x1024bdb00>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9915, in act270
    self.p_os[0].makedirs(self.p_path[4])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3662, in makedirs
    self.filesystem.MakeDirectories(dir_name, mode, exist_ok)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2385, in MakeDirectories
    self.CreateDirectory(dir_name, (mode & (~ self.umask)))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2088, in CreateDirectory
    raise OSError(errno.ENOTDIR, 'Not a directory', current_dir.GetPath())
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 509, in GetPath
    return self.filesystem.NormalizePath(sep.join(names[1:]))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1351, in NormalizePath
    path = self._path_separator(path).join(((((self.cwd != root_name) and self.cwd) and empty), path))
STOPPING TESTING DUE TO FAILED TEST
0.163697957993 TOTAL RUNTIME
3 EXECUTED
446 TOTAL TEST OPERATIONS
0.106985330582 TIME SPENT EXECUTING TEST OPERATIONS
0.0200111865997 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000223875045776 TIME SPENT CHECKING PROPERTIES
0.107209205627 TOTAL TIME SPENT RUNNING SUT
0.00884962081909 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
