Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59871.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102674050>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1313, in NormalizeCase
    path_components = self.GetPathComponents(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1544, in GetPathComponents
    assert (drive and path_components)
Original test has 103 steps

SAVING TEST AS failure.59871.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "e"                                                         # STEP 0
ACTION: component3 = "e" 
component3 = None : <type 'NoneType'>
=> component3 = 'e' : <type 'str'>
==================================================
component1 = "beta"                                                      # STEP 1
ACTION: component1 = "beta" 
component1 = None : <type 'NoneType'>
=> component1 = 'beta' : <type 'str'>
==================================================
component4 = "delta"                                                     # STEP 2
ACTION: component4 = "delta" 
component4 = None : <type 'NoneType'>
=> component4 = 'delta' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 3
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component0 = "delta"                                                     # STEP 4
ACTION: component0 = "delta" 
component0 = None : <type 'NoneType'>
=> component0 = 'delta' : <type 'str'>
==================================================
component2 = "beta"                                                      # STEP 5
ACTION: component2 = "beta" 
component2 = None : <type 'NoneType'>
=> component2 = 'beta' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 6
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'i'                                                              # STEP 7
ACTION: str4 += 'i' 
str4 = '' : <type 'str'>
=> str4 = 'i' : <type 'str'>
==================================================
str4 += 'p'                                                              # STEP 8
ACTION: str4 += 'p' 
str4 = 'i' : <type 'str'>
=> str4 = 'ip' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 9
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str4 += 'n'                                                             # STEP 10
ACTION: str4 += 'n' 
str4 = 'ip' : <type 'str'>
=> str4 = 'ipn' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 11
ACTION: str4 += 'u' 
str4 = 'ipn' : <type 'str'>
=> str4 = 'ipnu' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 12
ACTION: str4 += 'w' 
str4 = 'ipnu' : <type 'str'>
=> str4 = 'ipnuw' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 13
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 14
ACTION: str4 += 'a' 
str4 = 'ipnuw' : <type 'str'>
=> str4 = 'ipnuwa' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 15
ACTION: str4 += 'l' 
str4 = 'ipnuwa' : <type 'str'>
=> str4 = 'ipnuwal' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 16
ACTION: str4 += 'o' 
str4 = 'ipnuwal' : <type 'str'>
=> str4 = 'ipnuwalo' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 18
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 19
ACTION: str2 += 'a' 
str2 = '' : <type 'str'>
=> str2 = 'a' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 20
ACTION: str2 += 'v' 
str2 = 'a' : <type 'str'>
=> str2 = 'av' : <type 'str'>
==================================================
str4 += 'n'                                                             # STEP 21
ACTION: str4 += 'n' 
str4 = 'ipnuwalo' : <type 'str'>
=> str4 = 'ipnuwalon' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 22
ACTION: str2 += 'r' 
str2 = 'av' : <type 'str'>
=> str2 = 'avr' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 23
ACTION: str4 += 'c' 
str4 = 'ipnuwalon' : <type 'str'>
=> str4 = 'ipnuwalonc' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 24
ACTION: str0 += 'd' 
str0 = '' : <type 'str'>
=> str0 = 'd' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 26
ACTION: str4 += 'e' 
str4 = 'ipnuwalonc' : <type 'str'>
=> str4 = 'ipnuwalonce' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 27
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 28
ACTION: str2 += 'i' 
str2 = 'avr' : <type 'str'>
=> str2 = 'avri' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 29
ACTION: str0 += 'i' 
str0 = 'd' : <type 'str'>
=> str0 = 'di' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 30
ACTION: str2 += 'd' 
str2 = 'avri' : <type 'str'>
=> str2 = 'avrid' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 31
ACTION: str0 += 'v' 
str0 = 'di' : <type 'str'>
=> str0 = 'div' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 32
ACTION: str0 += 'w' 
str0 = 'div' : <type 'str'>
=> str0 = 'divw' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 33
ACTION: str4 += 'j' 
str4 = 'ipnuwalonce' : <type 'str'>
=> str4 = 'ipnuwaloncej' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 34
ACTION: str4 += 'q' 
str4 = 'ipnuwaloncej' : <type 'str'>
=> str4 = 'ipnuwaloncejq' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 35
ACTION: path3 += "/" + component0 
component0 = 'delta' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 36
ACTION: str0 += 'z' 
str0 = 'divw' : <type 'str'>
=> str0 = 'divwz' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 37
ACTION: str0 += 'd' 
str0 = 'divwz' : <type 'str'>
=> str0 = 'divwzd' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 38
ACTION: path3 += "/" + component4 
component4 = 'delta' : <type 'str'>
path3 = '/Volumes/ramdisk/test/delta' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/delta/delta' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 39
ACTION: str2 += 't' 
str2 = 'avrid' : <type 'str'>
=> str2 = 'avridt' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 40
ACTION: str4 += 'w' 
str4 = 'ipnuwaloncejq' : <type 'str'>
=> str4 = 'ipnuwaloncejqw' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 41
ACTION: str4 += 'z' 
str4 = 'ipnuwaloncejqw' : <type 'str'>
=> str4 = 'ipnuwaloncejqwz' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 42
ACTION: str0 += 'h' 
str0 = 'divwzd' : <type 'str'>
=> str0 = 'divwzdh' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 43
ACTION: str4 += 'e' 
str4 = 'ipnuwaloncejqwz' : <type 'str'>
=> str4 = 'ipnuwaloncejqwze' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 44
ACTION: str4 += 'k' 
str4 = 'ipnuwaloncejqwze' : <type 'str'>
=> str4 = 'ipnuwaloncejqwzek' : <type 'str'>
==================================================
component4 = "d"                                                        # STEP 45
ACTION: component4 = "d" 
component4 = 'delta' : <type 'str'>
=> component4 = 'd' : <type 'str'>
==================================================
path4 += "/" + component4                                               # STEP 46
ACTION: path4 += "/" + component4 
component4 = 'd' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
component0 = "c"                                                        # STEP 47
ACTION: component0 = "c" 
component0 = 'delta' : <type 'str'>
=> component0 = 'c' : <type 'str'>
==================================================
component4 = "delta"                                                    # STEP 48
ACTION: component4 = "delta" 
component4 = 'd' : <type 'str'>
=> component4 = 'delta' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 49
ACTION: str2 += 'j' 
str2 = 'avridt' : <type 'str'>
=> str2 = 'avridtj' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 50
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 51
ACTION: str0 += 'a' 
str0 = 'divwzdh' : <type 'str'>
=> str0 = 'divwzdha' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 52
ACTION: str4 += 'z' 
str4 = 'ipnuwaloncejqwzek' : <type 'str'>
=> str4 = 'ipnuwaloncejqwzekz' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 53
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 54
ACTION: str2 += 'm' 
str2 = 'avridtj' : <type 'str'>
=> str2 = 'avridtjm' : <type 'str'>
==================================================
str0 += 'u'                                                             # STEP 55
ACTION: str0 += 'u' 
str0 = 'divwzdha' : <type 'str'>
=> str0 = 'divwzdhau' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 56
ACTION: path4 += "/" + component0 
component0 = 'c' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 57
ACTION: str4 += 'y' 
str4 = 'ipnuwaloncejqwzekz' : <type 'str'>
=> str4 = 'ipnuwaloncejqwzekzy' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 58
ACTION: path0 += "/" + component4 
component4 = 'delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 59
ACTION: str2 += 'q' 
str2 = 'avridtjm' : <type 'str'>
=> str2 = 'avridtjmq' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 60
ACTION: str4 += 'q' 
str4 = 'ipnuwaloncejqwzekzy' : <type 'str'>
=> str4 = 'ipnuwaloncejqwzekzyq' : <type 'str'>
==================================================
component4 = "alpha"                                                    # STEP 61
ACTION: component4 = "alpha" 
component4 = 'delta' : <type 'str'>
=> component4 = 'alpha' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 62
ACTION: str0 += 'e' 
str0 = 'divwzdhau' : <type 'str'>
=> str0 = 'divwzdhaue' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 63
ACTION: str2 = "" 
str2 = 'avridtjmq' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 64
ACTION: str2 += 'z' 
str2 = '' : <type 'str'>
=> str2 = 'z' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 65
ACTION: str4 += 'b' 
str4 = 'ipnuwaloncejqwzekzyq' : <type 'str'>
=> str4 = 'ipnuwaloncejqwzekzyqb' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 66
ACTION: str2 += 'e' 
str2 = 'z' : <type 'str'>
=> str2 = 'ze' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 67
ACTION: str0 += 'g' 
str0 = 'divwzdhaue' : <type 'str'>
=> str0 = 'divwzdhaueg' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 68
ACTION: str4 += 'f' 
str4 = 'ipnuwaloncejqwzekzyqb' : <type 'str'>
=> str4 = 'ipnuwaloncejqwzekzyqbf' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 69
ACTION: str4 += 'r' 
str4 = 'ipnuwaloncejqwzekzyqbf' : <type 'str'>
=> str4 = 'ipnuwaloncejqwzekzyqbfr' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 70
ACTION: str4 += 'z' 
str4 = 'ipnuwaloncejqwzekzyqbfr' : <type 'str'>
=> str4 = 'ipnuwaloncejqwzekzyqbfrz' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 71
ACTION: str2 += 't' 
str2 = 'ze' : <type 'str'>
=> str2 = 'zet' : <type 'str'>
==================================================
component0 = "g"                                                        # STEP 72
ACTION: component0 = "g" 
component0 = 'c' : <type 'str'>
=> component0 = 'g' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 73
ACTION: str0 += 'n' 
str0 = 'divwzdhaueg' : <type 'str'>
=> str0 = 'divwzdhauegn' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 74
ACTION: str4 += 'e' 
str4 = 'ipnuwaloncejqwzekzyqbfrz' : <type 'str'>
=> str4 = 'ipnuwaloncejqwzekzyqbfrze' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 75
ACTION: str0 += 'y' 
str0 = 'divwzdhauegn' : <type 'str'>
=> str0 = 'divwzdhauegny' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 76
ACTION: str0 += 'i' 
str0 = 'divwzdhauegny' : <type 'str'>
=> str0 = 'divwzdhauegnyi' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 77
ACTION: str0 += 'e' 
str0 = 'divwzdhauegnyi' : <type 'str'>
=> str0 = 'divwzdhauegnyie' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 78
ACTION: str0 += 'p' 
str0 = 'divwzdhauegnyie' : <type 'str'>
=> str0 = 'divwzdhauegnyiep' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 79
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str2 += 't'                                                             # STEP 80
ACTION: str2 += 't' 
str2 = 'zet' : <type 'str'>
=> str2 = 'zett' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 81
ACTION: str0 += 'n' 
str0 = 'divwzdhauegnyiep' : <type 'str'>
=> str0 = 'divwzdhauegnyiepn' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 82
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 83
ACTION: str1 += 'u' 
str1 = '' : <type 'str'>
=> str1 = 'u' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 84
ACTION: str0 = "" 
str0 = 'divwzdhauegnyiepn' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 85
ACTION: str1 += 'v' 
str1 = 'u' : <type 'str'>
=> str1 = 'uv' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 86
ACTION: str0 += 't' 
str0 = '' : <type 'str'>
=> str0 = 't' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 87
ACTION: path4 += "/" + component0 
component0 = 'g' : <type 'str'>
path4 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/c/g' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 88
ACTION: str2 += 'd' 
str2 = 'zett' : <type 'str'>
=> str2 = 'zettd' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 89
ACTION: str0 += 'y' 
str0 = 't' : <type 'str'>
=> str0 = 'ty' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 90
ACTION: str4 += 'e' 
str4 = 'ipnuwaloncejqwzekzyqbfrze' : <type 'str'>
=> str4 = 'ipnuwaloncejqwzekzyqbfrzee' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 91
ACTION: str1 += 'q' 
str1 = 'uv' : <type 'str'>
=> str1 = 'uvq' : <type 'str'>
==================================================
component0 = "lambda"                                                   # STEP 92
ACTION: component0 = "lambda" 
component0 = 'g' : <type 'str'>
=> component0 = 'lambda' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 93
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/delta/delta' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 94
ACTION: str4 += 't' 
str4 = 'ipnuwaloncejqwzekzyqbfrzee' : <type 'str'>
=> str4 = 'ipnuwaloncejqwzekzyqbfrzeet' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 95
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/c/g' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 96
ACTION: str1 += 'g' 
str1 = 'uvq' : <type 'str'>
=> str1 = 'uvqg' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 97
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
path0 += "/" + component0                                               # STEP 98
ACTION: path0 += "/" + component0 
component0 = 'lambda' : <type 'str'>
path0 = '/Volumes/ramdisk/test/delta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/delta/lambda' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 99
ACTION: str1 += 'e' 
str1 = 'uvqg' : <type 'str'>
=> str1 = 'uvqge' : <type 'str'>
==================================================
component0 = "gamma"                                                   # STEP 100
ACTION: component0 = "gamma" 
component0 = 'lambda' : <type 'str'>
=> component0 = 'gamma' : <type 'str'>
==================================================
bytes3 = 0                                                             # STEP 101
ACTION: bytes3 = 0 
bytes3 = 1 : <type 'int'>
=> bytes3 = 0 : <type 'int'>
==================================================
os0 = newFakeOS()                                                      # STEP 102
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.AssertionError'> 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1006c3368>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1313, in NormalizeCase
    path_components = self.GetPathComponents(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1544, in GetPathComponents
    assert (drive and path_components)
STOPPING TESTING DUE TO FAILED TEST
0.0355319976807 TOTAL RUNTIME
1 EXECUTED
103 TOTAL TEST OPERATIONS
0.00182628631592 TIME SPENT EXECUTING TEST OPERATIONS
0.00670409202576 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.74317169189e-05 TIME SPENT CHECKING PROPERTIES
0.00186371803284 TOTAL TIME SPENT RUNNING SUT
0.00425291061401 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
