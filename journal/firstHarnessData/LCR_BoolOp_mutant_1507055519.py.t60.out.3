Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.49362.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104abdcb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 28371, in act535
    assert (type(raised) == type(refRaised))
Original test has 76 steps

SAVING TEST AS failure.49362.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "g"                                                         # STEP 0
ACTION: component1 = "g" 
component1 = None : <type 'NoneType'>
=> component1 = 'g' : <type 'str'>
==================================================
component0 = "beta"                                                      # STEP 1
ACTION: component0 = "beta" 
component0 = None : <type 'NoneType'>
=> component0 = 'beta' : <type 'str'>
==================================================
component2 = "d"                                                         # STEP 2
ACTION: component2 = "d" 
component2 = None : <type 'NoneType'>
=> component2 = 'd' : <type 'str'>
==================================================
component3 = "b"                                                         # STEP 3
ACTION: component3 = "b" 
component3 = None : <type 'NoneType'>
=> component3 = 'b' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 4
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
component4 = "e"                                                         # STEP 5
ACTION: component4 = "e" 
component4 = None : <type 'NoneType'>
=> component4 = 'e' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 6
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'q'                                                              # STEP 7
ACTION: str1 += 'q' 
str1 = '' : <type 'str'>
=> str1 = 'q' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = sorted(os0.listdir(path1))                                      # STEP 9
ACTION: result = sorted(os0.listdir(path1)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path1)) 
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 10
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.symlink(path1,path2)                                                # STEP 11
ACTION: os0.symlink(path1,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path1,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
path1 += "/" + component1                                               # STEP 12
ACTION: path1 += "/" + component1 
component1 = 'g' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 13
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 14
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.link(path2,path2)                                                   # STEP 15
ACTION: os0.link(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.link(path1,path2)                                                   # STEP 16
ACTION: os0.link(path1,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path1,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.lexists(path2)                                        # STEP 17
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
os0.makedirs(path2)                                                     # STEP 18
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = os0.path.abspath(path1)                                        # STEP 19
ACTION: result = os0.path.abspath(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path1) 
==================================================
component1 = "omega"                                                    # STEP 20
ACTION: component1 = "omega" 
component1 = 'g' : <type 'str'>
=> component1 = 'omega' : <type 'str'>
==================================================
result = os0.path.abspath(path1)                                        # STEP 21
ACTION: result = os0.path.abspath(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path1) 
==================================================
str1 += 'f'                                                             # STEP 22
ACTION: str1 += 'f' 
str1 = 'q' : <type 'str'>
=> str1 = 'qf' : <type 'str'>
==================================================
result = os0.readlink(path2)                                            # STEP 23
ACTION: result = os0.readlink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
str1 += 'r'                                                             # STEP 24
ACTION: str1 += 'r' 
str1 = 'qf' : <type 'str'>
=> str1 = 'qfr' : <type 'str'>
==================================================
os0.symlink(path1,path2)                                                # STEP 25
ACTION: os0.symlink(path1,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path1,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.isdir(path2)                                          # STEP 26
ACTION: result = os0.path.isdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path2) 
==================================================
path2 += "/" + component2                                               # STEP 27
ACTION: path2 += "/" + component2 
component2 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
component2 = "b"                                                        # STEP 28
ACTION: component2 = "b" 
component2 = 'd' : <type 'str'>
=> component2 = 'b' : <type 'str'>
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL)                           # STEP 29
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_EXCL) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
path1 += "/" + component1                                               # STEP 30
ACTION: path1 += "/" + component1 
component1 = 'omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
component1 = "d"                                                        # STEP 31
ACTION: component1 = "d" 
component1 = 'omega' : <type 'str'>
=> component1 = 'd' : <type 'str'>
==================================================
stat3 = os0.fstat(fd0)                                                  # STEP 32
ACTION: stat3 = os0.fstat(fd0) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104c1a750> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.fstat(fd_REF0) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=3158493, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507191290, st_mtime=1507191290, st_ctime=1507191290) : <type 'posix.stat_result'>
==================================================
fd1 = os0.open(path1, os.O_RDONLY)                                      # STEP 33
ACTION: fd1 = os0.open(path1, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega'
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 34
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.read(fd0,bytes4)                                           # STEP 35
ACTION: result = os0.read(fd0,bytes4) 
bytes4 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes4) 
==================================================
stat1 = os0.lstat(path1)                                                # STEP 36
ACTION: stat1 = os0.lstat(path1) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega'
==================================================
str1 += 'v'                                                             # STEP 37
ACTION: str1 += 'v' 
str1 = 'qfr' : <type 'str'>
=> str1 = 'qfrv' : <type 'str'>
==================================================
stat1 = os0.lstat(path2)                                                # STEP 38
ACTION: stat1 = os0.lstat(path2) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1064ba950> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path2) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=3158493, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507191290, st_mtime=1507191290, st_ctime=1507191290) : <type 'posix.stat_result'>
==================================================
result = os0.read(fd0,bytes4)                                           # STEP 39
ACTION: result = os0.read(fd0,bytes4) 
bytes4 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes4) 
==================================================
result = stat3.st_size                                                  # STEP 40
ACTION: result = stat3.st_size 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104c1a750> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=3158493, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507191290, st_mtime=1507191290, st_ctime=1507191290) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF3.st_size 
==================================================
fd1 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 41
ACTION: fd1 = os0.open(path1, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_WRONLY | os.O_APPEND) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega'
==================================================
str3 = ""                                                               # STEP 42
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 43
ACTION: str1 = "" 
str1 = 'qfrv' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
os0.mkdir(path0)                                                        # STEP 44
ACTION: os0.mkdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
os0.symlink(path0,path2)                                                # STEP 45
ACTION: os0.symlink(path0,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/d'
REFERENCE ACTION: os_REF0.symlink(path0,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.makedirs(path2)                                                     # STEP 46
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test/d'
REFERENCE ACTION: os_REF0.makedirs(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/d'
==================================================
stat0 = os0.lstat(path2)                                                # STEP 47
ACTION: stat0 = os0.lstat(path2) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1064ba9d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path2) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=3158493, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507191290, st_mtime=1507191290, st_ctime=1507191290) : <type 'posix.stat_result'>
==================================================
result = os0.path.exists(path0)                                         # STEP 48
ACTION: result = os0.path.exists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path0) 
==================================================
str3 += 'p'                                                             # STEP 49
ACTION: str3 += 'p' 
str3 = '' : <type 'str'>
=> str3 = 'p' : <type 'str'>
==================================================
result = os0.path.abspath(path1)                                        # STEP 50
ACTION: result = os0.path.abspath(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path1) 
==================================================
str1 += 'd'                                                             # STEP 51
ACTION: str1 += 'd' 
str1 = '' : <type 'str'>
=> str1 = 'd' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 52
ACTION: str3 += " " 
str3 = 'p' : <type 'str'>
=> str3 = 'p ' : <type 'str'>
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 53
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF1 = 5 : <type 'int'>
==================================================
str1 += 'c'                                                             # STEP 54
ACTION: str1 += 'c' 
str1 = 'd' : <type 'str'>
=> str1 = 'dc' : <type 'str'>
==================================================
os0.symlink(path0,path2)                                                # STEP 55
ACTION: os0.symlink(path0,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/d'
REFERENCE ACTION: os_REF0.symlink(path0,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
stat4 = os0.fstat(fd0)                                                  # STEP 56
ACTION: stat4 = os0.fstat(fd0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 0 : <type 'int'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 4 : <type 'int'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1064ba310> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.fstat(fd_REF0) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=3158493, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507191290, st_mtime=1507191290, st_ctime=1507191290) : <type 'posix.stat_result'>
==================================================
str1 += 'p'                                                             # STEP 57
ACTION: str1 += 'p' 
str1 = 'dc' : <type 'str'>
=> str1 = 'dcp' : <type 'str'>
==================================================
result = os0.path.islink(path0)                                         # STEP 58
ACTION: result = os0.path.islink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path0) 
==================================================
str3 += 'z'                                                             # STEP 59
ACTION: str3 += 'z' 
str3 = 'p ' : <type 'str'>
=> str3 = 'p z' : <type 'str'>
==================================================
result = os0.path.islink(path1)                                         # STEP 60
ACTION: result = os0.path.islink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path1) 
==================================================
str3 += 'b'                                                             # STEP 61
ACTION: str3 += 'b' 
str3 = 'p z' : <type 'str'>
=> str3 = 'p zb' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 62
ACTION: path0 += "/" + component1 
component1 = 'd' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
result = os0.path.getsize(path0)                                        # STEP 63
ACTION: result = os0.path.getsize(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path0) 
==================================================
os0.symlink(path0,path0)                                                # STEP 64
ACTION: os0.symlink(path0,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/d'
REFERENCE ACTION: os_REF0.symlink(path0,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
stat3 = os0.lstat(path2)                                                # STEP 65
ACTION: stat3 = os0.lstat(path2) 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104c1a750> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=3158493, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507191290, st_mtime=1507191290, st_ctime=1507191290) : <type 'posix.stat_result'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1064bab10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path2) 
==================================================
result = os0.path.isdir(path1)                                          # STEP 66
ACTION: result = os0.path.isdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path1) 
==================================================
component1 = "gamma"                                                    # STEP 67
ACTION: component1 = "gamma" 
component1 = 'd' : <type 'str'>
=> component1 = 'gamma' : <type 'str'>
==================================================
os0.symlink(path2,path1)                                                # STEP 68
ACTION: os0.symlink(path2,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: os_REF0.symlink(path2,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = stat4.st_size                                                  # STEP 69
ACTION: result = stat4.st_size 
stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1064ba310> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF4 = posix.stat_result(st_mode=33261, st_ino=3158493, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507191290, st_mtime=1507191290, st_ctime=1507191290) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF4.st_size 
==================================================
result = stat0.st_size                                                  # STEP 70
ACTION: result = stat0.st_size 
stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1064ba9d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF0 = posix.stat_result(st_mode=33261, st_ino=3158493, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507191290, st_mtime=1507191290, st_ctime=1507191290) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF0.st_size 
==================================================
stat2 = os0.stat(path2)                                                 # STEP 71
ACTION: stat2 = os0.stat(path2) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1064baa10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.stat(path2) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=3158493, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507191290, st_mtime=1507191290, st_ctime=1507191290) : <type 'posix.stat_result'>
==================================================
str1 += 'm'                                                             # STEP 72
ACTION: str1 += 'm' 
str1 = 'dcp' : <type 'str'>
=> str1 = 'dcpm' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 73
ACTION: str1 += 'd' 
str1 = 'dcpm' : <type 'str'>
=> str1 = 'dcpmd' : <type 'str'>
==================================================
result = os0.read(fd1,bytes4)                                           # STEP 74
ACTION: result = os0.read(fd1,bytes4) 
bytes4 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 5 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
os0.rename(path1,path2)                                                 # STEP 75
ACTION: os0.rename(path1,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1006c0650> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/omega' : <type 'str'>
path2 = '/Volumes/ramdisk/test/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake filesystem object: can not rename to existing file: '/Volumes/ramdisk/test/d'
REFERENCE ACTION: os_REF0.rename(path1,path2) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x106377200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 28371, in act535
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
3.75078606606 TOTAL RUNTIME
65 EXECUTED
12876 TOTAL TEST OPERATIONS
2.91162467003 TIME SPENT EXECUTING TEST OPERATIONS
0.546483755112 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0065290927887 TIME SPENT CHECKING PROPERTIES
2.91815376282 TOTAL TIME SPENT RUNNING SUT
0.178904294968 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
