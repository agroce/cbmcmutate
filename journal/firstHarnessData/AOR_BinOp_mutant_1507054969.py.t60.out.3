Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.47960.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for -: 'str' and 'str'",), <traceback object at 0x102ac6200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22121, in act443
    self.p_os[0].remove(self.p_path[0])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3569, in remove
    self.filesystem.RemoveFile(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2485, in RemoveFile
    self.RemoveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2032, in RemoveObject
    (dirname, basename) = self.SplitPath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1390, in SplitPath
    return ((drive - sep.join(path_components)), basename)
Original test has 77 steps

SAVING TEST AS failure.47960.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "f"                                                         # STEP 0
ACTION: component0 = "f" 
component0 = None : <type 'NoneType'>
=> component0 = 'f' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 1
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 2
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'k'                                                              # STEP 3
ACTION: str0 += 'k' 
str0 = '' : <type 'str'>
=> str0 = 'k' : <type 'str'>
==================================================
component4 = "phi"                                                       # STEP 4
ACTION: component4 = "phi" 
component4 = None : <type 'NoneType'>
=> component4 = 'phi' : <type 'str'>
==================================================
str0 += 'v'                                                              # STEP 5
ACTION: str0 += 'v' 
str0 = 'k' : <type 'str'>
=> str0 = 'kv' : <type 'str'>
==================================================
str0 += 'z'                                                              # STEP 6
ACTION: str0 += 'z' 
str0 = 'kv' : <type 'str'>
=> str0 = 'kvz' : <type 'str'>
==================================================
str0 += 't'                                                              # STEP 7
ACTION: str0 += 't' 
str0 = 'kvz' : <type 'str'>
=> str0 = 'kvzt' : <type 'str'>
==================================================
component1 = "lambda"                                                    # STEP 8
ACTION: component1 = "lambda" 
component1 = None : <type 'NoneType'>
=> component1 = 'lambda' : <type 'str'>
==================================================
component2 = "a"                                                         # STEP 9
ACTION: component2 = "a" 
component2 = None : <type 'NoneType'>
=> component2 = 'a' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 10
ACTION: str0 += 'q' 
str0 = 'kvzt' : <type 'str'>
=> str0 = 'kvztq' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 11
ACTION: str0 += 'z' 
str0 = 'kvztq' : <type 'str'>
=> str0 = 'kvztqz' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 12
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 13
ACTION: str0 += 'p' 
str0 = 'kvztqz' : <type 'str'>
=> str0 = 'kvztqzp' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 14
ACTION: str0 += 's' 
str0 = 'kvztqzp' : <type 'str'>
=> str0 = 'kvztqzps' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 15
ACTION: str0 += 'g' 
str0 = 'kvztqzps' : <type 'str'>
=> str0 = 'kvztqzpsg' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 16
ACTION: path1 += "/" + component3 
component3 = 'a' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 17
ACTION: str0 += 'v' 
str0 = 'kvztqzpsg' : <type 'str'>
=> str0 = 'kvztqzpsgv' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 18
ACTION: str0 += 'g' 
str0 = 'kvztqzpsgv' : <type 'str'>
=> str0 = 'kvztqzpsgvg' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 19
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 20
ACTION: path1 += "/" + component1 
component1 = 'lambda' : <type 'str'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a/lambda' : <type 'str'>
==================================================
component3 = "h"                                                        # STEP 21
ACTION: component3 = "h" 
component3 = 'a' : <type 'str'>
=> component3 = 'h' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 22
ACTION: str0 += 'r' 
str0 = 'kvztqzpsgvg' : <type 'str'>
=> str0 = 'kvztqzpsgvgr' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 23
ACTION: str0 += 'g' 
str0 = 'kvztqzpsgvgr' : <type 'str'>
=> str0 = 'kvztqzpsgvgrg' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 24
ACTION: str0 += 'q' 
str0 = 'kvztqzpsgvgrg' : <type 'str'>
=> str0 = 'kvztqzpsgvgrgq' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 25
ACTION: str0 += 'z' 
str0 = 'kvztqzpsgvgrgq' : <type 'str'>
=> str0 = 'kvztqzpsgvgrgqz' : <type 'str'>
==================================================
component1 = "delta"                                                    # STEP 26
ACTION: component1 = "delta" 
component1 = 'lambda' : <type 'str'>
=> component1 = 'delta' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 27
ACTION: path1 += "/" + component0 
component0 = 'f' : <type 'str'>
path1 = '/Volumes/ramdisk/test/a/lambda' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a/lambda/f' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 28
ACTION: str0 += 't' 
str0 = 'kvztqzpsgvgrgqz' : <type 'str'>
=> str0 = 'kvztqzpsgvgrgqzt' : <type 'str'>
==================================================
component0 = "b"                                                        # STEP 29
ACTION: component0 = "b" 
component0 = 'f' : <type 'str'>
=> component0 = 'b' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 30
ACTION: str0 += 'd' 
str0 = 'kvztqzpsgvgrgqzt' : <type 'str'>
=> str0 = 'kvztqzpsgvgrgqztd' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 31
ACTION: str0 += 't' 
str0 = 'kvztqzpsgvgrgqztd' : <type 'str'>
=> str0 = 'kvztqzpsgvgrgqztdt' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 32
ACTION: path0 += "/" + component0 
component0 = 'b' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 33
ACTION: str0 = "" 
str0 = 'kvztqzpsgvgrgqztdt' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 34
ACTION: path1 += "/" + component0 
component0 = 'b' : <type 'str'>
path1 = '/Volumes/ramdisk/test/a/lambda/f' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a/lambda/f/b' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 35
ACTION: str0 += 'q' 
str0 = '' : <type 'str'>
=> str0 = 'q' : <type 'str'>
==================================================
component0 = "beta"                                                     # STEP 36
ACTION: component0 = "beta" 
component0 = 'b' : <type 'str'>
=> component0 = 'beta' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 37
ACTION: path0 += "/" + component1 
component1 = 'delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/b/delta' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 38
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/a/lambda/f/b' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component1 = "delta"                                                    # STEP 39
ACTION: component1 = "delta" 
component1 = 'delta' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 40
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str0 += 'v'                                                             # STEP 41
ACTION: str0 += 'v' 
str0 = 'q' : <type 'str'>
=> str0 = 'qv' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 42
ACTION: path0 += "/" + component1 
component1 = 'delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/b/delta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/b/delta/delta' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 43
ACTION: str0 = "" 
str0 = 'qv' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 44
ACTION: str0 += 'q' 
str0 = '' : <type 'str'>
=> str0 = 'q' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 45
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 46
ACTION: str0 += 'p' 
str0 = 'q' : <type 'str'>
=> str0 = 'qp' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 47
ACTION: str0 += 'x' 
str0 = 'qp' : <type 'str'>
=> str0 = 'qpx' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 48
ACTION: path1 += "/" + component4 
component4 = 'phi' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 49
ACTION: str0 += 'j' 
str0 = 'qpx' : <type 'str'>
=> str0 = 'qpxj' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 50
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 51
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 52
ACTION: path1 += "/" + component4 
component4 = 'phi' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 53
ACTION: component4 = "beta" 
component4 = 'phi' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 54
ACTION: path2 += "/" + component1 
component1 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
component1 = "delta"                                                    # STEP 55
ACTION: component1 = "delta" 
component1 = 'delta' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 56
ACTION: str0 += 'z' 
str0 = 'qpxj' : <type 'str'>
=> str0 = 'qpxjz' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 57
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 58
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 59
ACTION: path1 += "/" + component0 
component0 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 60
ACTION: str0 += 'r' 
str0 = 'qpxjz' : <type 'str'>
=> str0 = 'qpxjzr' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 61
ACTION: str0 += 'k' 
str0 = 'qpxjzr' : <type 'str'>
=> str0 = 'qpxjzrk' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 62
ACTION: component0 = "omega" 
component0 = 'beta' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 63
ACTION: path1 += "/" + component0 
component0 = 'omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta/omega' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 64
ACTION: path3 += "/" + component0 
component0 = 'omega' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
component0 = "a"                                                        # STEP 65
ACTION: component0 = "a" 
component0 = 'omega' : <type 'str'>
=> component0 = 'a' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 66
ACTION: str0 += 'd' 
str0 = 'qpxjzrk' : <type 'str'>
=> str0 = 'qpxjzrkd' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 67
ACTION: str0 += 'p' 
str0 = 'qpxjzrkd' : <type 'str'>
=> str0 = 'qpxjzrkdp' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 68
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str0 += 'x'                                                             # STEP 69
ACTION: str0 += 'x' 
str0 = 'qpxjzrkdp' : <type 'str'>
=> str0 = 'qpxjzrkdpx' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 70
ACTION: path2 += "/" + component2 
component2 = 'a' : <type 'str'>
path2 = '/Volumes/ramdisk/test/delta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/delta/a' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 71
ACTION: path0 += "/" + component2 
component2 = 'a' : <type 'str'>
path0 = '/Volumes/ramdisk/test/b/delta/delta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/b/delta/delta/a' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 72
ACTION: path2 += "/" + component1 
component1 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/delta/a' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/delta/a/delta' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 73
ACTION: path0 += "/" + component2 
component2 = 'a' : <type 'str'>
path0 = '/Volumes/ramdisk/test/b/delta/delta/a' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/b/delta/delta/a/a' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 74
ACTION: path2 += "/" + component1 
component1 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/delta/a/delta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/delta/a/delta/delta' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 75
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102af6110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
os0.remove(path0)                                                       # STEP 76
ACTION: os0.remove(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102af6110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/b/delta/delta/a/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unsupported operand type(s) for -: 'str' and 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for -: 'str' and 'str'",), <traceback object at 0x1030f9680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22121, in act443
    self.p_os[0].remove(self.p_path[0])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3569, in remove
    self.filesystem.RemoveFile(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2485, in RemoveFile
    self.RemoveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2032, in RemoveObject
    (dirname, basename) = self.SplitPath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1390, in SplitPath
    return ((drive - sep.join(path_components)), basename)
STOPPING TESTING DUE TO FAILED TEST
0.0383639335632 TOTAL RUNTIME
1 EXECUTED
77 TOTAL TEST OPERATIONS
0.00231790542603 TIME SPENT EXECUTING TEST OPERATIONS
0.00787615776062 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.7670135498e-05 TIME SPENT CHECKING PROPERTIES
0.00235557556152 TOTAL TIME SPENT RUNNING SUT
0.00423908233643 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
