Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.55001.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103117248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 26843, in act510
    assert (type(raised) == type(refRaised))
Original test has 34 steps

SAVING TEST AS failure.55001.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "h"                                                         # STEP 0
ACTION: component4 = "h" 
component4 = None : <type 'NoneType'>
=> component4 = 'h' : <type 'str'>
==================================================
component3 = "c"                                                         # STEP 1
ACTION: component3 = "c" 
component3 = None : <type 'NoneType'>
=> component3 = 'c' : <type 'str'>
==================================================
component2 = "beta"                                                      # STEP 2
ACTION: component2 = "beta" 
component2 = None : <type 'NoneType'>
=> component2 = 'beta' : <type 'str'>
==================================================
component0 = "lambda"                                                    # STEP 3
ACTION: component0 = "lambda" 
component0 = None : <type 'NoneType'>
=> component0 = 'lambda' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 4
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'b'                                                              # STEP 5
ACTION: str1 += 'b' 
str1 = '' : <type 'str'>
=> str1 = 'b' : <type 'str'>
==================================================
component1 = "phi"                                                       # STEP 6
ACTION: component1 = "phi" 
component1 = None : <type 'NoneType'>
=> component1 = 'phi' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 7
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'q'                                                              # STEP 8
ACTION: str4 += 'q' 
str4 = '' : <type 'str'>
=> str4 = 'q' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 9
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 10
ACTION: str4 += 'w' 
str4 = 'q' : <type 'str'>
=> str4 = 'qw' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 11
ACTION: str1 += 'r' 
str1 = 'b' : <type 'str'>
=> str1 = 'br' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 12
ACTION: str1 += 'g' 
str1 = 'br' : <type 'str'>
=> str1 = 'brg' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 13
ACTION: str1 += 'n' 
str1 = 'brg' : <type 'str'>
=> str1 = 'brgn' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 14
ACTION: str1 += 'c' 
str1 = 'brgn' : <type 'str'>
=> str1 = 'brgnc' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 15
ACTION: str4 += 'm' 
str4 = 'qw' : <type 'str'>
=> str4 = 'qwm' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 16
ACTION: str4 += 'm' 
str4 = 'qwm' : <type 'str'>
=> str4 = 'qwmm' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 17
ACTION: path2 += "/" + component1 
component1 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 18
ACTION: str4 += 'm' 
str4 = 'qwmm' : <type 'str'>
=> str4 = 'qwmmm' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 19
ACTION: str4 += 'j' 
str4 = 'qwmmm' : <type 'str'>
=> str4 = 'qwmmmj' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 20
ACTION: str1 += 'i' 
str1 = 'brgnc' : <type 'str'>
=> str1 = 'brgnci' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 21
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path2 += "/" + component4                                               # STEP 22
ACTION: path2 += "/" + component4 
component4 = 'h' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/h' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 23
ACTION: str4 += 'y' 
str4 = 'qwmmmj' : <type 'str'>
=> str4 = 'qwmmmjy' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 24
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str2 = ""                                                               # STEP 25
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 26
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103205190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str2 += 'l'                                                             # STEP 27
ACTION: str2 += 'l' 
str2 = '' : <type 'str'>
=> str2 = 'l' : <type 'str'>
==================================================
result = os0.path.abspath(path2)                                        # STEP 28
ACTION: result = os0.path.abspath(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103205190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/phi/h' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path2) 
==================================================
bytes2 += 1                                                             # STEP 29
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str1 += 'b'                                                             # STEP 30
ACTION: str1 += 'b' 
str1 = 'brgnci' : <type 'str'>
=> str1 = 'brgncib' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 31
ACTION: str2 += 'w' 
str2 = 'l' : <type 'str'>
=> str2 = 'lw' : <type 'str'>
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 32
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103205190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/phi/h' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/phi/h'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/phi/h'
==================================================
stat4 = os0.lstat(path2)                                                # STEP 33
ACTION: stat4 = os0.lstat(path2) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103205190> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/phi/h' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1031157d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/phi/h'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10412e3b0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 26843, in act510
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0269038677216 TOTAL RUNTIME
1 EXECUTED
34 TOTAL TEST OPERATIONS
0.00210165977478 TIME SPENT EXECUTING TEST OPERATIONS
0.00195479393005 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.69277191162e-05 TIME SPENT CHECKING PROPERTIES
0.0021185874939 TOTAL TIME SPENT RUNNING SUT
0.00359892845154 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
