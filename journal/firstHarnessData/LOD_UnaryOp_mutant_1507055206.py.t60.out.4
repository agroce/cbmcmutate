Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62024.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10211d5a8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 10452, in act278
    assert (type(raised) == type(refRaised))
Original test has 152 steps

SAVING TEST AS failure.62024.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "omega"                                                     # STEP 0
ACTION: component0 = "omega" 
component0 = None : <type 'NoneType'>
=> component0 = 'omega' : <type 'str'>
==================================================
component4 = "c"                                                         # STEP 1
ACTION: component4 = "c" 
component4 = None : <type 'NoneType'>
=> component4 = 'c' : <type 'str'>
==================================================
component1 = "e"                                                         # STEP 2
ACTION: component1 = "e" 
component1 = None : <type 'NoneType'>
=> component1 = 'e' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 3
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 's'                                                              # STEP 4
ACTION: str3 += 's' 
str3 = '' : <type 'str'>
=> str3 = 's' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 5
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'z'                                                              # STEP 6
ACTION: str1 += 'z' 
str1 = '' : <type 'str'>
=> str1 = 'z' : <type 'str'>
==================================================
str3 += 'd'                                                              # STEP 7
ACTION: str3 += 'd' 
str3 = 's' : <type 'str'>
=> str3 = 'sd' : <type 'str'>
==================================================
str3 += 'd'                                                              # STEP 8
ACTION: str3 += 'd' 
str3 = 'sd' : <type 'str'>
=> str3 = 'sdd' : <type 'str'>
==================================================
str1 += 'd'                                                              # STEP 9
ACTION: str1 += 'd' 
str1 = 'z' : <type 'str'>
=> str1 = 'zd' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 10
ACTION: str3 += 'd' 
str3 = 'sdd' : <type 'str'>
=> str3 = 'sddd' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 11
ACTION: str1 += 'g' 
str1 = 'zd' : <type 'str'>
=> str1 = 'zdg' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 12
ACTION: str1 += 'j' 
str1 = 'zdg' : <type 'str'>
=> str1 = 'zdgj' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 13
ACTION: str3 += 'd' 
str3 = 'sddd' : <type 'str'>
=> str3 = 'sdddd' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 14
ACTION: str3 += " " 
str3 = 'sdddd' : <type 'str'>
=> str3 = 'sdddd ' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 15
ACTION: str1 += 'z' 
str1 = 'zdgj' : <type 'str'>
=> str1 = 'zdgjz' : <type 'str'>
==================================================
component3 = "epsilon"                                                  # STEP 16
ACTION: component3 = "epsilon" 
component3 = None : <type 'NoneType'>
=> component3 = 'epsilon' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 17
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
bytes4 += 1                                                             # STEP 18
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str3 += 'n'                                                             # STEP 19
ACTION: str3 += 'n' 
str3 = 'sdddd ' : <type 'str'>
=> str3 = 'sdddd n' : <type 'str'>
==================================================
component2 = "b"                                                        # STEP 20
ACTION: component2 = "b" 
component2 = None : <type 'NoneType'>
=> component2 = 'b' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 21
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 22
ACTION: bytes4 = 0 
bytes4 = 1 : <type 'int'>
=> bytes4 = 0 : <type 'int'>
==================================================
str1 += 'c'                                                             # STEP 23
ACTION: str1 += 'c' 
str1 = 'zdgjz' : <type 'str'>
=> str1 = 'zdgjzc' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 24
ACTION: str3 += 'e' 
str3 = 'sdddd n' : <type 'str'>
=> str3 = 'sdddd ne' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 25
ACTION: str1 += 'j' 
str1 = 'zdgjzc' : <type 'str'>
=> str1 = 'zdgjzcj' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 26
ACTION: str3 += 'y' 
str3 = 'sdddd ne' : <type 'str'>
=> str3 = 'sdddd ney' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 27
ACTION: str3 += 'x' 
str3 = 'sdddd ney' : <type 'str'>
=> str3 = 'sdddd neyx' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 28
ACTION: str3 += 'd' 
str3 = 'sdddd neyx' : <type 'str'>
=> str3 = 'sdddd neyxd' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 29
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 30
ACTION: path1 += "/" + component2 
component2 = 'b' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 31
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 32
ACTION: str3 += 'f' 
str3 = 'sdddd neyxd' : <type 'str'>
=> str3 = 'sdddd neyxdf' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 33
ACTION: str3 += 'z' 
str3 = 'sdddd neyxdf' : <type 'str'>
=> str3 = 'sdddd neyxdfz' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 34
ACTION: str1 += 'l' 
str1 = 'zdgjzcj' : <type 'str'>
=> str1 = 'zdgjzcjl' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 35
ACTION: str3 += 'q' 
str3 = 'sdddd neyxdfz' : <type 'str'>
=> str3 = 'sdddd neyxdfzq' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 36
ACTION: str1 += 'a' 
str1 = 'zdgjzcjl' : <type 'str'>
=> str1 = 'zdgjzcjla' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 37
ACTION: str2 += 'x' 
str2 = '' : <type 'str'>
=> str2 = 'x' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 38
ACTION: str1 += 'i' 
str1 = 'zdgjzcjla' : <type 'str'>
=> str1 = 'zdgjzcjlai' : <type 'str'>
==================================================
component2 = "omega"                                                    # STEP 39
ACTION: component2 = "omega" 
component2 = 'b' : <type 'str'>
=> component2 = 'omega' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 40
ACTION: path1 += "/" + component1 
component1 = 'e' : <type 'str'>
path1 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/b/e' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 41
ACTION: str2 += 'n' 
str2 = 'x' : <type 'str'>
=> str2 = 'xn' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 42
ACTION: str3 += 'h' 
str3 = 'sdddd neyxdfzq' : <type 'str'>
=> str3 = 'sdddd neyxdfzqh' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 43
ACTION: str3 += 'y' 
str3 = 'sdddd neyxdfzqh' : <type 'str'>
=> str3 = 'sdddd neyxdfzqhy' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 44
ACTION: str3 += 'r' 
str3 = 'sdddd neyxdfzqhy' : <type 'str'>
=> str3 = 'sdddd neyxdfzqhyr' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 45
ACTION: str2 += 'z' 
str2 = 'xn' : <type 'str'>
=> str2 = 'xnz' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 46
ACTION: str3 += " " 
str3 = 'sdddd neyxdfzqhyr' : <type 'str'>
=> str3 = 'sdddd neyxdfzqhyr ' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 47
ACTION: str3 += 'u' 
str3 = 'sdddd neyxdfzqhyr ' : <type 'str'>
=> str3 = 'sdddd neyxdfzqhyr u' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 48
ACTION: str3 += 'g' 
str3 = 'sdddd neyxdfzqhyr u' : <type 'str'>
=> str3 = 'sdddd neyxdfzqhyr ug' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 49
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 50
ACTION: str4 += 'f' 
str4 = '' : <type 'str'>
=> str4 = 'f' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 51
ACTION: path1 += "/" + component3 
component3 = 'epsilon' : <type 'str'>
path1 = '/Volumes/ramdisk/test/b/e' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/b/e/epsilon' : <type 'str'>
==================================================
component1 = "d"                                                        # STEP 52
ACTION: component1 = "d" 
component1 = 'e' : <type 'str'>
=> component1 = 'd' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 53
ACTION: str3 += 'u' 
str3 = 'sdddd neyxdfzqhyr ug' : <type 'str'>
=> str3 = 'sdddd neyxdfzqhyr ugu' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 54
ACTION: str1 += 'z' 
str1 = 'zdgjzcjlai' : <type 'str'>
=> str1 = 'zdgjzcjlaiz' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 55
ACTION: str1 += 'x' 
str1 = 'zdgjzcjlaiz' : <type 'str'>
=> str1 = 'zdgjzcjlaizx' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 56
ACTION: str1 += 'd' 
str1 = 'zdgjzcjlaizx' : <type 'str'>
=> str1 = 'zdgjzcjlaizxd' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 57
ACTION: path2 += "/" + component4 
component4 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 58
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str1 += 'e'                                                             # STEP 59
ACTION: str1 += 'e' 
str1 = 'zdgjzcjlaizxd' : <type 'str'>
=> str1 = 'zdgjzcjlaizxde' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 60
ACTION: str3 += " " 
str3 = 'sdddd neyxdfzqhyr ugu' : <type 'str'>
=> str3 = 'sdddd neyxdfzqhyr ugu ' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 61
ACTION: str3 += 'b' 
str3 = 'sdddd neyxdfzqhyr ugu ' : <type 'str'>
=> str3 = 'sdddd neyxdfzqhyr ugu b' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 62
ACTION: str3 += 'y' 
str3 = 'sdddd neyxdfzqhyr ugu b' : <type 'str'>
=> str3 = 'sdddd neyxdfzqhyr ugu by' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 63
ACTION: str2 += 'y' 
str2 = 'xnz' : <type 'str'>
=> str2 = 'xnzy' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 64
ACTION: str2 += " " 
str2 = 'xnzy' : <type 'str'>
=> str2 = 'xnzy ' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 65
ACTION: str3 += 'q' 
str3 = 'sdddd neyxdfzqhyr ugu by' : <type 'str'>
=> str3 = 'sdddd neyxdfzqhyr ugu byq' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 66
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str4 += 't'                                                             # STEP 67
ACTION: str4 += 't' 
str4 = 'f' : <type 'str'>
=> str4 = 'ft' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 68
ACTION: str1 += 'h' 
str1 = 'zdgjzcjlaizxde' : <type 'str'>
=> str1 = 'zdgjzcjlaizxdeh' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 69
ACTION: str2 += 'i' 
str2 = 'xnzy ' : <type 'str'>
=> str2 = 'xnzy i' : <type 'str'>
==================================================
component3 = "lambda"                                                   # STEP 70
ACTION: component3 = "lambda" 
component3 = 'epsilon' : <type 'str'>
=> component3 = 'lambda' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 71
ACTION: str2 += 'm' 
str2 = 'xnzy i' : <type 'str'>
=> str2 = 'xnzy im' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 72
ACTION: str3 += 's' 
str3 = 'sdddd neyxdfzqhyr ugu byq' : <type 'str'>
=> str3 = 'sdddd neyxdfzqhyr ugu byqs' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 73
ACTION: str4 += 'a' 
str4 = 'ft' : <type 'str'>
=> str4 = 'fta' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 74
ACTION: str3 += 'u' 
str3 = 'sdddd neyxdfzqhyr ugu byqs' : <type 'str'>
=> str3 = 'sdddd neyxdfzqhyr ugu byqsu' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 75
ACTION: str3 += 'e' 
str3 = 'sdddd neyxdfzqhyr ugu byqsu' : <type 'str'>
=> str3 = 'sdddd neyxdfzqhyr ugu byqsue' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 76
ACTION: str3 = "" 
str3 = 'sdddd neyxdfzqhyr ugu byqsue' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 77
ACTION: str1 += 'z' 
str1 = 'zdgjzcjlaizxdeh' : <type 'str'>
=> str1 = 'zdgjzcjlaizxdehz' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 78
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 += 'v'                                                             # STEP 79
ACTION: str3 += 'v' 
str3 = '' : <type 'str'>
=> str3 = 'v' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 80
ACTION: str1 += 'w' 
str1 = 'zdgjzcjlaizxdehz' : <type 'str'>
=> str1 = 'zdgjzcjlaizxdehzw' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 81
ACTION: str3 += 'q' 
str3 = 'v' : <type 'str'>
=> str3 = 'vq' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 82
ACTION: str3 += 'a' 
str3 = 'vq' : <type 'str'>
=> str3 = 'vqa' : <type 'str'>
==================================================
component4 = "h"                                                        # STEP 83
ACTION: component4 = "h" 
component4 = 'c' : <type 'str'>
=> component4 = 'h' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 84
ACTION: str1 += 'v' 
str1 = 'zdgjzcjlaizxdehzw' : <type 'str'>
=> str1 = 'zdgjzcjlaizxdehzwv' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 85
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str3 += 'u'                                                             # STEP 86
ACTION: str3 += 'u' 
str3 = 'vqa' : <type 'str'>
=> str3 = 'vqau' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 87
ACTION: str2 += 'g' 
str2 = 'xnzy im' : <type 'str'>
=> str2 = 'xnzy img' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 88
ACTION: str4 += 'v' 
str4 = 'fta' : <type 'str'>
=> str4 = 'ftav' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 89
ACTION: str1 += 'r' 
str1 = 'zdgjzcjlaizxdehzwv' : <type 'str'>
=> str1 = 'zdgjzcjlaizxdehzwvr' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 90
ACTION: str3 += 'e' 
str3 = 'vqau' : <type 'str'>
=> str3 = 'vqaue' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 91
ACTION: str1 = "" 
str1 = 'zdgjzcjlaizxdehzwvr' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 92
ACTION: str1 += 'n' 
str1 = '' : <type 'str'>
=> str1 = 'n' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 93
ACTION: str1 += 'e' 
str1 = 'n' : <type 'str'>
=> str1 = 'ne' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 94
ACTION: str4 += 'l' 
str4 = 'ftav' : <type 'str'>
=> str4 = 'ftavl' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 95
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 96
ACTION: str2 += 'c' 
str2 = 'xnzy img' : <type 'str'>
=> str2 = 'xnzy imgc' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 97
ACTION: path0 += "/" + component0 
component0 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 98
ACTION: str3 += 'r' 
str3 = 'vqaue' : <type 'str'>
=> str3 = 'vqauer' : <type 'str'>
==================================================
component0 = "gamma"                                                    # STEP 99
ACTION: component0 = "gamma" 
component0 = 'omega' : <type 'str'>
=> component0 = 'gamma' : <type 'str'>
==================================================
path2 += "/" + component1                                              # STEP 100
ACTION: path2 += "/" + component1 
component1 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/d' : <type 'str'>
==================================================
str1 += 'q'                                                            # STEP 101
ACTION: str1 += 'q' 
str1 = 'ne' : <type 'str'>
=> str1 = 'neq' : <type 'str'>
==================================================
path0 += "/" + component2                                              # STEP 102
ACTION: path0 += "/" + component2 
component2 = 'omega' : <type 'str'>
path0 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/omega/omega' : <type 'str'>
==================================================
path1 += "/" + component0                                              # STEP 103
ACTION: path1 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path1 = '/Volumes/ramdisk/test/b/e/epsilon' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/b/e/epsilon/gamma' : <type 'str'>
==================================================
str2 += 'j'                                                            # STEP 104
ACTION: str2 += 'j' 
str2 = 'xnzy imgc' : <type 'str'>
=> str2 = 'xnzy imgcj' : <type 'str'>
==================================================
str3 += 'w'                                                            # STEP 105
ACTION: str3 += 'w' 
str3 = 'vqauer' : <type 'str'>
=> str3 = 'vqauerw' : <type 'str'>
==================================================
component1 = "b"                                                       # STEP 106
ACTION: component1 = "b" 
component1 = 'd' : <type 'str'>
=> component1 = 'b' : <type 'str'>
==================================================
component0 = "phi"                                                     # STEP 107
ACTION: component0 = "phi" 
component0 = 'gamma' : <type 'str'>
=> component0 = 'phi' : <type 'str'>
==================================================
str4 += 'h'                                                            # STEP 108
ACTION: str4 += 'h' 
str4 = 'ftavl' : <type 'str'>
=> str4 = 'ftavlh' : <type 'str'>
==================================================
component2 = "epsilon"                                                 # STEP 109
ACTION: component2 = "epsilon" 
component2 = 'omega' : <type 'str'>
=> component2 = 'epsilon' : <type 'str'>
==================================================
path0 += "/" + component1                                              # STEP 110
ACTION: path0 += "/" + component1 
component1 = 'b' : <type 'str'>
path0 = '/Volumes/ramdisk/test/omega/omega' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/omega/omega/b' : <type 'str'>
==================================================
str3 += 't'                                                            # STEP 111
ACTION: str3 += 't' 
str3 = 'vqauerw' : <type 'str'>
=> str3 = 'vqauerwt' : <type 'str'>
==================================================
str1 += 'u'                                                            # STEP 112
ACTION: str1 += 'u' 
str1 = 'neq' : <type 'str'>
=> str1 = 'nequ' : <type 'str'>
==================================================
str2 += 'o'                                                            # STEP 113
ACTION: str2 += 'o' 
str2 = 'xnzy imgcj' : <type 'str'>
=> str2 = 'xnzy imgcjo' : <type 'str'>
==================================================
str2 += 'u'                                                            # STEP 114
ACTION: str2 += 'u' 
str2 = 'xnzy imgcjo' : <type 'str'>
=> str2 = 'xnzy imgcjou' : <type 'str'>
==================================================
str1 += 'z'                                                            # STEP 115
ACTION: str1 += 'z' 
str1 = 'nequ' : <type 'str'>
=> str1 = 'nequz' : <type 'str'>
==================================================
str2 += 'a'                                                            # STEP 116
ACTION: str2 += 'a' 
str2 = 'xnzy imgcjou' : <type 'str'>
=> str2 = 'xnzy imgcjoua' : <type 'str'>
==================================================
str3 += 's'                                                            # STEP 117
ACTION: str3 += 's' 
str3 = 'vqauerwt' : <type 'str'>
=> str3 = 'vqauerwts' : <type 'str'>
==================================================
str3 += 'g'                                                            # STEP 118
ACTION: str3 += 'g' 
str3 = 'vqauerwts' : <type 'str'>
=> str3 = 'vqauerwtsg' : <type 'str'>
==================================================
str3 += 'q'                                                            # STEP 119
ACTION: str3 += 'q' 
str3 = 'vqauerwtsg' : <type 'str'>
=> str3 = 'vqauerwtsgq' : <type 'str'>
==================================================
str2 += 'k'                                                            # STEP 120
ACTION: str2 += 'k' 
str2 = 'xnzy imgcjoua' : <type 'str'>
=> str2 = 'xnzy imgcjouak' : <type 'str'>
==================================================
str4 += 'b'                                                            # STEP 121
ACTION: str4 += 'b' 
str4 = 'ftavlh' : <type 'str'>
=> str4 = 'ftavlhb' : <type 'str'>
==================================================
path2 += "/" + component0                                              # STEP 122
ACTION: path2 += "/" + component0 
component0 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c/d' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/d/phi' : <type 'str'>
==================================================
str4 += 'f'                                                            # STEP 123
ACTION: str4 += 'f' 
str4 = 'ftavlhb' : <type 'str'>
=> str4 = 'ftavlhbf' : <type 'str'>
==================================================
bytes3 += 1                                                            # STEP 124
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str3 += 'r'                                                            # STEP 125
ACTION: str3 += 'r' 
str3 = 'vqauerwtsgq' : <type 'str'>
=> str3 = 'vqauerwtsgqr' : <type 'str'>
==================================================
str4 += 'k'                                                            # STEP 126
ACTION: str4 += 'k' 
str4 = 'ftavlhbf' : <type 'str'>
=> str4 = 'ftavlhbfk' : <type 'str'>
==================================================
path1 += "/" + component4                                              # STEP 127
ACTION: path1 += "/" + component4 
component4 = 'h' : <type 'str'>
path1 = '/Volumes/ramdisk/test/b/e/epsilon/gamma' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/b/e/epsilon/gamma/h' : <type 'str'>
==================================================
component4 = "delta"                                                   # STEP 128
ACTION: component4 = "delta" 
component4 = 'h' : <type 'str'>
=> component4 = 'delta' : <type 'str'>
==================================================
component1 = "h"                                                       # STEP 129
ACTION: component1 = "h" 
component1 = 'b' : <type 'str'>
=> component1 = 'h' : <type 'str'>
==================================================
path1 += "/" + component0                                              # STEP 130
ACTION: path1 += "/" + component0 
component0 = 'phi' : <type 'str'>
path1 = '/Volumes/ramdisk/test/b/e/epsilon/gamma/h' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/b/e/epsilon/gamma/h/phi' : <type 'str'>
==================================================
path0 += "/" + component2                                              # STEP 131
ACTION: path0 += "/" + component2 
component2 = 'epsilon' : <type 'str'>
path0 = '/Volumes/ramdisk/test/omega/omega/b' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/omega/omega/b/epsilon' : <type 'str'>
==================================================
component0 = "gamma"                                                   # STEP 132
ACTION: component0 = "gamma" 
component0 = 'phi' : <type 'str'>
=> component0 = 'gamma' : <type 'str'>
==================================================
component2 = "f"                                                       # STEP 133
ACTION: component2 = "f" 
component2 = 'epsilon' : <type 'str'>
=> component2 = 'f' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                        # STEP 134
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'b'                                                            # STEP 135
ACTION: str4 += 'b' 
str4 = 'ftavlhbfk' : <type 'str'>
=> str4 = 'ftavlhbfkb' : <type 'str'>
==================================================
str1 += 'a'                                                            # STEP 136
ACTION: str1 += 'a' 
str1 = 'nequz' : <type 'str'>
=> str1 = 'nequza' : <type 'str'>
==================================================
str1 += 'r'                                                            # STEP 137
ACTION: str1 += 'r' 
str1 = 'nequza' : <type 'str'>
=> str1 = 'nequzar' : <type 'str'>
==================================================
str2 += 'i'                                                            # STEP 138
ACTION: str2 += 'i' 
str2 = 'xnzy imgcjouak' : <type 'str'>
=> str2 = 'xnzy imgcjouaki' : <type 'str'>
==================================================
str4 += 'g'                                                            # STEP 139
ACTION: str4 += 'g' 
str4 = 'ftavlhbfkb' : <type 'str'>
=> str4 = 'ftavlhbfkbg' : <type 'str'>
==================================================
str3 += 'r'                                                            # STEP 140
ACTION: str3 += 'r' 
str3 = 'vqauerwtsgqr' : <type 'str'>
=> str3 = 'vqauerwtsgqrr' : <type 'str'>
==================================================
bytes3 = 0                                                             # STEP 141
ACTION: bytes3 = 0 
bytes3 = 1 : <type 'int'>
=> bytes3 = 0 : <type 'int'>
==================================================
str2 += 'y'                                                            # STEP 142
ACTION: str2 += 'y' 
str2 = 'xnzy imgcjouaki' : <type 'str'>
=> str2 = 'xnzy imgcjouakiy' : <type 'str'>
==================================================
str1 += 'n'                                                            # STEP 143
ACTION: str1 += 'n' 
str1 = 'nequzar' : <type 'str'>
=> str1 = 'nequzarn' : <type 'str'>
==================================================
str2 += 'n'                                                            # STEP 144
ACTION: str2 += 'n' 
str2 = 'xnzy imgcjouakiy' : <type 'str'>
=> str2 = 'xnzy imgcjouakiyn' : <type 'str'>
==================================================
str1 += 'e'                                                            # STEP 145
ACTION: str1 += 'e' 
str1 = 'nequzarn' : <type 'str'>
=> str1 = 'nequzarne' : <type 'str'>
==================================================
bytes4 += 1                                                            # STEP 146
ACTION: bytes4 += 1 
bytes4 = 1 : <type 'int'>
=> bytes4 = 2 : <type 'int'>
==================================================
str3 += 'w'                                                            # STEP 147
ACTION: str3 += 'w' 
str3 = 'vqauerwtsgqrr' : <type 'str'>
=> str3 = 'vqauerwtsgqrrw' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 148
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020c3c50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
path1 += "/" + component1                                              # STEP 149
ACTION: path1 += "/" + component1 
component1 = 'h' : <type 'str'>
path1 = '/Volumes/ramdisk/test/b/e/epsilon/gamma/h/phi' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/b/e/epsilon/gamma/h/phi/h' : <type 'str'>
==================================================
result = os0.path.lexists(path3)                                       # STEP 150
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020c3c50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
os0.symlink(path1,path2)                                               # STEP 151
ACTION: os0.symlink(path1,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1020c3c50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/b/e/epsilon/gamma/h/phi/h' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c/d/phi' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path1,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1022624d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 10452, in act278
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0391719341278 TOTAL RUNTIME
1 EXECUTED
152 TOTAL TEST OPERATIONS
0.00352835655212 TIME SPENT EXECUTING TEST OPERATIONS
0.00573921203613 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
6.93798065186e-05 TIME SPENT CHECKING PROPERTIES
0.00359773635864 TOTAL TIME SPENT RUNNING SUT
0.00455904006958 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
