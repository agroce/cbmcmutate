Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.60227.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('endswith first arg must be str, unicode, or tuple, not NoneType',), <traceback object at 0x102f66908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9451, in act262
    self.p_os[0].mkdir(self.p_path[1])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3648, in mkdir
    self.filesystem.MakeDirectory(dir_name, mode)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2329, in MakeDirectory
    if self._EndsWithPathSeparator(dir_name):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1582, in _EndsWithPathSeparator
    return (file_path and (file_path.endswith(self._path_separator(file_path)) or ((self.alternative_path_separator is not None) or file_path.endswith(self._alternative_path_separator(file_path)))))
Original test has 115 steps

SAVING TEST AS failure.60227.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "delta"                                                     # STEP 0
ACTION: component4 = "delta" 
component4 = None : <type 'NoneType'>
=> component4 = 'delta' : <type 'str'>
==================================================
component1 = "g"                                                         # STEP 1
ACTION: component1 = "g" 
component1 = None : <type 'NoneType'>
=> component1 = 'g' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 2
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
component0 = "d"                                                         # STEP 3
ACTION: component0 = "d" 
component0 = None : <type 'NoneType'>
=> component0 = 'd' : <type 'str'>
==================================================
component3 = "g"                                                         # STEP 4
ACTION: component3 = "g" 
component3 = None : <type 'NoneType'>
=> component3 = 'g' : <type 'str'>
==================================================
str0 += 'g'                                                              # STEP 5
ACTION: str0 += 'g' 
str0 = '' : <type 'str'>
=> str0 = 'g' : <type 'str'>
==================================================
str0 += 'h'                                                              # STEP 6
ACTION: str0 += 'h' 
str0 = 'g' : <type 'str'>
=> str0 = 'gh' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 7
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 8
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str3 += 'd'                                                              # STEP 9
ACTION: str3 += 'd' 
str3 = '' : <type 'str'>
=> str3 = 'd' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 10
ACTION: str0 += " " 
str0 = 'gh' : <type 'str'>
=> str0 = 'gh ' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 11
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str0 += 'p'                                                             # STEP 12
ACTION: str0 += 'p' 
str0 = 'gh ' : <type 'str'>
=> str0 = 'gh p' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 13
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component2 = "delta"                                                    # STEP 14
ACTION: component2 = "delta" 
component2 = None : <type 'NoneType'>
=> component2 = 'delta' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 15
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str3 += 'u'                                                             # STEP 16
ACTION: str3 += 'u' 
str3 = 'd' : <type 'str'>
=> str3 = 'du' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 17
ACTION: str3 += 'o' 
str3 = 'du' : <type 'str'>
=> str3 = 'duo' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 18
ACTION: str3 += 'g' 
str3 = 'duo' : <type 'str'>
=> str3 = 'duog' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 19
ACTION: str0 += 'o' 
str0 = 'gh p' : <type 'str'>
=> str0 = 'gh po' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 20
ACTION: str0 += 'l' 
str0 = 'gh po' : <type 'str'>
=> str0 = 'gh pol' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 21
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'b'                                                             # STEP 22
ACTION: str3 += 'b' 
str3 = 'duog' : <type 'str'>
=> str3 = 'duogb' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 23
ACTION: str3 += 'i' 
str3 = 'duogb' : <type 'str'>
=> str3 = 'duogbi' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 24
ACTION: str0 += 'g' 
str0 = 'gh pol' : <type 'str'>
=> str0 = 'gh polg' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 25
ACTION: str3 += 'g' 
str3 = 'duogbi' : <type 'str'>
=> str3 = 'duogbig' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 26
ACTION: str3 += 'k' 
str3 = 'duogbig' : <type 'str'>
=> str3 = 'duogbigk' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 27
ACTION: str0 += 'x' 
str0 = 'gh polg' : <type 'str'>
=> str0 = 'gh polgx' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 28
ACTION: str3 += 'm' 
str3 = 'duogbigk' : <type 'str'>
=> str3 = 'duogbigkm' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 29
ACTION: str3 += 'o' 
str3 = 'duogbigkm' : <type 'str'>
=> str3 = 'duogbigkmo' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 30
ACTION: path1 += "/" + component2 
component2 = 'delta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
component2 = "omega"                                                    # STEP 31
ACTION: component2 = "omega" 
component2 = 'delta' : <type 'str'>
=> component2 = 'omega' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 32
ACTION: str0 += " " 
str0 = 'gh polgx' : <type 'str'>
=> str0 = 'gh polgx ' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 33
ACTION: str0 += 's' 
str0 = 'gh polgx ' : <type 'str'>
=> str0 = 'gh polgx s' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 34
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 35
ACTION: str0 += 'y' 
str0 = 'gh polgx s' : <type 'str'>
=> str0 = 'gh polgx sy' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 36
ACTION: str3 += 'p' 
str3 = 'duogbigkmo' : <type 'str'>
=> str3 = 'duogbigkmop' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 37
ACTION: path1 += "/" + component1 
component1 = 'g' : <type 'str'>
path1 = '/Volumes/ramdisk/test/delta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/delta/g' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 38
ACTION: str0 += 'k' 
str0 = 'gh polgx sy' : <type 'str'>
=> str0 = 'gh polgx syk' : <type 'str'>
==================================================
str0 += 'f'                                                             # STEP 39
ACTION: str0 += 'f' 
str0 = 'gh polgx syk' : <type 'str'>
=> str0 = 'gh polgx sykf' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 40
ACTION: str0 += 'e' 
str0 = 'gh polgx sykf' : <type 'str'>
=> str0 = 'gh polgx sykfe' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 41
ACTION: str3 += 'a' 
str3 = 'duogbigkmop' : <type 'str'>
=> str3 = 'duogbigkmopa' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 42
ACTION: str3 += 'z' 
str3 = 'duogbigkmopa' : <type 'str'>
=> str3 = 'duogbigkmopaz' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 43
ACTION: path0 += "/" + component3 
component3 = 'g' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 44
ACTION: str3 += " " 
str3 = 'duogbigkmopaz' : <type 'str'>
=> str3 = 'duogbigkmopaz ' : <type 'str'>
==================================================
component3 = "phi"                                                      # STEP 45
ACTION: component3 = "phi" 
component3 = 'g' : <type 'str'>
=> component3 = 'phi' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 46
ACTION: str3 = "" 
str3 = 'duogbigkmopaz ' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 47
ACTION: str0 += 'e' 
str0 = 'gh polgx sykfe' : <type 'str'>
=> str0 = 'gh polgx sykfee' : <type 'str'>
==================================================
component1 = "lambda"                                                   # STEP 48
ACTION: component1 = "lambda" 
component1 = 'g' : <type 'str'>
=> component1 = 'lambda' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 49
ACTION: str3 += 'x' 
str3 = '' : <type 'str'>
=> str3 = 'x' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 50
ACTION: str3 += 'o' 
str3 = 'x' : <type 'str'>
=> str3 = 'xo' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 51
ACTION: str3 += 'l' 
str3 = 'xo' : <type 'str'>
=> str3 = 'xol' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 52
ACTION: str3 += 'r' 
str3 = 'xol' : <type 'str'>
=> str3 = 'xolr' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 53
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str0 += 'n'                                                             # STEP 54
ACTION: str0 += 'n' 
str0 = 'gh polgx sykfee' : <type 'str'>
=> str0 = 'gh polgx sykfeen' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 55
ACTION: str3 += 'm' 
str3 = 'xolr' : <type 'str'>
=> str3 = 'xolrm' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 56
ACTION: str3 += 'k' 
str3 = 'xolrm' : <type 'str'>
=> str3 = 'xolrmk' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 57
ACTION: str0 += 'o' 
str0 = 'gh polgx sykfeen' : <type 'str'>
=> str0 = 'gh polgx sykfeeno' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 58
ACTION: str3 += 'q' 
str3 = 'xolrmk' : <type 'str'>
=> str3 = 'xolrmkq' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 59
ACTION: str3 += 'o' 
str3 = 'xolrmkq' : <type 'str'>
=> str3 = 'xolrmkqo' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 60
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str0 += 't'                                                             # STEP 61
ACTION: str0 += 't' 
str0 = 'gh polgx sykfeeno' : <type 'str'>
=> str0 = 'gh polgx sykfeenot' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 62
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/delta/g' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 63
ACTION: str3 += 'w' 
str3 = 'xolrmkqo' : <type 'str'>
=> str3 = 'xolrmkqow' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 64
ACTION: str3 += 'f' 
str3 = 'xolrmkqow' : <type 'str'>
=> str3 = 'xolrmkqowf' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 65
ACTION: str3 += 'a' 
str3 = 'xolrmkqowf' : <type 'str'>
=> str3 = 'xolrmkqowfa' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 66
ACTION: str3 += 'e' 
str3 = 'xolrmkqowfa' : <type 'str'>
=> str3 = 'xolrmkqowfae' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 67
ACTION: path0 += "/" + component1 
component1 = 'lambda' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/lambda' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 68
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
component1 = "c"                                                        # STEP 69
ACTION: component1 = "c" 
component1 = 'lambda' : <type 'str'>
=> component1 = 'c' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 70
ACTION: path0 += "/" + component4 
component4 = 'delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g/lambda' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/lambda/delta' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 71
ACTION: str3 += 'r' 
str3 = 'xolrmkqowfae' : <type 'str'>
=> str3 = 'xolrmkqowfaer' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 72
ACTION: str0 += 's' 
str0 = 'gh polgx sykfeenot' : <type 'str'>
=> str0 = 'gh polgx sykfeenots' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 73
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str0 += 'c'                                                             # STEP 74
ACTION: str0 += 'c' 
str0 = 'gh polgx sykfeenots' : <type 'str'>
=> str0 = 'gh polgx sykfeenotsc' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 75
ACTION: str0 += 'p' 
str0 = 'gh polgx sykfeenotsc' : <type 'str'>
=> str0 = 'gh polgx sykfeenotscp' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 76
ACTION: str0 += 'r' 
str0 = 'gh polgx sykfeenotscp' : <type 'str'>
=> str0 = 'gh polgx sykfeenotscpr' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 77
ACTION: path1 += "/" + component4 
component4 = 'delta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 78
ACTION: str0 += 'a' 
str0 = 'gh polgx sykfeenotscpr' : <type 'str'>
=> str0 = 'gh polgx sykfeenotscpra' : <type 'str'>
==================================================
bytes2 += 1                                                             # STEP 79
ACTION: bytes2 += 1 
bytes2 = 1 : <type 'int'>
=> bytes2 = 2 : <type 'int'>
==================================================
str3 += 'q'                                                             # STEP 80
ACTION: str3 += 'q' 
str3 = 'xolrmkqowfaer' : <type 'str'>
=> str3 = 'xolrmkqowfaerq' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 81
ACTION: str3 += 'y' 
str3 = 'xolrmkqowfaerq' : <type 'str'>
=> str3 = 'xolrmkqowfaerqy' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 82
ACTION: str0 += 'p' 
str0 = 'gh polgx sykfeenotscpra' : <type 'str'>
=> str0 = 'gh polgx sykfeenotscprap' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 83
ACTION: path0 += "/" + component1 
component1 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g/lambda/delta' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/lambda/delta/c' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 84
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 85
ACTION: str3 += 'g' 
str3 = 'xolrmkqowfaerqy' : <type 'str'>
=> str3 = 'xolrmkqowfaerqyg' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 86
ACTION: str3 += 'w' 
str3 = 'xolrmkqowfaerqyg' : <type 'str'>
=> str3 = 'xolrmkqowfaerqygw' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 87
ACTION: path1 += "/" + component0 
component0 = 'd' : <type 'str'>
path1 = '/Volumes/ramdisk/test/delta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/delta/d' : <type 'str'>
==================================================
component0 = "f"                                                        # STEP 88
ACTION: component0 = "f" 
component0 = 'd' : <type 'str'>
=> component0 = 'f' : <type 'str'>
==================================================
component4 = "alpha"                                                    # STEP 89
ACTION: component4 = "alpha" 
component4 = 'delta' : <type 'str'>
=> component4 = 'alpha' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 90
ACTION: str3 += 'm' 
str3 = 'xolrmkqowfaerqygw' : <type 'str'>
=> str3 = 'xolrmkqowfaerqygwm' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 91
ACTION: str3 += 'e' 
str3 = 'xolrmkqowfaerqygwm' : <type 'str'>
=> str3 = 'xolrmkqowfaerqygwme' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 92
ACTION: str3 += 'h' 
str3 = 'xolrmkqowfaerqygwme' : <type 'str'>
=> str3 = 'xolrmkqowfaerqygwmeh' : <type 'str'>
==================================================
component1 = "phi"                                                      # STEP 93
ACTION: component1 = "phi" 
component1 = 'c' : <type 'str'>
=> component1 = 'phi' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 94
ACTION: bytes4 += 1 
bytes4 = 1 : <type 'int'>
=> bytes4 = 2 : <type 'int'>
==================================================
str0 += 'z'                                                             # STEP 95
ACTION: str0 += 'z' 
str0 = 'gh polgx sykfeenotscprap' : <type 'str'>
=> str0 = 'gh polgx sykfeenotscprapz' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 96
ACTION: bytes0 += 1 
bytes0 = 1 : <type 'int'>
=> bytes0 = 2 : <type 'int'>
==================================================
path0 += "/" + component4                                               # STEP 97
ACTION: path0 += "/" + component4 
component4 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g/lambda/delta/c' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/lambda/delta/c/alpha' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 98
ACTION: str0 += " " 
str0 = 'gh polgx sykfeenotscprapz' : <type 'str'>
=> str0 = 'gh polgx sykfeenotscprapz ' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 99
ACTION: str0 += 'y' 
str0 = 'gh polgx sykfeenotscprapz ' : <type 'str'>
=> str0 = 'gh polgx sykfeenotscprapz y' : <type 'str'>
==================================================
path0 += "/" + component3                                              # STEP 100
ACTION: path0 += "/" + component3 
component3 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test/g/lambda/delta/c/alpha' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/g/lambda/delta/c/alpha/phi' : <type 'str'>
==================================================
bytes4 = 0                                                             # STEP 101
ACTION: bytes4 = 0 
bytes4 = 2 : <type 'int'>
=> bytes4 = 0 : <type 'int'>
==================================================
str0 += 'p'                                                            # STEP 102
ACTION: str0 += 'p' 
str0 = 'gh polgx sykfeenotscprapz y' : <type 'str'>
=> str0 = 'gh polgx sykfeenotscprapz yp' : <type 'str'>
==================================================
str0 += 'm'                                                            # STEP 103
ACTION: str0 += 'm' 
str0 = 'gh polgx sykfeenotscprapz yp' : <type 'str'>
=> str0 = 'gh polgx sykfeenotscprapz ypm' : <type 'str'>
==================================================
component4 = "beta"                                                    # STEP 104
ACTION: component4 = "beta" 
component4 = 'alpha' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
component3 = "phi"                                                     # STEP 105
ACTION: component3 = "phi" 
component3 = 'phi' : <type 'str'>
==================================================
str2 += 'w'                                                            # STEP 106
ACTION: str2 += 'w' 
str2 = '' : <type 'str'>
=> str2 = 'w' : <type 'str'>
==================================================
str2 += 'y'                                                            # STEP 107
ACTION: str2 += 'y' 
str2 = 'w' : <type 'str'>
=> str2 = 'wy' : <type 'str'>
==================================================
str0 += 'c'                                                            # STEP 108
ACTION: str0 += 'c' 
str0 = 'gh polgx sykfeenotscprapz ypm' : <type 'str'>
=> str0 = 'gh polgx sykfeenotscprapz ypmc' : <type 'str'>
==================================================
str3 += 'r'                                                            # STEP 109
ACTION: str3 += 'r' 
str3 = 'xolrmkqowfaerqygwmeh' : <type 'str'>
=> str3 = 'xolrmkqowfaerqygwmehr' : <type 'str'>
==================================================
str2 += 'i'                                                            # STEP 110
ACTION: str2 += 'i' 
str2 = 'wy' : <type 'str'>
=> str2 = 'wyi' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 111
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102ddc790> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL)                          # STEP 112
ACTION: fd0 = os0.open(path0, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102ddc790> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/g/lambda/delta/c/alpha/phi' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/g/lambda/delta/c/alpha'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path0, os.O_CREAT | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g/lambda/delta/c/alpha/phi'
==================================================
str0 += 'g'                                                            # STEP 113
ACTION: str0 += 'g' 
str0 = 'gh polgx sykfeenotscprapz ypmc' : <type 'str'>
=> str0 = 'gh polgx sykfeenotscprapz ypmcg' : <type 'str'>
==================================================
os0.mkdir(path1)                                                       # STEP 114
ACTION: os0.mkdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102ddc790> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/delta/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> endswith first arg must be str, unicode, or tuple, not NoneType
ERROR: (<type 'exceptions.TypeError'>, TypeError('endswith first arg must be str, unicode, or tuple, not NoneType',), <traceback object at 0x103498fc8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9451, in act262
    self.p_os[0].mkdir(self.p_path[1])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3648, in mkdir
    self.filesystem.MakeDirectory(dir_name, mode)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2329, in MakeDirectory
    if self._EndsWithPathSeparator(dir_name):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1582, in _EndsWithPathSeparator
    return (file_path and (file_path.endswith(self._path_separator(file_path)) or ((self.alternative_path_separator is not None) or file_path.endswith(self._alternative_path_separator(file_path)))))
STOPPING TESTING DUE TO FAILED TEST
0.0654199123383 TOTAL RUNTIME
2 EXECUTED
315 TOTAL TEST OPERATIONS
0.00761318206787 TIME SPENT EXECUTING TEST OPERATIONS
0.0196101665497 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000160217285156 TIME SPENT CHECKING PROPERTIES
0.00777339935303 TOTAL TIME SPENT RUNNING SUT
0.00742197036743 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
