Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.63215.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102ac8290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21333, in act432
    assert (type(raised) == type(refRaised))
Original test has 119 steps

SAVING TEST AS failure.63215.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "c"                                                         # STEP 0
ACTION: component0 = "c" 
component0 = None : <type 'NoneType'>
=> component0 = 'c' : <type 'str'>
==================================================
component4 = "h"                                                         # STEP 1
ACTION: component4 = "h" 
component4 = None : <type 'NoneType'>
=> component4 = 'h' : <type 'str'>
==================================================
component2 = "beta"                                                      # STEP 2
ACTION: component2 = "beta" 
component2 = None : <type 'NoneType'>
=> component2 = 'beta' : <type 'str'>
==================================================
component1 = "beta"                                                      # STEP 3
ACTION: component1 = "beta" 
component1 = None : <type 'NoneType'>
=> component1 = 'beta' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 4
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
component3 = "d"                                                         # STEP 5
ACTION: component3 = "d" 
component3 = None : <type 'NoneType'>
=> component3 = 'd' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 8
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
path1 += "/" + component1                                                # STEP 9
ACTION: path1 += "/" + component1 
component1 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 10
ACTION: path1 += "/" + component1 
component1 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 11
ACTION: path1 += "/" + component4 
component4 = 'h' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta/beta/h' : <type 'str'>
==================================================
component1 = "omega"                                                    # STEP 12
ACTION: component1 = "omega" 
component1 = 'beta' : <type 'str'>
=> component1 = 'omega' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 13
ACTION: path1 += "/" + component3 
component3 = 'd' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta/beta/h' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta/beta/h/d' : <type 'str'>
==================================================
component4 = "f"                                                        # STEP 14
ACTION: component4 = "f" 
component4 = 'h' : <type 'str'>
=> component4 = 'f' : <type 'str'>
==================================================
component3 = "h"                                                        # STEP 15
ACTION: component3 = "h" 
component3 = 'd' : <type 'str'>
=> component3 = 'h' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 16
ACTION: path2 += "/" + component2 
component2 = 'beta' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 17
ACTION: path1 += "/" + component3 
component3 = 'h' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta/beta/h/d' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta/beta/h/d/h' : <type 'str'>
==================================================
component3 = "omega"                                                    # STEP 18
ACTION: component3 = "omega" 
component3 = 'h' : <type 'str'>
=> component3 = 'omega' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 19
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str4 = ""                                                               # STEP 20
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 21
ACTION: str4 += 'l' 
str4 = '' : <type 'str'>
=> str4 = 'l' : <type 'str'>
==================================================
component2 = "gamma"                                                    # STEP 22
ACTION: component2 = "gamma" 
component2 = 'beta' : <type 'str'>
=> component2 = 'gamma' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 23
ACTION: bytes4 += 1 
bytes4 = 1 : <type 'int'>
=> bytes4 = 2 : <type 'int'>
==================================================
path1 += "/" + component1                                               # STEP 24
ACTION: path1 += "/" + component1 
component1 = 'omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta/beta/h/d/h' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta/beta/h/d/h/omega' : <type 'str'>
==================================================
component1 = "f"                                                        # STEP 25
ACTION: component1 = "f" 
component1 = 'omega' : <type 'str'>
=> component1 = 'f' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 26
ACTION: bytes4 = 0 
bytes4 = 2 : <type 'int'>
=> bytes4 = 0 : <type 'int'>
==================================================
bytes2 += 1                                                             # STEP 27
ACTION: bytes2 += 1 
bytes2 = 0 : <type 'int'>
=> bytes2 = 1 : <type 'int'>
==================================================
str4 += 't'                                                             # STEP 28
ACTION: str4 += 't' 
str4 = 'l' : <type 'str'>
=> str4 = 'lt' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 29
ACTION: bytes2 = 0 
bytes2 = 1 : <type 'int'>
=> bytes2 = 0 : <type 'int'>
==================================================
str4 += 'l'                                                             # STEP 30
ACTION: str4 += 'l' 
str4 = 'lt' : <type 'str'>
=> str4 = 'ltl' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 31
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path2 += "/" + component4                                               # STEP 32
ACTION: path2 += "/" + component4 
component4 = 'f' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta/f' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 33
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 34
ACTION: str4 += 'o' 
str4 = 'ltl' : <type 'str'>
=> str4 = 'ltlo' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 35
ACTION: str2 += 'l' 
str2 = '' : <type 'str'>
=> str2 = 'l' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 36
ACTION: str4 += 'o' 
str4 = 'ltlo' : <type 'str'>
=> str4 = 'ltloo' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 37
ACTION: str4 += 'z' 
str4 = 'ltloo' : <type 'str'>
=> str4 = 'ltlooz' : <type 'str'>
==================================================
component4 = "f"                                                        # STEP 38
ACTION: component4 = "f" 
component4 = 'f' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 39
ACTION: str4 += 'z' 
str4 = 'ltlooz' : <type 'str'>
=> str4 = 'ltloozz' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 40
ACTION: str2 += 'g' 
str2 = 'l' : <type 'str'>
=> str2 = 'lg' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 41
ACTION: str2 += 'c' 
str2 = 'lg' : <type 'str'>
=> str2 = 'lgc' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 42
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 43
ACTION: str4 += 'a' 
str4 = 'ltloozz' : <type 'str'>
=> str4 = 'ltloozza' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 44
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/beta/beta/h/d/h/omega' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 45
ACTION: str2 += 'l' 
str2 = 'lgc' : <type 'str'>
=> str2 = 'lgcl' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 46
ACTION: str0 += 'd' 
str0 = '' : <type 'str'>
=> str0 = 'd' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 47
ACTION: str2 += 'y' 
str2 = 'lgcl' : <type 'str'>
=> str2 = 'lgcly' : <type 'str'>
==================================================
str4 += " "                                                             # STEP 48
ACTION: str4 += " " 
str4 = 'ltloozza' : <type 'str'>
=> str4 = 'ltloozza ' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 49
ACTION: path2 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/beta/f' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/beta/f/gamma' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 50
ACTION: str4 += 'u' 
str4 = 'ltloozza ' : <type 'str'>
=> str4 = 'ltloozza u' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 51
ACTION: str4 += 'u' 
str4 = 'ltloozza u' : <type 'str'>
=> str4 = 'ltloozza uu' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 52
ACTION: str2 += 't' 
str2 = 'lgcly' : <type 'str'>
=> str2 = 'lgclyt' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 53
ACTION: str4 += 'g' 
str4 = 'ltloozza uu' : <type 'str'>
=> str4 = 'ltloozza uug' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 54
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str0 += 'y'                                                             # STEP 55
ACTION: str0 += 'y' 
str0 = 'd' : <type 'str'>
=> str0 = 'dy' : <type 'str'>
==================================================
component2 = "lambda"                                                   # STEP 56
ACTION: component2 = "lambda" 
component2 = 'gamma' : <type 'str'>
=> component2 = 'lambda' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 57
ACTION: str0 += 's' 
str0 = 'dy' : <type 'str'>
=> str0 = 'dys' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 58
ACTION: str0 += 'd' 
str0 = 'dys' : <type 'str'>
=> str0 = 'dysd' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 59
ACTION: str0 += 'm' 
str0 = 'dysd' : <type 'str'>
=> str0 = 'dysdm' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 60
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str2 += 'j'                                                             # STEP 61
ACTION: str2 += 'j' 
str2 = 'lgclyt' : <type 'str'>
=> str2 = 'lgclytj' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 62
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str4 += 'b'                                                             # STEP 63
ACTION: str4 += 'b' 
str4 = 'ltloozza uug' : <type 'str'>
=> str4 = 'ltloozza uugb' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 64
ACTION: str4 += 'a' 
str4 = 'ltloozza uugb' : <type 'str'>
=> str4 = 'ltloozza uugba' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 65
ACTION: str2 = "" 
str2 = 'lgclytj' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 66
ACTION: str4 = "" 
str4 = 'ltloozza uugba' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 67
ACTION: str2 += 'y' 
str2 = '' : <type 'str'>
=> str2 = 'y' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 68
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/beta/f/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 69
ACTION: str2 += 'r' 
str2 = 'y' : <type 'str'>
=> str2 = 'yr' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 70
ACTION: str4 += 'j' 
str4 = '' : <type 'str'>
=> str4 = 'j' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 71
ACTION: str4 += 'i' 
str4 = 'j' : <type 'str'>
=> str4 = 'ji' : <type 'str'>
==================================================
str4 += 'q'                                                             # STEP 72
ACTION: str4 += 'q' 
str4 = 'ji' : <type 'str'>
=> str4 = 'jiq' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 73
ACTION: str2 += 'a' 
str2 = 'yr' : <type 'str'>
=> str2 = 'yra' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 74
ACTION: bytes3 = 0 
bytes3 = 1 : <type 'int'>
=> bytes3 = 0 : <type 'int'>
==================================================
str0 += 'b'                                                             # STEP 75
ACTION: str0 += 'b' 
str0 = 'dysdm' : <type 'str'>
=> str0 = 'dysdmb' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 76
ACTION: str2 += 'u' 
str2 = 'yra' : <type 'str'>
=> str2 = 'yrau' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 77
ACTION: str0 += 's' 
str0 = 'dysdmb' : <type 'str'>
=> str0 = 'dysdmbs' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 78
ACTION: str4 += 'h' 
str4 = 'jiq' : <type 'str'>
=> str4 = 'jiqh' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 79
ACTION: str2 += 'h' 
str2 = 'yrau' : <type 'str'>
=> str2 = 'yrauh' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 80
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 81
ACTION: str2 = "" 
str2 = 'yrauh' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 82
ACTION: str0 += 'h' 
str0 = 'dysdmbs' : <type 'str'>
=> str0 = 'dysdmbsh' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 83
ACTION: str0 += 'e' 
str0 = 'dysdmbsh' : <type 'str'>
=> str0 = 'dysdmbshe' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 84
ACTION: str1 += 'b' 
str1 = '' : <type 'str'>
=> str1 = 'b' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 85
ACTION: str4 += 'w' 
str4 = 'jiqh' : <type 'str'>
=> str4 = 'jiqhw' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 86
ACTION: str1 += 'f' 
str1 = 'b' : <type 'str'>
=> str1 = 'bf' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 87
ACTION: str2 += 'i' 
str2 = '' : <type 'str'>
=> str2 = 'i' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 88
ACTION: str4 = "" 
str4 = 'jiqhw' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 89
ACTION: str2 += 'z' 
str2 = 'i' : <type 'str'>
=> str2 = 'iz' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 90
ACTION: str1 += 'j' 
str1 = 'bf' : <type 'str'>
=> str1 = 'bfj' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 91
ACTION: str2 += 'g' 
str2 = 'iz' : <type 'str'>
=> str2 = 'izg' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 92
ACTION: str0 += 'i' 
str0 = 'dysdmbshe' : <type 'str'>
=> str0 = 'dysdmbshei' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 93
ACTION: str4 += 'u' 
str4 = '' : <type 'str'>
=> str4 = 'u' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 94
ACTION: str1 += 't' 
str1 = 'bfj' : <type 'str'>
=> str1 = 'bfjt' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 95
ACTION: str4 += 'e' 
str4 = 'u' : <type 'str'>
=> str4 = 'ue' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 96
ACTION: str4 += 'f' 
str4 = 'ue' : <type 'str'>
=> str4 = 'uef' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 97
ACTION: path1 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 98
ACTION: str2 += 'b' 
str2 = 'izg' : <type 'str'>
=> str2 = 'izgb' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 99
ACTION: str1 += 'p' 
str1 = 'bfjt' : <type 'str'>
=> str1 = 'bfjtp' : <type 'str'>
==================================================
component2 = "phi"                                                     # STEP 100
ACTION: component2 = "phi" 
component2 = 'lambda' : <type 'str'>
=> component2 = 'phi' : <type 'str'>
==================================================
str0 = ""                                                              # STEP 101
ACTION: str0 = "" 
str0 = 'dysdmbshei' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
bytes3 += 1                                                            # STEP 102
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str0 += 'v'                                                            # STEP 103
ACTION: str0 += 'v' 
str0 = '' : <type 'str'>
=> str0 = 'v' : <type 'str'>
==================================================
str2 += 'b'                                                            # STEP 104
ACTION: str2 += 'b' 
str2 = 'izgb' : <type 'str'>
=> str2 = 'izgbb' : <type 'str'>
==================================================
os0 = newFakeOS()                                                      # STEP 105
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c25350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 += 'e'                                                            # STEP 106
ACTION: str1 += 'e' 
str1 = 'bfjtp' : <type 'str'>
=> str1 = 'bfjtpe' : <type 'str'>
==================================================
str0 += 'f'                                                            # STEP 107
ACTION: str0 += 'f' 
str0 = 'v' : <type 'str'>
=> str0 = 'vf' : <type 'str'>
==================================================
str0 += 'l'                                                            # STEP 108
ACTION: str0 += 'l' 
str0 = 'vf' : <type 'str'>
=> str0 = 'vfl' : <type 'str'>
==================================================
path2 += "/" + component3                                              # STEP 109
ACTION: path2 += "/" + component3 
component3 = 'omega' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
os0.symlink(path2,path2)                                               # STEP 110
ACTION: os0.symlink(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c25350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path2,path2) 
==================================================
str0 += 'e'                                                            # STEP 111
ACTION: str0 += 'e' 
str0 = 'vfl' : <type 'str'>
=> str0 = 'vfle' : <type 'str'>
==================================================
str1 += 'b'                                                            # STEP 112
ACTION: str1 += 'b' 
str1 = 'bfjtpe' : <type 'str'>
=> str1 = 'bfjtpeb' : <type 'str'>
==================================================
str1 += 'j'                                                            # STEP 113
ACTION: str1 += 'j' 
str1 = 'bfjtpeb' : <type 'str'>
=> str1 = 'bfjtpebj' : <type 'str'>
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)           # STEP 114
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c25350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
str2 += 'n'                                                            # STEP 115
ACTION: str2 += 'n' 
str2 = 'izgbb' : <type 'str'>
=> str2 = 'izgbbn' : <type 'str'>
==================================================
component3 = "phi"                                                     # STEP 116
ACTION: component3 = "phi" 
component3 = 'omega' : <type 'str'>
=> component3 = 'phi' : <type 'str'>
==================================================
result = os0.path.isdir(path1)                                         # STEP 117
ACTION: result = os0.path.isdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c25350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path1) 
==================================================
result = os0.read(fd1,bytes4)                                          # STEP 118
ACTION: result = os0.read(fd1,bytes4) 
bytes4 = 1 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c25350> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1032babd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21333, in act432
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0483710765839 TOTAL RUNTIME
1 EXECUTED
119 TOTAL TEST OPERATIONS
0.00964975357056 TIME SPENT EXECUTING TEST OPERATIONS
0.00653648376465 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
5.65052032471e-05 TIME SPENT CHECKING PROPERTIES
0.0097062587738 TOTAL TIME SPENT RUNNING SUT
0.00317192077637 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
