Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62050.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1005aa1b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20615, in act422
    assert (type(raised) == type(refRaised))
Original test has 97 steps

SAVING TEST AS failure.62050.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "gamma"                                                     # STEP 0
ACTION: component4 = "gamma" 
component4 = None : <type 'NoneType'>
=> component4 = 'gamma' : <type 'str'>
==================================================
component1 = "alpha"                                                     # STEP 1
ACTION: component1 = "alpha" 
component1 = None : <type 'NoneType'>
=> component1 = 'alpha' : <type 'str'>
==================================================
component3 = "beta"                                                      # STEP 2
ACTION: component3 = "beta" 
component3 = None : <type 'NoneType'>
=> component3 = 'beta' : <type 'str'>
==================================================
component2 = "beta"                                                      # STEP 3
ACTION: component2 = "beta" 
component2 = None : <type 'NoneType'>
=> component2 = 'beta' : <type 'str'>
==================================================
component0 = "lambda"                                                    # STEP 4
ACTION: component0 = "lambda" 
component0 = None : <type 'NoneType'>
=> component0 = 'lambda' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 5
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 6
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str1 += 'z'                                                              # STEP 7
ACTION: str1 += 'z' 
str1 = '' : <type 'str'>
=> str1 = 'z' : <type 'str'>
==================================================
str1 += 'h'                                                              # STEP 8
ACTION: str1 += 'h' 
str1 = 'z' : <type 'str'>
=> str1 = 'zh' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 9
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 10
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 11
ACTION: path1 += "/" + component4 
component4 = 'gamma' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
component4 = "delta"                                                    # STEP 12
ACTION: component4 = "delta" 
component4 = 'gamma' : <type 'str'>
=> component4 = 'delta' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 13
ACTION: str1 += 'd' 
str1 = 'zh' : <type 'str'>
=> str1 = 'zhd' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 14
ACTION: str1 += 'i' 
str1 = 'zhd' : <type 'str'>
=> str1 = 'zhdi' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 15
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 16
ACTION: path3 += "/" + component3 
component3 = 'beta' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
component3 = "f"                                                        # STEP 17
ACTION: component3 = "f" 
component3 = 'beta' : <type 'str'>
=> component3 = 'f' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 18
ACTION: path3 += "/" + component4 
component4 = 'delta' : <type 'str'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/beta/delta' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 19
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 20
ACTION: str4 += 't' 
str4 = '' : <type 'str'>
=> str4 = 't' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 21
ACTION: str4 += 'f' 
str4 = 't' : <type 'str'>
=> str4 = 'tf' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 22
ACTION: str1 += 'h' 
str1 = 'zhdi' : <type 'str'>
=> str1 = 'zhdih' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 23
ACTION: str1 += 's' 
str1 = 'zhdih' : <type 'str'>
=> str1 = 'zhdihs' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 24
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str1 += 'u'                                                             # STEP 25
ACTION: str1 += 'u' 
str1 = 'zhdihs' : <type 'str'>
=> str1 = 'zhdihsu' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 26
ACTION: str1 += 'f' 
str1 = 'zhdihsu' : <type 'str'>
=> str1 = 'zhdihsuf' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 27
ACTION: str1 += 't' 
str1 = 'zhdihsuf' : <type 'str'>
=> str1 = 'zhdihsuft' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 28
ACTION: str4 += 'u' 
str4 = 'tf' : <type 'str'>
=> str4 = 'tfu' : <type 'str'>
==================================================
component4 = "b"                                                        # STEP 29
ACTION: component4 = "b" 
component4 = 'delta' : <type 'str'>
=> component4 = 'b' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 30
ACTION: str4 += 'g' 
str4 = 'tfu' : <type 'str'>
=> str4 = 'tfug' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 31
ACTION: str1 += 'i' 
str1 = 'zhdihsuft' : <type 'str'>
=> str1 = 'zhdihsufti' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 32
ACTION: str4 += 'g' 
str4 = 'tfug' : <type 'str'>
=> str4 = 'tfugg' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 33
ACTION: path1 += "/" + component0 
component0 = 'lambda' : <type 'str'>
path1 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma/lambda' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 34
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
path1 += "/" + component2                                               # STEP 35
ACTION: path1 += "/" + component2 
component2 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test/gamma/lambda' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma/lambda/beta' : <type 'str'>
==================================================
component0 = "e"                                                        # STEP 36
ACTION: component0 = "e" 
component0 = 'lambda' : <type 'str'>
=> component0 = 'e' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 37
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 38
ACTION: str4 += 'a' 
str4 = 'tfugg' : <type 'str'>
=> str4 = 'tfugga' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 39
ACTION: str4 += 'r' 
str4 = 'tfugga' : <type 'str'>
=> str4 = 'tfuggar' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 40
ACTION: str1 += 'f' 
str1 = 'zhdihsufti' : <type 'str'>
=> str1 = 'zhdihsuftif' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 41
ACTION: str1 += 'd' 
str1 = 'zhdihsuftif' : <type 'str'>
=> str1 = 'zhdihsuftifd' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 42
ACTION: str4 += 'o' 
str4 = 'tfuggar' : <type 'str'>
=> str4 = 'tfuggaro' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 43
ACTION: path3 += "/" + component1 
component1 = 'alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test/beta/delta' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/beta/delta/alpha' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 44
ACTION: str1 += 's' 
str1 = 'zhdihsuftifd' : <type 'str'>
=> str1 = 'zhdihsuftifds' : <type 'str'>
==================================================
component2 = "b"                                                        # STEP 45
ACTION: component2 = "b" 
component2 = 'beta' : <type 'str'>
=> component2 = 'b' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 46
ACTION: str4 += 'f' 
str4 = 'tfuggaro' : <type 'str'>
=> str4 = 'tfuggarof' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 47
ACTION: str1 += 't' 
str1 = 'zhdihsuftifds' : <type 'str'>
=> str1 = 'zhdihsuftifdst' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 48
ACTION: path1 += "/" + component4 
component4 = 'b' : <type 'str'>
path1 = '/Volumes/ramdisk/test/gamma/lambda/beta' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma/lambda/beta/b' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 49
ACTION: path1 += "/" + component3 
component3 = 'f' : <type 'str'>
path1 = '/Volumes/ramdisk/test/gamma/lambda/beta/b' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma/lambda/beta/b/f' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 50
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
component3 = "gamma"                                                    # STEP 51
ACTION: component3 = "gamma" 
component3 = 'f' : <type 'str'>
=> component3 = 'gamma' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 52
ACTION: str4 += 'z' 
str4 = 'tfuggarof' : <type 'str'>
=> str4 = 'tfuggarofz' : <type 'str'>
==================================================
component4 = "c"                                                        # STEP 53
ACTION: component4 = "c" 
component4 = 'b' : <type 'str'>
=> component4 = 'c' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 54
ACTION: str4 += 't' 
str4 = 'tfuggarofz' : <type 'str'>
=> str4 = 'tfuggarofzt' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 55
ACTION: path3 += "/" + component3 
component3 = 'gamma' : <type 'str'>
path3 = '/Volumes/ramdisk/test/beta/delta/alpha' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/beta/delta/alpha/gamma' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 56
ACTION: str4 += 'k' 
str4 = 'tfuggarofzt' : <type 'str'>
=> str4 = 'tfuggarofztk' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 57
ACTION: str1 += 'h' 
str1 = 'zhdihsuftifdst' : <type 'str'>
=> str1 = 'zhdihsuftifdsth' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 58
ACTION: str4 += 'i' 
str4 = 'tfuggarofztk' : <type 'str'>
=> str4 = 'tfuggarofztki' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 59
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str4 += 's'                                                             # STEP 60
ACTION: str4 += 's' 
str4 = 'tfuggarofztki' : <type 'str'>
=> str4 = 'tfuggarofztkis' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 61
ACTION: str4 += 'r' 
str4 = 'tfuggarofztkis' : <type 'str'>
=> str4 = 'tfuggarofztkisr' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 62
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str4 += 'a'                                                             # STEP 63
ACTION: str4 += 'a' 
str4 = 'tfuggarofztkisr' : <type 'str'>
=> str4 = 'tfuggarofztkisra' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 64
ACTION: str4 = "" 
str4 = 'tfuggarofztkisra' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 65
ACTION: bytes3 = 0 
bytes3 = 1 : <type 'int'>
=> bytes3 = 0 : <type 'int'>
==================================================
str1 += 'a'                                                             # STEP 66
ACTION: str1 += 'a' 
str1 = 'zhdihsuftifdsth' : <type 'str'>
=> str1 = 'zhdihsuftifdstha' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 67
ACTION: path0 += "/" + component1 
component1 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 68
ACTION: str1 = "" 
str1 = 'zhdihsuftifdstha' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 69
ACTION: str4 += 'b' 
str4 = '' : <type 'str'>
=> str4 = 'b' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 70
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str4 += 'v'                                                             # STEP 71
ACTION: str4 += 'v' 
str4 = 'b' : <type 'str'>
=> str4 = 'bv' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 72
ACTION: str4 += 'u' 
str4 = 'bv' : <type 'str'>
=> str4 = 'bvu' : <type 'str'>
==================================================
component1 = "epsilon"                                                  # STEP 73
ACTION: component1 = "epsilon" 
component1 = 'alpha' : <type 'str'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
component3 = "h"                                                        # STEP 74
ACTION: component3 = "h" 
component3 = 'gamma' : <type 'str'>
=> component3 = 'h' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 75
ACTION: str4 += 'r' 
str4 = 'bvu' : <type 'str'>
=> str4 = 'bvur' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 76
ACTION: str1 += 'b' 
str1 = '' : <type 'str'>
=> str1 = 'b' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 77
ACTION: str1 += 'e' 
str1 = 'b' : <type 'str'>
=> str1 = 'be' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 78
ACTION: bytes1 = 0 
bytes1 = 1 : <type 'int'>
=> bytes1 = 0 : <type 'int'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 79
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 80
ACTION: str1 += 'e' 
str1 = 'be' : <type 'str'>
=> str1 = 'bee' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 81
ACTION: str4 += 'w' 
str4 = 'bvur' : <type 'str'>
=> str4 = 'bvurw' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 82
ACTION: str1 += 'w' 
str1 = 'bee' : <type 'str'>
=> str1 = 'beew' : <type 'str'>
==================================================
path0 += "/" + component4                                               # STEP 83
ACTION: path0 += "/" + component4 
component4 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 84
ACTION: str1 += 'm' 
str1 = 'beew' : <type 'str'>
=> str1 = 'beewm' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 85
ACTION: str4 += 'f' 
str4 = 'bvurw' : <type 'str'>
=> str4 = 'bvurwf' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 86
ACTION: bytes4 = 0 
bytes4 = 1 : <type 'int'>
=> bytes4 = 0 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 87
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10230e4d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
path3 += "/" + component3                                               # STEP 88
ACTION: path3 += "/" + component3 
component3 = 'h' : <type 'str'>
path3 = '/Volumes/ramdisk/test/beta/delta/alpha/gamma' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/beta/delta/alpha/gamma/h' : <type 'str'>
==================================================
result = os0.path.getsize(path1)                                        # STEP 89
ACTION: result = os0.path.getsize(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10230e4d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/gamma/lambda/beta/b/f' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma/lambda/beta/b/f'
==================================================
os0.makedirs(path1)                                                     # STEP 90
ACTION: os0.makedirs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10230e4d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/gamma/lambda/beta/b/f' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path1) 
==================================================
stat4 = os0.stat(path0)                                                 # STEP 91
ACTION: stat4 = os0.stat(path0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10230e4d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/c'
REFERENCE ACTION: stat_REF4 = os_REF0.stat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/c'
==================================================
component4 = "beta"                                                     # STEP 92
ACTION: component4 = "beta" 
component4 = 'c' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 93
ACTION: fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10230e4d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 2 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
component3 = "e"                                                        # STEP 94
ACTION: component3 = "e" 
component3 = 'h' : <type 'str'>
=> component3 = 'e' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 95
ACTION: path1 += "/" + component3 
component3 = 'e' : <type 'str'>
path1 = '/Volumes/ramdisk/test/gamma/lambda/beta/b/f' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma/lambda/beta/b/f/e' : <type 'str'>
==================================================
os0.write(fd1,str4)                                                     # STEP 96
ACTION: os0.write(fd1,str4) 
str4 = 'bvurwf' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10230e4d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 2 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor: 2
REFERENCE ACTION: os_REF0.write(fd_REF1,str4) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10267f908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20615, in act422
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0405330657959 TOTAL RUNTIME
1 EXECUTED
97 TOTAL TEST OPERATIONS
0.00642776489258 TIME SPENT EXECUTING TEST OPERATIONS
0.00689268112183 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.88758087158e-05 TIME SPENT CHECKING PROPERTIES
0.00647664070129 TOTAL TIME SPENT RUNNING SUT
0.00366997718811 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
