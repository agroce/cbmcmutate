Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.60177.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('an integer is required',), <traceback object at 0x1035f2908>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20575, in act422
    self.p_os[0].write(self.p_fd[1],self.p_str[4])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3345, in write
    file_handle = self.filesystem.GetOpenFile(file_des)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1209, in GetOpenFile
    raise TypeError('an integer is required')
Original test has 76 steps

SAVING TEST AS failure.60177.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "alpha"                                                     # STEP 0
ACTION: component0 = "alpha" 
component0 = None : <type 'NoneType'>
=> component0 = 'alpha' : <type 'str'>
==================================================
component2 = "a"                                                         # STEP 1
ACTION: component2 = "a" 
component2 = None : <type 'NoneType'>
=> component2 = 'a' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 3
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'v'                                                              # STEP 4
ACTION: str3 += 'v' 
str3 = '' : <type 'str'>
=> str3 = 'v' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 5
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path1 += "/" + component2                                                # STEP 6
ACTION: path1 += "/" + component2 
component2 = 'a' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
==================================================
component4 = "a"                                                         # STEP 7
ACTION: component4 = "a" 
component4 = None : <type 'NoneType'>
=> component4 = 'a' : <type 'str'>
==================================================
str3 += 'i'                                                              # STEP 8
ACTION: str3 += 'i' 
str3 = 'v' : <type 'str'>
=> str3 = 'vi' : <type 'str'>
==================================================
component3 = "phi"                                                       # STEP 9
ACTION: component3 = "phi" 
component3 = None : <type 'NoneType'>
=> component3 = 'phi' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 10
ACTION: str3 += 'm' 
str3 = 'vi' : <type 'str'>
=> str3 = 'vim' : <type 'str'>
==================================================
component1 = "lambda"                                                   # STEP 11
ACTION: component1 = "lambda" 
component1 = None : <type 'NoneType'>
=> component1 = 'lambda' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 12
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component2 = "beta"                                                     # STEP 13
ACTION: component2 = "beta" 
component2 = 'a' : <type 'str'>
=> component2 = 'beta' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 14
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 15
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str4 += 'e'                                                             # STEP 16
ACTION: str4 += 'e' 
str4 = '' : <type 'str'>
=> str4 = 'e' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 17
ACTION: str3 += 'h' 
str3 = 'vim' : <type 'str'>
=> str3 = 'vimh' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 18
ACTION: str3 += 'q' 
str3 = 'vimh' : <type 'str'>
=> str3 = 'vimhq' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 19
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
bytes2 = 0                                                              # STEP 20
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
fd0 = os0.open(path1, os.O_RDWR)                                        # STEP 21
ACTION: fd0 = os0.open(path1, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/a'
==================================================
str4 += 'u'                                                             # STEP 22
ACTION: str4 += 'u' 
str4 = 'e' : <type 'str'>
=> str4 = 'eu' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 23
ACTION: str4 += 'k' 
str4 = 'eu' : <type 'str'>
=> str4 = 'euk' : <type 'str'>
==================================================
result = os0.path.isabs(path1)                                          # STEP 24
ACTION: result = os0.path.isabs(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path1) 
==================================================
str3 += 'd'                                                             # STEP 25
ACTION: str3 += 'd' 
str3 = 'vimhq' : <type 'str'>
=> str3 = 'vimhqd' : <type 'str'>
==================================================
result = os0.path.islink(path1)                                         # STEP 26
ACTION: result = os0.path.islink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path1) 
==================================================
str3 += 'h'                                                             # STEP 27
ACTION: str3 += 'h' 
str3 = 'vimhqd' : <type 'str'>
=> str3 = 'vimhqdh' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 28
ACTION: str3 += " " 
str3 = 'vimhqdh' : <type 'str'>
=> str3 = 'vimhqdh ' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 29
ACTION: str4 += 'v' 
str4 = 'euk' : <type 'str'>
=> str4 = 'eukv' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 30
ACTION: str4 += 'b' 
str4 = 'eukv' : <type 'str'>
=> str4 = 'eukvb' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 31
ACTION: str3 += 'i' 
str3 = 'vimhqdh ' : <type 'str'>
=> str3 = 'vimhqdh i' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 32
ACTION: str3 += 'z' 
str3 = 'vimhqdh i' : <type 'str'>
=> str3 = 'vimhqdh iz' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 33
ACTION: str4 += 'v' 
str4 = 'eukvb' : <type 'str'>
=> str4 = 'eukvbv' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 34
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 35
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
stat3 = os0.lstat(path1)                                                # STEP 36
ACTION: stat3 = os0.lstat(path1) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/a'
==================================================
str3 += 'g'                                                             # STEP 37
ACTION: str3 += 'g' 
str3 = 'vimhqdh iz' : <type 'str'>
=> str3 = 'vimhqdh izg' : <type 'str'>
==================================================
result = os0.path.dirname(path3)                                        # STEP 38
ACTION: result = os0.path.dirname(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path3) 
==================================================
os0.rename(path1,path0)                                                 # STEP 39
ACTION: os0.rename(path1,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake filesystem object: can not rename nonexistent file: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: os_REF0.rename(path1,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
path3 += "/" + component2                                               # STEP 40
ACTION: path3 += "/" + component2 
component2 = 'beta' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
os0.link(path1,path3)                                                   # STEP 41
ACTION: os0.link(path1,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: os_REF0.link(path1,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
os0.symlink(path1,path3)                                                # STEP 42
ACTION: os0.symlink(path1,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path1,path3) 
==================================================
result = os0.path.lexists(path1)                                        # STEP 43
ACTION: result = os0.path.lexists(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path1) 
==================================================
os0.rename(path1,path3)                                                 # STEP 44
ACTION: os0.rename(path1,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake filesystem object: can not rename nonexistent file: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: os_REF0.rename(path1,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
bytes3 = 0                                                              # STEP 45
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 += 'm'                                                             # STEP 46
ACTION: str3 += 'm' 
str3 = 'vimhqdh izg' : <type 'str'>
=> str3 = 'vimhqdh izgm' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 47
ACTION: str3 += 'q' 
str3 = 'vimhqdh izgm' : <type 'str'>
=> str3 = 'vimhqdh izgmq' : <type 'str'>
==================================================
result = os0.path.getsize(path3)                                        # STEP 48
ACTION: result = os0.path.getsize(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'
==================================================
component2 = "omega"                                                    # STEP 49
ACTION: component2 = "omega" 
component2 = 'beta' : <type 'str'>
=> component2 = 'omega' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 50
ACTION: str3 += 'd' 
str3 = 'vimhqdh izgmq' : <type 'str'>
=> str3 = 'vimhqdh izgmqd' : <type 'str'>
==================================================
os0.link(path1,path0)                                                   # STEP 51
ACTION: os0.link(path1,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path1,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
path0 += "/" + component3                                               # STEP 52
ACTION: path0 += "/" + component3 
component3 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 53
ACTION: str3 += 'h' 
str3 = 'vimhqdh izgmqd' : <type 'str'>
=> str3 = 'vimhqdh izgmqdh' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 54
ACTION: path0 += "/" + component0 
component0 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi/alpha' : <type 'str'>
==================================================
stat4 = os0.lstat(path1)                                                # STEP 55
ACTION: stat4 = os0.lstat(path1) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/a'
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 56
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 57
ACTION: fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/a'
==================================================
str4 += 'g'                                                             # STEP 58
ACTION: str4 += 'g' 
str4 = 'eukvbv' : <type 'str'>
=> str4 = 'eukvbvg' : <type 'str'>
==================================================
os0.mkdir(path1)                                                        # STEP 59
ACTION: os0.mkdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: os_REF0.mkdir(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/a'
==================================================
str4 += 'v'                                                             # STEP 60
ACTION: str4 += 'v' 
str4 = 'eukvbvg' : <type 'str'>
=> str4 = 'eukvbvgv' : <type 'str'>
==================================================
os0.remove(path1)                                                       # STEP 61
ACTION: os0.remove(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.remove(path1) 
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 62
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/beta'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/beta'
==================================================
str4 += 'm'                                                             # STEP 63
ACTION: str4 += 'm' 
str4 = 'eukvbvgv' : <type 'str'>
=> str4 = 'eukvbvgvm' : <type 'str'>
==================================================
result = os0.path.getsize(path1)                                        # STEP 64
ACTION: result = os0.path.getsize(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/a'
==================================================
component0 = "d"                                                        # STEP 65
ACTION: component0 = "d" 
component0 = 'alpha' : <type 'str'>
=> component0 = 'd' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 66
ACTION: path0 += "/" + component0 
component0 = 'd' : <type 'str'>
path0 = '/Volumes/ramdisk/test/phi/alpha' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi/alpha/d' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 67
ACTION: str4 += 'y' 
str4 = 'eukvbvgvm' : <type 'str'>
=> str4 = 'eukvbvgvmy' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 68
ACTION: str4 += 'z' 
str4 = 'eukvbvgvmy' : <type 'str'>
=> str4 = 'eukvbvgvmyz' : <type 'str'>
==================================================
result = os0.path.islink(path3)                                         # STEP 69
ACTION: result = os0.path.islink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path3) 
==================================================
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 70
ACTION: fd0 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
str3 += 'r'                                                             # STEP 71
ACTION: str3 += 'r' 
str3 = 'vimhqdh izgmqdh' : <type 'str'>
=> str3 = 'vimhqdh izgmqdhr' : <type 'str'>
==================================================
os0.symlink(path0,path1)                                                # STEP 72
ACTION: os0.symlink(path0,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/phi/alpha/d' : <type 'str'>
path1 = '/Volumes/ramdisk/test/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/a'
REFERENCE ACTION: os_REF0.symlink(path0,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
stat0 = os0.lstat(path3)                                                # STEP 73
ACTION: stat0 = os0.lstat(path3) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/beta' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10316b8d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path3) 
=> stat_REF0 = posix.stat_result(st_mode=41453, st_ino=14833541, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=23, st_atime=1507354712, st_mtime=1507354712, st_ctime=1507354712) : <type 'posix.stat_result'>
==================================================
stat3 = os0.stat(path0)                                                 # STEP 74
ACTION: stat3 = os0.stat(path0) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/phi/alpha/d' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/phi/alpha/d'
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/phi/alpha/d'
==================================================
os0.write(fd1,str4)                                                     # STEP 75
ACTION: os0.write(fd1,str4) 
str4 = 'eukvbvgvmyz' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10348d210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> an integer is required
ERROR: (<type 'exceptions.TypeError'>, TypeError('an integer is required',), <traceback object at 0x1030b1bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20575, in act422
    self.p_os[0].write(self.p_fd[1],self.p_str[4])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3345, in write
    file_handle = self.filesystem.GetOpenFile(file_des)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1209, in GetOpenFile
    raise TypeError('an integer is required')
STOPPING TESTING DUE TO FAILED TEST
0.0535690784454 TOTAL RUNTIME
1 EXECUTED
76 TOTAL TEST OPERATIONS
0.0139167308807 TIME SPENT EXECUTING TEST OPERATIONS
0.00344395637512 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.29153442383e-05 TIME SPENT CHECKING PROPERTIES
0.013959646225 TOTAL TIME SPENT RUNNING SUT
0.00319504737854 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
