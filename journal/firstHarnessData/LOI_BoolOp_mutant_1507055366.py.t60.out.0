Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.62066.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102980bd8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1313, in NormalizeCase
    path_components = self.GetPathComponents(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1544, in GetPathComponents
    assert (not (drive or path_components))
Original test has 62 steps

SAVING TEST AS failure.62066.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "g"                                                         # STEP 0
ACTION: component0 = "g" 
component0 = None : <type 'NoneType'>
=> component0 = 'g' : <type 'str'>
==================================================
component4 = "f"                                                         # STEP 1
ACTION: component4 = "f" 
component4 = None : <type 'NoneType'>
=> component4 = 'f' : <type 'str'>
==================================================
component2 = "omega"                                                     # STEP 2
ACTION: component2 = "omega" 
component2 = None : <type 'NoneType'>
=> component2 = 'omega' : <type 'str'>
==================================================
component3 = "g"                                                         # STEP 3
ACTION: component3 = "g" 
component3 = None : <type 'NoneType'>
=> component3 = 'g' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 4
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 5
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component1 = "epsilon"                                                   # STEP 7
ACTION: component1 = "epsilon" 
component1 = None : <type 'NoneType'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 8
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path3 += "/" + component3                                                # STEP 9
ACTION: path3 += "/" + component3 
component3 = 'g' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 10
ACTION: path3 += "/" + component2 
component2 = 'omega' : <type 'str'>
path3 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/g/omega' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 11
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 12
ACTION: str2 += 'b' 
str2 = '' : <type 'str'>
=> str2 = 'b' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 13
ACTION: path1 += "/" + component3 
component3 = 'g' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 14
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/g/omega' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 15
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
component2 = "c"                                                        # STEP 16
ACTION: component2 = "c" 
component2 = 'omega' : <type 'str'>
=> component2 = 'c' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 17
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
component3 = "gamma"                                                    # STEP 18
ACTION: component3 = "gamma" 
component3 = 'g' : <type 'str'>
=> component3 = 'gamma' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 19
ACTION: str2 += 'c' 
str2 = 'b' : <type 'str'>
=> str2 = 'bc' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 20
ACTION: str2 += 't' 
str2 = 'bc' : <type 'str'>
=> str2 = 'bct' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 21
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 22
ACTION: str2 += 'f' 
str2 = 'bct' : <type 'str'>
=> str2 = 'bctf' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 23
ACTION: str3 += 'j' 
str3 = '' : <type 'str'>
=> str3 = 'j' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 24
ACTION: str2 += 'p' 
str2 = 'bctf' : <type 'str'>
=> str2 = 'bctfp' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 26
ACTION: path2 += "/" + component4 
component4 = 'f' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 27
ACTION: path0 += "/" + component2 
component2 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 28
ACTION: str2 += 'b' 
str2 = 'bctfp' : <type 'str'>
=> str2 = 'bctfpb' : <type 'str'>
==================================================
component2 = "b"                                                        # STEP 29
ACTION: component2 = "b" 
component2 = 'c' : <type 'str'>
=> component2 = 'b' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 30
ACTION: str3 += 'l' 
str3 = 'j' : <type 'str'>
=> str3 = 'jl' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 31
ACTION: str3 += 'a' 
str3 = 'jl' : <type 'str'>
=> str3 = 'jla' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 32
ACTION: str2 += 'i' 
str2 = 'bctfpb' : <type 'str'>
=> str2 = 'bctfpbi' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 33
ACTION: str3 += 'f' 
str3 = 'jla' : <type 'str'>
=> str3 = 'jlaf' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 34
ACTION: path3 += "/" + component2 
component2 = 'b' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 35
ACTION: str3 += 'n' 
str3 = 'jlaf' : <type 'str'>
=> str3 = 'jlafn' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 36
ACTION: str3 += 'x' 
str3 = 'jlafn' : <type 'str'>
=> str3 = 'jlafnx' : <type 'str'>
==================================================
component4 = "e"                                                        # STEP 37
ACTION: component4 = "e" 
component4 = 'f' : <type 'str'>
=> component4 = 'e' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 38
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 39
ACTION: path2 += "/" + component2 
component2 = 'b' : <type 'str'>
path2 = '/Volumes/ramdisk/test/f' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f/b' : <type 'str'>
==================================================
component2 = "omega"                                                    # STEP 40
ACTION: component2 = "omega" 
component2 = 'b' : <type 'str'>
=> component2 = 'omega' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 41
ACTION: str3 += 'x' 
str3 = 'jlafnx' : <type 'str'>
=> str3 = 'jlafnxx' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 42
ACTION: str2 += 'n' 
str2 = 'bctfpbi' : <type 'str'>
=> str2 = 'bctfpbin' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 43
ACTION: path2 += "/" + component1 
component1 = 'epsilon' : <type 'str'>
path2 = '/Volumes/ramdisk/test/f/b' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f/b/epsilon' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 44
ACTION: str2 += 'f' 
str2 = 'bctfpbin' : <type 'str'>
=> str2 = 'bctfpbinf' : <type 'str'>
==================================================
component1 = "delta"                                                    # STEP 45
ACTION: component1 = "delta" 
component1 = 'epsilon' : <type 'str'>
=> component1 = 'delta' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 46
ACTION: str3 += 'c' 
str3 = 'jlafnxx' : <type 'str'>
=> str3 = 'jlafnxxc' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 47
ACTION: str3 += 't' 
str3 = 'jlafnxxc' : <type 'str'>
=> str3 = 'jlafnxxct' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 48
ACTION: path1 += "/" + component4 
component4 = 'e' : <type 'str'>
path1 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/g/e' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 49
ACTION: str3 += 'f' 
str3 = 'jlafnxxct' : <type 'str'>
=> str3 = 'jlafnxxctf' : <type 'str'>
==================================================
component4 = "delta"                                                    # STEP 50
ACTION: component4 = "delta" 
component4 = 'e' : <type 'str'>
=> component4 = 'delta' : <type 'str'>
==================================================
path2 += "/" + component1                                               # STEP 51
ACTION: path2 += "/" + component1 
component1 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/f/b/epsilon' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f/b/epsilon/delta' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 52
ACTION: str3 += 'r' 
str3 = 'jlafnxxctf' : <type 'str'>
=> str3 = 'jlafnxxctfr' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 53
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path3 += "/" + component0                                               # STEP 54
ACTION: path3 += "/" + component0 
component0 = 'g' : <type 'str'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b/g' : <type 'str'>
==================================================
path1 += "/" + component2                                               # STEP 55
ACTION: path1 += "/" + component2 
component2 = 'omega' : <type 'str'>
path1 = '/Volumes/ramdisk/test/g/e' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/g/e/omega' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 56
ACTION: path2 += "/" + component3 
component3 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test/f/b/epsilon/delta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/f/b/epsilon/delta/gamma' : <type 'str'>
==================================================
component3 = "g"                                                        # STEP 57
ACTION: component3 = "g" 
component3 = 'gamma' : <type 'str'>
=> component3 = 'g' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 58
ACTION: str2 += 'e' 
str2 = 'bctfpbinf' : <type 'str'>
=> str2 = 'bctfpbinfe' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 59
ACTION: path3 += "/" + component4 
component4 = 'delta' : <type 'str'>
path3 = '/Volumes/ramdisk/test/b/g' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b/g/delta' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 60
ACTION: str2 = "" 
str2 = 'bctfpbinfe' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 61
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.AssertionError'> 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1038217a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 21, in newFakeOS
    fs.CreateDirectory('/Volumes')
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2055, in CreateDirectory
    if self.Exists(directory_path):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1624, in Exists
    file_path = self.ResolvePath(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1718, in ResolvePath
    file_path = self.NormalizePath(self.NormalizeCase(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1313, in NormalizeCase
    path_components = self.GetPathComponents(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1544, in GetPathComponents
    assert (not (drive or path_components))
STOPPING TESTING DUE TO FAILED TEST
0.0430300235748 TOTAL RUNTIME
2 EXECUTED
262 TOTAL TEST OPERATIONS
0.00430178642273 TIME SPENT EXECUTING TEST OPERATIONS
0.0116684436798 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000104665756226 TIME SPENT CHECKING PROPERTIES
0.00440645217896 TOTAL TIME SPENT RUNNING SUT
0.00559616088867 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
