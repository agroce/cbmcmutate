Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59593.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102cb81b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9425, in act261
    assert (type(raised) == type(refRaised))
Original test has 41 steps

SAVING TEST AS failure.59593.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "epsilon"                                                   # STEP 0
ACTION: component2 = "epsilon" 
component2 = None : <type 'NoneType'>
=> component2 = 'epsilon' : <type 'str'>
==================================================
component1 = "f"                                                         # STEP 1
ACTION: component1 = "f" 
component1 = None : <type 'NoneType'>
=> component1 = 'f' : <type 'str'>
==================================================
component0 = "delta"                                                     # STEP 2
ACTION: component0 = "delta" 
component0 = None : <type 'NoneType'>
=> component0 = 'delta' : <type 'str'>
==================================================
component4 = "alpha"                                                     # STEP 3
ACTION: component4 = "alpha" 
component4 = None : <type 'NoneType'>
=> component4 = 'alpha' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 4
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes1 += 1                                                              # STEP 5
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
component3 = "phi"                                                       # STEP 6
ACTION: component3 = "phi" 
component3 = None : <type 'NoneType'>
=> component3 = 'phi' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path0 += "/" + component1                                                # STEP 8
ACTION: path0 += "/" + component1 
component1 = 'f' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 9
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component1 = "a"                                                        # STEP 10
ACTION: component1 = "a" 
component1 = 'f' : <type 'str'>
=> component1 = 'a' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 11
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 12
ACTION: str3 += 'o' 
str3 = '' : <type 'str'>
=> str3 = 'o' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 13
ACTION: str0 += 'y' 
str0 = '' : <type 'str'>
=> str0 = 'y' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 14
ACTION: path0 += "/" + component2 
component2 = 'epsilon' : <type 'str'>
path0 = '/Volumes/ramdisk/test/f' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/f/epsilon' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 15
ACTION: str3 += 'j' 
str3 = 'o' : <type 'str'>
=> str3 = 'oj' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 16
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = '/Volumes/ramdisk/test/f/epsilon' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 17
ACTION: str3 += 'u' 
str3 = 'oj' : <type 'str'>
=> str3 = 'oju' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 18
ACTION: str3 += 'j' 
str3 = 'oju' : <type 'str'>
=> str3 = 'ojuj' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 19
ACTION: str0 += 'j' 
str0 = 'y' : <type 'str'>
=> str0 = 'yj' : <type 'str'>
==================================================
component2 = "phi"                                                      # STEP 20
ACTION: component2 = "phi" 
component2 = 'epsilon' : <type 'str'>
=> component2 = 'phi' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 21
ACTION: str3 = "" 
str3 = 'ojuj' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 22
ACTION: str0 += 'v' 
str0 = 'yj' : <type 'str'>
=> str0 = 'yjv' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 23
ACTION: str3 += 'i' 
str3 = '' : <type 'str'>
=> str3 = 'i' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 24
ACTION: str3 += 'a' 
str3 = 'i' : <type 'str'>
=> str3 = 'ia' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 25
ACTION: str0 += 't' 
str0 = 'yjv' : <type 'str'>
=> str0 = 'yjvt' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 26
ACTION: str3 += 'n' 
str3 = 'ia' : <type 'str'>
=> str3 = 'ian' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 27
ACTION: str3 += 'e' 
str3 = 'ian' : <type 'str'>
=> str3 = 'iane' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 28
ACTION: str0 += 'x' 
str0 = 'yjvt' : <type 'str'>
=> str0 = 'yjvtx' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 29
ACTION: str0 += 'e' 
str0 = 'yjvtx' : <type 'str'>
=> str0 = 'yjvtxe' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 30
ACTION: str0 += 'r' 
str0 = 'yjvtxe' : <type 'str'>
=> str0 = 'yjvtxer' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 31
ACTION: str0 += 'w' 
str0 = 'yjvtxer' : <type 'str'>
=> str0 = 'yjvtxerw' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 32
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 33
ACTION: str0 += 'd' 
str0 = 'yjvtxerw' : <type 'str'>
=> str0 = 'yjvtxerwd' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 34
ACTION: str1 += 'n' 
str1 = '' : <type 'str'>
=> str1 = 'n' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 35
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 36
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c2e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str3 += 'v'                                                             # STEP 37
ACTION: str3 += 'v' 
str3 = 'iane' : <type 'str'>
=> str3 = 'ianev' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 38
ACTION: str1 += 't' 
str1 = 'n' : <type 'str'>
=> str1 = 'nt' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 39
ACTION: str1 += 'q' 
str1 = 'nt' : <type 'str'>
=> str1 = 'ntq' : <type 'str'>
==================================================
os0.mkdir(path0)                                                        # STEP 40
ACTION: os0.mkdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102c2e150> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.mkdir(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x100fc1830>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9425, in act261
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0731871128082 TOTAL RUNTIME
3 EXECUTED
441 TOTAL TEST OPERATIONS
0.0233085155487 TIME SPENT EXECUTING TEST OPERATIONS
0.0231065750122 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000202417373657 TIME SPENT CHECKING PROPERTIES
0.0235109329224 TOTAL TIME SPENT RUNNING SUT
0.00856399536133 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
