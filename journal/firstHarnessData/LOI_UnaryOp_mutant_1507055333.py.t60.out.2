Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.57211.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError("Invalid mode: 'b'",), <traceback object at 0x1034e0e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15599, in act354
    self.p_fd[0] = self.p_os[0].open(self.p_path[3], os.O_CREAT | os.O_WRONLY | os.O_EXCL)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4512, in Call
    raise ValueError(('Invalid mode: %r' % orig_modes))
Original test has 65 steps

SAVING TEST AS failure.57211.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
path3 = "/Volumes/ramdisk/test"                                          # STEP 0
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes3 = 0                                                               # STEP 1
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
bytes4 = 0                                                               # STEP 2
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component0 = "f"                                                         # STEP 3
ACTION: component0 = "f" 
component0 = None : <type 'NoneType'>
=> component0 = 'f' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 4
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
component2 = "d"                                                         # STEP 5
ACTION: component2 = "d" 
component2 = None : <type 'NoneType'>
=> component2 = 'd' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 6
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
component3 = "alpha"                                                     # STEP 7
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
component1 = "e"                                                         # STEP 8
ACTION: component1 = "e" 
component1 = None : <type 'NoneType'>
=> component1 = 'e' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 9
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 10
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 11
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'e'                                                             # STEP 12
ACTION: str0 += 'e' 
str0 = '' : <type 'str'>
=> str0 = 'e' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 13
ACTION: str3 += 'c' 
str3 = '' : <type 'str'>
=> str3 = 'c' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 14
ACTION: str3 += 'g' 
str3 = 'c' : <type 'str'>
=> str3 = 'cg' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 15
ACTION: str4 += 'z' 
str4 = '' : <type 'str'>
=> str4 = 'z' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 16
ACTION: str2 += 'n' 
str2 = '' : <type 'str'>
=> str2 = 'n' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 17
ACTION: str0 += 't' 
str0 = 'e' : <type 'str'>
=> str0 = 'et' : <type 'str'>
==================================================
str4 += 'f'                                                             # STEP 18
ACTION: str4 += 'f' 
str4 = 'z' : <type 'str'>
=> str4 = 'zf' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 19
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 20
ACTION: str3 += 'k' 
str3 = 'cg' : <type 'str'>
=> str3 = 'cgk' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 21
ACTION: str0 += 'x' 
str0 = 'et' : <type 'str'>
=> str0 = 'etx' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 22
ACTION: str3 += 'w' 
str3 = 'cgk' : <type 'str'>
=> str3 = 'cgkw' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 23
ACTION: str3 += 'l' 
str3 = 'cgkw' : <type 'str'>
=> str3 = 'cgkwl' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 24
ACTION: str3 += 'u' 
str3 = 'cgkwl' : <type 'str'>
=> str3 = 'cgkwlu' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 25
ACTION: str0 += 'p' 
str0 = 'etx' : <type 'str'>
=> str0 = 'etxp' : <type 'str'>
==================================================
component4 = "e"                                                        # STEP 26
ACTION: component4 = "e" 
component4 = None : <type 'NoneType'>
=> component4 = 'e' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 27
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str2 += 'k'                                                             # STEP 28
ACTION: str2 += 'k' 
str2 = 'n' : <type 'str'>
=> str2 = 'nk' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 29
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035a5910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.path.exists(path3)                                         # STEP 30
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035a5910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
result = os0.path.isdir(path1)                                          # STEP 31
ACTION: result = os0.path.isdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035a5910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path1) 
==================================================
os0.remove(path1)                                                       # STEP 32
ACTION: os0.remove(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035a5910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.remove(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Operation not permitted: '/Volumes/ramdisk/test'
==================================================
str0 += 'e'                                                             # STEP 33
ACTION: str0 += 'e' 
str0 = 'etxp' : <type 'str'>
=> str0 = 'etxpe' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 34
ACTION: str3 += 'k' 
str3 = 'cgkwlu' : <type 'str'>
=> str3 = 'cgkwluk' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 35
ACTION: str4 += 'r' 
str4 = 'zf' : <type 'str'>
=> str4 = 'zfr' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 36
ACTION: str0 += 'g' 
str0 = 'etxpe' : <type 'str'>
=> str0 = 'etxpeg' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 37
ACTION: str3 += 'd' 
str3 = 'cgkwluk' : <type 'str'>
=> str3 = 'cgkwlukd' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 38
ACTION: str2 += 'i' 
str2 = 'nk' : <type 'str'>
=> str2 = 'nki' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 39
ACTION: str3 += 'z' 
str3 = 'cgkwlukd' : <type 'str'>
=> str3 = 'cgkwlukdz' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 40
ACTION: str3 += 'z' 
str3 = 'cgkwlukdz' : <type 'str'>
=> str3 = 'cgkwlukdzz' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 41
ACTION: str2 += 's' 
str2 = 'nki' : <type 'str'>
=> str2 = 'nkis' : <type 'str'>
==================================================
str0 += 'i'                                                             # STEP 42
ACTION: str0 += 'i' 
str0 = 'etxpeg' : <type 'str'>
=> str0 = 'etxpegi' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 43
ACTION: str3 += 'r' 
str3 = 'cgkwlukdzz' : <type 'str'>
=> str3 = 'cgkwlukdzzr' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 44
ACTION: str2 += 's' 
str2 = 'nkis' : <type 'str'>
=> str2 = 'nkiss' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 45
ACTION: path3 += "/" + component2 
component2 = 'd' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 46
ACTION: str2 += 'p' 
str2 = 'nkiss' : <type 'str'>
=> str2 = 'nkissp' : <type 'str'>
==================================================
str3 += 'd'                                                             # STEP 47
ACTION: str3 += 'd' 
str3 = 'cgkwlukdzzr' : <type 'str'>
=> str3 = 'cgkwlukdzzrd' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 48
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.rmdir(path3)                                                        # STEP 49
ACTION: os0.rmdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035a5910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/d'
REFERENCE ACTION: os_REF0.rmdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/d'
==================================================
str2 = ""                                                               # STEP 50
ACTION: str2 = "" 
str2 = 'nkissp' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
result = os0.path.isabs(path2)                                          # STEP 51
ACTION: result = os0.path.isabs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035a5910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path2) 
==================================================
os0.symlink(path3,path1)                                                # STEP 52
ACTION: os0.symlink(path3,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035a5910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/d' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path3,path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.mkdir(path3)                                                        # STEP 53
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035a5910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.mkdir(path3) 
==================================================
str4 += 'w'                                                             # STEP 54
ACTION: str4 += 'w' 
str4 = 'zfr' : <type 'str'>
=> str4 = 'zfrw' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 55
ACTION: str0 += 'q' 
str0 = 'etxpegi' : <type 'str'>
=> str0 = 'etxpegiq' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 56
ACTION: str2 += 'q' 
str2 = '' : <type 'str'>
=> str2 = 'q' : <type 'str'>
==================================================
component2 = "epsilon"                                                  # STEP 57
ACTION: component2 = "epsilon" 
component2 = 'd' : <type 'str'>
=> component2 = 'epsilon' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 58
ACTION: str3 += 'g' 
str3 = 'cgkwlukdzzrd' : <type 'str'>
=> str3 = 'cgkwlukdzzrdg' : <type 'str'>
==================================================
str0 += 's'                                                             # STEP 59
ACTION: str0 += 's' 
str0 = 'etxpegiq' : <type 'str'>
=> str0 = 'etxpegiqs' : <type 'str'>
==================================================
os0.rmdir(path3)                                                        # STEP 60
ACTION: os0.rmdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035a5910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/d' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.rmdir(path3) 
==================================================
str3 += 'v'                                                             # STEP 61
ACTION: str3 += 'v' 
str3 = 'cgkwlukdzzrdg' : <type 'str'>
=> str3 = 'cgkwlukdzzrdgv' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 62
ACTION: str3 += 'l' 
str3 = 'cgkwlukdzzrdgv' : <type 'str'>
=> str3 = 'cgkwlukdzzrdgvl' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 63
ACTION: str2 += 'e' 
str2 = 'q' : <type 'str'>
=> str2 = 'qe' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 64
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1035a5910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/d' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> Invalid mode: 'b'
ERROR: (<type 'exceptions.ValueError'>, ValueError("Invalid mode: 'b'",), <traceback object at 0x105455680>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 15599, in act354
    self.p_fd[0] = self.p_os[0].open(self.p_path[3], os.O_CREAT | os.O_WRONLY | os.O_EXCL)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4512, in Call
    raise ValueError(('Invalid mode: %r' % orig_modes))
STOPPING TESTING DUE TO FAILED TEST
0.0397431850433 TOTAL RUNTIME
1 EXECUTED
65 TOTAL TEST OPERATIONS
0.00670266151428 TIME SPENT EXECUTING TEST OPERATIONS
0.00294232368469 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.26633453369e-05 TIME SPENT CHECKING PROPERTIES
0.00673532485962 TOTAL TIME SPENT RUNNING SUT
0.00322604179382 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
