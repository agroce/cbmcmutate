Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.50285.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1035b7b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17933, in act385
    assert (type(raised) == type(refRaised))
Original test has 32 steps

SAVING TEST AS failure.50285.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "f"                                                         # STEP 0
ACTION: component2 = "f" 
component2 = None : <type 'NoneType'>
=> component2 = 'f' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 1
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
component0 = "gamma"                                                     # STEP 2
ACTION: component0 = "gamma" 
component0 = None : <type 'NoneType'>
=> component0 = 'gamma' : <type 'str'>
==================================================
component3 = "epsilon"                                                   # STEP 3
ACTION: component3 = "epsilon" 
component3 = None : <type 'NoneType'>
=> component3 = 'epsilon' : <type 'str'>
==================================================
component1 = "d"                                                         # STEP 4
ACTION: component1 = "d" 
component1 = None : <type 'NoneType'>
=> component1 = 'd' : <type 'str'>
==================================================
component4 = "alpha"                                                     # STEP 5
ACTION: component4 = "alpha" 
component4 = None : <type 'NoneType'>
=> component4 = 'alpha' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 6
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str4 = ""                                                                # STEP 7
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'o'                                                              # STEP 8
ACTION: str4 += 'o' 
str4 = '' : <type 'str'>
=> str4 = 'o' : <type 'str'>
==================================================
str4 += 'd'                                                              # STEP 9
ACTION: str4 += 'd' 
str4 = 'o' : <type 'str'>
=> str4 = 'od' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 10
ACTION: str1 += 't' 
str1 = '' : <type 'str'>
=> str1 = 't' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 11
ACTION: str4 = "" 
str4 = 'od' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 12
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 13
ACTION: str4 += 'z' 
str4 = '' : <type 'str'>
=> str4 = 'z' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 14
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str1 += 'j'                                                             # STEP 15
ACTION: str1 += 'j' 
str1 = 't' : <type 'str'>
=> str1 = 'tj' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 16
ACTION: str1 += 'y' 
str1 = 'tj' : <type 'str'>
=> str1 = 'tjy' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 17
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str1 += 'j'                                                             # STEP 18
ACTION: str1 += 'j' 
str1 = 'tjy' : <type 'str'>
=> str1 = 'tjyj' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 19
ACTION: str1 += 'a' 
str1 = 'tjyj' : <type 'str'>
=> str1 = 'tjyja' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 20
ACTION: str1 += 'o' 
str1 = 'tjyja' : <type 'str'>
=> str1 = 'tjyjao' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 21
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str4 += 'q'                                                             # STEP 22
ACTION: str4 += 'q' 
str4 = 'z' : <type 'str'>
=> str4 = 'zq' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 23
ACTION: str4 = "" 
str4 = 'zq' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
str1 += 'a'                                                             # STEP 24
ACTION: str1 += 'a' 
str1 = 'tjyjao' : <type 'str'>
=> str1 = 'tjyjaoa' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 25
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
bytes1 = 0                                                              # STEP 26
ACTION: bytes1 = 0 
bytes1 = 1 : <type 'int'>
=> bytes1 = 0 : <type 'int'>
==================================================
str4 += 'r'                                                             # STEP 27
ACTION: str4 += 'r' 
str4 = '' : <type 'str'>
=> str4 = 'r' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 28
ACTION: str1 += 's' 
str1 = 'tjyjaoa' : <type 'str'>
=> str1 = 'tjyjaoas' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 29
ACTION: path4 += "/" + component0 
component0 = 'gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 30
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103662c50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 31
ACTION: fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103662c50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path4, os.O_WRONLY | os.O_APPEND) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1035fe878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17933, in act385
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.269578933716 TOTAL RUNTIME
5 EXECUTED
832 TOTAL TEST OPERATIONS
0.187164545059 TIME SPENT EXECUTING TEST OPERATIONS
0.0368053913116 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.00040078163147 TIME SPENT CHECKING PROPERTIES
0.187565326691 TOTAL TIME SPENT RUNNING SUT
0.0128328800201 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
