Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.58524.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1030df170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22899, in act456
    self.p_os[0].removedirs(self.p_path[3])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3637, in removedirs
    self.filesystem.RemoveDirectory(head, allow_symlink=True)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2520, in RemoveDirectory
    self.RemoveObject(target_directory)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2036, in RemoveObject
    target_directory.RemoveEntry(basename)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 740, in RemoveEntry
    assert (entry.st_nlink >= 0)
Original test has 58 steps

SAVING TEST AS failure.58524.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "a"                                                         # STEP 0
ACTION: component4 = "a" 
component4 = None : <type 'NoneType'>
=> component4 = 'a' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 1
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 2
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
component0 = "phi"                                                       # STEP 3
ACTION: component0 = "phi" 
component0 = None : <type 'NoneType'>
=> component0 = 'phi' : <type 'str'>
==================================================
component3 = "lambda"                                                    # STEP 4
ACTION: component3 = "lambda" 
component3 = None : <type 'NoneType'>
=> component3 = 'lambda' : <type 'str'>
==================================================
component2 = "alpha"                                                     # STEP 5
ACTION: component2 = "alpha" 
component2 = None : <type 'NoneType'>
=> component2 = 'alpha' : <type 'str'>
==================================================
str1 += " "                                                              # STEP 6
ACTION: str1 += " " 
str1 = '' : <type 'str'>
=> str1 = ' ' : <type 'str'>
==================================================
component1 = "a"                                                         # STEP 7
ACTION: component1 = "a" 
component1 = None : <type 'NoneType'>
=> component1 = 'a' : <type 'str'>
==================================================
str1 += 'l'                                                              # STEP 8
ACTION: str1 += 'l' 
str1 = ' ' : <type 'str'>
=> str1 = ' l' : <type 'str'>
==================================================
path3 += "/" + component3                                                # STEP 9
ACTION: path3 += "/" + component3 
component3 = 'lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 10
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
bytes0 = 0                                                              # STEP 11
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path3 += "/" + component4                                               # STEP 12
ACTION: path3 += "/" + component4 
component4 = 'a' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda/a' : <type 'str'>
==================================================
component4 = "h"                                                        # STEP 13
ACTION: component4 = "h" 
component4 = 'a' : <type 'str'>
=> component4 = 'h' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 14
ACTION: str1 += 'c' 
str1 = ' l' : <type 'str'>
=> str1 = ' lc' : <type 'str'>
==================================================
component3 = "a"                                                        # STEP 15
ACTION: component3 = "a" 
component3 = 'lambda' : <type 'str'>
=> component3 = 'a' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 16
ACTION: str1 += 'd' 
str1 = ' lc' : <type 'str'>
=> str1 = ' lcd' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 17
ACTION: str1 = "" 
str1 = ' lcd' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 18
ACTION: path3 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda/a' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda/a/alpha' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 19
ACTION: str1 += 'v' 
str1 = '' : <type 'str'>
=> str1 = 'v' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 20
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 += 'i'                                                             # STEP 21
ACTION: str1 += 'i' 
str1 = 'v' : <type 'str'>
=> str1 = 'vi' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 22
ACTION: path3 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda/a/alpha' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 23
ACTION: str1 += 'w' 
str1 = 'vi' : <type 'str'>
=> str1 = 'viw' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 24
ACTION: path3 += "/" + component3 
component3 = 'a' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 25
ACTION: str1 += 'o' 
str1 = 'viw' : <type 'str'>
=> str1 = 'viwo' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 26
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str1 += 'e'                                                             # STEP 27
ACTION: str1 += 'e' 
str1 = 'viwo' : <type 'str'>
=> str1 = 'viwoe' : <type 'str'>
==================================================
component3 = "h"                                                        # STEP 28
ACTION: component3 = "h" 
component3 = 'a' : <type 'str'>
=> component3 = 'h' : <type 'str'>
==================================================
stat0 = os0.lstat(path3)                                                # STEP 29
ACTION: stat0 = os0.lstat(path3) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a'
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a'
==================================================
result = os0.path.isabs(path3)                                          # STEP 30
ACTION: result = os0.path.isabs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path3) 
==================================================
str1 += 's'                                                             # STEP 31
ACTION: str1 += 's' 
str1 = 'viwoe' : <type 'str'>
=> str1 = 'viwoes' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 32
ACTION: path3 += "/" + component2 
component2 = 'alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a/alpha' : <type 'str'>
==================================================
result = os0.path.lexists(path3)                                        # STEP 33
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
component2 = "g"                                                        # STEP 34
ACTION: component2 = "g" 
component2 = 'alpha' : <type 'str'>
=> component2 = 'g' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 35
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 36
ACTION: str1 += 'b' 
str1 = 'viwoes' : <type 'str'>
=> str1 = 'viwoesb' : <type 'str'>
==================================================
os0.makedirs(path3)                                                     # STEP 37
ACTION: os0.makedirs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path3) 
==================================================
path0 += "/" + component4                                               # STEP 38
ACTION: path0 += "/" + component4 
component4 = 'h' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
component4 = "a"                                                        # STEP 39
ACTION: component4 = "a" 
component4 = 'h' : <type 'str'>
=> component4 = 'a' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 40
ACTION: path3 += "/" + component2 
component2 = 'g' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a/alpha' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a/alpha/g' : <type 'str'>
==================================================
os0.rename(path0,path3)                                                 # STEP 41
ACTION: os0.rename(path0,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/h' : <type 'str'>
path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a/alpha/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake filesystem object: can not rename nonexistent file: '/Volumes/ramdisk/test/h'
REFERENCE ACTION: os_REF0.rename(path0,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
os0.makedirs(path0)                                                     # STEP 42
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/h' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path0) 
==================================================
bytes0 += 1                                                             # STEP 43
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
os0.link(path0,path0)                                                   # STEP 44
ACTION: os0.link(path0,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/h' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/h'
REFERENCE ACTION: os_REF0.link(path0,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.mkdir(path3)                                                        # STEP 45
ACTION: os0.mkdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a/alpha/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.mkdir(path3) 
==================================================
path0 += "/" + component1                                               # STEP 46
ACTION: path0 += "/" + component1 
component1 = 'a' : <type 'str'>
path0 = '/Volumes/ramdisk/test/h' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/h/a' : <type 'str'>
==================================================
result = os0.path.isabs(path0)                                          # STEP 47
ACTION: result = os0.path.isabs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/h/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path0) 
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 48
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
stat0 = os0.lstat(path3)                                                # STEP 49
ACTION: stat0 = os0.lstat(path3) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a/alpha/g' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1061ae450> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path3) 
=> stat_REF0 = posix.stat_result(st_mode=16877, st_ino=13009135, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507328786, st_mtime=1507328786, st_ctime=1507328786) : <type 'posix.stat_result'>
==================================================
fd1 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 50
ACTION: fd1 = os0.open(path0, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/h/a' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_CREAT | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
result = os0.path.exists(path3)                                         # STEP 51
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a/alpha/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
fd0 = os0.open(path0, os.O_RDWR)                                        # STEP 52
ACTION: fd0 = os0.open(path0, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/h/a' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path0, os.O_RDWR) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
component2 = "c"                                                        # STEP 53
ACTION: component2 = "c" 
component2 = 'g' : <type 'str'>
=> component2 = 'c' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 54
ACTION: str1 += 'r' 
str1 = 'viwoesb' : <type 'str'>
=> str1 = 'viwoesbr' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 55
ACTION: str1 += 'k' 
str1 = 'viwoesbr' : <type 'str'>
=> str1 = 'viwoesbrk' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 56
ACTION: str1 += 'f' 
str1 = 'viwoesbrk' : <type 'str'>
=> str1 = 'viwoesbrkf' : <type 'str'>
==================================================
os0.removedirs(path3)                                                   # STEP 57
ACTION: os0.removedirs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103c32d50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/lambda/a/alpha/alpha/a/alpha/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.AssertionError'> 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103caa200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22899, in act456
    self.p_os[0].removedirs(self.p_path[3])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3637, in removedirs
    self.filesystem.RemoveDirectory(head, allow_symlink=True)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2520, in RemoveDirectory
    self.RemoveObject(target_directory)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2036, in RemoveObject
    target_directory.RemoveEntry(basename)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 740, in RemoveEntry
    assert (entry.st_nlink >= 0)
STOPPING TESTING DUE TO FAILED TEST
6.38731098175 TOTAL RUNTIME
98 EXECUTED
19458 TOTAL TEST OPERATIONS
4.79718589783 TIME SPENT EXECUTING TEST OPERATIONS
1.03687620163 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0132372379303 TIME SPENT CHECKING PROPERTIES
4.81042313576 TOTAL TIME SPENT RUNNING SUT
0.360314846039 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
