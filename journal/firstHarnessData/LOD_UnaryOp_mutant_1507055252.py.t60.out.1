Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.60976.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (5) ',), <traceback object at 0x1006c61b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 27431, in act520
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 70 steps

SAVING TEST AS failure.60976.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "gamma"                                                     # STEP 0
ACTION: component2 = "gamma" 
component2 = None : <type 'NoneType'>
=> component2 = 'gamma' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 1
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 2
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path1 += "/" + component2                                                # STEP 3
ACTION: path1 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 4
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component0 = "lambda"                                                    # STEP 5
ACTION: component0 = "lambda" 
component0 = None : <type 'NoneType'>
=> component0 = 'lambda' : <type 'str'>
==================================================
component2 = "g"                                                         # STEP 6
ACTION: component2 = "g" 
component2 = 'gamma' : <type 'str'>
=> component2 = 'g' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 7
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str3 += 'n'                                                              # STEP 8
ACTION: str3 += 'n' 
str3 = '' : <type 'str'>
=> str3 = 'n' : <type 'str'>
==================================================
component1 = "lambda"                                                    # STEP 9
ACTION: component1 = "lambda" 
component1 = None : <type 'NoneType'>
=> component1 = 'lambda' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 10
ACTION: str3 += 'w' 
str3 = 'n' : <type 'str'>
=> str3 = 'nw' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 11
ACTION: str3 += 'j' 
str3 = 'nw' : <type 'str'>
=> str3 = 'nwj' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 12
ACTION: str3 += 'n' 
str3 = 'nwj' : <type 'str'>
=> str3 = 'nwjn' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 13
ACTION: str3 += 'a' 
str3 = 'nwjn' : <type 'str'>
=> str3 = 'nwjna' : <type 'str'>
==================================================
component4 = "c"                                                        # STEP 14
ACTION: component4 = "c" 
component4 = None : <type 'NoneType'>
=> component4 = 'c' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 15
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 16
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 17
ACTION: str3 += 'c' 
str3 = 'nwjna' : <type 'str'>
=> str3 = 'nwjnac' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 18
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 19
ACTION: str0 += 'g' 
str0 = '' : <type 'str'>
=> str0 = 'g' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 20
ACTION: str0 += 'v' 
str0 = 'g' : <type 'str'>
=> str0 = 'gv' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 21
ACTION: path1 += "/" + component1 
component1 = 'lambda' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
component1 = "omega"                                                    # STEP 22
ACTION: component1 = "omega" 
component1 = 'lambda' : <type 'str'>
=> component1 = 'omega' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 23
ACTION: str3 += 'm' 
str3 = 'nwjnac' : <type 'str'>
=> str3 = 'nwjnacm' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 24
ACTION: str3 += 'f' 
str3 = 'nwjnacm' : <type 'str'>
=> str3 = 'nwjnacmf' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 25
ACTION: str1 += 'u' 
str1 = '' : <type 'str'>
=> str1 = 'u' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 26
ACTION: str1 += 'f' 
str1 = 'u' : <type 'str'>
=> str1 = 'uf' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 27
ACTION: str3 += 'n' 
str3 = 'nwjnacmf' : <type 'str'>
=> str3 = 'nwjnacmfn' : <type 'str'>
==================================================
str3 += 's'                                                             # STEP 28
ACTION: str3 += 's' 
str3 = 'nwjnacmfn' : <type 'str'>
=> str3 = 'nwjnacmfns' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 29
ACTION: str0 += 'h' 
str0 = 'gv' : <type 'str'>
=> str0 = 'gvh' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 30
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f18510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 += 'q'                                                             # STEP 31
ACTION: str1 += 'q' 
str1 = 'uf' : <type 'str'>
=> str1 = 'ufq' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 32
ACTION: str3 += 'x' 
str3 = 'nwjnacmfns' : <type 'str'>
=> str3 = 'nwjnacmfnsx' : <type 'str'>
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY)                         # STEP 33
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f18510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
str0 += 'o'                                                             # STEP 34
ACTION: str0 += 'o' 
str0 = 'gvh' : <type 'str'>
=> str0 = 'gvho' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 35
ACTION: str3 += 'q' 
str3 = 'nwjnacmfnsx' : <type 'str'>
=> str3 = 'nwjnacmfnsxq' : <type 'str'>
==================================================
os0.write(fd1,str0)                                                     # STEP 36
ACTION: os0.write(fd1,str0) 
str0 = 'gvho' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f18510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF1,str0) 
==================================================
result = os0.path.lexists(path1)                                        # STEP 37
ACTION: result = os0.path.lexists(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f18510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path1) 
==================================================
str0 += 'p'                                                             # STEP 38
ACTION: str0 += 'p' 
str0 = 'gvho' : <type 'str'>
=> str0 = 'gvhop' : <type 'str'>
==================================================
fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND)                        # STEP 39
ACTION: fd0 = os0.open(path1, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f18510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_WRONLY | os.O_APPEND) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
str3 += 'r'                                                             # STEP 40
ACTION: str3 += 'r' 
str3 = 'nwjnacmfnsxq' : <type 'str'>
=> str3 = 'nwjnacmfnsxqr' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 41
ACTION: str0 = "" 
str0 = 'gvhop' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
result = os0.path.getsize(path1)                                        # STEP 42
ACTION: result = os0.path.getsize(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f18510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.getsize(path1) 
==================================================
stat1 = os0.fstat(fd1)                                                  # STEP 43
ACTION: stat1 = os0.fstat(fd1) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f18510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1063a1a90> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.fstat(fd_REF1) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=15786888, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=4, st_atime=1507368241, st_mtime=1507368241, st_ctime=1507368241) : <type 'posix.stat_result'>
==================================================
str1 += 'f'                                                             # STEP 44
ACTION: str1 += 'f' 
str1 = 'ufq' : <type 'str'>
=> str1 = 'ufqf' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 45
ACTION: str1 += 'q' 
str1 = 'ufqf' : <type 'str'>
=> str1 = 'ufqfq' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 46
ACTION: str3 += 'j' 
str3 = 'nwjnacmfnsxqr' : <type 'str'>
=> str3 = 'nwjnacmfnsxqrj' : <type 'str'>
==================================================
str1 += 'v'                                                             # STEP 47
ACTION: str1 += 'v' 
str1 = 'ufqfq' : <type 'str'>
=> str1 = 'ufqfqv' : <type 'str'>
==================================================
str3 += 'a'                                                             # STEP 48
ACTION: str3 += 'a' 
str3 = 'nwjnacmfnsxqrj' : <type 'str'>
=> str3 = 'nwjnacmfnsxqrja' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 49
ACTION: str1 += 'l' 
str1 = 'ufqfqv' : <type 'str'>
=> str1 = 'ufqfqvl' : <type 'str'>
==================================================
os0.remove(path1)                                                       # STEP 50
ACTION: os0.remove(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f18510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.remove(path1) 
==================================================
str1 += 'c'                                                             # STEP 51
ACTION: str1 += 'c' 
str1 = 'ufqfqvl' : <type 'str'>
=> str1 = 'ufqfqvlc' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 52
ACTION: str0 += 'x' 
str0 = '' : <type 'str'>
=> str0 = 'x' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 53
ACTION: path1 += "/" + component4 
component4 = 'c' : <type 'str'>
path1 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/lambda/c' : <type 'str'>
==================================================
str3 += 'z'                                                             # STEP 54
ACTION: str3 += 'z' 
str3 = 'nwjnacmfnsxqrja' : <type 'str'>
=> str3 = 'nwjnacmfnsxqrjaz' : <type 'str'>
==================================================
os0.write(fd0,str0)                                                     # STEP 55
ACTION: os0.write(fd0,str0) 
str0 = 'x' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f18510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF0,str0) 
==================================================
str0 += " "                                                             # STEP 56
ACTION: str0 += " " 
str0 = 'x' : <type 'str'>
=> str0 = 'x ' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 57
ACTION: str1 += 'x' 
str1 = 'ufqfqvlc' : <type 'str'>
=> str1 = 'ufqfqvlcx' : <type 'str'>
==================================================
component4 = "alpha"                                                    # STEP 58
ACTION: component4 = "alpha" 
component4 = 'c' : <type 'str'>
=> component4 = 'alpha' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 59
ACTION: str1 += 'p' 
str1 = 'ufqfqvlcx' : <type 'str'>
=> str1 = 'ufqfqvlcxp' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 60
ACTION: str1 += 'u' 
str1 = 'ufqfqvlcxp' : <type 'str'>
=> str1 = 'ufqfqvlcxpu' : <type 'str'>
==================================================
result = os0.readlink(path1)                                            # STEP 61
ACTION: result = os0.readlink(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f18510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/lambda/c' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake path does not exist: '/Volumes/ramdisk/test/lambda/c'
REFERENCE ACTION: result_REF = os_REF0.readlink(path1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/lambda/c'
==================================================
str0 += 'r'                                                             # STEP 62
ACTION: str0 += 'r' 
str0 = 'x ' : <type 'str'>
=> str0 = 'x r' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 63
ACTION: str3 += 'm' 
str3 = 'nwjnacmfnsxqrjaz' : <type 'str'>
=> str3 = 'nwjnacmfnsxqrjazm' : <type 'str'>
==================================================
stat0 = os0.fstat(fd1)                                                  # STEP 64
ACTION: stat0 = os0.fstat(fd1) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f18510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1063a1c90> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.fstat(fd_REF1) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=15786888, st_dev=16777224, st_nlink=0, st_uid=501, st_gid=20, st_size=5, st_atime=1507368241, st_mtime=1507368241, st_ctime=1507368241) : <type 'posix.stat_result'>
==================================================
stat2 = os0.fstat(fd1)                                                  # STEP 65
ACTION: stat2 = os0.fstat(fd1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f18510> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1063a1c50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF1) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=15786888, st_dev=16777224, st_nlink=0, st_uid=501, st_gid=20, st_size=5, st_atime=1507368241, st_mtime=1507368241, st_ctime=1507368241) : <type 'posix.stat_result'>
==================================================
str1 += 'd'                                                             # STEP 66
ACTION: str1 += 'd' 
str1 = 'ufqfqvlcxpu' : <type 'str'>
=> str1 = 'ufqfqvlcxpud' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 67
ACTION: str0 += 'a' 
str0 = 'x r' : <type 'str'>
=> str0 = 'x ra' : <type 'str'>
==================================================
str3 += 'j'                                                             # STEP 68
ACTION: str3 += 'j' 
str3 = 'nwjnacmfnsxqrjazm' : <type 'str'>
=> str3 = 'nwjnacmfnsxqrjazmj' : <type 'str'>
==================================================
result = stat2.st_size                                                  # STEP 69
ACTION: result = stat2.st_size 
stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1063a1c50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF2 = posix.stat_result(st_mode=33261, st_ino=15786888, st_dev=16777224, st_nlink=0, st_uid=501, st_gid=20, st_size=5, st_atime=1507368241, st_mtime=1507368241, st_ctime=1507368241) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF2.st_size 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (5) ',), <traceback object at 0x1021d71b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 27431, in act520
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
7.5674290657 TOTAL RUNTIME
138 EXECUTED
27470 TOTAL TEST OPERATIONS
5.7363717556 TIME SPENT EXECUTING TEST OPERATIONS
1.22777581215 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.0148012638092 TIME SPENT CHECKING PROPERTIES
5.75117301941 TOTAL TIME SPENT RUNNING SUT
0.396861314774 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
