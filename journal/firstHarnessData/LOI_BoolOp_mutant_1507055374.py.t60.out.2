Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.51146.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1006c32d8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 28840, in act542
    assert (type(raised) == type(refRaised))
Original test has 80 steps

SAVING TEST AS failure.51146.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "gamma"                                                     # STEP 0
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
component0 = "g"                                                         # STEP 1
ACTION: component0 = "g" 
component0 = None : <type 'NoneType'>
=> component0 = 'g' : <type 'str'>
==================================================
component4 = "a"                                                         # STEP 2
ACTION: component4 = "a" 
component4 = None : <type 'NoneType'>
=> component4 = 'a' : <type 'str'>
==================================================
component3 = "gamma"                                                     # STEP 3
ACTION: component3 = "gamma" 
component3 = None : <type 'NoneType'>
=> component3 = 'gamma' : <type 'str'>
==================================================
component2 = "beta"                                                      # STEP 4
ACTION: component2 = "beta" 
component2 = None : <type 'NoneType'>
=> component2 = 'beta' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component1                                                # STEP 6
ACTION: path2 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
component1 = "g"                                                         # STEP 7
ACTION: component1 = "g" 
component1 = 'gamma' : <type 'str'>
=> component1 = 'g' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 8
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
fd0 = os0.open(path2, os.O_RDONLY)                                       # STEP 9
ACTION: fd0 = os0.open(path2, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/gamma'
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY)                         # STEP 10
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
stat0 = os0.lstat(path2)                                                # STEP 11
ACTION: stat0 = os0.lstat(path2) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103d9fd50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path2) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=5650663, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507225931, st_mtime=1507225931, st_ctime=1507225931) : <type 'posix.stat_result'>
==================================================
result = os0.path.islink(path2)                                         # STEP 12
ACTION: result = os0.path.islink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path2) 
==================================================
result = os0.path.isabs(path2)                                          # STEP 13
ACTION: result = os0.path.isabs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path2) 
==================================================
stat2 = os0.fstat(fd1)                                                  # STEP 14
ACTION: stat2 = os0.fstat(fd1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103d60150> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF1) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=5650663, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507225931, st_mtime=1507225931, st_ctime=1507225931) : <type 'posix.stat_result'>
==================================================
result = stat0.st_size                                                  # STEP 15
ACTION: result = stat0.st_size 
stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103d9fd50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF0 = posix.stat_result(st_mode=33261, st_ino=5650663, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507225931, st_mtime=1507225931, st_ctime=1507225931) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF0.st_size 
==================================================
stat1 = os0.fstat(fd1)                                                  # STEP 16
ACTION: stat1 = os0.fstat(fd1) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103ce9790> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.fstat(fd_REF1) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=5650663, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507225931, st_mtime=1507225931, st_ctime=1507225931) : <type 'posix.stat_result'>
==================================================
str1 = ""                                                               # STEP 17
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
result = stat0.st_nlink                                                 # STEP 18
ACTION: result = stat0.st_nlink 
stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103d9fd50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF0 = posix.stat_result(st_mode=33261, st_ino=5650663, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507225931, st_mtime=1507225931, st_ctime=1507225931) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF0.st_nlink 
==================================================
str1 += 'l'                                                             # STEP 19
ACTION: str1 += 'l' 
str1 = '' : <type 'str'>
=> str1 = 'l' : <type 'str'>
==================================================
fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND)                        # STEP 20
ACTION: fd0 = os0.open(path2, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_WRONLY | os.O_APPEND) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
str1 += 'k'                                                             # STEP 21
ACTION: str1 += 'k' 
str1 = 'l' : <type 'str'>
=> str1 = 'lk' : <type 'str'>
==================================================
result = os0.path.abspath(path2)                                        # STEP 22
ACTION: result = os0.path.abspath(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path2) 
==================================================
result = os0.path.lexists(path2)                                        # STEP 23
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
str1 += 'h'                                                             # STEP 24
ACTION: str1 += 'h' 
str1 = 'lk' : <type 'str'>
=> str1 = 'lkh' : <type 'str'>
==================================================
result = os0.path.isfile(path2)                                         # STEP 25
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
bytes4 = 0                                                              # STEP 26
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str1 += 'h'                                                             # STEP 27
ACTION: str1 += 'h' 
str1 = 'lkh' : <type 'str'>
=> str1 = 'lkhh' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 28
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
stat4 = os0.fstat(fd0)                                                  # STEP 29
ACTION: stat4 = os0.fstat(fd0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103ce97d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.fstat(fd_REF0) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=5650663, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507225931, st_mtime=1507225931, st_ctime=1507225931) : <type 'posix.stat_result'>
==================================================
str4 += 'x'                                                             # STEP 30
ACTION: str4 += 'x' 
str4 = '' : <type 'str'>
=> str4 = 'x' : <type 'str'>
==================================================
os0.makedirs(path2)                                                     # STEP 31
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: os_REF0.makedirs(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/gamma'
==================================================
str1 += 'r'                                                             # STEP 32
ACTION: str1 += 'r' 
str1 = 'lkhh' : <type 'str'>
=> str1 = 'lkhhr' : <type 'str'>
==================================================
str4 += 'h'                                                             # STEP 33
ACTION: str4 += 'h' 
str4 = 'x' : <type 'str'>
=> str4 = 'xh' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 34
ACTION: str1 += 'o' 
str1 = 'lkhhr' : <type 'str'>
=> str1 = 'lkhhro' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 35
ACTION: str4 += 'e' 
str4 = 'xh' : <type 'str'>
=> str4 = 'xhe' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 36
ACTION: str1 += 'c' 
str1 = 'lkhhro' : <type 'str'>
=> str1 = 'lkhhroc' : <type 'str'>
==================================================
stat0 = os0.fstat(fd1)                                                  # STEP 37
ACTION: stat0 = os0.fstat(fd1) 
stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103d9fd50> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF0 = posix.stat_result(st_mode=33261, st_ino=5650663, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507225931, st_mtime=1507225931, st_ctime=1507225931) : <type 'posix.stat_result'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x104c1b410> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.fstat(fd_REF1) 
==================================================
str4 += 'h'                                                             # STEP 38
ACTION: str4 += 'h' 
str4 = 'xhe' : <type 'str'>
=> str4 = 'xheh' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 39
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.isfile(path2)                                         # STEP 40
ACTION: result = os0.path.isfile(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path2) 
==================================================
result = os0.read(fd1,bytes4)                                           # STEP 41
ACTION: result = os0.read(fd1,bytes4) 
bytes4 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
str4 = ""                                                               # STEP 42
ACTION: str4 = "" 
str4 = 'xheh' : <type 'str'>
=> str4 = '' : <type 'str'>
==================================================
os0.rmdir(path2)                                                        # STEP 43
ACTION: os0.rmdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Fake os module: not a directory: '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: os_REF0.rmdir(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/gamma'
==================================================
str4 += 'g'                                                             # STEP 44
ACTION: str4 += 'g' 
str4 = '' : <type 'str'>
=> str4 = 'g' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 45
ACTION: str4 += 'v' 
str4 = 'g' : <type 'str'>
=> str4 = 'gv' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 46
ACTION: str1 += 'z' 
str1 = 'lkhhroc' : <type 'str'>
=> str1 = 'lkhhrocz' : <type 'str'>
==================================================
str4 += 'w'                                                             # STEP 47
ACTION: str4 += 'w' 
str4 = 'gv' : <type 'str'>
=> str4 = 'gvw' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 48
ACTION: str1 += 'w' 
str1 = 'lkhhrocz' : <type 'str'>
=> str1 = 'lkhhroczw' : <type 'str'>
==================================================
os0.remove(path2)                                                       # STEP 49
ACTION: os0.remove(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.remove(path2) 
==================================================
str1 += 'x'                                                             # STEP 50
ACTION: str1 += 'x' 
str1 = 'lkhhroczw' : <type 'str'>
=> str1 = 'lkhhroczwx' : <type 'str'>
==================================================
os0.makedirs(path4)                                                     # STEP 51
ACTION: os0.makedirs(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.makedirs(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test'
==================================================
result = stat1.st_size                                                  # STEP 52
ACTION: result = stat1.st_size 
stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103ce9790> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF1 = posix.stat_result(st_mode=33261, st_ino=5650663, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507225931, st_mtime=1507225931, st_ctime=1507225931) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF1.st_size 
==================================================
result = sorted(os0.listdir(path4))                                     # STEP 53
ACTION: result = sorted(os0.listdir(path4)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path4)) 
==================================================
bytes1 = 0                                                              # STEP 54
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
result = os0.path.abspath(path2)                                        # STEP 55
ACTION: result = os0.path.abspath(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path2) 
==================================================
str4 += 's'                                                             # STEP 56
ACTION: str4 += 's' 
str4 = 'gvw' : <type 'str'>
=> str4 = 'gvws' : <type 'str'>
==================================================
result = os0.read(fd0,bytes4)                                           # STEP 57
ACTION: result = os0.read(fd0,bytes4) 
bytes4 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 58
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.symlink(path4,path2)                                                # STEP 59
ACTION: os0.symlink(path4,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path4,path2) 
==================================================
result = os0.path.lexists(path2)                                        # STEP 60
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
str1 += 'g'                                                             # STEP 61
ACTION: str1 += 'g' 
str1 = 'lkhhroczwx' : <type 'str'>
=> str1 = 'lkhhroczwxg' : <type 'str'>
==================================================
os0.link(path4,path2)                                                   # STEP 62
ACTION: os0.link(path4,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/gamma'
REFERENCE ACTION: os_REF0.link(path4,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str4 += 'i'                                                             # STEP 63
ACTION: str4 += 'i' 
str4 = 'gvws' : <type 'str'>
=> str4 = 'gvwsi' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 64
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path2 += "/" + component4                                               # STEP 65
ACTION: path2 += "/" + component4 
component4 = 'a' : <type 'str'>
path2 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/gamma/a' : <type 'str'>
==================================================
result = os0.path.abspath(path2)                                        # STEP 66
ACTION: result = os0.path.abspath(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path2) 
==================================================
component4 = "omega"                                                    # STEP 67
ACTION: component4 = "omega" 
component4 = 'a' : <type 'str'>
=> component4 = 'omega' : <type 'str'>
==================================================
result = stat1.st_nlink                                                 # STEP 68
ACTION: result = stat1.st_nlink 
stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103ce9790> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF1 = posix.stat_result(st_mode=33261, st_ino=5650663, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507225931, st_mtime=1507225931, st_ctime=1507225931) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF1.st_nlink 
==================================================
path4 += "/" + component0                                               # STEP 69
ACTION: path4 += "/" + component0 
component0 = 'g' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 70
ACTION: str1 += 'b' 
str1 = 'lkhhroczwxg' : <type 'str'>
=> str1 = 'lkhhroczwxgb' : <type 'str'>
==================================================
str4 += 'l'                                                             # STEP 71
ACTION: str4 += 'l' 
str4 = 'gvwsi' : <type 'str'>
=> str4 = 'gvwsil' : <type 'str'>
==================================================
result = os0.path.dirname(path2)                                        # STEP 72
ACTION: result = os0.path.dirname(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path2) 
==================================================
str4 += 'b'                                                             # STEP 73
ACTION: str4 += 'b' 
str4 = 'gvwsil' : <type 'str'>
=> str4 = 'gvwsilb' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 74
ACTION: str1 = "" 
str1 = 'lkhhroczwxgb' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 75
ACTION: component0 = "omega" 
component0 = 'g' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
result = os0.path.exists(path4)                                         # STEP 76
ACTION: result = os0.path.exists(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path4) 
==================================================
result = os0.path.lexists(path2)                                        # STEP 77
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
str1 += 'x'                                                             # STEP 78
ACTION: str1 += 'x' 
str1 = '' : <type 'str'>
=> str1 = 'x' : <type 'str'>
==================================================
os0.rename(path2,path4)                                                 # STEP 79
ACTION: os0.rename(path2,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x103d601d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/gamma/a' : <type 'str'>
path4 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.IOError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/gamma/a'
REFERENCE ACTION: os_REF0.rename(path2,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x103d527a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 28840, in act542
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0527770519257 TOTAL RUNTIME
1 EXECUTED
80 TOTAL TEST OPERATIONS
0.0110414028168 TIME SPENT EXECUTING TEST OPERATIONS
0.00544929504395 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.62396240234e-05 TIME SPENT CHECKING PROPERTIES
0.0110776424408 TOTAL TIME SPENT RUNNING SUT
0.00317597389221 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
