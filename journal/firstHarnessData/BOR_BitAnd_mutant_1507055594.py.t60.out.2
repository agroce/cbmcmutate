Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.65404.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1006c31b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22931, in act456
    assert (type(raised) == type(refRaised))
Original test has 102 steps

SAVING TEST AS failure.65404.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
os0 = newFakeOS()                                                        # STEP 0
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
component1 = "epsilon"                                                   # STEP 1
ACTION: component1 = "epsilon" 
component1 = None : <type 'NoneType'>
=> component1 = 'epsilon' : <type 'str'>
==================================================
component3 = "gamma"                                                     # STEP 2
ACTION: component3 = "gamma" 
component3 = None : <type 'NoneType'>
=> component3 = 'gamma' : <type 'str'>
==================================================
component2 = "epsilon"                                                   # STEP 3
ACTION: component2 = "epsilon" 
component2 = None : <type 'NoneType'>
=> component2 = 'epsilon' : <type 'str'>
==================================================
component4 = "b"                                                         # STEP 4
ACTION: component4 = "b" 
component4 = None : <type 'NoneType'>
=> component4 = 'b' : <type 'str'>
==================================================
component0 = "omega"                                                     # STEP 5
ACTION: component0 = "omega" 
component0 = None : <type 'NoneType'>
=> component0 = 'omega' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 6
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 7
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str3 += 'm'                                                              # STEP 8
ACTION: str3 += 'm' 
str3 = '' : <type 'str'>
=> str3 = 'm' : <type 'str'>
==================================================
str3 += 'q'                                                              # STEP 9
ACTION: str3 += 'q' 
str3 = 'm' : <type 'str'>
=> str3 = 'mq' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 10
ACTION: str3 = "" 
str3 = 'mq' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 11
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 12
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 13
ACTION: str3 += 'k' 
str3 = '' : <type 'str'>
=> str3 = 'k' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 14
ACTION: str3 += 'l' 
str3 = 'k' : <type 'str'>
=> str3 = 'kl' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 15
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = sorted(os0.listdir(path4))                                     # STEP 16
ACTION: result = sorted(os0.listdir(path4)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path4)) 
==================================================
result = os0.path.exists(path3)                                         # STEP 17
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
path3 += "/" + component2                                               # STEP 18
ACTION: path3 += "/" + component2 
component2 = 'epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
os0.symlink(path3,path4)                                                # STEP 19
ACTION: os0.symlink(path3,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path3,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
stat4 = os0.lstat(path3)                                                # STEP 20
ACTION: stat4 = os0.lstat(path3) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon'
==================================================
stat3 = os0.stat(path3)                                                 # STEP 21
ACTION: stat3 = os0.stat(path3) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: stat_REF3 = os_REF0.stat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon'
==================================================
result = os0.path.exists(path3)                                         # STEP 22
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
str3 += 'g'                                                             # STEP 23
ACTION: str3 += 'g' 
str3 = 'kl' : <type 'str'>
=> str3 = 'klg' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 24
ACTION: str3 += 'k' 
str3 = 'klg' : <type 'str'>
=> str3 = 'klgk' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 25
ACTION: str3 += 'q' 
str3 = 'klgk' : <type 'str'>
=> str3 = 'klgkq' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 26
ACTION: str3 = "" 
str3 = 'klgkq' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 27
ACTION: str3 += 'm' 
str3 = '' : <type 'str'>
=> str3 = 'm' : <type 'str'>
==================================================
stat1 = os0.stat(path3)                                                 # STEP 28
ACTION: stat1 = os0.stat(path3) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: stat_REF1 = os_REF0.stat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/epsilon'
==================================================
os0.symlink(path3,path3)                                                # STEP 29
ACTION: os0.symlink(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path3,path3) 
==================================================
component2 = "e"                                                        # STEP 30
ACTION: component2 = "e" 
component2 = 'epsilon' : <type 'str'>
=> component2 = 'e' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 31
ACTION: str3 += 'm' 
str3 = 'm' : <type 'str'>
=> str3 = 'mm' : <type 'str'>
==================================================
result = os0.path.dirname(path4)                                        # STEP 32
ACTION: result = os0.path.dirname(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path4) 
==================================================
str3 += 'b'                                                             # STEP 33
ACTION: str3 += 'b' 
str3 = 'mm' : <type 'str'>
=> str3 = 'mmb' : <type 'str'>
==================================================
result = os0.path.dirname(path3)                                        # STEP 34
ACTION: result = os0.path.dirname(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path3) 
==================================================
bytes1 = 0                                                              # STEP 35
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
stat0 = os0.stat(path3)                                                 # STEP 36
ACTION: stat0 = os0.stat(path3) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: stat_REF0 = os_REF0.stat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
==================================================
stat1 = os0.stat(path3)                                                 # STEP 37
ACTION: stat1 = os0.stat(path3) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: stat_REF1 = os_REF0.stat(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
==================================================
str3 += 'q'                                                             # STEP 38
ACTION: str3 += 'q' 
str3 = 'mmb' : <type 'str'>
=> str3 = 'mmbq' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_RDWR)                                        # STEP 39
ACTION: fd0 = os0.open(path3, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
==================================================
stat4 = os0.lstat(path3)                                                # STEP 40
ACTION: stat4 = os0.lstat(path3) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10384ccd0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path3) 
=> stat_REF4 = posix.stat_result(st_mode=41453, st_ino=21815173, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=29, st_atime=1507453149, st_mtime=1507453149, st_ctime=1507453149) : <type 'posix.stat_result'>
==================================================
str3 += 'x'                                                             # STEP 41
ACTION: str3 += 'x' 
str3 = 'mmbq' : <type 'str'>
=> str3 = 'mmbqx' : <type 'str'>
==================================================
result = os0.path.islink(path4)                                         # STEP 42
ACTION: result = os0.path.islink(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path4) 
==================================================
str3 += 'f'                                                             # STEP 43
ACTION: str3 += 'f' 
str3 = 'mmbqx' : <type 'str'>
=> str3 = 'mmbqxf' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 44
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 45
ACTION: str3 += 'l' 
str3 = 'mmbqxf' : <type 'str'>
=> str3 = 'mmbqxfl' : <type 'str'>
==================================================
str3 += 'l'                                                             # STEP 46
ACTION: str3 += 'l' 
str3 = 'mmbqxfl' : <type 'str'>
=> str3 = 'mmbqxfll' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 47
ACTION: str3 += 'e' 
str3 = 'mmbqxfll' : <type 'str'>
=> str3 = 'mmbqxflle' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 48
ACTION: str3 += 'e' 
str3 = 'mmbqxflle' : <type 'str'>
=> str3 = 'mmbqxfllee' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 49
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.lexists(path3)                                        # STEP 50
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
result = os0.path.dirname(path4)                                        # STEP 51
ACTION: result = os0.path.dirname(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path4) 
==================================================
os0.symlink(path4,path0)                                                # STEP 52
ACTION: os0.symlink(path4,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path4,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str3 += 'o'                                                             # STEP 53
ACTION: str3 += 'o' 
str3 = 'mmbqxfllee' : <type 'str'>
=> str3 = 'mmbqxflleeo' : <type 'str'>
==================================================
result = stat4.st_size                                                  # STEP 54
ACTION: result = stat4.st_size 
stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10384ccd0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF4 = posix.stat_result(st_mode=41453, st_ino=21815173, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=29, st_atime=1507453149, st_mtime=1507453149, st_ctime=1507453149) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF4.st_size 
==================================================
result = os0.path.dirname(path3)                                        # STEP 55
ACTION: result = os0.path.dirname(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path3) 
==================================================
bytes4 = 0                                                              # STEP 56
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
result = os0.path.islink(path4)                                         # STEP 57
ACTION: result = os0.path.islink(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path4) 
==================================================
result = os0.path.isfile(path4)                                         # STEP 58
ACTION: result = os0.path.isfile(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path4) 
==================================================
result = os0.readlink(path3)                                            # STEP 59
ACTION: result = os0.readlink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
str2 = ""                                                               # STEP 60
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path4 += "/" + component0                                               # STEP 61
ACTION: path4 += "/" + component0 
component0 = 'omega' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 62
ACTION: str2 += 't' 
str2 = '' : <type 'str'>
=> str2 = 't' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 63
ACTION: path0 += "/" + component1 
component1 = 'epsilon' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
os0.mkdir(path4)                                                        # STEP 64
ACTION: os0.mkdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.mkdir(path4) 
==================================================
str3 += 'z'                                                             # STEP 65
ACTION: str3 += 'z' 
str3 = 'mmbqxflleeo' : <type 'str'>
=> str3 = 'mmbqxflleeoz' : <type 'str'>
==================================================
stat4 = os0.lstat(path4)                                                # STEP 66
ACTION: stat4 = os0.lstat(path4) 
stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10384ccd0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
stat_REF4 = posix.stat_result(st_mode=41453, st_ino=21815173, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=29, st_atime=1507453149, st_mtime=1507453149, st_ctime=1507453149) : <type 'posix.stat_result'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10384cd90> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path4) 
=> stat_REF4 = posix.stat_result(st_mode=16877, st_ino=21815174, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507453149, st_mtime=1507453149, st_ctime=1507453149) : <type 'posix.stat_result'>
==================================================
str3 += 'n'                                                             # STEP 67
ACTION: str3 += 'n' 
str3 = 'mmbqxflleeoz' : <type 'str'>
=> str3 = 'mmbqxflleeozn' : <type 'str'>
==================================================
os0.symlink(path3,path4)                                                # STEP 68
ACTION: os0.symlink(path3,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: os_REF0.symlink(path3,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 69
ACTION: fd1 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
==================================================
result = os0.path.abspath(path4)                                        # STEP 70
ACTION: result = os0.path.abspath(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path4) 
==================================================
stat1 = os0.stat(path4)                                                 # STEP 71
ACTION: stat1 = os0.stat(path4) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x10384ccd0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.stat(path4) 
=> stat_REF1 = posix.stat_result(st_mode=16877, st_ino=21815174, st_dev=16777224, st_nlink=2, st_uid=501, st_gid=20, st_size=68, st_atime=1507453149, st_mtime=1507453149, st_ctime=1507453149) : <type 'posix.stat_result'>
==================================================
os0.removedirs(path0)                                                   # STEP 72
ACTION: os0.removedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: os_REF0.removedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/epsilon'
==================================================
os0.makedirs(path0)                                                     # STEP 73
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: os_REF0.makedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/epsilon'
==================================================
result = os0.path.isdir(path3)                                          # STEP 74
ACTION: result = os0.path.isdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path3) 
==================================================
stat0 = os0.stat(path0)                                                 # STEP 75
ACTION: stat0 = os0.stat(path0) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: stat_REF0 = os_REF0.stat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
==================================================
os0.removedirs(path0)                                                   # STEP 76
ACTION: os0.removedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: os_REF0.removedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/epsilon'
==================================================
component1 = "delta"                                                    # STEP 77
ACTION: component1 = "delta" 
component1 = 'epsilon' : <type 'str'>
=> component1 = 'delta' : <type 'str'>
==================================================
fd0 = os0.open(path0, os.O_RDWR)                                        # STEP 78
ACTION: fd0 = os0.open(path0, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path0, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
==================================================
str3 += 'b'                                                             # STEP 79
ACTION: str3 += 'b' 
str3 = 'mmbqxflleeozn' : <type 'str'>
=> str3 = 'mmbqxflleeoznb' : <type 'str'>
==================================================
os0.mkdir(path0)                                                        # STEP 80
ACTION: os0.mkdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Object already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.mkdir(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/epsilon'
==================================================
component0 = "delta"                                                    # STEP 81
ACTION: component0 = "delta" 
component0 = 'omega' : <type 'str'>
=> component0 = 'delta' : <type 'str'>
==================================================
os0.link(path3,path3)                                                   # STEP 82
ACTION: os0.link(path3,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path3,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
path3 += "/" + component2                                               # STEP 83
ACTION: path3 += "/" + component2 
component2 = 'e' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
component2 = "f"                                                        # STEP 84
ACTION: component2 = "f" 
component2 = 'e' : <type 'str'>
=> component2 = 'f' : <type 'str'>
==================================================
os0.symlink(path4,path4)                                                # STEP 85
ACTION: os0.symlink(path4,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/omega'
REFERENCE ACTION: os_REF0.symlink(path4,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str2 += 'c'                                                             # STEP 86
ACTION: str2 += 'c' 
str2 = 't' : <type 'str'>
=> str2 = 'tc' : <type 'str'>
==================================================
stat0 = os0.stat(path0)                                                 # STEP 87
ACTION: stat0 = os0.stat(path0) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
REFERENCE ACTION: stat_REF0 = os_REF0.stat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 62] Too many levels of symbolic links: '/Volumes/ramdisk/test/epsilon'
==================================================
result = os0.path.lexists(path0)                                        # STEP 88
ACTION: result = os0.path.lexists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path0) 
==================================================
path4 += "/" + component3                                               # STEP 89
ACTION: path4 += "/" + component3 
component3 = 'gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega/gamma' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 90
ACTION: str2 += 'h' 
str2 = 'tc' : <type 'str'>
=> str2 = 'tch' : <type 'str'>
==================================================
stat3 = os0.lstat(path4)                                                # STEP 91
ACTION: stat3 = os0.lstat(path4) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/gamma' : <type 'str'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/omega/gamma'
REFERENCE ACTION: stat_REF3 = os_REF0.lstat(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/gamma'
==================================================
result = os0.path.isabs(path0)                                          # STEP 92
ACTION: result = os0.path.isabs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path0) 
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 93
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
component3 = "b"                                                        # STEP 94
ACTION: component3 = "b" 
component3 = 'gamma' : <type 'str'>
=> component3 = 'b' : <type 'str'>
==================================================
str3 += 'v'                                                             # STEP 95
ACTION: str3 += 'v' 
str3 = 'mmbqxflleeoznb' : <type 'str'>
=> str3 = 'mmbqxflleeoznbv' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 96
ACTION: str2 += 't' 
str2 = 'tch' : <type 'str'>
=> str2 = 'tcht' : <type 'str'>
==================================================
str2 += 'c'                                                             # STEP 97
ACTION: str2 += 'c' 
str2 = 'tcht' : <type 'str'>
=> str2 = 'tchtc' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 98
ACTION: str2 += 'l' 
str2 = 'tchtc' : <type 'str'>
=> str2 = 'tchtcl' : <type 'str'>
==================================================
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 99
ACTION: fd0 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
os0.link(path4,path0)                                                  # STEP 100
ACTION: os0.link(path4,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/gamma' : <type 'str'>
path0 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/omega/gamma'
REFERENCE ACTION: os_REF0.link(path4,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
os0.removedirs(path3)                                                  # STEP 101
ACTION: os0.removedirs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10384c910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/e' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.removedirs(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/e'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1006c3200>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22931, in act456
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.14591383934 TOTAL RUNTIME
1 EXECUTED
102 TOTAL TEST OPERATIONS
0.056473493576 TIME SPENT EXECUTING TEST OPERATIONS
0.00506162643433 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
6.22272491455e-05 TIME SPENT CHECKING PROPERTIES
0.0565357208252 TOTAL TIME SPENT RUNNING SUT
0.00315690040588 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
