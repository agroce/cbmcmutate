Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.55471.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AttributeError'>, AttributeError("'_FakeStatResult' object has no attribute 'AddEntry'",), <traceback object at 0x1006c3290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9799, in act268
    self.p_os[0].makedirs(self.p_path[2])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3662, in makedirs
    self.filesystem.MakeDirectories(dir_name, mode, exist_ok)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2385, in MakeDirectories
    self.CreateDirectory(dir_name, (mode & (~ self.umask)))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2075, in CreateDirectory
    current_dir.AddEntry(new_dir)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 564, in __getattr__
    return getattr(self.stat_result, item)
Original test has 52 steps

SAVING TEST AS failure.55471.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "d"                                                         # STEP 0
ACTION: component3 = "d" 
component3 = None : <type 'NoneType'>
=> component3 = 'd' : <type 'str'>
==================================================
component0 = "a"                                                         # STEP 1
ACTION: component0 = "a" 
component0 = None : <type 'NoneType'>
=> component0 = 'a' : <type 'str'>
==================================================
component2 = "lambda"                                                    # STEP 2
ACTION: component2 = "lambda" 
component2 = None : <type 'NoneType'>
=> component2 = 'lambda' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 3
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'a'                                                              # STEP 4
ACTION: str0 += 'a' 
str0 = '' : <type 'str'>
=> str0 = 'a' : <type 'str'>
==================================================
component1 = "omega"                                                     # STEP 5
ACTION: component1 = "omega" 
component1 = None : <type 'NoneType'>
=> component1 = 'omega' : <type 'str'>
==================================================
component4 = "g"                                                         # STEP 6
ACTION: component4 = "g" 
component4 = None : <type 'NoneType'>
=> component4 = 'g' : <type 'str'>
==================================================
str0 += 'l'                                                              # STEP 7
ACTION: str0 += 'l' 
str0 = 'a' : <type 'str'>
=> str0 = 'al' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'b'                                                              # STEP 9
ACTION: str0 += 'b' 
str0 = 'al' : <type 'str'>
=> str0 = 'alb' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 10
ACTION: str0 += 'p' 
str0 = 'alb' : <type 'str'>
=> str0 = 'albp' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 11
ACTION: str0 += 'l' 
str0 = 'albp' : <type 'str'>
=> str0 = 'albpl' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 12
ACTION: str0 += 'q' 
str0 = 'albpl' : <type 'str'>
=> str0 = 'albplq' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 13
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
str0 += 'm'                                                             # STEP 14
ACTION: str0 += 'm' 
str0 = 'albplq' : <type 'str'>
=> str0 = 'albplqm' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 15
ACTION: str0 += 'y' 
str0 = 'albplqm' : <type 'str'>
=> str0 = 'albplqmy' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 16
ACTION: str0 += 'd' 
str0 = 'albplqmy' : <type 'str'>
=> str0 = 'albplqmyd' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 17
ACTION: str0 += 'p' 
str0 = 'albplqmyd' : <type 'str'>
=> str0 = 'albplqmydp' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 18
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f90710> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.readlink(path2)                                            # STEP 19
ACTION: result = os0.readlink(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f90710> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Fake filesystem: not a symlink: '/Volumes/ramdisk/test'
REFERENCE ACTION: result_REF = os_REF0.readlink(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 22] Invalid argument: '/Volumes/ramdisk/test'
==================================================
str0 += 'c'                                                             # STEP 20
ACTION: str0 += 'c' 
str0 = 'albplqmydp' : <type 'str'>
=> str0 = 'albplqmydpc' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 21
ACTION: str0 += 'h' 
str0 = 'albplqmydpc' : <type 'str'>
=> str0 = 'albplqmydpch' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 22
ACTION: path2 += "/" + component2 
component2 = 'lambda' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 23
ACTION: str0 += 'h' 
str0 = 'albplqmydpch' : <type 'str'>
=> str0 = 'albplqmydpchh' : <type 'str'>
==================================================
component2 = "b"                                                        # STEP 24
ACTION: component2 = "b" 
component2 = 'lambda' : <type 'str'>
=> component2 = 'b' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.isabs(path2)                                          # STEP 26
ACTION: result = os0.path.isabs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f90710> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path2) 
==================================================
str0 += 'q'                                                             # STEP 27
ACTION: str0 += 'q' 
str0 = 'albplqmydpchh' : <type 'str'>
=> str0 = 'albplqmydpchhq' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 28
ACTION: path2 += "/" + component4 
component4 = 'g' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_RDWR)                                        # STEP 29
ACTION: fd1 = os0.open(path2, os.O_RDWR) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f90710> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_RDWR) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/g'
==================================================
fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 30
ACTION: fd0 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f90710> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF0 = 4 : <type 'int'>
==================================================
result = os0.path.isabs(path2)                                          # STEP 31
ACTION: result = os0.path.isabs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f90710> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isabs(path2) 
==================================================
str0 += 'i'                                                             # STEP 32
ACTION: str0 += 'i' 
str0 = 'albplqmydpchhq' : <type 'str'>
=> str0 = 'albplqmydpchhqi' : <type 'str'>
==================================================
os0.mkdir(path2)                                                        # STEP 33
ACTION: os0.mkdir(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f90710> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test/g'
REFERENCE ACTION: os_REF0.mkdir(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/g'
==================================================
str0 += 'k'                                                             # STEP 34
ACTION: str0 += 'k' 
str0 = 'albplqmydpchhqi' : <type 'str'>
=> str0 = 'albplqmydpchhqik' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 35
ACTION: path2 += "/" + component2 
component2 = 'b' : <type 'str'>
path2 = '/Volumes/ramdisk/test/g' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/g/b' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 36
ACTION: path2 += "/" + component4 
component4 = 'g' : <type 'str'>
path2 = '/Volumes/ramdisk/test/g/b' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/g/b/g' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 37
ACTION: str0 += 'm' 
str0 = 'albplqmydpchhqik' : <type 'str'>
=> str0 = 'albplqmydpchhqikm' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 38
ACTION: component4 = "beta" 
component4 = 'g' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 39
ACTION: str0 += 'c' 
str0 = 'albplqmydpchhqikm' : <type 'str'>
=> str0 = 'albplqmydpchhqikmc' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 40
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str3 = ""                                                               # STEP 41
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 42
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
stat0 = os0.lstat(path2)                                                # STEP 43
ACTION: stat0 = os0.lstat(path2) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f90710> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g/b/g' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in fake filesystem: '/Volumes/ramdisk/test/g/b/g'
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/g/b/g'
==================================================
fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 44
ACTION: fd1 = os0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f90710> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g/b/g' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/g/b'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path2, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/g/b/g'
==================================================
path2 += "/" + component0                                               # STEP 45
ACTION: path2 += "/" + component0 
component0 = 'a' : <type 'str'>
path2 = '/Volumes/ramdisk/test/g/b/g' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/g/b/g/a' : <type 'str'>
==================================================
path2 += "/" + component2                                               # STEP 46
ACTION: path2 += "/" + component2 
component2 = 'b' : <type 'str'>
path2 = '/Volumes/ramdisk/test/g/b/g/a' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/g/b/g/a/b' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 47
ACTION: path2 += "/" + component0 
component0 = 'a' : <type 'str'>
path2 = '/Volumes/ramdisk/test/g/b/g/a/b' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/g/b/g/a/b/a' : <type 'str'>
==================================================
component2 = "phi"                                                      # STEP 48
ACTION: component2 = "phi" 
component2 = 'b' : <type 'str'>
=> component2 = 'phi' : <type 'str'>
==================================================
stat0 = os0.lstat(path2)                                                # STEP 49
ACTION: stat0 = os0.lstat(path2) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f90710> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g/b/g/a/b/a' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in fake filesystem: '/Volumes/ramdisk/test/g/b/g/a/b/a'
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/g/b/g/a/b/a'
==================================================
component0 = "phi"                                                      # STEP 50
ACTION: component0 = "phi" 
component0 = 'a' : <type 'str'>
=> component0 = 'phi' : <type 'str'>
==================================================
os0.makedirs(path2)                                                     # STEP 51
ACTION: os0.makedirs(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x101f90710> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/g/b/g/a/b/a' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.AttributeError'> '_FakeStatResult' object has no attribute 'AddEntry'
ERROR: (<type 'exceptions.AttributeError'>, AttributeError("'_FakeStatResult' object has no attribute 'AddEntry'",), <traceback object at 0x103468e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 9799, in act268
    self.p_os[0].makedirs(self.p_path[2])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3662, in makedirs
    self.filesystem.MakeDirectories(dir_name, mode, exist_ok)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2385, in MakeDirectories
    self.CreateDirectory(dir_name, (mode & (~ self.umask)))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2075, in CreateDirectory
    current_dir.AddEntry(new_dir)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 564, in __getattr__
    return getattr(self.stat_result, item)
STOPPING TESTING DUE TO FAILED TEST
0.125571012497 TOTAL RUNTIME
3 EXECUTED
452 TOTAL TEST OPERATIONS
0.067581653595 TIME SPENT EXECUTING TEST OPERATIONS
0.0221226215363 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000211477279663 TIME SPENT CHECKING PROPERTIES
0.0677931308746 TOTAL TIME SPENT RUNNING SUT
0.00937604904175 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
