Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.49154.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError('expected a string or other character buffer object',), <traceback object at 0x104776170>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17, in newFakeOS
    fs = pyfakefs.fake_filesystem.FakeFilesystem()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 881, in __init__
    self.AddMountPoint(self.root.name, total_size)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 933, in AddMountPoint
    path = self.NormalizePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1340, in NormalizePath
    path = self.NormalizePathSeparator(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1237, in NormalizePathSeparator
    return path.replace(self._alternative_path_separator(path), self._path_separator(path))
Original test has 52 steps

SAVING TEST AS failure.49154.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "alpha"                                                     # STEP 0
ACTION: component4 = "alpha" 
component4 = None : <type 'NoneType'>
=> component4 = 'alpha' : <type 'str'>
==================================================
component1 = "gamma"                                                     # STEP 1
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
component3 = "d"                                                         # STEP 2
ACTION: component3 = "d" 
component3 = None : <type 'NoneType'>
=> component3 = 'd' : <type 'str'>
==================================================
component0 = "epsilon"                                                   # STEP 3
ACTION: component0 = "epsilon" 
component0 = None : <type 'NoneType'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
component2 = "c"                                                         # STEP 4
ACTION: component2 = "c" 
component2 = None : <type 'NoneType'>
=> component2 = 'c' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path2 += "/" + component2                                                # STEP 6
ACTION: path2 += "/" + component2 
component2 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "b"                                                         # STEP 8
ACTION: component2 = "b" 
component2 = 'c' : <type 'str'>
=> component2 = 'b' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 9
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes3 = 0                                                              # STEP 10
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str0 = ""                                                               # STEP 11
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 12
ACTION: str0 += 'o' 
str0 = '' : <type 'str'>
=> str0 = 'o' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 14
ACTION: path3 += "/" + component3 
component3 = 'd' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/d' : <type 'str'>
==================================================
component3 = "alpha"                                                    # STEP 15
ACTION: component3 = "alpha" 
component3 = 'd' : <type 'str'>
=> component3 = 'alpha' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 16
ACTION: str0 += 'z' 
str0 = 'o' : <type 'str'>
=> str0 = 'oz' : <type 'str'>
==================================================
str0 += 'f'                                                             # STEP 17
ACTION: str0 += 'f' 
str0 = 'oz' : <type 'str'>
=> str0 = 'ozf' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 18
ACTION: str0 += 'n' 
str0 = 'ozf' : <type 'str'>
=> str0 = 'ozfn' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 19
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
str0 += 'e'                                                             # STEP 20
ACTION: str0 += 'e' 
str0 = 'ozfn' : <type 'str'>
=> str0 = 'ozfne' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 21
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 22
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str0 += 'z'                                                             # STEP 23
ACTION: str0 += 'z' 
str0 = 'ozfne' : <type 'str'>
=> str0 = 'ozfnez' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 24
ACTION: str0 += 'k' 
str0 = 'ozfnez' : <type 'str'>
=> str0 = 'ozfnezk' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 25
ACTION: str0 += 'g' 
str0 = 'ozfnezk' : <type 'str'>
=> str0 = 'ozfnezkg' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 26
ACTION: str4 += 'r' 
str4 = '' : <type 'str'>
=> str4 = 'r' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 27
ACTION: str0 += 'd' 
str0 = 'ozfnezkg' : <type 'str'>
=> str0 = 'ozfnezkgd' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 28
ACTION: str0 += 'j' 
str0 = 'ozfnezkgd' : <type 'str'>
=> str0 = 'ozfnezkgdj' : <type 'str'>
==================================================
str4 += 's'                                                             # STEP 29
ACTION: str4 += 's' 
str4 = 'r' : <type 'str'>
=> str4 = 'rs' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 30
ACTION: path3 += "/" + component0 
component0 = 'epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test/d' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/d/epsilon' : <type 'str'>
==================================================
str4 += 'r'                                                             # STEP 31
ACTION: str4 += 'r' 
str4 = 'rs' : <type 'str'>
=> str4 = 'rsr' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 32
ACTION: str4 += 't' 
str4 = 'rsr' : <type 'str'>
=> str4 = 'rsrt' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 33
ACTION: str4 += 'g' 
str4 = 'rsrt' : <type 'str'>
=> str4 = 'rsrtg' : <type 'str'>
==================================================
str0 += 'w'                                                             # STEP 34
ACTION: str0 += 'w' 
str0 = 'ozfnezkgdj' : <type 'str'>
=> str0 = 'ozfnezkgdjw' : <type 'str'>
==================================================
component0 = "c"                                                        # STEP 35
ACTION: component0 = "c" 
component0 = 'epsilon' : <type 'str'>
=> component0 = 'c' : <type 'str'>
==================================================
str4 += 'c'                                                             # STEP 36
ACTION: str4 += 'c' 
str4 = 'rsrtg' : <type 'str'>
=> str4 = 'rsrtgc' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 37
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str4 += 'i'                                                             # STEP 38
ACTION: str4 += 'i' 
str4 = 'rsrtgc' : <type 'str'>
=> str4 = 'rsrtgci' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 39
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 40
ACTION: str0 += " " 
str0 = 'ozfnezkgdjw' : <type 'str'>
=> str0 = 'ozfnezkgdjw ' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 41
ACTION: str0 += 'q' 
str0 = 'ozfnezkgdjw ' : <type 'str'>
=> str0 = 'ozfnezkgdjw q' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 42
ACTION: str4 += 'd' 
str4 = 'rsrtgci' : <type 'str'>
=> str4 = 'rsrtgcid' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 43
ACTION: path3 += "/" + component4 
component4 = 'alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test/d/epsilon' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/d/epsilon/alpha' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 44
ACTION: str0 += 'b' 
str0 = 'ozfnezkgdjw q' : <type 'str'>
=> str0 = 'ozfnezkgdjw qb' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 45
ACTION: str0 += 'k' 
str0 = 'ozfnezkgdjw qb' : <type 'str'>
=> str0 = 'ozfnezkgdjw qbk' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 46
ACTION: str4 += 'v' 
str4 = 'rsrtgcid' : <type 'str'>
=> str4 = 'rsrtgcidv' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 47
ACTION: str4 += 'i' 
str4 = 'rsrtgcidv' : <type 'str'>
=> str4 = 'rsrtgcidvi' : <type 'str'>
==================================================
path3 += "/" + component3                                               # STEP 48
ACTION: path3 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test/d/epsilon/alpha' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/d/epsilon/alpha/alpha' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 49
ACTION: path4 += "/" + component1 
component1 = 'gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 50
ACTION: str0 += 'k' 
str0 = 'ozfnezkgdjw qbk' : <type 'str'>
=> str0 = 'ozfnezkgdjw qbkk' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 51
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> expected a string or other character buffer object
ERROR: (<type 'exceptions.TypeError'>, TypeError('expected a string or other character buffer object',), <traceback object at 0x105ddd710>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17, in newFakeOS
    fs = pyfakefs.fake_filesystem.FakeFilesystem()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 881, in __init__
    self.AddMountPoint(self.root.name, total_size)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 933, in AddMountPoint
    path = self.NormalizePath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1340, in NormalizePath
    path = self.NormalizePathSeparator(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1237, in NormalizePathSeparator
    return path.replace(self._alternative_path_separator(path), self._path_separator(path))
STOPPING TESTING DUE TO FAILED TEST
0.0819189548492 TOTAL RUNTIME
1 EXECUTED
52 TOTAL TEST OPERATIONS
0.0016713142395 TIME SPENT EXECUTING TEST OPERATIONS
0.00760936737061 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.36170196533e-05 TIME SPENT CHECKING PROPERTIES
0.00170493125916 TOTAL TIME SPENT RUNNING SUT
0.00972580909729 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
