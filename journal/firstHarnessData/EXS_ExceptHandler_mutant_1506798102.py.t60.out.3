Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.36350.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("'FakeOsModule' object is not iterable",), <traceback object at 0x1045c2cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 24, in newFakeOS
    fakeOS = pyfakefs.fake_filesystem.FakeOsModule(fs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1717, in __init__
    self.path = FakePathModule(self.filesystem, self)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1464, in __init__
    self._os_path.os, self.os = os_module
Original test has 91 steps

SAVING TEST AS failure.36350.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "lambda"                                                    # STEP 0
ACTION: component4 = "lambda" 
component4 = None : <type 'NoneType'>
=> component4 = 'lambda' : <type 'str'>
==================================================
component2 = "c"                                                         # STEP 1
ACTION: component2 = "c" 
component2 = None : <type 'NoneType'>
=> component2 = 'c' : <type 'str'>
==================================================
component1 = "phi"                                                       # STEP 2
ACTION: component1 = "phi" 
component1 = None : <type 'NoneType'>
=> component1 = 'phi' : <type 'str'>
==================================================
component3 = "e"                                                         # STEP 3
ACTION: component3 = "e" 
component3 = None : <type 'NoneType'>
=> component3 = 'e' : <type 'str'>
==================================================
component0 = "f"                                                         # STEP 4
ACTION: component0 = "f" 
component0 = None : <type 'NoneType'>
=> component0 = 'f' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 5
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 's'                                                              # STEP 6
ACTION: str2 += 's' 
str2 = '' : <type 'str'>
=> str2 = 's' : <type 'str'>
==================================================
str2 += 'w'                                                              # STEP 7
ACTION: str2 += 'w' 
str2 = 's' : <type 'str'>
=> str2 = 'sw' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 8
ACTION: str2 = "" 
str2 = 'sw' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'q'                                                              # STEP 9
ACTION: str2 += 'q' 
str2 = '' : <type 'str'>
=> str2 = 'q' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 10
ACTION: str2 += 'y' 
str2 = 'q' : <type 'str'>
=> str2 = 'qy' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 11
ACTION: str2 += 'p' 
str2 = 'qy' : <type 'str'>
=> str2 = 'qyp' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 12
ACTION: str2 += " " 
str2 = 'qyp' : <type 'str'>
=> str2 = 'qyp ' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 13
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str2 += 'd'                                                             # STEP 14
ACTION: str2 += 'd' 
str2 = 'qyp ' : <type 'str'>
=> str2 = 'qyp d' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 15
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 16
ACTION: str2 += 'i' 
str2 = 'qyp d' : <type 'str'>
=> str2 = 'qyp di' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 17
ACTION: str2 += 'v' 
str2 = 'qyp di' : <type 'str'>
=> str2 = 'qyp div' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 18
ACTION: str2 += 'v' 
str2 = 'qyp div' : <type 'str'>
=> str2 = 'qyp divv' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 19
ACTION: path4 += "/" + component3 
component3 = 'e' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
path4 += "/" + component4                                               # STEP 20
ACTION: path4 += "/" + component4 
component4 = 'lambda' : <type 'str'>
path4 = '/Volumes/ramdisk/test/e' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/e/lambda' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 21
ACTION: str2 += 'r' 
str2 = 'qyp divv' : <type 'str'>
=> str2 = 'qyp divvr' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 22
ACTION: str2 += 'f' 
str2 = 'qyp divvr' : <type 'str'>
=> str2 = 'qyp divvrf' : <type 'str'>
==================================================
component3 = "e"                                                        # STEP 23
ACTION: component3 = "e" 
component3 = 'e' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 24
ACTION: component4 = "beta" 
component4 = 'lambda' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 25
ACTION: str2 += 'g' 
str2 = 'qyp divvrf' : <type 'str'>
=> str2 = 'qyp divvrfg' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 26
ACTION: str2 += 'q' 
str2 = 'qyp divvrfg' : <type 'str'>
=> str2 = 'qyp divvrfgq' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 27
ACTION: str2 += 'j' 
str2 = 'qyp divvrfgq' : <type 'str'>
=> str2 = 'qyp divvrfgqj' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 28
ACTION: str2 += 'z' 
str2 = 'qyp divvrfgqj' : <type 'str'>
=> str2 = 'qyp divvrfgqjz' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 29
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 30
ACTION: str1 += 'w' 
str1 = '' : <type 'str'>
=> str1 = 'w' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 31
ACTION: str1 += 'c' 
str1 = 'w' : <type 'str'>
=> str1 = 'wc' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 32
ACTION: str1 += 'j' 
str1 = 'wc' : <type 'str'>
=> str1 = 'wcj' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 33
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'x'                                                             # STEP 34
ACTION: str3 += 'x' 
str3 = '' : <type 'str'>
=> str3 = 'x' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 35
ACTION: str3 += 'e' 
str3 = 'x' : <type 'str'>
=> str3 = 'xe' : <type 'str'>
==================================================
str2 += 'v'                                                             # STEP 36
ACTION: str2 += 'v' 
str2 = 'qyp divvrfgqjz' : <type 'str'>
=> str2 = 'qyp divvrfgqjzv' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 37
ACTION: str2 += 'a' 
str2 = 'qyp divvrfgqjzv' : <type 'str'>
=> str2 = 'qyp divvrfgqjzva' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 38
ACTION: str2 += " " 
str2 = 'qyp divvrfgqjzva' : <type 'str'>
=> str2 = 'qyp divvrfgqjzva ' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 39
ACTION: str2 += 'd' 
str2 = 'qyp divvrfgqjzva ' : <type 'str'>
=> str2 = 'qyp divvrfgqjzva d' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 40
ACTION: str1 += 'd' 
str1 = 'wcj' : <type 'str'>
=> str1 = 'wcjd' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 41
ACTION: str1 += 'z' 
str1 = 'wcjd' : <type 'str'>
=> str1 = 'wcjdz' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 42
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 43
ACTION: str4 += 'z' 
str4 = '' : <type 'str'>
=> str4 = 'z' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 44
ACTION: str1 += 'r' 
str1 = 'wcjdz' : <type 'str'>
=> str1 = 'wcjdzr' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 45
ACTION: str2 += 's' 
str2 = 'qyp divvrfgqjzva d' : <type 'str'>
=> str2 = 'qyp divvrfgqjzva ds' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 46
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 47
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/e/lambda' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'p'                                                             # STEP 48
ACTION: str1 += 'p' 
str1 = 'wcjdzr' : <type 'str'>
=> str1 = 'wcjdzrp' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 49
ACTION: str4 += 'b' 
str4 = 'z' : <type 'str'>
=> str4 = 'zb' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 50
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 51
ACTION: str1 += 't' 
str1 = 'wcjdzrp' : <type 'str'>
=> str1 = 'wcjdzrpt' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 52
ACTION: str4 += 't' 
str4 = 'zb' : <type 'str'>
=> str4 = 'zbt' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 53
ACTION: str3 += 'o' 
str3 = 'xe' : <type 'str'>
=> str3 = 'xeo' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 54
ACTION: str2 = "" 
str2 = 'qyp divvrfgqjzva ds' : <type 'str'>
=> str2 = '' : <type 'str'>
==================================================
path4 += "/" + component4                                               # STEP 55
ACTION: path4 += "/" + component4 
component4 = 'beta' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 56
ACTION: str2 += 'o' 
str2 = '' : <type 'str'>
=> str2 = 'o' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 57
ACTION: str3 += 'g' 
str3 = 'xeo' : <type 'str'>
=> str3 = 'xeog' : <type 'str'>
==================================================
component4 = "phi"                                                      # STEP 58
ACTION: component4 = "phi" 
component4 = 'beta' : <type 'str'>
=> component4 = 'phi' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 59
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str4 += 'l'                                                             # STEP 60
ACTION: str4 += 'l' 
str4 = 'zbt' : <type 'str'>
=> str4 = 'zbtl' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 61
ACTION: str1 += 'w' 
str1 = 'wcjdzrpt' : <type 'str'>
=> str1 = 'wcjdzrptw' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 62
ACTION: str4 += 'g' 
str4 = 'zbtl' : <type 'str'>
=> str4 = 'zbtlg' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 63
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str1 += 'j'                                                             # STEP 64
ACTION: str1 += 'j' 
str1 = 'wcjdzrptw' : <type 'str'>
=> str1 = 'wcjdzrptwj' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 65
ACTION: str1 += 'l' 
str1 = 'wcjdzrptwj' : <type 'str'>
=> str1 = 'wcjdzrptwjl' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 66
ACTION: str3 += 't' 
str3 = 'xeog' : <type 'str'>
=> str3 = 'xeogt' : <type 'str'>
==================================================
str4 += 'u'                                                             # STEP 67
ACTION: str4 += 'u' 
str4 = 'zbtlg' : <type 'str'>
=> str4 = 'zbtlgu' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 68
ACTION: str1 = "" 
str1 = 'wcjdzrptwjl' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 69
ACTION: str1 += 'f' 
str1 = '' : <type 'str'>
=> str1 = 'f' : <type 'str'>
==================================================
str3 += 'q'                                                             # STEP 70
ACTION: str3 += 'q' 
str3 = 'xeogt' : <type 'str'>
=> str3 = 'xeogtq' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 71
ACTION: str1 += 'u' 
str1 = 'f' : <type 'str'>
=> str1 = 'fu' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 72
ACTION: path3 += "/" + component4 
component4 = 'phi' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 73
ACTION: str4 += 'g' 
str4 = 'zbtlgu' : <type 'str'>
=> str4 = 'zbtlgug' : <type 'str'>
==================================================
component4 = "delta"                                                    # STEP 74
ACTION: component4 = "delta" 
component4 = 'phi' : <type 'str'>
=> component4 = 'delta' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 75
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str3 += 'f'                                                             # STEP 76
ACTION: str3 += 'f' 
str3 = 'xeogtq' : <type 'str'>
=> str3 = 'xeogtqf' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 77
ACTION: str1 += 'x' 
str1 = 'fu' : <type 'str'>
=> str1 = 'fux' : <type 'str'>
==================================================
str4 += 'k'                                                             # STEP 78
ACTION: str4 += 'k' 
str4 = 'zbtlgug' : <type 'str'>
=> str4 = 'zbtlgugk' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 79
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str3 += " "                                                             # STEP 80
ACTION: str3 += " " 
str3 = 'xeogtqf' : <type 'str'>
=> str3 = 'xeogtqf ' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 81
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 82
ACTION: str1 += 'g' 
str1 = 'fux' : <type 'str'>
=> str1 = 'fuxg' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 83
ACTION: str3 += 'r' 
str3 = 'xeogtqf ' : <type 'str'>
=> str3 = 'xeogtqf r' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 84
ACTION: str2 += 'z' 
str2 = 'o' : <type 'str'>
=> str2 = 'oz' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 85
ACTION: str2 += 't' 
str2 = 'oz' : <type 'str'>
=> str2 = 'ozt' : <type 'str'>
==================================================
str4 += 'j'                                                             # STEP 86
ACTION: str4 += 'j' 
str4 = 'zbtlgugk' : <type 'str'>
=> str4 = 'zbtlgugkj' : <type 'str'>
==================================================
str4 += 'o'                                                             # STEP 87
ACTION: str4 += 'o' 
str4 = 'zbtlgugkj' : <type 'str'>
=> str4 = 'zbtlgugkjo' : <type 'str'>
==================================================
str4 += 'm'                                                             # STEP 88
ACTION: str4 += 'm' 
str4 = 'zbtlgugkjo' : <type 'str'>
=> str4 = 'zbtlgugkjom' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 89
ACTION: str4 += 'y' 
str4 = 'zbtlgugkjom' : <type 'str'>
=> str4 = 'zbtlgugkjomy' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 90
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> 'FakeOsModule' object is not iterable
ERROR: (<type 'exceptions.TypeError'>, TypeError("'FakeOsModule' object is not iterable",), <traceback object at 0x105c689e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 66, in act0
    self.p_os[0] = newFakeOS()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 24, in newFakeOS
    fakeOS = pyfakefs.fake_filesystem.FakeOsModule(fs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1717, in __init__
    self.path = FakePathModule(self.filesystem, self)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1464, in __init__
    self._os_path.os, self.os = os_module
STOPPING TESTING DUE TO FAILED TEST
0.049553155899 TOTAL RUNTIME
2 EXECUTED
291 TOTAL TEST OPERATIONS
0.00489282608032 TIME SPENT EXECUTING TEST OPERATIONS
0.0168542861938 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000139951705933 TIME SPENT CHECKING PROPERTIES
0.00503277778625 TOTAL TIME SPENT RUNNING SUT
0.00656175613403 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
