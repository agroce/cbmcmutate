Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.57213.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.ValueError'>, ValueError("Invalid mode: 'b'",), <traceback object at 0x102851e60>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17967, in act386
    self.p_fd[1] = self.p_os[0].open(self.p_path[0], os.O_WRONLY | os.O_APPEND)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4512, in Call
    raise ValueError(('Invalid mode: %r' % orig_modes))
Original test has 40 steps

SAVING TEST AS failure.57213.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "alpha"                                                     # STEP 0
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
component0 = "f"                                                         # STEP 1
ACTION: component0 = "f" 
component0 = None : <type 'NoneType'>
=> component0 = 'f' : <type 'str'>
==================================================
component1 = "d"                                                         # STEP 2
ACTION: component1 = "d" 
component1 = None : <type 'NoneType'>
=> component1 = 'd' : <type 'str'>
==================================================
component2 = "c"                                                         # STEP 3
ACTION: component2 = "c" 
component2 = None : <type 'NoneType'>
=> component2 = 'c' : <type 'str'>
==================================================
component4 = "beta"                                                      # STEP 4
ACTION: component4 = "beta" 
component4 = None : <type 'NoneType'>
=> component4 = 'beta' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 5
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'i'                                                              # STEP 6
ACTION: str0 += 'i' 
str0 = '' : <type 'str'>
=> str0 = 'i' : <type 'str'>
==================================================
str0 += 'u'                                                              # STEP 7
ACTION: str0 += 'u' 
str0 = 'i' : <type 'str'>
=> str0 = 'iu' : <type 'str'>
==================================================
str0 += 'q'                                                              # STEP 8
ACTION: str0 += 'q' 
str0 = 'iu' : <type 'str'>
=> str0 = 'iuq' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 9
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b2e590> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str0 += 'g'                                                             # STEP 10
ACTION: str0 += 'g' 
str0 = 'iuq' : <type 'str'>
=> str0 = 'iuqg' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 11
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
os0.symlink(path0,path0)                                                # STEP 12
ACTION: os0.symlink(path0,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b2e590> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.symlink(path0,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
result = os0.path.isdir(path0)                                          # STEP 13
ACTION: result = os0.path.isdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b2e590> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path0) 
==================================================
str3 = ""                                                               # STEP 14
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 15
ACTION: str3 += 'e' 
str3 = '' : <type 'str'>
=> str3 = 'e' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 16
ACTION: str3 += " " 
str3 = 'e' : <type 'str'>
=> str3 = 'e ' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 17
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str3 += 'l'                                                             # STEP 18
ACTION: str3 += 'l' 
str3 = 'e ' : <type 'str'>
=> str3 = 'e l' : <type 'str'>
==================================================
str3 += 'u'                                                             # STEP 19
ACTION: str3 += 'u' 
str3 = 'e l' : <type 'str'>
=> str3 = 'e lu' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 20
ACTION: str0 += 'n' 
str0 = 'iuqg' : <type 'str'>
=> str0 = 'iuqgn' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 21
ACTION: str0 += 'h' 
str0 = 'iuqgn' : <type 'str'>
=> str0 = 'iuqgnh' : <type 'str'>
==================================================
str3 += 'n'                                                             # STEP 22
ACTION: str3 += 'n' 
str3 = 'e lu' : <type 'str'>
=> str3 = 'e lun' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 23
ACTION: str3 += 'o' 
str3 = 'e lun' : <type 'str'>
=> str3 = 'e luno' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 24
ACTION: str3 += 'y' 
str3 = 'e luno' : <type 'str'>
=> str3 = 'e lunoy' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 25
ACTION: str3 += 'p' 
str3 = 'e lunoy' : <type 'str'>
=> str3 = 'e lunoyp' : <type 'str'>
==================================================
str3 += 'f'                                                             # STEP 26
ACTION: str3 += 'f' 
str3 = 'e lunoyp' : <type 'str'>
=> str3 = 'e lunoypf' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 27
ACTION: str0 += 'l' 
str0 = 'iuqgnh' : <type 'str'>
=> str0 = 'iuqgnhl' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 28
ACTION: str3 += 'y' 
str3 = 'e lunoypf' : <type 'str'>
=> str3 = 'e lunoypfy' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 29
ACTION: str3 += 'p' 
str3 = 'e lunoypfy' : <type 'str'>
=> str3 = 'e lunoypfyp' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 30
ACTION: path0 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 31
ACTION: str0 += 'l' 
str0 = 'iuqgnhl' : <type 'str'>
=> str0 = 'iuqgnhll' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 32
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'h'                                                             # STEP 33
ACTION: str3 += 'h' 
str3 = 'e lunoypfyp' : <type 'str'>
=> str3 = 'e lunoypfyph' : <type 'str'>
==================================================
stat0 = os0.stat(path0)                                                 # STEP 34
ACTION: stat0 = os0.stat(path0) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b2e590> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/alpha'
REFERENCE ACTION: stat_REF0 = os_REF0.stat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha'
==================================================
component3 = "omega"                                                    # STEP 35
ACTION: component3 = "omega" 
component3 = 'alpha' : <type 'str'>
=> component3 = 'omega' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 36
ACTION: str0 += 'b' 
str0 = 'iuqgnhll' : <type 'str'>
=> str0 = 'iuqgnhllb' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 37
ACTION: str3 += " " 
str3 = 'e lunoypfyph' : <type 'str'>
=> str3 = 'e lunoypfyph ' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 38
ACTION: str3 += " " 
str3 = 'e lunoypfyph ' : <type 'str'>
=> str3 = 'e lunoypfyph  ' : <type 'str'>
==================================================
fd1 = os0.open(path0, os.O_WRONLY | os.O_APPEND)                        # STEP 39
ACTION: fd1 = os0.open(path0, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b2e590> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/alpha' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.ValueError'> Invalid mode: 'b'
ERROR: (<type 'exceptions.ValueError'>, ValueError("Invalid mode: 'b'",), <traceback object at 0x101f2b128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 17967, in act386
    self.p_fd[1] = self.p_os[0].open(self.p_path[0], os.O_WRONLY | os.O_APPEND)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4512, in Call
    raise ValueError(('Invalid mode: %r' % orig_modes))
STOPPING TESTING DUE TO FAILED TEST
0.0470418930054 TOTAL RUNTIME
2 EXECUTED
240 TOTAL TEST OPERATIONS
0.00635361671448 TIME SPENT EXECUTING TEST OPERATIONS
0.0116827487946 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000102043151855 TIME SPENT CHECKING PROPERTIES
0.00645565986633 TOTAL TIME SPENT RUNNING SUT
0.00635528564453 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
