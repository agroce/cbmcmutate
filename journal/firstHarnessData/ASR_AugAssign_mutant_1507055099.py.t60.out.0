Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.61180.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102ec6440>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22295, in act446
    self.p_os[0].remove(self.p_path[3])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3569, in remove
    self.filesystem.RemoveFile(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2485, in RemoveFile
    self.RemoveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2036, in RemoveObject
    target_directory.RemoveEntry(basename)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 740, in RemoveEntry
    assert (entry.st_nlink >= 0)
Original test has 58 steps

SAVING TEST AS failure.61180.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component1 = "b"                                                         # STEP 0
ACTION: component1 = "b" 
component1 = None : <type 'NoneType'>
=> component1 = 'b' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 1
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
component2 = "b"                                                         # STEP 2
ACTION: component2 = "b" 
component2 = None : <type 'NoneType'>
=> component2 = 'b' : <type 'str'>
==================================================
component4 = "gamma"                                                     # STEP 3
ACTION: component4 = "gamma" 
component4 = None : <type 'NoneType'>
=> component4 = 'gamma' : <type 'str'>
==================================================
str1 += 'n'                                                              # STEP 4
ACTION: str1 += 'n' 
str1 = '' : <type 'str'>
=> str1 = 'n' : <type 'str'>
==================================================
str1 += 'v'                                                              # STEP 5
ACTION: str1 += 'v' 
str1 = 'n' : <type 'str'>
=> str1 = 'nv' : <type 'str'>
==================================================
str1 += 'l'                                                              # STEP 6
ACTION: str1 += 'l' 
str1 = 'nv' : <type 'str'>
=> str1 = 'nvl' : <type 'str'>
==================================================
component3 = "alpha"                                                     # STEP 7
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
str1 += 'r'                                                              # STEP 8
ACTION: str1 += 'r' 
str1 = 'nvl' : <type 'str'>
=> str1 = 'nvlr' : <type 'str'>
==================================================
component0 = "f"                                                         # STEP 9
ACTION: component0 = "f" 
component0 = None : <type 'NoneType'>
=> component0 = 'f' : <type 'str'>
==================================================
str1 += 'e'                                                             # STEP 10
ACTION: str1 += 'e' 
str1 = 'nvlr' : <type 'str'>
=> str1 = 'nvlre' : <type 'str'>
==================================================
str1 += 'g'                                                             # STEP 11
ACTION: str1 += 'g' 
str1 = 'nvlre' : <type 'str'>
=> str1 = 'nvlreg' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 12
ACTION: str1 += 'x' 
str1 = 'nvlreg' : <type 'str'>
=> str1 = 'nvlregx' : <type 'str'>
==================================================
bytes4 = 0                                                              # STEP 13
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
bytes3 = 0                                                              # STEP 14
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str1 += 'r'                                                             # STEP 15
ACTION: str1 += 'r' 
str1 = 'nvlregx' : <type 'str'>
=> str1 = 'nvlregxr' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 16
ACTION: str1 += 'b' 
str1 = 'nvlregxr' : <type 'str'>
=> str1 = 'nvlregxrb' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 17
ACTION: str1 += 'x' 
str1 = 'nvlregxrb' : <type 'str'>
=> str1 = 'nvlregxrbx' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 18
ACTION: str1 += 'o' 
str1 = 'nvlregxrbx' : <type 'str'>
=> str1 = 'nvlregxrbxo' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 19
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 20
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 21
ACTION: path3 += "/" + component2 
component2 = 'b' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
==================================================
str3 += 'w'                                                             # STEP 22
ACTION: str3 += 'w' 
str3 = '' : <type 'str'>
=> str3 = 'w' : <type 'str'>
==================================================
component2 = "omega"                                                    # STEP 23
ACTION: component2 = "omega" 
component2 = 'b' : <type 'str'>
=> component2 = 'omega' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 24
ACTION: str1 += 'q' 
str1 = 'nvlregxrbxo' : <type 'str'>
=> str1 = 'nvlregxrbxoq' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 25
ACTION: str1 += 's' 
str1 = 'nvlregxrbxoq' : <type 'str'>
=> str1 = 'nvlregxrbxoqs' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 26
ACTION: str1 += 't' 
str1 = 'nvlregxrbxoqs' : <type 'str'>
=> str1 = 'nvlregxrbxoqst' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 27
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'o'                                                             # STEP 28
ACTION: str0 += 'o' 
str0 = '' : <type 'str'>
=> str0 = 'o' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 29
ACTION: str0 += 'c' 
str0 = 'o' : <type 'str'>
=> str0 = 'oc' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 30
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024f0910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str2 = ""                                                               # STEP 31
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 32
ACTION: str1 += 'z' 
str1 = 'nvlregxrbxoqst' : <type 'str'>
=> str1 = 'nvlregxrbxoqstz' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 33
ACTION: str0 += 'j' 
str0 = 'oc' : <type 'str'>
=> str0 = 'ocj' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 34
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_EXCL)                           # STEP 35
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024f0910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
str2 += 'f'                                                             # STEP 36
ACTION: str2 += 'f' 
str2 = '' : <type 'str'>
=> str2 = 'f' : <type 'str'>
==================================================
str3 += 'r'                                                             # STEP 37
ACTION: str3 += 'r' 
str3 = 'w' : <type 'str'>
=> str3 = 'wr' : <type 'str'>
==================================================
stat2 = os0.fstat(fd1)                                                  # STEP 38
ACTION: stat2 = os0.fstat(fd1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024f0910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103c6d810> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF1) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=16052875, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507372010, st_mtime=1507372010, st_ctime=1507372010) : <type 'posix.stat_result'>
==================================================
result = os0.path.islink(path3)                                         # STEP 39
ACTION: result = os0.path.islink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024f0910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path3) 
==================================================
str1 += 'a'                                                             # STEP 40
ACTION: str1 += 'a' 
str1 = 'nvlregxrbxoqstz' : <type 'str'>
=> str1 = 'nvlregxrbxoqstza' : <type 'str'>
==================================================
result = os0.path.exists(path3)                                         # STEP 41
ACTION: result = os0.path.exists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024f0910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path3) 
==================================================
os0.rmdir(path3)                                                        # STEP 42
ACTION: os0.rmdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024f0910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Fake os module: not a directory: '/Volumes/ramdisk/test/b'
REFERENCE ACTION: os_REF0.rmdir(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/b'
==================================================
fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 43
ACTION: fd0 = os0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024f0910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/b'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/b'
==================================================
str1 += 'h'                                                             # STEP 44
ACTION: str1 += 'h' 
str1 = 'nvlregxrbxoqstza' : <type 'str'>
=> str1 = 'nvlregxrbxoqstzah' : <type 'str'>
==================================================
str0 += 'b'                                                             # STEP 45
ACTION: str0 += 'b' 
str0 = 'ocj' : <type 'str'>
=> str0 = 'ocjb' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 46
ACTION: str1 += 'b' 
str1 = 'nvlregxrbxoqstzah' : <type 'str'>
=> str1 = 'nvlregxrbxoqstzahb' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 47
ACTION: str1 += 'c' 
str1 = 'nvlregxrbxoqstzahb' : <type 'str'>
=> str1 = 'nvlregxrbxoqstzahbc' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 48
ACTION: str1 += 's' 
str1 = 'nvlregxrbxoqstzahbc' : <type 'str'>
=> str1 = 'nvlregxrbxoqstzahbcs' : <type 'str'>
==================================================
result = os0.path.abspath(path3)                                        # STEP 49
ACTION: result = os0.path.abspath(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024f0910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path3) 
==================================================
result = stat2.st_size                                                  # STEP 50
ACTION: result = stat2.st_size 
stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103c6d810> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF2 = posix.stat_result(st_mode=33261, st_ino=16052875, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507372010, st_mtime=1507372010, st_ctime=1507372010) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF2.st_size 
==================================================
fd0 = os0.open(path3, os.O_CREAT)                                       # STEP 51
ACTION: fd0 = os0.open(path3, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024f0910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path3, os.O_CREAT) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
str1 += 'p'                                                             # STEP 52
ACTION: str1 += 'p' 
str1 = 'nvlregxrbxoqstzahbcs' : <type 'str'>
=> str1 = 'nvlregxrbxoqstzahbcsp' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 53
ACTION: str3 += 'k' 
str3 = 'wr' : <type 'str'>
=> str3 = 'wrk' : <type 'str'>
==================================================
stat1 = os0.fstat(fd0)                                                  # STEP 54
ACTION: stat1 = os0.fstat(fd0) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024f0910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103c6d710> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.fstat(fd_REF0) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=16052875, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507372010, st_mtime=1507372010, st_ctime=1507372010) : <type 'posix.stat_result'>
==================================================
str1 += 's'                                                             # STEP 55
ACTION: str1 += 's' 
str1 = 'nvlregxrbxoqstzahbcsp' : <type 'str'>
=> str1 = 'nvlregxrbxoqstzahbcsps' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 56
ACTION: str1 += " " 
str1 = 'nvlregxrbxoqstzahbcsps' : <type 'str'>
=> str1 = 'nvlregxrbxoqstzahbcsps ' : <type 'str'>
==================================================
os0.remove(path3)                                                       # STEP 57
ACTION: os0.remove(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1024f0910> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.AssertionError'> 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102e14e18>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22295, in act446
    self.p_os[0].remove(self.p_path[3])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3569, in remove
    self.filesystem.RemoveFile(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2485, in RemoveFile
    self.RemoveObject(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2036, in RemoveObject
    target_directory.RemoveEntry(basename)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 740, in RemoveEntry
    assert (entry.st_nlink >= 0)
STOPPING TESTING DUE TO FAILED TEST
0.0408711433411 TOTAL RUNTIME
1 EXECUTED
58 TOTAL TEST OPERATIONS
0.00577569007874 TIME SPENT EXECUTING TEST OPERATIONS
0.0048975944519 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.31401824951e-05 TIME SPENT CHECKING PROPERTIES
0.00580883026123 TOTAL TIME SPENT RUNNING SUT
0.00433611869812 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
