Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.60237.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1041aa878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 13863, in act330
    assert (type(raised) == type(refRaised))
Original test has 64 steps

SAVING TEST AS failure.60237.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "omega"                                                     # STEP 0
ACTION: component4 = "omega" 
component4 = None : <type 'NoneType'>
=> component4 = 'omega' : <type 'str'>
==================================================
component2 = "h"                                                         # STEP 1
ACTION: component2 = "h" 
component2 = None : <type 'NoneType'>
=> component2 = 'h' : <type 'str'>
==================================================
component3 = "beta"                                                      # STEP 2
ACTION: component3 = "beta" 
component3 = None : <type 'NoneType'>
=> component3 = 'beta' : <type 'str'>
==================================================
bytes4 = 0                                                               # STEP 3
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component1 = "b"                                                         # STEP 4
ACTION: component1 = "b" 
component1 = None : <type 'NoneType'>
=> component1 = 'b' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 = ""                                                                # STEP 6
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 7
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component0 = "omega"                                                     # STEP 8
ACTION: component0 = "omega" 
component0 = None : <type 'NoneType'>
=> component0 = 'omega' : <type 'str'>
==================================================
str3 += 'u'                                                              # STEP 9
ACTION: str3 += 'u' 
str3 = '' : <type 'str'>
=> str3 = 'u' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 10
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
bytes3 += 1                                                             # STEP 11
ACTION: bytes3 += 1 
bytes3 = 0 : <type 'int'>
=> bytes3 = 1 : <type 'int'>
==================================================
str2 = ""                                                               # STEP 12
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 13
ACTION: str2 += 's' 
str2 = '' : <type 'str'>
=> str2 = 's' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 14
ACTION: str2 += 'j' 
str2 = 's' : <type 'str'>
=> str2 = 'sj' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 15
ACTION: str2 += 'i' 
str2 = 'sj' : <type 'str'>
=> str2 = 'sji' : <type 'str'>
==================================================
bytes4 += 1                                                             # STEP 16
ACTION: bytes4 += 1 
bytes4 = 0 : <type 'int'>
=> bytes4 = 1 : <type 'int'>
==================================================
str3 += 'v'                                                             # STEP 17
ACTION: str3 += 'v' 
str3 = 'u' : <type 'str'>
=> str3 = 'uv' : <type 'str'>
==================================================
bytes3 += 1                                                             # STEP 18
ACTION: bytes3 += 1 
bytes3 = 1 : <type 'int'>
=> bytes3 = 2 : <type 'int'>
==================================================
str3 += 'w'                                                             # STEP 19
ACTION: str3 += 'w' 
str3 = 'uv' : <type 'str'>
=> str3 = 'uvw' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 20
ACTION: str2 += 'o' 
str2 = 'sji' : <type 'str'>
=> str2 = 'sjio' : <type 'str'>
==================================================
path4 += "/" + component4                                               # STEP 21
ACTION: path4 += "/" + component4 
component4 = 'omega' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
==================================================
str2 += 's'                                                             # STEP 22
ACTION: str2 += 's' 
str2 = 'sjio' : <type 'str'>
=> str2 = 'sjios' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 23
ACTION: str3 += 'k' 
str3 = 'uvw' : <type 'str'>
=> str3 = 'uvwk' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 24
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 25
ACTION: str1 += 'q' 
str1 = '' : <type 'str'>
=> str1 = 'q' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 26
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str2 += 'j'                                                             # STEP 27
ACTION: str2 += 'j' 
str2 = 'sjios' : <type 'str'>
=> str2 = 'sjiosj' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 28
ACTION: str1 += 'x' 
str1 = 'q' : <type 'str'>
=> str1 = 'qx' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 29
ACTION: str2 += 'm' 
str2 = 'sjiosj' : <type 'str'>
=> str2 = 'sjiosjm' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 30
ACTION: str2 += 'b' 
str2 = 'sjiosjm' : <type 'str'>
=> str2 = 'sjiosjmb' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 31
ACTION: str1 += " " 
str1 = 'qx' : <type 'str'>
=> str1 = 'qx ' : <type 'str'>
==================================================
str3 += 'e'                                                             # STEP 32
ACTION: str3 += 'e' 
str3 = 'uvwk' : <type 'str'>
=> str3 = 'uvwke' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 33
ACTION: str2 += 'n' 
str2 = 'sjiosjmb' : <type 'str'>
=> str2 = 'sjiosjmbn' : <type 'str'>
==================================================
component4 = "alpha"                                                    # STEP 34
ACTION: component4 = "alpha" 
component4 = 'omega' : <type 'str'>
=> component4 = 'alpha' : <type 'str'>
==================================================
str1 += 'k'                                                             # STEP 35
ACTION: str1 += 'k' 
str1 = 'qx ' : <type 'str'>
=> str1 = 'qx k' : <type 'str'>
==================================================
bytes0 = 0                                                              # STEP 36
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
path2 += "/" + component2                                               # STEP 37
ACTION: path2 += "/" + component2 
component2 = 'h' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 38
ACTION: str1 += 'x' 
str1 = 'qx k' : <type 'str'>
=> str1 = 'qx kx' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 39
ACTION: str2 += 'g' 
str2 = 'sjiosjmbn' : <type 'str'>
=> str2 = 'sjiosjmbng' : <type 'str'>
==================================================
str3 += " "                                                             # STEP 40
ACTION: str3 += " " 
str3 = 'uvwke' : <type 'str'>
=> str3 = 'uvwke ' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 41
ACTION: str1 += 'j' 
str1 = 'qx kx' : <type 'str'>
=> str1 = 'qx kxj' : <type 'str'>
==================================================
str3 += 'o'                                                             # STEP 42
ACTION: str3 += 'o' 
str3 = 'uvwke ' : <type 'str'>
=> str3 = 'uvwke o' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 43
ACTION: str2 += 'w' 
str2 = 'sjiosjmbng' : <type 'str'>
=> str2 = 'sjiosjmbngw' : <type 'str'>
==================================================
path4 += "/" + component4                                               # STEP 44
ACTION: path4 += "/" + component4 
component4 = 'alpha' : <type 'str'>
path4 = '/Volumes/ramdisk/test/omega' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega/alpha' : <type 'str'>
==================================================
str2 += 'i'                                                             # STEP 45
ACTION: str2 += 'i' 
str2 = 'sjiosjmbngw' : <type 'str'>
=> str2 = 'sjiosjmbngwi' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 46
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/h' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "phi"                                                      # STEP 47
ACTION: component2 = "phi" 
component2 = 'h' : <type 'str'>
=> component2 = 'phi' : <type 'str'>
==================================================
component4 = "omega"                                                    # STEP 48
ACTION: component4 = "omega" 
component4 = 'alpha' : <type 'str'>
=> component4 = 'omega' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 49
ACTION: str1 += 'y' 
str1 = 'qx kxj' : <type 'str'>
=> str1 = 'qx kxjy' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 50
ACTION: path4 += "/" + component3 
component3 = 'beta' : <type 'str'>
path4 = '/Volumes/ramdisk/test/omega/alpha' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/omega/alpha/beta' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 51
ACTION: str2 += 'l' 
str2 = 'sjiosjmbngwi' : <type 'str'>
=> str2 = 'sjiosjmbngwil' : <type 'str'>
==================================================
component3 = "e"                                                        # STEP 52
ACTION: component3 = "e" 
component3 = 'beta' : <type 'str'>
=> component3 = 'e' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 53
ACTION: str1 += 's' 
str1 = 'qx kxjy' : <type 'str'>
=> str1 = 'qx kxjys' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 54
ACTION: str2 += 't' 
str2 = 'sjiosjmbngwil' : <type 'str'>
=> str2 = 'sjiosjmbngwilt' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 55
ACTION: bytes3 = 0 
bytes3 = 2 : <type 'int'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 += 'a'                                                             # STEP 56
ACTION: str3 += 'a' 
str3 = 'uvwke o' : <type 'str'>
=> str3 = 'uvwke oa' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 57
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str2 += 'n'                                                             # STEP 58
ACTION: str2 += 'n' 
str2 = 'sjiosjmbngwilt' : <type 'str'>
=> str2 = 'sjiosjmbngwiltn' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 59
ACTION: str1 += 'x' 
str1 = 'qx kxjys' : <type 'str'>
=> str1 = 'qx kxjysx' : <type 'str'>
==================================================
str2 += 'r'                                                             # STEP 60
ACTION: str2 += 'r' 
str2 = 'sjiosjmbngwiltn' : <type 'str'>
=> str2 = 'sjiosjmbngwiltnr' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 61
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e9be90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
bytes1 = 0                                                              # STEP 62
ACTION: bytes1 = 0 
bytes1 = 1 : <type 'int'>
=> bytes1 = 0 : <type 'int'>
==================================================
fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 63
ACTION: fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102e9be90> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/omega/alpha/beta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.IOError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/omega/alpha'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path4, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/omega/alpha/beta'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x104504cb0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 13863, in act330
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0485298633575 TOTAL RUNTIME
2 EXECUTED
264 TOTAL TEST OPERATIONS
0.00504565238953 TIME SPENT EXECUTING TEST OPERATIONS
0.0126845836639 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000109672546387 TIME SPENT CHECKING PROPERTIES
0.00515532493591 TOTAL TIME SPENT RUNNING SUT
0.0063579082489 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
