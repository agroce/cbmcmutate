Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.54606.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x101fb1878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20195, in act416
    assert (type(raised) == type(refRaised))
Original test has 97 steps

SAVING TEST AS failure.54606.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
str2 = ""                                                                # STEP 0
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 1
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
str2 += 'z'                                                              # STEP 2
ACTION: str2 += 'z' 
str2 = '' : <type 'str'>
=> str2 = 'z' : <type 'str'>
==================================================
str2 += 'j'                                                              # STEP 3
ACTION: str2 += 'j' 
str2 = 'z' : <type 'str'>
=> str2 = 'zj' : <type 'str'>
==================================================
component4 = "c"                                                         # STEP 4
ACTION: component4 = "c" 
component4 = None : <type 'NoneType'>
=> component4 = 'c' : <type 'str'>
==================================================
component2 = "f"                                                         # STEP 5
ACTION: component2 = "f" 
component2 = None : <type 'NoneType'>
=> component2 = 'f' : <type 'str'>
==================================================
str2 += 'o'                                                              # STEP 6
ACTION: str2 += 'o' 
str2 = 'zj' : <type 'str'>
=> str2 = 'zjo' : <type 'str'>
==================================================
component0 = "beta"                                                      # STEP 7
ACTION: component0 = "beta" 
component0 = None : <type 'NoneType'>
=> component0 = 'beta' : <type 'str'>
==================================================
component1 = "b"                                                         # STEP 8
ACTION: component1 = "b" 
component1 = None : <type 'NoneType'>
=> component1 = 'b' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 9
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str2 += 'p'                                                             # STEP 10
ACTION: str2 += 'p' 
str2 = 'zjo' : <type 'str'>
=> str2 = 'zjop' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 11
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 12
ACTION: str0 += 'n' 
str0 = '' : <type 'str'>
=> str0 = 'n' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 13
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.path.lexists(path4)                                        # STEP 14
ACTION: result = os0.path.lexists(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path4) 
==================================================
path4 += "/" + component2                                               # STEP 15
ACTION: path4 += "/" + component2 
component2 = 'f' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 16
ACTION: str0 += 'g' 
str0 = 'n' : <type 'str'>
=> str0 = 'ng' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 17
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str0 += 'm'                                                             # STEP 18
ACTION: str0 += 'm' 
str0 = 'ng' : <type 'str'>
=> str0 = 'ngm' : <type 'str'>
==================================================
fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY)                         # STEP 19
ACTION: fd1 = os0.open(path4, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/f' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path4, os.O_CREAT | os.O_WRONLY) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
str3 = ""                                                               # STEP 20
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND)                        # STEP 21
ACTION: fd0 = os0.open(path4, os.O_WRONLY | os.O_APPEND) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/f' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path4, os.O_WRONLY | os.O_APPEND) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
bytes2 = 0                                                              # STEP 22
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str4 += 'a'                                                             # STEP 23
ACTION: str4 += 'a' 
str4 = '' : <type 'str'>
=> str4 = 'a' : <type 'str'>
==================================================
str3 += 'p'                                                             # STEP 24
ACTION: str3 += 'p' 
str3 = '' : <type 'str'>
=> str3 = 'p' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 25
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
component2 = "h"                                                        # STEP 26
ACTION: component2 = "h" 
component2 = 'f' : <type 'str'>
=> component2 = 'h' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 27
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str3 = ""                                                               # STEP 28
ACTION: str3 = "" 
str3 = 'p' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str2 += 'a'                                                             # STEP 29
ACTION: str2 += 'a' 
str2 = 'zjop' : <type 'str'>
=> str2 = 'zjopa' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 30
ACTION: str4 += 't' 
str4 = 'a' : <type 'str'>
=> str4 = 'at' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 31
ACTION: str4 += 't' 
str4 = 'at' : <type 'str'>
=> str4 = 'att' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 32
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 33
ACTION: str3 += 'k' 
str3 = '' : <type 'str'>
=> str3 = 'k' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 34
ACTION: str3 = "" 
str3 = 'k' : <type 'str'>
=> str3 = '' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 35
ACTION: str3 += 'i' 
str3 = '' : <type 'str'>
=> str3 = 'i' : <type 'str'>
==================================================
result = os0.read(fd0,bytes2)                                           # STEP 36
ACTION: result = os0.read(fd0,bytes2) 
bytes2 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
str4 += 'q'                                                             # STEP 37
ACTION: str4 += 'q' 
str4 = 'att' : <type 'str'>
=> str4 = 'attq' : <type 'str'>
==================================================
stat2 = os0.fstat(fd1)                                                  # STEP 38
ACTION: stat2 = os0.fstat(fd1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102528e10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF1) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=8559217, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507266366, st_mtime=1507266366, st_ctime=1507266366) : <type 'posix.stat_result'>
==================================================
bytes2 = 0                                                              # STEP 39
ACTION: bytes2 = 0 
bytes2 = 0 : <type 'int'>
==================================================
result = sorted(os0.listdir(path2))                                     # STEP 40
ACTION: result = sorted(os0.listdir(path2)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path2)) 
==================================================
str4 += 'm'                                                             # STEP 41
ACTION: str4 += 'm' 
str4 = 'attq' : <type 'str'>
=> str4 = 'attqm' : <type 'str'>
==================================================
str3 += 't'                                                             # STEP 42
ACTION: str3 += 't' 
str3 = 'i' : <type 'str'>
=> str3 = 'it' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 43
ACTION: str2 += 'h' 
str2 = 'zjopa' : <type 'str'>
=> str2 = 'zjopah' : <type 'str'>
==================================================
result = os0.path.lexists(path2)                                        # STEP 44
ACTION: result = os0.path.lexists(path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path2) 
==================================================
str0 += 'p'                                                             # STEP 45
ACTION: str0 += 'p' 
str0 = 'ngm' : <type 'str'>
=> str0 = 'ngmp' : <type 'str'>
==================================================
str4 += 'y'                                                             # STEP 46
ACTION: str4 += 'y' 
str4 = 'attqm' : <type 'str'>
=> str4 = 'attqmy' : <type 'str'>
==================================================
str2 += 'b'                                                             # STEP 47
ACTION: str2 += 'b' 
str2 = 'zjopah' : <type 'str'>
=> str2 = 'zjopahb' : <type 'str'>
==================================================
os0.write(fd1,str3)                                                     # STEP 48
ACTION: os0.write(fd1,str3) 
str3 = 'it' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
REFERENCE ACTION: os_REF0.write(fd_REF1,str3) 
==================================================
os0.link(path2,path2)                                                   # STEP 49
ACTION: os0.link(path2,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path2,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.mkdir(path4)                                                        # STEP 50
ACTION: os0.mkdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/f' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test/f'
REFERENCE ACTION: os_REF0.mkdir(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/f'
==================================================
str4 += 'o'                                                             # STEP 51
ACTION: str4 += 'o' 
str4 = 'attqmy' : <type 'str'>
=> str4 = 'attqmyo' : <type 'str'>
==================================================
result = sorted(os0.listdir(path2))                                     # STEP 52
ACTION: result = sorted(os0.listdir(path2)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path2)) 
==================================================
str3 += 'f'                                                             # STEP 53
ACTION: str3 += 'f' 
str3 = 'it' : <type 'str'>
=> str3 = 'itf' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 54
ACTION: str0 += 'a' 
str0 = 'ngmp' : <type 'str'>
=> str0 = 'ngmpa' : <type 'str'>
==================================================
result = os0.path.exists(path4)                                         # STEP 55
ACTION: result = os0.path.exists(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/f' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path4) 
==================================================
str3 += 'o'                                                             # STEP 56
ACTION: str3 += 'o' 
str3 = 'itf' : <type 'str'>
=> str3 = 'itfo' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 57
ACTION: path4 += "/" + component1 
component1 = 'b' : <type 'str'>
path4 = '/Volumes/ramdisk/test/f' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/f/b' : <type 'str'>
==================================================
str3 += 'm'                                                             # STEP 58
ACTION: str3 += 'm' 
str3 = 'itfo' : <type 'str'>
=> str3 = 'itfom' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 59
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
str3 += 'g'                                                             # STEP 60
ACTION: str3 += 'g' 
str3 = 'itfom' : <type 'str'>
=> str3 = 'itfomg' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 61
ACTION: str0 += 'l' 
str0 = 'ngmpa' : <type 'str'>
=> str0 = 'ngmpal' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 62
ACTION: str4 += 'd' 
str4 = 'attqmyo' : <type 'str'>
=> str4 = 'attqmyod' : <type 'str'>
==================================================
component1 = "beta"                                                     # STEP 63
ACTION: component1 = "beta" 
component1 = 'b' : <type 'str'>
=> component1 = 'beta' : <type 'str'>
==================================================
str4 += 'b'                                                             # STEP 64
ACTION: str4 += 'b' 
str4 = 'attqmyod' : <type 'str'>
=> str4 = 'attqmyodb' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 65
ACTION: str4 += 'd' 
str4 = 'attqmyodb' : <type 'str'>
=> str4 = 'attqmyodbd' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 66
ACTION: str2 += 'f' 
str2 = 'zjopahb' : <type 'str'>
=> str2 = 'zjopahbf' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 67
ACTION: path4 += "/" + component2 
component2 = 'h' : <type 'str'>
path4 = '/Volumes/ramdisk/test/f/b' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/f/b/h' : <type 'str'>
==================================================
str3 += 'i'                                                             # STEP 68
ACTION: str3 += 'i' 
str3 = 'itfomg' : <type 'str'>
=> str3 = 'itfomgi' : <type 'str'>
==================================================
result = sorted(os0.listdir(path4))                                     # STEP 69
ACTION: result = sorted(os0.listdir(path4)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/f/b/h' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in fake filesystem: '/Volumes/ramdisk/test/f/b/h'
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path4)) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/f/b/h'
==================================================
str2 += 'a'                                                             # STEP 70
ACTION: str2 += 'a' 
str2 = 'zjopahbf' : <type 'str'>
=> str2 = 'zjopahbfa' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 71
ACTION: str4 += 't' 
str4 = 'attqmyodbd' : <type 'str'>
=> str4 = 'attqmyodbdt' : <type 'str'>
==================================================
result = stat2.st_nlink                                                 # STEP 72
ACTION: result = stat2.st_nlink 
stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102528e10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF2 = posix.stat_result(st_mode=33261, st_ino=8559217, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507266366, st_mtime=1507266366, st_ctime=1507266366) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF2.st_nlink 
==================================================
result = os0.read(fd0,bytes2)                                           # STEP 73
ACTION: result = os0.read(fd0,bytes2) 
bytes2 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
os0.rename(path4,path2)                                                 # STEP 74
ACTION: os0.rename(path4,path2) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/f/b/h' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake filesystem object: can not rename nonexistent file: '/Volumes/ramdisk/test/f/b/h'
REFERENCE ACTION: os_REF0.rename(path4,path2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory
==================================================
str0 += 'x'                                                             # STEP 75
ACTION: str0 += 'x' 
str0 = 'ngmpal' : <type 'str'>
=> str0 = 'ngmpalx' : <type 'str'>
==================================================
result = sorted(os0.listdir(path2))                                     # STEP 76
ACTION: result = sorted(os0.listdir(path2)) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = sorted(os_REF0.listdir(path2)) 
==================================================
stat2 = os0.fstat(fd1)                                                  # STEP 77
ACTION: stat2 = os0.fstat(fd1) 
stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102528e10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF2 = posix.stat_result(st_mode=33261, st_ino=8559217, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507266366, st_mtime=1507266366, st_ctime=1507266366) : <type 'posix.stat_result'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102591210> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF1) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=8559217, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=2, st_atime=1507266366, st_mtime=1507266367, st_ctime=1507266367) : <type 'posix.stat_result'>
==================================================
str0 += 'w'                                                             # STEP 78
ACTION: str0 += 'w' 
str0 = 'ngmpalx' : <type 'str'>
=> str0 = 'ngmpalxw' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 79
ACTION: str2 += 'd' 
str2 = 'zjopahbfa' : <type 'str'>
=> str2 = 'zjopahbfad' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 80
ACTION: str2 += 'z' 
str2 = 'zjopahbfad' : <type 'str'>
=> str2 = 'zjopahbfadz' : <type 'str'>
==================================================
os0.link(path2,path4)                                                   # STEP 81
ACTION: os0.link(path2,path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
path4 = '/Volumes/ramdisk/test/f/b/h' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such fake directory: '/Volumes/ramdisk/test/f/b'
REFERENCE ACTION: os_REF0.link(path2,path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory
==================================================
str1 = ""                                                               # STEP 82
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
stat0 = os0.fstat(fd1)                                                  # STEP 83
ACTION: stat0 = os0.fstat(fd1) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102528e10> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.fstat(fd_REF1) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=8559217, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=2, st_atime=1507266366, st_mtime=1507266367, st_ctime=1507266367) : <type 'posix.stat_result'>
==================================================
str4 += 'm'                                                             # STEP 84
ACTION: str4 += 'm' 
str4 = 'attqmyodbdt' : <type 'str'>
=> str4 = 'attqmyodbdtm' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 85
ACTION: str1 += 'u' 
str1 = '' : <type 'str'>
=> str1 = 'u' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 86
ACTION: str1 += 'u' 
str1 = 'u' : <type 'str'>
=> str1 = 'uu' : <type 'str'>
==================================================
result = os0.read(fd1,bytes2)                                           # STEP 87
ACTION: result = os0.read(fd1,bytes2) 
bytes2 = 0 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF1,bytes2) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
str1 += 'n'                                                             # STEP 88
ACTION: str1 += 'n' 
str1 = 'uu' : <type 'str'>
=> str1 = 'uun' : <type 'str'>
==================================================
result = os0.read(fd0,bytes1)                                           # STEP 89
ACTION: result = os0.read(fd0,bytes1) 
bytes1 = 1 : <type 'int'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] File is not open for reading.
REFERENCE ACTION: result_REF = os_REF0.read(fd_REF0,bytes1) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 9] Bad file descriptor
==================================================
str1 += 'd'                                                             # STEP 90
ACTION: str1 += 'd' 
str1 = 'uun' : <type 'str'>
=> str1 = 'uund' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 91
ACTION: str0 = "" 
str0 = 'ngmpalxw' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
stat1 = os0.fstat(fd0)                                                  # STEP 92
ACTION: stat1 = os0.fstat(fd0) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102591290> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.fstat(fd_REF0) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=8559217, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=2, st_atime=1507266366, st_mtime=1507266367, st_ctime=1507266367) : <type 'posix.stat_result'>
==================================================
os0.rmdir(path4)                                                        # STEP 93
ACTION: os0.rmdir(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test/f/b/h' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in fake filesystem: '/Volumes/ramdisk/test/f/b/h'
REFERENCE ACTION: os_REF0.rmdir(path4) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory: '/Volumes/ramdisk/test/f/b/h'
==================================================
str4 += 'x'                                                             # STEP 94
ACTION: str4 += 'x' 
str4 = 'attqmyodbdtm' : <type 'str'>
=> str4 = 'attqmyodbdtmx' : <type 'str'>
==================================================
stat4 = os0.fstat(fd0)                                                  # STEP 95
ACTION: stat4 = os0.fstat(fd0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103df7550> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.fstat(fd_REF0) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=8559217, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=2, st_atime=1507266366, st_mtime=1507266367, st_ctime=1507266367) : <type 'posix.stat_result'>
==================================================
os0.write(fd0,str3)                                                     # STEP 96
ACTION: os0.write(fd0,str3) 
str3 = 'itfomgi' : <type 'str'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10251eb50> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd0 = 1 : <type 'int'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = 5 : <type 'int'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.IOError'> [Errno 28] Fake file object: size must be a non-negative integer, but is 0: 'f'
REFERENCE ACTION: os_REF0.write(fd_REF0,str3) 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1022c61b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 20195, in act416
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.29269695282 TOTAL RUNTIME
3 EXECUTED
497 TOTAL TEST OPERATIONS
0.230888605118 TIME SPENT EXECUTING TEST OPERATIONS
0.0190687179565 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000256061553955 TIME SPENT CHECKING PROPERTIES
0.231144666672 TOTAL TIME SPENT RUNNING SUT
0.00787782669067 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
