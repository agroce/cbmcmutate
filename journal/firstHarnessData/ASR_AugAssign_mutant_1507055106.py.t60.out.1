Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.53168.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (0) ',), <traceback object at 0x1027727a0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 27211, in act516
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
Original test has 71 steps

SAVING TEST AS failure.53168.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "b"                                                         # STEP 0
ACTION: component0 = "b" 
component0 = None : <type 'NoneType'>
=> component0 = 'b' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 1
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
component4 = "f"                                                         # STEP 2
ACTION: component4 = "f" 
component4 = None : <type 'NoneType'>
=> component4 = 'f' : <type 'str'>
==================================================
component3 = "b"                                                         # STEP 3
ACTION: component3 = "b" 
component3 = None : <type 'NoneType'>
=> component3 = 'b' : <type 'str'>
==================================================
component2 = "e"                                                         # STEP 4
ACTION: component2 = "e" 
component2 = None : <type 'NoneType'>
=> component2 = 'e' : <type 'str'>
==================================================
str1 += 'c'                                                              # STEP 5
ACTION: str1 += 'c' 
str1 = '' : <type 'str'>
=> str1 = 'c' : <type 'str'>
==================================================
component1 = "lambda"                                                    # STEP 6
ACTION: component1 = "lambda" 
component1 = None : <type 'NoneType'>
=> component1 = 'lambda' : <type 'str'>
==================================================
str1 += 'v'                                                              # STEP 7
ACTION: str1 += 'v' 
str1 = 'c' : <type 'str'>
=> str1 = 'cv' : <type 'str'>
==================================================
str1 += 'b'                                                              # STEP 8
ACTION: str1 += 'b' 
str1 = 'cv' : <type 'str'>
=> str1 = 'cvb' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 9
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 += 't'                                                             # STEP 10
ACTION: str1 += 't' 
str1 = 'cvb' : <type 'str'>
=> str1 = 'cvbt' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 11
ACTION: str1 += 'n' 
str1 = 'cvbt' : <type 'str'>
=> str1 = 'cvbtn' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 12
ACTION: str1 += 'r' 
str1 = 'cvbtn' : <type 'str'>
=> str1 = 'cvbtnr' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 13
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 14
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 15
ACTION: path0 += "/" + component1 
component1 = 'lambda' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
==================================================
fd1 = os0.open(path0, os.O_CREAT | os.O_EXCL)                           # STEP 16
ACTION: fd1 = os0.open(path0, os.O_CREAT | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path0, os.O_CREAT | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
stat4 = os0.lstat(path0)                                                # STEP 17
ACTION: stat4 = os0.lstat(path0) 
stat4 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
stat_REF4 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102ca9cd0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF4 = os_REF0.lstat(path0) 
=> stat_REF4 = posix.stat_result(st_mode=33261, st_ino=6468242, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507237639, st_mtime=1507237639, st_ctime=1507237639) : <type 'posix.stat_result'>
==================================================
os0.mkdir(path0)                                                        # STEP 18
ACTION: os0.mkdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake object already exists: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: os_REF0.mkdir(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/lambda'
==================================================
str1 += 's'                                                             # STEP 19
ACTION: str1 += 's' 
str1 = 'cvbtnr' : <type 'str'>
=> str1 = 'cvbtnrs' : <type 'str'>
==================================================
str2 += " "                                                             # STEP 20
ACTION: str2 += " " 
str2 = '' : <type 'str'>
=> str2 = ' ' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 21
ACTION: str2 += 'l' 
str2 = ' ' : <type 'str'>
=> str2 = ' l' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 22
ACTION: str1 += 'n' 
str1 = 'cvbtnrs' : <type 'str'>
=> str1 = 'cvbtnrsn' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 23
ACTION: str1 += 's' 
str1 = 'cvbtnrsn' : <type 'str'>
=> str1 = 'cvbtnrsns' : <type 'str'>
==================================================
os0.remove(path0)                                                       # STEP 24
ACTION: os0.remove(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.remove(path0) 
==================================================
stat3 = os0.fstat(fd1)                                                  # STEP 25
ACTION: stat3 = os0.fstat(fd1) 
stat3 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF3 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102a64a90> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF3 = os_REF0.fstat(fd_REF1) 
=> stat_REF3 = posix.stat_result(st_mode=33261, st_ino=6468242, st_dev=16777224, st_nlink=0, st_uid=501, st_gid=20, st_size=0, st_atime=1507237639, st_mtime=1507237639, st_ctime=1507237639) : <type 'posix.stat_result'>
==================================================
component1 = "c"                                                        # STEP 26
ACTION: component1 = "c" 
component1 = 'lambda' : <type 'str'>
=> component1 = 'c' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 27
ACTION: str2 += 'j' 
str2 = ' l' : <type 'str'>
=> str2 = ' lj' : <type 'str'>
==================================================
str1 += 'w'                                                             # STEP 28
ACTION: str1 += 'w' 
str1 = 'cvbtnrsns' : <type 'str'>
=> str1 = 'cvbtnrsnsw' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 29
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
stat2 = os0.fstat(fd1)                                                  # STEP 30
ACTION: stat2 = os0.fstat(fd1) 
stat2 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
fd1 = 0 : <type 'int'>
stat_REF2 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = 4 : <type 'int'>
=> stat2 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102a64ad0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF2 = os_REF0.fstat(fd_REF1) 
=> stat_REF2 = posix.stat_result(st_mode=33261, st_ino=6468242, st_dev=16777224, st_nlink=0, st_uid=501, st_gid=20, st_size=0, st_atime=1507237639, st_mtime=1507237639, st_ctime=1507237639) : <type 'posix.stat_result'>
==================================================
str2 += 'a'                                                             # STEP 31
ACTION: str2 += 'a' 
str2 = ' lj' : <type 'str'>
=> str2 = ' lja' : <type 'str'>
==================================================
os0.rename(path0,path3)                                                 # STEP 32
ACTION: os0.rename(path0,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake filesystem object: can not rename nonexistent file: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: os_REF0.rename(path0,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
str1 += 'w'                                                             # STEP 33
ACTION: str1 += 'w' 
str1 = 'cvbtnrsnsw' : <type 'str'>
=> str1 = 'cvbtnrsnsww' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 34
ACTION: str1 += 'i' 
str1 = 'cvbtnrsnsww' : <type 'str'>
=> str1 = 'cvbtnrsnswwi' : <type 'str'>
==================================================
result = stat3.st_size                                                  # STEP 35
ACTION: result = stat3.st_size 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102a64a90> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=6468242, st_dev=16777224, st_nlink=0, st_uid=501, st_gid=20, st_size=0, st_atime=1507237639, st_mtime=1507237639, st_ctime=1507237639) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF3.st_size 
==================================================
str2 += 'z'                                                             # STEP 36
ACTION: str2 += 'z' 
str2 = ' lja' : <type 'str'>
=> str2 = ' ljaz' : <type 'str'>
==================================================
fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL)             # STEP 37
ACTION: fd0 = os0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
=> fd0 = 1 : <type 'int'>
REFERENCE ACTION: fd_REF0 = os_REF0.open(path0, os.O_CREAT | os.O_WRONLY | os.O_EXCL) 
=> fd_REF0 = 5 : <type 'int'>
==================================================
str1 += 'f'                                                             # STEP 38
ACTION: str1 += 'f' 
str1 = 'cvbtnrsnswwi' : <type 'str'>
=> str1 = 'cvbtnrsnswwif' : <type 'str'>
==================================================
os0.makedirs(path0)                                                     # STEP 39
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: os_REF0.makedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/lambda'
==================================================
os0.symlink(path0,path0)                                                # STEP 40
ACTION: os0.symlink(path0,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: os_REF0.symlink(path0,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
os0.rename(path0,path3)                                                 # STEP 41
ACTION: os0.rename(path0,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Fake filesystem object: can not rename to non-empty directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.rename(path0,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 21] Is a directory
==================================================
result = os0.path.isdir(path0)                                          # STEP 42
ACTION: result = os0.path.isdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path0) 
==================================================
str1 = ""                                                               # STEP 43
ACTION: str1 = "" 
str1 = 'cvbtnrsnswwif' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
result = os0.path.isdir(path3)                                          # STEP 44
ACTION: result = os0.path.isdir(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path3) 
==================================================
result = os0.path.abspath(path0)                                        # STEP 45
ACTION: result = os0.path.abspath(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path0) 
==================================================
stat0 = os0.lstat(path0)                                                # STEP 46
ACTION: stat0 = os0.lstat(path0) 
stat0 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
stat_REF0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat0 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x1029760d0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF0 = os_REF0.lstat(path0) 
=> stat_REF0 = posix.stat_result(st_mode=33261, st_ino=6468243, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507237639, st_mtime=1507237639, st_ctime=1507237639) : <type 'posix.stat_result'>
==================================================
os0.makedirs(path0)                                                     # STEP 47
ACTION: os0.makedirs(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] Directory exists in fake filesystem: '/Volumes/ramdisk/test/lambda'
REFERENCE ACTION: os_REF0.makedirs(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists: '/Volumes/ramdisk/test/lambda'
==================================================
result = os0.path.islink(path3)                                         # STEP 48
ACTION: result = os0.path.islink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path3) 
==================================================
path3 += "/" + component4                                               # STEP 49
ACTION: path3 += "/" + component4 
component4 = 'f' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
os0.remove(path3)                                                       # STEP 50
ACTION: os0.remove(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in the fake filesystem: '/Volumes/ramdisk/test/f'
REFERENCE ACTION: os_REF0.remove(path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/f'
==================================================
path3 += "/" + component0                                               # STEP 51
ACTION: path3 += "/" + component0 
component0 = 'b' : <type 'str'>
path3 = '/Volumes/ramdisk/test/f' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/f/b' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 52
ACTION: str2 += 't' 
str2 = ' ljaz' : <type 'str'>
=> str2 = ' ljazt' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 53
ACTION: str2 += 'j' 
str2 = ' ljazt' : <type 'str'>
=> str2 = ' ljaztj' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 54
ACTION: str1 += 'm' 
str1 = '' : <type 'str'>
=> str1 = 'm' : <type 'str'>
==================================================
component0 = "f"                                                        # STEP 55
ACTION: component0 = "f" 
component0 = 'b' : <type 'str'>
=> component0 = 'f' : <type 'str'>
==================================================
result = os0.path.abspath(path3)                                        # STEP 56
ACTION: result = os0.path.abspath(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/f/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path3) 
==================================================
os0.rename(path3,path0)                                                 # STEP 57
ACTION: os0.rename(path3,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/f/b' : <type 'str'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] Fake filesystem object: can not rename nonexistent file: '/Volumes/ramdisk/test/f/b'
REFERENCE ACTION: os_REF0.rename(path3,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
result = os0.path.isfile(path3)                                         # STEP 58
ACTION: result = os0.path.isfile(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/f/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path3) 
==================================================
result = stat4.st_nlink                                                 # STEP 59
ACTION: result = stat4.st_nlink 
stat4 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102ca9cd0> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF4 = posix.stat_result(st_mode=33261, st_ino=6468242, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507237639, st_mtime=1507237639, st_ctime=1507237639) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF4.st_nlink 
==================================================
str2 += 'v'                                                             # STEP 60
ACTION: str2 += 'v' 
str2 = ' ljaztj' : <type 'str'>
=> str2 = ' ljaztjv' : <type 'str'>
==================================================
stat1 = os0.stat(path0)                                                 # STEP 61
ACTION: stat1 = os0.stat(path0) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
=> stat1 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x103b41610> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
REFERENCE ACTION: stat_REF1 = os_REF0.stat(path0) 
=> stat_REF1 = posix.stat_result(st_mode=33261, st_ino=6468243, st_dev=16777224, st_nlink=1, st_uid=501, st_gid=20, st_size=0, st_atime=1507237639, st_mtime=1507237639, st_ctime=1507237639) : <type 'posix.stat_result'>
==================================================
result = stat3.st_size                                                  # STEP 62
ACTION: result = stat3.st_size 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102a64a90> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=6468242, st_dev=16777224, st_nlink=0, st_uid=501, st_gid=20, st_size=0, st_atime=1507237639, st_mtime=1507237639, st_ctime=1507237639) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF3.st_size 
==================================================
result = os0.path.islink(path3)                                         # STEP 63
ACTION: result = os0.path.islink(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/f/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path3) 
==================================================
component4 = "e"                                                        # STEP 64
ACTION: component4 = "e" 
component4 = 'f' : <type 'str'>
=> component4 = 'e' : <type 'str'>
==================================================
path0 += "/" + component1                                               # STEP 65
ACTION: path0 += "/" + component1 
component1 = 'c' : <type 'str'>
path0 = '/Volumes/ramdisk/test/lambda' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/lambda/c' : <type 'str'>
==================================================
os0.makedirs(path3)                                                     # STEP 66
ACTION: os0.makedirs(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102976110> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/f/b' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.makedirs(path3) 
==================================================
str0 = ""                                                               # STEP 67
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str2 += 'z'                                                             # STEP 68
ACTION: str2 += 'z' 
str2 = ' ljaztjv' : <type 'str'>
=> str2 = ' ljaztjvz' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 69
ACTION: str1 += 'u' 
str1 = 'm' : <type 'str'>
=> str1 = 'mu' : <type 'str'>
==================================================
result = stat3.st_nlink                                                 # STEP 70
ACTION: result = stat3.st_nlink 
stat3 = <pyfakefs.fake_filesystem._FakeStatResult object at 0x102a64a90> : <class 'pyfakefs.fake_filesystem._FakeStatResult'>
stat_REF3 = posix.stat_result(st_mode=33261, st_ino=6468242, st_dev=16777224, st_nlink=0, st_uid=501, st_gid=20, st_size=0, st_atime=1507237639, st_mtime=1507237639, st_ctime=1507237639) : <type 'posix.stat_result'>
REFERENCE ACTION: result_REF = stat_REF3.st_nlink 
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(' (1) == (0) ',), <traceback object at 0x102c12ef0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 27211, in act516
    try: assert result == result_REF, " (%s) == (%s) " % (result, result_REF)
STOPPING TESTING DUE TO FAILED TEST
0.0542409420013 TOTAL RUNTIME
1 EXECUTED
71 TOTAL TEST OPERATIONS
0.0111849308014 TIME SPENT EXECUTING TEST OPERATIONS
0.00368142127991 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.17232513428e-05 TIME SPENT CHECKING PROPERTIES
0.0112266540527 TOTAL TIME SPENT RUNNING SUT
0.00794696807861 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
