Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.49641.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1021d2cf8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 14381, in act337
    assert (type(raised) == type(refRaised))
Original test has 67 steps

SAVING TEST AS failure.49641.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "delta"                                                     # STEP 0
ACTION: component4 = "delta" 
component4 = None : <type 'NoneType'>
=> component4 = 'delta' : <type 'str'>
==================================================
component1 = "phi"                                                       # STEP 1
ACTION: component1 = "phi" 
component1 = None : <type 'NoneType'>
=> component1 = 'phi' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 2
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component2 = "beta"                                                      # STEP 3
ACTION: component2 = "beta" 
component2 = None : <type 'NoneType'>
=> component2 = 'beta' : <type 'str'>
==================================================
component3 = "a"                                                         # STEP 4
ACTION: component3 = "a" 
component3 = None : <type 'NoneType'>
=> component3 = 'a' : <type 'str'>
==================================================
component0 = "phi"                                                       # STEP 5
ACTION: component0 = "phi" 
component0 = None : <type 'NoneType'>
=> component0 = 'phi' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                          # STEP 6
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 7
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                          # STEP 8
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = None : <type 'NoneType'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 9
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str2 += 'h'                                                             # STEP 10
ACTION: str2 += 'h' 
str2 = '' : <type 'str'>
=> str2 = 'h' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 11
ACTION: path4 += "/" + component2 
component2 = 'beta' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 12
ACTION: str2 += 'd' 
str2 = 'h' : <type 'str'>
=> str2 = 'hd' : <type 'str'>
==================================================
path4 += "/" + component1                                               # STEP 13
ACTION: path4 += "/" + component1 
component1 = 'phi' : <type 'str'>
path4 = '/Volumes/ramdisk/test/beta' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/beta/phi' : <type 'str'>
==================================================
str2 += 'n'                                                             # STEP 14
ACTION: str2 += 'n' 
str2 = 'hd' : <type 'str'>
=> str2 = 'hdn' : <type 'str'>
==================================================
str2 += 'q'                                                             # STEP 15
ACTION: str2 += 'q' 
str2 = 'hdn' : <type 'str'>
=> str2 = 'hdnq' : <type 'str'>
==================================================
component1 = "f"                                                        # STEP 16
ACTION: component1 = "f" 
component1 = 'phi' : <type 'str'>
=> component1 = 'f' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "gamma"                                                    # STEP 18
ACTION: component2 = "gamma" 
component2 = 'beta' : <type 'str'>
=> component2 = 'gamma' : <type 'str'>
==================================================
str2 += 'j'                                                             # STEP 19
ACTION: str2 += 'j' 
str2 = 'hdnq' : <type 'str'>
=> str2 = 'hdnqj' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 20
ACTION: path2 += "/" + component0 
component0 = 'phi' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 21
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/beta/phi' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 22
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 23
ACTION: str0 += 'l' 
str0 = '' : <type 'str'>
=> str0 = 'l' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 24
ACTION: path4 += "/" + component2 
component2 = 'gamma' : <type 'str'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "omega"                                                    # STEP 26
ACTION: component2 = "omega" 
component2 = 'gamma' : <type 'str'>
=> component2 = 'omega' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 27
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
path0 += "/" + component0                                               # STEP 28
ACTION: path0 += "/" + component0 
component0 = 'phi' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/phi' : <type 'str'>
==================================================
str1 += 'z'                                                             # STEP 29
ACTION: str1 += 'z' 
str1 = '' : <type 'str'>
=> str1 = 'z' : <type 'str'>
==================================================
str1 += 't'                                                             # STEP 30
ACTION: str1 += 't' 
str1 = 'z' : <type 'str'>
=> str1 = 'zt' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 31
ACTION: path2 += "/" + component4 
component4 = 'delta' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/delta' : <type 'str'>
==================================================
component4 = "beta"                                                     # STEP 32
ACTION: component4 = "beta" 
component4 = 'delta' : <type 'str'>
=> component4 = 'beta' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 33
ACTION: str0 += 't' 
str0 = 'l' : <type 'str'>
=> str0 = 'lt' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 34
ACTION: str0 += 'l' 
str0 = 'lt' : <type 'str'>
=> str0 = 'ltl' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 35
ACTION: path4 += "/" + component2 
component2 = 'omega' : <type 'str'>
path4 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma/omega' : <type 'str'>
==================================================
path4 += "/" + component3                                               # STEP 36
ACTION: path4 += "/" + component3 
component3 = 'a' : <type 'str'>
path4 = '/Volumes/ramdisk/test/gamma/omega' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma/omega/a' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 37
ACTION: str1 += 'y' 
str1 = 'zt' : <type 'str'>
=> str1 = 'zty' : <type 'str'>
==================================================
component2 = "g"                                                        # STEP 38
ACTION: component2 = "g" 
component2 = 'omega' : <type 'str'>
=> component2 = 'g' : <type 'str'>
==================================================
path1 += "/" + component1                                               # STEP 39
ACTION: path1 += "/" + component1 
component1 = 'f' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/f' : <type 'str'>
==================================================
component0 = "a"                                                        # STEP 40
ACTION: component0 = "a" 
component0 = 'phi' : <type 'str'>
=> component0 = 'a' : <type 'str'>
==================================================
component1 = "f"                                                        # STEP 41
ACTION: component1 = "f" 
component1 = 'f' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 42
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
component3 = "epsilon"                                                  # STEP 43
ACTION: component3 = "epsilon" 
component3 = 'a' : <type 'str'>
=> component3 = 'epsilon' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 44
ACTION: str2 += 'f' 
str2 = 'hdnqj' : <type 'str'>
=> str2 = 'hdnqjf' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 45
ACTION: str1 += 'u' 
str1 = 'zty' : <type 'str'>
=> str1 = 'ztyu' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 46
ACTION: str2 += 'o' 
str2 = 'hdnqjf' : <type 'str'>
=> str2 = 'hdnqjfo' : <type 'str'>
==================================================
path2 += "/" + component0                                               # STEP 47
ACTION: path2 += "/" + component0 
component0 = 'a' : <type 'str'>
path2 = '/Volumes/ramdisk/test/phi/delta' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/phi/delta/a' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 48
ACTION: component0 = "omega" 
component0 = 'a' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 49
ACTION: str0 = "" 
str0 = 'ltl' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 50
ACTION: str1 += 'l' 
str1 = 'ztyu' : <type 'str'>
=> str1 = 'ztyul' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 51
ACTION: str0 += 'p' 
str0 = '' : <type 'str'>
=> str0 = 'p' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 52
ACTION: str0 += 'd' 
str0 = 'p' : <type 'str'>
=> str0 = 'pd' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 53
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = '/Volumes/ramdisk/test/phi/delta/a' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'p'                                                             # STEP 54
ACTION: str0 += 'p' 
str0 = 'pd' : <type 'str'>
=> str0 = 'pdp' : <type 'str'>
==================================================
path4 += "/" + component2                                               # STEP 55
ACTION: path4 += "/" + component2 
component2 = 'g' : <type 'str'>
path4 = '/Volumes/ramdisk/test/gamma/omega/a' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test/gamma/omega/a/g' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 56
ACTION: str1 += 's' 
str1 = 'ztyul' : <type 'str'>
=> str1 = 'ztyuls' : <type 'str'>
==================================================
str0 += 'x'                                                             # STEP 57
ACTION: str0 += 'x' 
str0 = 'pdp' : <type 'str'>
=> str0 = 'pdpx' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 58
ACTION: str0 += 'v' 
str0 = 'pdpx' : <type 'str'>
=> str0 = 'pdpxv' : <type 'str'>
==================================================
path4 = "/Volumes/ramdisk/test"                                         # STEP 59
ACTION: path4 = "/Volumes/ramdisk/test" 
path4 = '/Volumes/ramdisk/test/gamma/omega/a/g' : <type 'str'>
=> path4 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "delta"                                                    # STEP 60
ACTION: component2 = "delta" 
component2 = 'g' : <type 'str'>
=> component2 = 'delta' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 61
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
bytes1 += 1                                                             # STEP 62
ACTION: bytes1 += 1 
bytes1 = 0 : <type 'int'>
=> bytes1 = 1 : <type 'int'>
==================================================
os0 = newFakeOS()                                                       # STEP 63
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1021c6790> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
result = os0.path.isfile(path4)                                         # STEP 64
ACTION: result = os0.path.isfile(path4) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1021c6790> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path4 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isfile(path4) 
==================================================
str2 += 'w'                                                             # STEP 65
ACTION: str2 += 'w' 
str2 = 'hdnqjfo' : <type 'str'>
=> str2 = 'hdnqjfow' : <type 'str'>
==================================================
fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL)  # STEP 66
ACTION: fd1 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1021c6790> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/f' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/f'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC | os.O_EXCL) 
=> fd_REF1 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10270e488>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 14381, in act337
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0303781032562 TOTAL RUNTIME
1 EXECUTED
67 TOTAL TEST OPERATIONS
0.00265765190125 TIME SPENT EXECUTING TEST OPERATIONS
0.00407242774963 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
4.00543212891e-05 TIME SPENT CHECKING PROPERTIES
0.00269770622253 TOTAL TIME SPENT RUNNING SUT
0.00318884849548 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
