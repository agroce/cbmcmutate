Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.66025.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102fdca28>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 12555, in act311
    assert (type(raised) == type(refRaised))
Original test has 64 steps

SAVING TEST AS failure.66025.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "h"                                                         # STEP 0
ACTION: component2 = "h" 
component2 = None : <type 'NoneType'>
=> component2 = 'h' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 1
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component1 = "delta"                                                     # STEP 2
ACTION: component1 = "delta" 
component1 = None : <type 'NoneType'>
=> component1 = 'delta' : <type 'str'>
==================================================
component0 = "epsilon"                                                   # STEP 3
ACTION: component0 = "epsilon" 
component0 = None : <type 'NoneType'>
=> component0 = 'epsilon' : <type 'str'>
==================================================
component3 = "alpha"                                                     # STEP 4
ACTION: component3 = "alpha" 
component3 = None : <type 'NoneType'>
=> component3 = 'alpha' : <type 'str'>
==================================================
component4 = "gamma"                                                     # STEP 5
ACTION: component4 = "gamma" 
component4 = None : <type 'NoneType'>
=> component4 = 'gamma' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 6
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 7
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
str1 += 'y'                                                              # STEP 8
ACTION: str1 += 'y' 
str1 = '' : <type 'str'>
=> str1 = 'y' : <type 'str'>
==================================================
str1 += 'h'                                                              # STEP 9
ACTION: str1 += 'h' 
str1 = 'y' : <type 'str'>
=> str1 = 'yh' : <type 'str'>
==================================================
str1 += 'c'                                                             # STEP 10
ACTION: str1 += 'c' 
str1 = 'yh' : <type 'str'>
=> str1 = 'yhc' : <type 'str'>
==================================================
str2 += 'f'                                                             # STEP 11
ACTION: str2 += 'f' 
str2 = '' : <type 'str'>
=> str2 = 'f' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 12
ACTION: str2 += 't' 
str2 = 'f' : <type 'str'>
=> str2 = 'ft' : <type 'str'>
==================================================
str1 = ""                                                               # STEP 13
ACTION: str1 = "" 
str1 = 'yhc' : <type 'str'>
=> str1 = '' : <type 'str'>
==================================================
str2 += 'l'                                                             # STEP 14
ACTION: str2 += 'l' 
str2 = 'ft' : <type 'str'>
=> str2 = 'ftl' : <type 'str'>
==================================================
path3 += "/" + component0                                               # STEP 15
ACTION: path3 += "/" + component0 
component0 = 'epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 16
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 17
ACTION: str1 += 'j' 
str1 = '' : <type 'str'>
=> str1 = 'j' : <type 'str'>
==================================================
str1 += 'x'                                                             # STEP 18
ACTION: str1 += 'x' 
str1 = 'j' : <type 'str'>
=> str1 = 'jx' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 19
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 20
ACTION: str0 += 'l' 
str0 = '' : <type 'str'>
=> str0 = 'l' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 21
ACTION: str0 += 'n' 
str0 = 'l' : <type 'str'>
=> str0 = 'ln' : <type 'str'>
==================================================
path0 += "/" + component2                                               # STEP 22
ACTION: path0 += "/" + component2 
component2 = 'h' : <type 'str'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 23
ACTION: str1 += 'f' 
str1 = 'jx' : <type 'str'>
=> str1 = 'jxf' : <type 'str'>
==================================================
component0 = "omega"                                                    # STEP 24
ACTION: component0 = "omega" 
component0 = 'epsilon' : <type 'str'>
=> component0 = 'omega' : <type 'str'>
==================================================
str1 += 'b'                                                             # STEP 25
ACTION: str1 += 'b' 
str1 = 'jxf' : <type 'str'>
=> str1 = 'jxfb' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 26
ACTION: str2 += 'h' 
str2 = 'ftl' : <type 'str'>
=> str2 = 'ftlh' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 27
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str2 += 'u'                                                             # STEP 28
ACTION: str2 += 'u' 
str2 = 'ftlh' : <type 'str'>
=> str2 = 'ftlhu' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 29
ACTION: str1 += 'r' 
str1 = 'jxfb' : <type 'str'>
=> str1 = 'jxfbr' : <type 'str'>
==================================================
str0 += 'v'                                                             # STEP 30
ACTION: str0 += 'v' 
str0 = 'ln' : <type 'str'>
=> str0 = 'lnv' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 31
ACTION: str1 += " " 
str1 = 'jxfbr' : <type 'str'>
=> str1 = 'jxfbr ' : <type 'str'>
==================================================
str0 += 'd'                                                             # STEP 32
ACTION: str0 += 'd' 
str0 = 'lnv' : <type 'str'>
=> str0 = 'lnvd' : <type 'str'>
==================================================
component2 = "c"                                                        # STEP 33
ACTION: component2 = "c" 
component2 = 'h' : <type 'str'>
=> component2 = 'c' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 34
ACTION: str1 += 'y' 
str1 = 'jxfbr ' : <type 'str'>
=> str1 = 'jxfbr y' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 35
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = '/Volumes/ramdisk/test/epsilon' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 36
ACTION: str0 += 'q' 
str0 = 'lnvd' : <type 'str'>
=> str0 = 'lnvdq' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 37
ACTION: str2 += 'm' 
str2 = 'ftlhu' : <type 'str'>
=> str2 = 'ftlhum' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 38
ACTION: str0 += 'n' 
str0 = 'lnvdq' : <type 'str'>
=> str0 = 'lnvdqn' : <type 'str'>
==================================================
str1 += 'i'                                                             # STEP 39
ACTION: str1 += 'i' 
str1 = 'jxfbr y' : <type 'str'>
=> str1 = 'jxfbr yi' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 40
ACTION: str1 += 'u' 
str1 = 'jxfbr yi' : <type 'str'>
=> str1 = 'jxfbr yiu' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 41
ACTION: str0 += 'j' 
str0 = 'lnvdqn' : <type 'str'>
=> str0 = 'lnvdqnj' : <type 'str'>
==================================================
path0 += "/" + component3                                               # STEP 42
ACTION: path0 += "/" + component3 
component3 = 'alpha' : <type 'str'>
path0 = '/Volumes/ramdisk/test/h' : <type 'str'>
=> path0 = '/Volumes/ramdisk/test/h/alpha' : <type 'str'>
==================================================
bytes1 = 0                                                              # STEP 43
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
str2 += 'x'                                                             # STEP 44
ACTION: str2 += 'x' 
str2 = 'ftlhum' : <type 'str'>
=> str2 = 'ftlhumx' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 45
ACTION: str1 += 'm' 
str1 = 'jxfbr yiu' : <type 'str'>
=> str1 = 'jxfbr yium' : <type 'str'>
==================================================
component3 = "omega"                                                    # STEP 46
ACTION: component3 = "omega" 
component3 = 'alpha' : <type 'str'>
=> component3 = 'omega' : <type 'str'>
==================================================
str0 = ""                                                               # STEP 47
ACTION: str0 = "" 
str0 = 'lnvdqnj' : <type 'str'>
=> str0 = '' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 48
ACTION: str1 += 'r' 
str1 = 'jxfbr yium' : <type 'str'>
=> str1 = 'jxfbr yiumr' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 49
ACTION: str1 += 'f' 
str1 = 'jxfbr yiumr' : <type 'str'>
=> str1 = 'jxfbr yiumrf' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 50
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102a85090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 51
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
stat1 = os0.lstat(path0)                                                # STEP 52
ACTION: stat1 = os0.lstat(path0) 
stat1 = None : <type 'NoneType'>
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102a85090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/h/alpha' : <type 'str'>
stat_REF1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/h/alpha'
REFERENCE ACTION: stat_REF1 = os_REF0.lstat(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/h/alpha'
==================================================
path3 += "/" + component1                                               # STEP 53
ACTION: path3 += "/" + component1 
component1 = 'delta' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/delta' : <type 'str'>
==================================================
fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY)                         # STEP 54
ACTION: fd1 = os0.open(path3, os.O_CREAT | os.O_WRONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102a85090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/delta' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
=> fd1 = 0 : <type 'int'>
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_CREAT | os.O_WRONLY) 
=> fd_REF1 = 4 : <type 'int'>
==================================================
str2 += 'u'                                                             # STEP 55
ACTION: str2 += 'u' 
str2 = 'ftlhumx' : <type 'str'>
=> str2 = 'ftlhumxu' : <type 'str'>
==================================================
os0.link(path1,path0)                                                   # STEP 56
ACTION: os0.link(path1,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102a85090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
path0 = '/Volumes/ramdisk/test/h/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 1] Cannot create hard link to directory: '/Volumes/ramdisk/test'
REFERENCE ACTION: os_REF0.link(path1,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
==================================================
os0.rmdir(path0)                                                        # STEP 57
ACTION: os0.rmdir(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102a85090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/h/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/h/alpha'
REFERENCE ACTION: os_REF0.rmdir(path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/h/alpha'
==================================================
os0.symlink(path0,path3)                                                # STEP 58
ACTION: os0.symlink(path0,path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102a85090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test/h/alpha' : <type 'str'>
path3 = '/Volumes/ramdisk/test/delta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File already exists in fake filesystem: '/Volumes/ramdisk/test/delta'
REFERENCE ACTION: os_REF0.symlink(path0,path3) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 17] File exists
==================================================
str1 += 'h'                                                             # STEP 59
ACTION: str1 += 'h' 
str1 = 'jxfbr yiumrf' : <type 'str'>
=> str1 = 'jxfbr yiumrfh' : <type 'str'>
==================================================
str1 += 'y'                                                             # STEP 60
ACTION: str1 += 'y' 
str1 = 'jxfbr yiumrfh' : <type 'str'>
=> str1 = 'jxfbr yiumrfhy' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 61
ACTION: str2 += 'u' 
str2 = 'ftlhumxu' : <type 'str'>
=> str2 = 'ftlhumxuu' : <type 'str'>
==================================================
path1 += "/" + component4                                               # STEP 62
ACTION: path1 += "/" + component4 
component4 = 'gamma' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/gamma' : <type 'str'>
==================================================
os0.link(path3,path0)                                                   # STEP 63
ACTION: os0.link(path3,path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102a85090> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/delta' : <type 'str'>
path0 = '/Volumes/ramdisk/test/h/alpha' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.link(path3,path0) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x102fd04d0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 12555, in act311
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.129184961319 TOTAL RUNTIME
4 EXECUTED
664 TOTAL TEST OPERATIONS
0.0666506290436 TIME SPENT EXECUTING TEST OPERATIONS
0.0269298553467 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000311613082886 TIME SPENT CHECKING PROPERTIES
0.0669622421265 TOTAL TIME SPENT RUNNING SUT
0.0104446411133 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
