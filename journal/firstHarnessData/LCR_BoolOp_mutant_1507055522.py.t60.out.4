Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.49572.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AttributeError'>, AttributeError("'NoneType' object has no attribute 'startswith'",), <traceback object at 0x1029ff1b8>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22472, in act449
    self.p_os[0].rmdir(self.p_path[1])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3605, in rmdir
    self.filesystem.RemoveDirectory(target_directory)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2502, in RemoveDirectory
    if self.ConfirmDir(target_directory):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2452, in ConfirmDir
    directory = self.ResolveObject(target_directory)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1837, in ResolveObject
    return self.GetObjectFromNormalizedPath(self.ResolvePath(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1754, in ResolvePath
    link_path = _FollowLink(resolved_components, current_dir)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1692, in _FollowLink
    if ((not link_path.startswith(sep)) and ((alt_sep is None) or (not link_path.startswith(alt_sep)))):
Original test has 18 steps

SAVING TEST AS failure.49572.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component3 = "beta"                                                      # STEP 0
ACTION: component3 = "beta" 
component3 = None : <type 'NoneType'>
=> component3 = 'beta' : <type 'str'>
==================================================
component0 = "a"                                                         # STEP 1
ACTION: component0 = "a" 
component0 = None : <type 'NoneType'>
=> component0 = 'a' : <type 'str'>
==================================================
component2 = "a"                                                         # STEP 2
ACTION: component2 = "a" 
component2 = None : <type 'NoneType'>
=> component2 = 'a' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                          # STEP 3
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes2 = 0                                                               # STEP 4
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
component1 = "gamma"                                                     # STEP 5
ACTION: component1 = "gamma" 
component1 = None : <type 'NoneType'>
=> component1 = 'gamma' : <type 'str'>
==================================================
component4 = "c"                                                         # STEP 6
ACTION: component4 = "c" 
component4 = None : <type 'NoneType'>
=> component4 = 'c' : <type 'str'>
==================================================
str2 = ""                                                                # STEP 7
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str2 += 'a'                                                              # STEP 8
ACTION: str2 += 'a' 
str2 = '' : <type 'str'>
=> str2 = 'a' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                          # STEP 9
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 10
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str2 += 'x'                                                             # STEP 11
ACTION: str2 += 'x' 
str2 = 'a' : <type 'str'>
=> str2 = 'ax' : <type 'str'>
==================================================
path1 += "/" + component3                                               # STEP 12
ACTION: path1 += "/" + component3 
component3 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 13
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b2a390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
os0.symlink(path2,path1)                                                # STEP 14
ACTION: os0.symlink(path2,path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b2a390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: os_REF0.symlink(path2,path1) 
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 15
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component3 = "f"                                                        # STEP 16
ACTION: component3 = "f" 
component3 = 'beta' : <type 'str'>
=> component3 = 'f' : <type 'str'>
==================================================
os0.rmdir(path1)                                                        # STEP 17
ACTION: os0.rmdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102b2a390> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
RAISED EXCEPTION: <type 'exceptions.AttributeError'> 'NoneType' object has no attribute 'startswith'
ERROR: (<type 'exceptions.AttributeError'>, AttributeError("'NoneType' object has no attribute 'startswith'",), <traceback object at 0x102b08128>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 22472, in act449
    self.p_os[0].rmdir(self.p_path[1])
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3605, in rmdir
    self.filesystem.RemoveDirectory(target_directory)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2502, in RemoveDirectory
    if self.ConfirmDir(target_directory):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2452, in ConfirmDir
    directory = self.ResolveObject(target_directory)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1837, in ResolveObject
    return self.GetObjectFromNormalizedPath(self.ResolvePath(file_path))
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1754, in ResolvePath
    link_path = _FollowLink(resolved_components, current_dir)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1692, in _FollowLink
    if ((not link_path.startswith(sep)) and ((alt_sep is None) or (not link_path.startswith(alt_sep)))):
STOPPING TESTING DUE TO FAILED TEST
0.0574910640717 TOTAL RUNTIME
3 EXECUTED
418 TOTAL TEST OPERATIONS
0.00827074050903 TIME SPENT EXECUTING TEST OPERATIONS
0.0197055339813 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000198602676392 TIME SPENT CHECKING PROPERTIES
0.00846934318542 TOTAL TIME SPENT RUNNING SUT
0.00813508033752 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
