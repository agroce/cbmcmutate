Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.47956.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for -: 'str' and 'str'",), <traceback object at 0x1006c3290>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 16635, in act368
    self.p_fd[1] = self.p_os[0].open(self.p_path[2], os.O_CREAT)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4566, in Call
    file_object = self.filesystem.CreateFileInternally(real_path, create_missing_dirs=False, apply_umask=True, raw_io=self.raw_io)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2176, in CreateFileInternally
    if (self.Exists(file_path) or self.IsLink(file_path)):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2443, in IsLink
    return self._IsType(path, stat.S_IFLNK, follow_symlinks=False)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2412, in _IsType
    obj = self.ResolveObject(path, follow_symlinks)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1839, in ResolveObject
    return self.LResolveObject(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1862, in LResolveObject
    (parent_directory, child_name) = self.SplitPath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1390, in SplitPath
    return ((drive - sep.join(path_components)), basename)
Original test has 45 steps

SAVING TEST AS failure.47956.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component0 = "e"                                                         # STEP 0
ACTION: component0 = "e" 
component0 = None : <type 'NoneType'>
=> component0 = 'e' : <type 'str'>
==================================================
component3 = "d"                                                         # STEP 1
ACTION: component3 = "d" 
component3 = None : <type 'NoneType'>
=> component3 = 'd' : <type 'str'>
==================================================
component1 = "beta"                                                      # STEP 2
ACTION: component1 = "beta" 
component1 = None : <type 'NoneType'>
=> component1 = 'beta' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 3
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
component4 = "h"                                                         # STEP 4
ACTION: component4 = "h" 
component4 = None : <type 'NoneType'>
=> component4 = 'h' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                          # STEP 5
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component2 = "beta"                                                      # STEP 6
ACTION: component2 = "beta" 
component2 = None : <type 'NoneType'>
=> component2 = 'beta' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 7
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
bytes1 = 0                                                               # STEP 8
ACTION: bytes1 = 0 
bytes1 = None : <type 'NoneType'>
=> bytes1 = 0 : <type 'int'>
==================================================
bytes2 = 0                                                               # STEP 9
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str1 += 's'                                                             # STEP 10
ACTION: str1 += 's' 
str1 = '' : <type 'str'>
=> str1 = 's' : <type 'str'>
==================================================
path2 = "/Volumes/ramdisk/test"                                         # STEP 11
ACTION: path2 = "/Volumes/ramdisk/test" 
path2 = None : <type 'NoneType'>
=> path2 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str1 += 'o'                                                             # STEP 12
ACTION: str1 += 'o' 
str1 = 's' : <type 'str'>
=> str1 = 'so' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 13
ACTION: str1 += 'q' 
str1 = 'so' : <type 'str'>
=> str1 = 'soq' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 14
ACTION: str1 += 'l' 
str1 = 'soq' : <type 'str'>
=> str1 = 'soql' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 15
ACTION: path3 += "/" + component4 
component4 = 'h' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/h' : <type 'str'>
==================================================
str1 += 'f'                                                             # STEP 16
ACTION: str1 += 'f' 
str1 = 'soql' : <type 'str'>
=> str1 = 'soqlf' : <type 'str'>
==================================================
str1 += 's'                                                             # STEP 17
ACTION: str1 += 's' 
str1 = 'soqlf' : <type 'str'>
=> str1 = 'soqlfs' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 18
ACTION: str1 += 'd' 
str1 = 'soqlfs' : <type 'str'>
=> str1 = 'soqlfsd' : <type 'str'>
==================================================
str3 = ""                                                               # STEP 19
ACTION: str3 = "" 
str3 = None : <type 'NoneType'>
=> str3 = '' : <type 'str'>
==================================================
component4 = "c"                                                        # STEP 20
ACTION: component4 = "c" 
component4 = 'h' : <type 'str'>
=> component4 = 'c' : <type 'str'>
==================================================
path2 += "/" + component4                                               # STEP 21
ACTION: path2 += "/" + component4 
component4 = 'c' : <type 'str'>
path2 = '/Volumes/ramdisk/test' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 22
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 23
ACTION: str3 += 'y' 
str3 = '' : <type 'str'>
=> str3 = 'y' : <type 'str'>
==================================================
str3 += 'y'                                                             # STEP 24
ACTION: str3 += 'y' 
str3 = 'y' : <type 'str'>
=> str3 = 'yy' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
component4 = "h"                                                        # STEP 26
ACTION: component4 = "h" 
component4 = 'c' : <type 'str'>
=> component4 = 'h' : <type 'str'>
==================================================
str1 += 'm'                                                             # STEP 27
ACTION: str1 += 'm' 
str1 = 'soqlfsd' : <type 'str'>
=> str1 = 'soqlfsdm' : <type 'str'>
==================================================
str4 += 'e'                                                             # STEP 28
ACTION: str4 += 'e' 
str4 = '' : <type 'str'>
=> str4 = 'e' : <type 'str'>
==================================================
path1 += "/" + component0                                               # STEP 29
ACTION: path1 += "/" + component0 
component0 = 'e' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/e' : <type 'str'>
==================================================
str1 += 'd'                                                             # STEP 30
ACTION: str1 += 'd' 
str1 = 'soqlfsdm' : <type 'str'>
=> str1 = 'soqlfsdmd' : <type 'str'>
==================================================
str1 += 'l'                                                             # STEP 31
ACTION: str1 += 'l' 
str1 = 'soqlfsdmd' : <type 'str'>
=> str1 = 'soqlfsdmdl' : <type 'str'>
==================================================
component0 = "phi"                                                      # STEP 32
ACTION: component0 = "phi" 
component0 = 'e' : <type 'str'>
=> component0 = 'phi' : <type 'str'>
==================================================
str4 += 'a'                                                             # STEP 33
ACTION: str4 += 'a' 
str4 = 'e' : <type 'str'>
=> str4 = 'ea' : <type 'str'>
==================================================
path2 += "/" + component3                                               # STEP 34
ACTION: path2 += "/" + component3 
component3 = 'd' : <type 'str'>
path2 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path2 = '/Volumes/ramdisk/test/c/d' : <type 'str'>
==================================================
str4 += 'd'                                                             # STEP 35
ACTION: str4 += 'd' 
str4 = 'ea' : <type 'str'>
=> str4 = 'ead' : <type 'str'>
==================================================
str3 += 'k'                                                             # STEP 36
ACTION: str3 += 'k' 
str3 = 'yy' : <type 'str'>
=> str3 = 'yyk' : <type 'str'>
==================================================
component3 = "f"                                                        # STEP 37
ACTION: component3 = "f" 
component3 = 'd' : <type 'str'>
=> component3 = 'f' : <type 'str'>
==================================================
str3 += 'c'                                                             # STEP 38
ACTION: str3 += 'c' 
str3 = 'yyk' : <type 'str'>
=> str3 = 'yykc' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 39
ACTION: str1 += 'r' 
str1 = 'soqlfsdmdl' : <type 'str'>
=> str1 = 'soqlfsdmdlr' : <type 'str'>
==================================================
str3 += 'g'                                                             # STEP 40
ACTION: str3 += 'g' 
str3 = 'yykc' : <type 'str'>
=> str3 = 'yykcg' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 41
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102cab210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str2 = ""                                                               # STEP 42
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str1 += 'h'                                                             # STEP 43
ACTION: str1 += 'h' 
str1 = 'soqlfsdmdlr' : <type 'str'>
=> str1 = 'soqlfsdmdlrh' : <type 'str'>
==================================================
fd1 = os0.open(path2, os.O_CREAT)                                       # STEP 44
ACTION: fd1 = os0.open(path2, os.O_CREAT) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x102cab210> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path2 = '/Volumes/ramdisk/test/c/d' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXCEPTION: <type 'exceptions.TypeError'> unsupported operand type(s) for -: 'str' and 'str'
ERROR: (<type 'exceptions.TypeError'>, TypeError("unsupported operand type(s) for -: 'str' and 'str'",), <traceback object at 0x102d23b48>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 16635, in act368
    self.p_fd[1] = self.p_os[0].open(self.p_path[2], os.O_CREAT)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 3314, in open
    fake_file = FakeFileOpen(self.filesystem, delete_on_close=delete_on_close, raw_io=True)(file_path, str_flags, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4484, in __call__
    return self._call_ver2(*args, **kwargs)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4493, in _call_ver2
    return self.Call(file_path, mode, buffering, open_modes=open_modes)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 4566, in Call
    file_object = self.filesystem.CreateFileInternally(real_path, create_missing_dirs=False, apply_umask=True, raw_io=self.raw_io)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2176, in CreateFileInternally
    if (self.Exists(file_path) or self.IsLink(file_path)):
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2443, in IsLink
    return self._IsType(path, stat.S_IFLNK, follow_symlinks=False)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 2412, in _IsType
    obj = self.ResolveObject(path, follow_symlinks)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1839, in ResolveObject
    return self.LResolveObject(file_path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1862, in LResolveObject
    (parent_directory, child_name) = self.SplitPath(path)
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/pyfakefs/fake_filesystem.py", line 1390, in SplitPath
    return ((drive - sep.join(path_components)), basename)
STOPPING TESTING DUE TO FAILED TEST
0.0257980823517 TOTAL RUNTIME
1 EXECUTED
45 TOTAL TEST OPERATIONS
0.00172972679138 TIME SPENT EXECUTING TEST OPERATIONS
0.00234079360962 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
1.71661376953e-05 TIME SPENT CHECKING PROPERTIES
0.00174689292908 TOTAL TIME SPENT RUNNING SUT
0.00323915481567 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
