Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.64955.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1024f8878>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 18969, in act399
    assert (type(raised) == type(refRaised))
Original test has 61 steps

SAVING TEST AS failure.64955.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component4 = "c"                                                         # STEP 0
ACTION: component4 = "c" 
component4 = None : <type 'NoneType'>
=> component4 = 'c' : <type 'str'>
==================================================
component2 = "epsilon"                                                   # STEP 1
ACTION: component2 = "epsilon" 
component2 = None : <type 'NoneType'>
=> component2 = 'epsilon' : <type 'str'>
==================================================
component3 = "h"                                                         # STEP 2
ACTION: component3 = "h" 
component3 = None : <type 'NoneType'>
=> component3 = 'h' : <type 'str'>
==================================================
str0 = ""                                                                # STEP 3
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
bytes0 = 0                                                               # STEP 4
ACTION: bytes0 = 0 
bytes0 = None : <type 'NoneType'>
=> bytes0 = 0 : <type 'int'>
==================================================
bytes4 = 0                                                               # STEP 5
ACTION: bytes4 = 0 
bytes4 = None : <type 'NoneType'>
=> bytes4 = 0 : <type 'int'>
==================================================
component1 = "phi"                                                       # STEP 6
ACTION: component1 = "phi" 
component1 = None : <type 'NoneType'>
=> component1 = 'phi' : <type 'str'>
==================================================
str0 += 'n'                                                              # STEP 7
ACTION: str0 += 'n' 
str0 = '' : <type 'str'>
=> str0 = 'n' : <type 'str'>
==================================================
str0 += 'c'                                                              # STEP 8
ACTION: str0 += 'c' 
str0 = 'n' : <type 'str'>
=> str0 = 'nc' : <type 'str'>
==================================================
component0 = "lambda"                                                    # STEP 9
ACTION: component0 = "lambda" 
component0 = None : <type 'NoneType'>
=> component0 = 'lambda' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 10
ACTION: str0 += 'r' 
str0 = 'nc' : <type 'str'>
=> str0 = 'ncr' : <type 'str'>
==================================================
str0 += 'h'                                                             # STEP 11
ACTION: str0 += 'h' 
str0 = 'ncr' : <type 'str'>
=> str0 = 'ncrh' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 12
ACTION: str0 += 'j' 
str0 = 'ncrh' : <type 'str'>
=> str0 = 'ncrhj' : <type 'str'>
==================================================
str2 = ""                                                               # STEP 13
ACTION: str2 = "" 
str2 = None : <type 'NoneType'>
=> str2 = '' : <type 'str'>
==================================================
str0 += 'r'                                                             # STEP 14
ACTION: str0 += 'r' 
str0 = 'ncrhj' : <type 'str'>
=> str0 = 'ncrhjr' : <type 'str'>
==================================================
str0 += 'a'                                                             # STEP 15
ACTION: str0 += 'a' 
str0 = 'ncrhjr' : <type 'str'>
=> str0 = 'ncrhjra' : <type 'str'>
==================================================
str2 += 'w'                                                             # STEP 16
ACTION: str2 += 'w' 
str2 = '' : <type 'str'>
=> str2 = 'w' : <type 'str'>
==================================================
path3 = "/Volumes/ramdisk/test"                                         # STEP 17
ACTION: path3 = "/Volumes/ramdisk/test" 
path3 = None : <type 'NoneType'>
=> path3 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
path3 += "/" + component4                                               # STEP 18
ACTION: path3 += "/" + component4 
component4 = 'c' : <type 'str'>
path3 = '/Volumes/ramdisk/test' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/c' : <type 'str'>
==================================================
str2 += 'o'                                                             # STEP 19
ACTION: str2 += 'o' 
str2 = 'w' : <type 'str'>
=> str2 = 'wo' : <type 'str'>
==================================================
path3 += "/" + component1                                               # STEP 20
ACTION: path3 += "/" + component1 
component1 = 'phi' : <type 'str'>
path3 = '/Volumes/ramdisk/test/c' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/c/phi' : <type 'str'>
==================================================
str0 += 't'                                                             # STEP 21
ACTION: str0 += 't' 
str0 = 'ncrhjra' : <type 'str'>
=> str0 = 'ncrhjrat' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 22
ACTION: str0 += 'g' 
str0 = 'ncrhjrat' : <type 'str'>
=> str0 = 'ncrhjratg' : <type 'str'>
==================================================
str2 += 'd'                                                             # STEP 23
ACTION: str2 += 'd' 
str2 = 'wo' : <type 'str'>
=> str2 = 'wod' : <type 'str'>
==================================================
str2 += 'g'                                                             # STEP 24
ACTION: str2 += 'g' 
str2 = 'wod' : <type 'str'>
=> str2 = 'wodg' : <type 'str'>
==================================================
str0 += 'n'                                                             # STEP 25
ACTION: str0 += 'n' 
str0 = 'ncrhjratg' : <type 'str'>
=> str0 = 'ncrhjratgn' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 26
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
component1 = "e"                                                        # STEP 27
ACTION: component1 = "e" 
component1 = 'phi' : <type 'str'>
=> component1 = 'e' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 28
ACTION: str2 += 'h' 
str2 = 'wodg' : <type 'str'>
=> str2 = 'wodgh' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 29
ACTION: str0 += 'z' 
str0 = 'ncrhjratgn' : <type 'str'>
=> str0 = 'ncrhjratgnz' : <type 'str'>
==================================================
component4 = "g"                                                        # STEP 30
ACTION: component4 = "g" 
component4 = 'c' : <type 'str'>
=> component4 = 'g' : <type 'str'>
==================================================
str0 += 'k'                                                             # STEP 31
ACTION: str0 += 'k' 
str0 = 'ncrhjratgnz' : <type 'str'>
=> str0 = 'ncrhjratgnzk' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 32
ACTION: str2 += 'u' 
str2 = 'wodgh' : <type 'str'>
=> str2 = 'wodghu' : <type 'str'>
==================================================
str0 += " "                                                             # STEP 33
ACTION: str0 += " " 
str0 = 'ncrhjratgnzk' : <type 'str'>
=> str0 = 'ncrhjratgnzk ' : <type 'str'>
==================================================
str0 += 'q'                                                             # STEP 34
ACTION: str0 += 'q' 
str0 = 'ncrhjratgnzk ' : <type 'str'>
=> str0 = 'ncrhjratgnzk q' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 35
ACTION: str2 += 'm' 
str2 = 'wodghu' : <type 'str'>
=> str2 = 'wodghum' : <type 'str'>
==================================================
str2 += 'm'                                                             # STEP 36
ACTION: str2 += 'm' 
str2 = 'wodghum' : <type 'str'>
=> str2 = 'wodghumm' : <type 'str'>
==================================================
str2 += 'y'                                                             # STEP 37
ACTION: str2 += 'y' 
str2 = 'wodghumm' : <type 'str'>
=> str2 = 'wodghummy' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 38
ACTION: str0 += 'c' 
str0 = 'ncrhjratgnzk q' : <type 'str'>
=> str0 = 'ncrhjratgnzk qc' : <type 'str'>
==================================================
str2 += 'x'                                                             # STEP 39
ACTION: str2 += 'x' 
str2 = 'wodghummy' : <type 'str'>
=> str2 = 'wodghummyx' : <type 'str'>
==================================================
str2 += 'e'                                                             # STEP 40
ACTION: str2 += 'e' 
str2 = 'wodghummyx' : <type 'str'>
=> str2 = 'wodghummyxe' : <type 'str'>
==================================================
str0 += 'j'                                                             # STEP 41
ACTION: str0 += 'j' 
str0 = 'ncrhjratgnzk qc' : <type 'str'>
=> str0 = 'ncrhjratgnzk qcj' : <type 'str'>
==================================================
str0 += 'c'                                                             # STEP 42
ACTION: str0 += 'c' 
str0 = 'ncrhjratgnzk qcj' : <type 'str'>
=> str0 = 'ncrhjratgnzk qcjc' : <type 'str'>
==================================================
bytes0 += 1                                                             # STEP 43
ACTION: bytes0 += 1 
bytes0 = 0 : <type 'int'>
=> bytes0 = 1 : <type 'int'>
==================================================
str0 += 'h'                                                             # STEP 44
ACTION: str0 += 'h' 
str0 = 'ncrhjratgnzk qcjc' : <type 'str'>
=> str0 = 'ncrhjratgnzk qcjch' : <type 'str'>
==================================================
str0 += 'z'                                                             # STEP 45
ACTION: str0 += 'z' 
str0 = 'ncrhjratgnzk qcjch' : <type 'str'>
=> str0 = 'ncrhjratgnzk qcjchz' : <type 'str'>
==================================================
path3 += "/" + component2                                               # STEP 46
ACTION: path3 += "/" + component2 
component2 = 'epsilon' : <type 'str'>
path3 = '/Volumes/ramdisk/test/c/phi' : <type 'str'>
=> path3 = '/Volumes/ramdisk/test/c/phi/epsilon' : <type 'str'>
==================================================
component2 = "b"                                                        # STEP 47
ACTION: component2 = "b" 
component2 = 'epsilon' : <type 'str'>
=> component2 = 'b' : <type 'str'>
==================================================
str2 += 'h'                                                             # STEP 48
ACTION: str2 += 'h' 
str2 = 'wodghummyxe' : <type 'str'>
=> str2 = 'wodghummyxeh' : <type 'str'>
==================================================
str0 += 'l'                                                             # STEP 49
ACTION: str0 += 'l' 
str0 = 'ncrhjratgnzk qcjchz' : <type 'str'>
=> str0 = 'ncrhjratgnzk qcjchzl' : <type 'str'>
==================================================
str0 += 'y'                                                             # STEP 50
ACTION: str0 += 'y' 
str0 = 'ncrhjratgnzk qcjchzl' : <type 'str'>
=> str0 = 'ncrhjratgnzk qcjchzly' : <type 'str'>
==================================================
os0 = newFakeOS()                                                       # STEP 51
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1026babd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str0 += 'q'                                                             # STEP 52
ACTION: str0 += 'q' 
str0 = 'ncrhjratgnzk qcjchzly' : <type 'str'>
=> str0 = 'ncrhjratgnzk qcjchzlyq' : <type 'str'>
==================================================
str0 += 'g'                                                             # STEP 53
ACTION: str0 += 'g' 
str0 = 'ncrhjratgnzk qcjchzlyq' : <type 'str'>
=> str0 = 'ncrhjratgnzk qcjchzlyqg' : <type 'str'>
==================================================
str2 += 'u'                                                             # STEP 54
ACTION: str2 += 'u' 
str2 = 'wodghummyxeh' : <type 'str'>
=> str2 = 'wodghummyxehu' : <type 'str'>
==================================================
str2 += 't'                                                             # STEP 55
ACTION: str2 += 't' 
str2 = 'wodghummyxehu' : <type 'str'>
=> str2 = 'wodghummyxehut' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 56
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
result = os0.path.lexists(path3)                                        # STEP 57
ACTION: result = os0.path.lexists(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1026babd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/c/phi/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path3) 
==================================================
str2 += 's'                                                             # STEP 58
ACTION: str2 += 's' 
str2 = 'wodghummyxehut' : <type 'str'>
=> str2 = 'wodghummyxehuts' : <type 'str'>
==================================================
result = os0.path.dirname(path3)                                        # STEP 59
ACTION: result = os0.path.dirname(path3) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1026babd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/c/phi/epsilon' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.dirname(path3) 
==================================================
fd1 = os0.open(path3, os.O_RDONLY)                                      # STEP 60
ACTION: fd1 = os0.open(path3, os.O_RDONLY) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x1026babd0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path3 = '/Volumes/ramdisk/test/c/phi/epsilon' : <type 'str'>
fd1 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF1 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.IOError'> [Errno 2] No such file or directory in fake filesystem: '/Volumes/ramdisk/test/c/phi/epsilon'
REFERENCE ACTION: fd_REF1 = os_REF0.open(path3, os.O_RDONLY) 
REFERENCE ACTION RAISED EXCEPTION: <type 'exceptions.OSError'> [Errno 2] No such file or directory: '/Volumes/ramdisk/test/c/phi/epsilon'
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x10206d248>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 18969, in act399
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0369229316711 TOTAL RUNTIME
1 EXECUTED
61 TOTAL TEST OPERATIONS
0.00237321853638 TIME SPENT EXECUTING TEST OPERATIONS
0.00542664527893 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
3.93390655518e-05 TIME SPENT CHECKING PROPERTIES
0.00241255760193 TOTAL TIME SPENT RUNNING SUT
0.0039279460907 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
