Random testing using config=Config(swarmSwitch=None, maxMustHitBranch=None, verbose=False, reducePool=False, failedLogging=None, exploitBestHint=1, greedyStutter=False, internal=False, exploit=None, seed=None, generalize=False, fastQuickAnalysis=False, stopWhenNoCoverage=None, useHints=False, localize=False, total=False, speed='FAST', probs=None, normalize=False, verboseExploit=False, highLowSwarm=None, replayable=False, essentials=False, maxMustHitStatement=None, noCoverageExploit=False, quickTests=False, relax=False, startExploitStall=0, enumerateEnabled=False, uniqueValuesAnalysis=False, swarm=False, noReassign=False, html=None, stopWhenHitStatement=None, biasLOC=None, progress=False, postCover=False, swarmLength=None, generateLOC=None, noSwarmDependencies=False, profile=False, LOCBaseline=0.2, noEnumerateEnabled=False, full=True, multiple=False, timedProgress=30, silentFail=False, ddmin=False, swarmP=0.5, stopWhenBranches=None, noAlphaConvert=False, coverFile='coverage.out', readQuick=False, verboseActions=False, running=False, computeFeatureStats=False, compareFails=False, swarmProbs=None, output='failure.59583.test', genDepth=None, Pcrossover=0.2, quickAnalysis=False, keepLast=False, exploitCeiling=0.1, markovP=1.0, logging=None, stopWhenHitBranch=None, LOCProbs=False, stopWhenStatements=None, noCheck=False, maxTests=-1, noExceptionMatch=False, Pmutate=0.0, depth=200, trackMaxCoverage=None, throughput=False, noCover=True, timeout=60, stutter=None, uncaught=False, markov=None, showActions=False, startExploit=0.0)
UNCAUGHT EXCEPTION
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1023f20e0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 13271, in act322
    assert (type(raised) == type(refRaised))
Original test has 44 steps

SAVING TEST AS failure.59583.test
FINAL VERSION OF TEST, WITH LOGGED REPLAY:
component2 = "epsilon"                                                   # STEP 0
ACTION: component2 = "epsilon" 
component2 = None : <type 'NoneType'>
=> component2 = 'epsilon' : <type 'str'>
==================================================
component0 = "e"                                                         # STEP 1
ACTION: component0 = "e" 
component0 = None : <type 'NoneType'>
=> component0 = 'e' : <type 'str'>
==================================================
str1 = ""                                                                # STEP 2
ACTION: str1 = "" 
str1 = None : <type 'NoneType'>
=> str1 = '' : <type 'str'>
==================================================
component4 = "lambda"                                                    # STEP 3
ACTION: component4 = "lambda" 
component4 = None : <type 'NoneType'>
=> component4 = 'lambda' : <type 'str'>
==================================================
component1 = "beta"                                                      # STEP 4
ACTION: component1 = "beta" 
component1 = None : <type 'NoneType'>
=> component1 = 'beta' : <type 'str'>
==================================================
component3 = "f"                                                         # STEP 5
ACTION: component3 = "f" 
component3 = None : <type 'NoneType'>
=> component3 = 'f' : <type 'str'>
==================================================
str1 += 'l'                                                              # STEP 6
ACTION: str1 += 'l' 
str1 = '' : <type 'str'>
=> str1 = 'l' : <type 'str'>
==================================================
os0 = newFakeOS()                                                        # STEP 7
ACTION: os0 = newFakeOS() 
os0 = None : <type 'NoneType'>
os_REF0 = None : <type 'NoneType'>
=> os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10226f9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
REFERENCE ACTION: os_REF0 = os 
=> os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
==================================================
str1 += 't'                                                              # STEP 8
ACTION: str1 += 't' 
str1 = 'l' : <type 'str'>
=> str1 = 'lt' : <type 'str'>
==================================================
str1 += 'm'                                                              # STEP 9
ACTION: str1 += 'm' 
str1 = 'lt' : <type 'str'>
=> str1 = 'ltm' : <type 'str'>
==================================================
str1 += 'q'                                                             # STEP 10
ACTION: str1 += 'q' 
str1 = 'ltm' : <type 'str'>
=> str1 = 'ltmq' : <type 'str'>
==================================================
str1 += 'j'                                                             # STEP 11
ACTION: str1 += 'j' 
str1 = 'ltmq' : <type 'str'>
=> str1 = 'ltmqj' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 12
ACTION: str1 += " " 
str1 = 'ltmqj' : <type 'str'>
=> str1 = 'ltmqj ' : <type 'str'>
==================================================
str4 = ""                                                               # STEP 13
ACTION: str4 = "" 
str4 = None : <type 'NoneType'>
=> str4 = '' : <type 'str'>
==================================================
bytes2 = 0                                                              # STEP 14
ACTION: bytes2 = 0 
bytes2 = None : <type 'NoneType'>
=> bytes2 = 0 : <type 'int'>
==================================================
str1 += 'w'                                                             # STEP 15
ACTION: str1 += 'w' 
str1 = 'ltmqj ' : <type 'str'>
=> str1 = 'ltmqj w' : <type 'str'>
==================================================
str4 += 'i'                                                             # STEP 16
ACTION: str4 += 'i' 
str4 = '' : <type 'str'>
=> str4 = 'i' : <type 'str'>
==================================================
str4 += 't'                                                             # STEP 17
ACTION: str4 += 't' 
str4 = 'i' : <type 'str'>
=> str4 = 'it' : <type 'str'>
==================================================
bytes3 = 0                                                              # STEP 18
ACTION: bytes3 = 0 
bytes3 = None : <type 'NoneType'>
=> bytes3 = 0 : <type 'int'>
==================================================
str1 += 'j'                                                             # STEP 19
ACTION: str1 += 'j' 
str1 = 'ltmqj w' : <type 'str'>
=> str1 = 'ltmqj wj' : <type 'str'>
==================================================
str1 += 'r'                                                             # STEP 20
ACTION: str1 += 'r' 
str1 = 'ltmqj wj' : <type 'str'>
=> str1 = 'ltmqj wjr' : <type 'str'>
==================================================
str4 += 'x'                                                             # STEP 21
ACTION: str4 += 'x' 
str4 = 'it' : <type 'str'>
=> str4 = 'itx' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 22
ACTION: str1 += " " 
str1 = 'ltmqj wjr' : <type 'str'>
=> str1 = 'ltmqj wjr ' : <type 'str'>
==================================================
str1 += 'u'                                                             # STEP 23
ACTION: str1 += 'u' 
str1 = 'ltmqj wjr ' : <type 'str'>
=> str1 = 'ltmqj wjr u' : <type 'str'>
==================================================
str4 += 'v'                                                             # STEP 24
ACTION: str4 += 'v' 
str4 = 'itx' : <type 'str'>
=> str4 = 'itxv' : <type 'str'>
==================================================
path0 = "/Volumes/ramdisk/test"                                         # STEP 25
ACTION: path0 = "/Volumes/ramdisk/test" 
path0 = None : <type 'NoneType'>
=> path0 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
str4 += 'g'                                                             # STEP 26
ACTION: str4 += 'g' 
str4 = 'itxv' : <type 'str'>
=> str4 = 'itxvg' : <type 'str'>
==================================================
result = os0.path.islink(path0)                                         # STEP 27
ACTION: result = os0.path.islink(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10226f9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.islink(path0) 
==================================================
str1 += 'p'                                                             # STEP 28
ACTION: str1 += 'p' 
str1 = 'ltmqj wjr u' : <type 'str'>
=> str1 = 'ltmqj wjr up' : <type 'str'>
==================================================
result = os0.path.exists(path0)                                         # STEP 29
ACTION: result = os0.path.exists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10226f9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.exists(path0) 
==================================================
str4 += 'j'                                                             # STEP 30
ACTION: str4 += 'j' 
str4 = 'itxvg' : <type 'str'>
=> str4 = 'itxvgj' : <type 'str'>
==================================================
str4 += 'z'                                                             # STEP 31
ACTION: str4 += 'z' 
str4 = 'itxvgj' : <type 'str'>
=> str4 = 'itxvgjz' : <type 'str'>
==================================================
path1 = "/Volumes/ramdisk/test"                                         # STEP 32
ACTION: path1 = "/Volumes/ramdisk/test" 
path1 = None : <type 'NoneType'>
=> path1 = '/Volumes/ramdisk/test' : <type 'str'>
==================================================
result = os0.path.lexists(path0)                                        # STEP 33
ACTION: result = os0.path.lexists(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10226f9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path0) 
==================================================
str0 = ""                                                               # STEP 34
ACTION: str0 = "" 
str0 = None : <type 'NoneType'>
=> str0 = '' : <type 'str'>
==================================================
str1 += " "                                                             # STEP 35
ACTION: str1 += " " 
str1 = 'ltmqj wjr up' : <type 'str'>
=> str1 = 'ltmqj wjr up ' : <type 'str'>
==================================================
result = os0.path.abspath(path0)                                        # STEP 36
ACTION: result = os0.path.abspath(path0) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10226f9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path0 = '/Volumes/ramdisk/test' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.abspath(path0) 
==================================================
path1 += "/" + component1                                               # STEP 37
ACTION: path1 += "/" + component1 
component1 = 'beta' : <type 'str'>
path1 = '/Volumes/ramdisk/test' : <type 'str'>
=> path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
==================================================
str1 += 'n'                                                             # STEP 38
ACTION: str1 += 'n' 
str1 = 'ltmqj wjr up ' : <type 'str'>
=> str1 = 'ltmqj wjr up n' : <type 'str'>
==================================================
result = os0.path.lexists(path1)                                        # STEP 39
ACTION: result = os0.path.lexists(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10226f9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.lexists(path1) 
==================================================
str4 += 'f'                                                             # STEP 40
ACTION: str4 += 'f' 
str4 = 'itxvgjz' : <type 'str'>
=> str4 = 'itxvgjzf' : <type 'str'>
==================================================
result = os0.path.isdir(path1)                                          # STEP 41
ACTION: result = os0.path.isdir(path1) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10226f9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
REFERENCE ACTION: result_REF = os_REF0.path.isdir(path1) 
==================================================
component1 = "d"                                                        # STEP 42
ACTION: component1 = "d" 
component1 = 'beta' : <type 'str'>
=> component1 = 'd' : <type 'str'>
==================================================
fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC)            # STEP 43
ACTION: fd0 = os0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
os0 = <pyfakefs.fake_filesystem.FakeOsModule object at 0x10226f9d0> : <class 'pyfakefs.fake_filesystem.FakeOsModule'>
path1 = '/Volumes/ramdisk/test/beta' : <type 'str'>
fd0 = None : <type 'NoneType'>
os_REF0 = <module 'os' from '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.pyc'> : <type 'module'>
fd_REF0 = None : <type 'NoneType'>
RAISED EXPECTED EXCEPTION: <type 'exceptions.OSError'> [Errno 20] Not a directory in the fake filesystem: '/Volumes/ramdisk/test'
REFERENCE ACTION: fd_REF0 = os_REF0.open(path1, os.O_CREAT | os.O_WRONLY | os.O_TRUNC) 
=> fd_REF0 = 4 : <type 'int'>
ERROR: (<type 'exceptions.AssertionError'>, AssertionError(), <traceback object at 0x1038e55f0>)
TRACEBACK:
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 48329, in safely
    act[2]()
  File "/Users/alex/tstl/examples/mutateProbe/pyfakefs/sut.py", line 13271, in act322
    assert (type(raised) == type(refRaised))
STOPPING TESTING DUE TO FAILED TEST
0.0321180820465 TOTAL RUNTIME
1 EXECUTED
44 TOTAL TEST OPERATIONS
0.00377178192139 TIME SPENT EXECUTING TEST OPERATIONS
0.00267481803894 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
2.16960906982e-05 TIME SPENT CHECKING PROPERTIES
0.00379347801208 TOTAL TIME SPENT RUNNING SUT
0.00320410728455 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
