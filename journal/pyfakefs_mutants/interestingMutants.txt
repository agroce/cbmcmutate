NEW LINES: 36
TOTAL LINES 825
RATIO 0.0436363636364
==================================================
AOD_UnaryOp_mutant_1507054820.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO ChangeDiskUsage
734c734
<             self.filesystem.ChangeDiskUsage(entry.GetSize(), pathname_name, entry.st_dev)
---
>             self.filesystem.ChangeDiskUsage((- entry.GetSize()), pathname_name, entry.st_dev)

AOR_BinOp_mutant_1506797723.py NOT IN LOCS!
==================================================
AOR_BinOp_mutant_1507054825.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_atime
126c126
<             self._st_atime_ns = self.long_type((initial_time // 1000000000.0))
---
>             self._st_atime_ns = self.long_type((initial_time * 1000000000.0))

==================================================
AOR_BinOp_mutant_1507054826.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_atime
126c126
<             self._st_atime_ns = self.long_type((initial_time / 1000000000.0))
---
>             self._st_atime_ns = self.long_type((initial_time * 1000000000.0))

==================================================
AOR_BinOp_mutant_1507054827.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_atime
126c126
<             self._st_atime_ns = self.long_type((initial_time - 1000000000.0))
---
>             self._st_atime_ns = self.long_type((initial_time * 1000000000.0))

==================================================
AOR_BinOp_mutant_1507054828.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_atime
126c126
<             self._st_atime_ns = self.long_type((initial_time + 1000000000.0))
---
>             self._st_atime_ns = self.long_type((initial_time * 1000000000.0))

==================================================
AOR_BinOp_mutant_1507054853.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_ctime
226c226
<         self._st_ctime_ns = self.long_type((val // 1000000000.0))
---
>         self._st_ctime_ns = self.long_type((val * 1000000000.0))

==================================================
AOR_BinOp_mutant_1507054854.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_ctime
226c226
<         self._st_ctime_ns = self.long_type((val / 1000000000.0))
---
>         self._st_ctime_ns = self.long_type((val * 1000000000.0))

==================================================
AOR_BinOp_mutant_1507054855.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_ctime
226c226
<         self._st_ctime_ns = self.long_type((val - 1000000000.0))
---
>         self._st_ctime_ns = self.long_type((val * 1000000000.0))

==================================================
AOR_BinOp_mutant_1507054856.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_ctime
226c226
<         self._st_ctime_ns = self.long_type((val + 1000000000.0))
---
>         self._st_ctime_ns = self.long_type((val * 1000000000.0))

==================================================
AOR_BinOp_mutant_1507054861.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_mtime
244c244
<         self._st_mtime_ns = self.long_type((val // 1000000000.0))
---
>         self._st_mtime_ns = self.long_type((val * 1000000000.0))

==================================================
AOR_BinOp_mutant_1507054862.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_mtime
244c244
<         self._st_mtime_ns = self.long_type((val / 1000000000.0))
---
>         self._st_mtime_ns = self.long_type((val * 1000000000.0))

==================================================
AOR_BinOp_mutant_1507054863.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_mtime
244c244
<         self._st_mtime_ns = self.long_type((val - 1000000000.0))
---
>         self._st_mtime_ns = self.long_type((val * 1000000000.0))

==================================================
AOR_BinOp_mutant_1507054864.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_mtime
244c244
<         self._st_mtime_ns = self.long_type((val + 1000000000.0))
---
>         self._st_mtime_ns = self.long_type((val * 1000000000.0))

==================================================
AOR_BinOp_mutant_1507054870.py.t60.out.0
HIT: 5 MIN: 0.0216310024261 MAX: 0.113792181015 MEAN: 0.0459952354431 MEDIAN: 0.0263311862946 STD: 0.0347389196718
==================================================
AOR_BinOp_mutant_1507054871.py.t60.out.0
HIT: 5 MIN: 0.0246520042419 MAX: 0.0829792022705 MEAN: 0.0496814250946 MEDIAN: 0.0478999614716 STD: 0.0215878122604
==================================================
AOR_BinOp_mutant_1507054872.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO ChangeDiskUsage
462c462
<         self.filesystem.ChangeDiskUsage((st_size * current_size), self.name, self.st_dev)
---
>         self.filesystem.ChangeDiskUsage((st_size - current_size), self.name, self.st_dev)

==================================================
AOR_BinOp_mutant_1507054873.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO ChangeDiskUsage
462c462
<         self.filesystem.ChangeDiskUsage((st_size + current_size), self.name, self.st_dev)
---
>         self.filesystem.ChangeDiskUsage((st_size - current_size), self.name, self.st_dev)

==================================================
AOR_BinOp_mutant_1507054874.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO ChangeDiskUsage
520c520
<         self.filesystem.ChangeDiskUsage((st_size // current_size), self.name, self.st_dev)
---
>         self.filesystem.ChangeDiskUsage((st_size - current_size), self.name, self.st_dev)

==================================================
AOR_BinOp_mutant_1507054875.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO ChangeDiskUsage
520c520
<         self.filesystem.ChangeDiskUsage((st_size / current_size), self.name, self.st_dev)
---
>         self.filesystem.ChangeDiskUsage((st_size - current_size), self.name, self.st_dev)

==================================================
AOR_BinOp_mutant_1507054876.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO ChangeDiskUsage
520c520
<         self.filesystem.ChangeDiskUsage((st_size * current_size), self.name, self.st_dev)
---
>         self.filesystem.ChangeDiskUsage((st_size - current_size), self.name, self.st_dev)

==================================================
AOR_BinOp_mutant_1507054877.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO ChangeDiskUsage
520c520
<         self.filesystem.ChangeDiskUsage((st_size + current_size), self.name, self.st_dev)
---
>         self.filesystem.ChangeDiskUsage((st_size - current_size), self.name, self.st_dev)

==================================================
AOR_BinOp_mutant_1507054950.py.t60.out.0
HIT: 5 MIN: 0.0337319374084 MAX: 0.106115818024 MEAN: 0.0723469734192 MEDIAN: 0.0622029304504 STD: 0.0269753190937
==================================================
AOR_BinOp_mutant_1507054951.py.t60.out.0
HIT: 5 MIN: 0.0231120586395 MAX: 0.12019109726 MEAN: 0.0686847209931 MEDIAN: 0.0616590976715 STD: 0.0316040442389
==================================================
AOR_BinOp_mutant_1507054952.py.t60.out.0
HIT: 5 MIN: 0.0341708660126 MAX: 0.187542915344 MEAN: 0.11895737648 MEDIAN: 0.11487698555 STD: 0.0600794402756
==================================================
AOR_BinOp_mutant_1507054953.py.t60.out.0
HIT: 5 MIN: 0.0285840034485 MAX: 0.149562120438 MEAN: 0.0664076328278 MEDIAN: 0.0465910434723 STD: 0.0433765282075
==================================================
AOR_BinOp_mutant_1507054954.py.t60.out.0
HIT: 5 MIN: 0.0215489864349 MAX: 0.0319278240204 MEAN: 0.027136182785 MEDIAN: 0.0281579494476 STD: 0.00444121696244
==================================================
AOR_BinOp_mutant_1507054955.py.t60.out.0
HIT: 5 MIN: 0.0237209796906 MAX: 0.0494620800018 MEAN: 0.0352398395538 MEDIAN: 0.0341150760651 STD: 0.00893499770248
==================================================
AOR_BinOp_mutant_1507054956.py.t60.out.0
HIT: 5 MIN: 0.0278379917145 MAX: 0.0494170188904 MEAN: 0.03765001297 MEDIAN: 0.0378439426422 STD: 0.00784368524292
==================================================
AOR_BinOp_mutant_1507054957.py.t60.out.0
HIT: 5 MIN: 0.0267291069031 MAX: 0.0369420051575 MEAN: 0.0293764591217 MEDIAN: 0.0278680324554 STD: 0.00381010755281
==================================================
AOR_BinOp_mutant_1507054958.py.t60.out.0
HIT: 5 MIN: 0.0211429595947 MAX: 0.0809879302979 MEAN: 0.0411021709442 MEDIAN: 0.0298969745636 STD: 0.0222949000192
==================================================
AOR_BinOp_mutant_1507054959.py.t60.out.0
HIT: 5 MIN: 0.0183639526367 MAX: 0.048798084259 MEAN: 0.0260116577148 MEDIAN: 0.020574092865 STD: 0.0114981518645
==================================================
AOR_BinOp_mutant_1507054960.py.t60.out.0
HIT: 5 MIN: 0.0174930095673 MAX: 0.0554881095886 MEAN: 0.0287938594818 MEDIAN: 0.0234491825104 STD: 0.0135987511215
==================================================
AOR_BinOp_mutant_1507054961.py.t60.out.0
HIT: 5 MIN: 0.0214369297028 MAX: 0.0270910263062 MEAN: 0.0235901832581 MEDIAN: 0.023176908493 STD: 0.00188292198279
==================================================
AOR_BinOp_mutant_1507054962.py.t60.out.0
HIT: 5 MIN: 0.0258600711823 MAX: 0.0573379993439 MEAN: 0.0399318218231 MEDIAN: 0.0438411235809 STD: 0.0120316814583
==================================================
AOR_BinOp_mutant_1507054963.py.t60.out.0
HIT: 5 MIN: 0.0225012302399 MAX: 0.0340158939362 MEAN: 0.0306616306305 MEDIAN: 0.0319700241089 STD: 0.00415728848423
==================================================
AOR_BinOp_mutant_1507054964.py.t60.out.0
HIT: 5 MIN: 0.0315718650818 MAX: 0.0427341461182 MEAN: 0.0345283985138 MEDIAN: 0.0323088169098 STD: 0.00416492424735
==================================================
AOR_BinOp_mutant_1507054965.py.t60.out.0
HIT: 5 MIN: 0.0222041606903 MAX: 0.0364310741425 MEAN: 0.0283028125763 MEDIAN: 0.0285499095917 STD: 0.00481982556766
==================================================
AOR_BinOp_mutant_1507054966.py.t60.out.0
HIT: 5 MIN: 0.0253150463104 MAX: 0.0494570732117 MEAN: 0.0328725814819 MEDIAN: 0.0306358337402 STD: 0.00853935768956
==================================================
AOR_BinOp_mutant_1507054967.py.t60.out.0
HIT: 5 MIN: 0.029363155365 MAX: 0.0360288619995 MEAN: 0.0319045543671 MEDIAN: 0.031201839447 STD: 0.00222099170817
==================================================
AOR_BinOp_mutant_1507054968.py.t60.out.0
HIT: 5 MIN: 0.0243818759918 MAX: 0.0503361225128 MEAN: 0.033155632019 MEDIAN: 0.0273630619049 STD: 0.00953196386315
==================================================
AOR_BinOp_mutant_1507054969.py.t60.out.0
HIT: 5 MIN: 0.0211088657379 MAX: 0.0434551239014 MEAN: 0.0312283992767 MEDIAN: 0.0274159908295 STD: 0.00832870222447
==================================================
AOR_BinOp_mutant_1507055002.py.t60.out.0
HIT: 5 MIN: 0.032830953598 MAX: 0.0465259552002 MEAN: 0.0406957626343 MEDIAN: 0.0434589385986 STD: 0.00504981340855
==================================================
AOR_BinOp_mutant_1507055003.py.t60.out.0
HIT: 5 MIN: 0.0256218910217 MAX: 0.0438239574432 MEAN: 0.030549955368 MEDIAN: 0.0271987915039 STD: 0.00685370097926
==================================================
AOR_BinOp_mutant_1507055004.py.t60.out.0
HIT: 5 MIN: 0.0164799690247 MAX: 0.0539691448212 MEAN: 0.0343061923981 MEDIAN: 0.0340659618378 STD: 0.0157903737403
==================================================
AOR_BinOp_mutant_1507055005.py.t60.out.0
HIT: 5 MIN: 0.0260050296783 MAX: 0.0392029285431 MEAN: 0.0328083992004 MEDIAN: 0.0345261096954 STD: 0.00479141816047
==================================================
AOR_BinOp_mutant_1507055011.py.t60.out.0
HIT: 5 MIN: 0.169779062271 MAX: 0.438612937927 MEAN: 0.288748979568 MEDIAN: 0.252645969391 STD: 0.112086663245
==================================================
AOR_BinOp_mutant_1507055012.py.t60.out.0
HIT: 5 MIN: 0.0677928924561 MAX: 0.728937864304 MEAN: 0.327800321579 MEDIAN: 0.368633031845 STD: 0.245379899938
==================================================
AOR_BinOp_mutant_1507055013.py.t60.out.0
HIT: 5 MIN: 0.103724002838 MAX: 0.535895824432 MEAN: 0.229761552811 MEDIAN: 0.146039009094 STD: 0.157831909318
==================================================
AOR_BinOp_mutant_1507055014.py.t60.out.0
HIT: 5 MIN: 0.283346176147 MAX: 0.440601110458 MEAN: 0.382288265228 MEDIAN: 0.391648054123 STD: 0.0556716576377
==================================================
AOR_BinOp_mutant_1507055015.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO raise
1752c1752
<                     raise error_class(errno.ELOOP, ("Too many levels of symbolic links: '%s'" + _ComponentsToPath(resolved_components)))
---
>                     raise error_class(errno.ELOOP, ("Too many levels of symbolic links: '%s'" % _ComponentsToPath(resolved_components)))

==================================================
AOR_BinOp_mutant_1507055016.py.t60.out.0
HIT: 5 MIN: 0.0319879055023 MAX: 0.198877096176 MEAN: 0.08871717453 MEDIAN: 0.0737578868866 STD: 0.057379871476
==================================================
AOR_BinOp_mutant_1507055017.py.t60.out.0
HIT: 5 MIN: 0.0435419082642 MAX: 0.13507604599 MEAN: 0.0772072315216 MEDIAN: 0.0780789852142 STD: 0.0322509010386
==================================================
AOR_BinOp_mutant_1507055018.py.t60.out.0
HIT: 5 MIN: 0.0388171672821 MAX: 0.304711103439 MEAN: 0.155379867554 MEDIAN: 0.102978944778 STD: 0.11207301833
==================================================
AOR_BinOp_mutant_1507055019.py.t60.out.0
HIT: 5 MIN: 0.0688450336456 MAX: 0.171901941299 MEAN: 0.11144156456 MEDIAN: 0.0959739685059 STD: 0.0401095150411
==================================================
AOR_BinOp_mutant_1507055020.py.t60.out.0
HIT: 5 MIN: 0.0726759433746 MAX: 0.17951798439 MEAN: 0.119609594345 MEDIAN: 0.108510017395 STD: 0.0419629591951
==================================================
AOR_BinOp_mutant_1507055021.py.t60.out.0
HIT: 5 MIN: 0.0443370342255 MAX: 0.160335063934 MEAN: 0.105840015411 MEDIAN: 0.0970411300659 STD: 0.043244193591
==================================================
AOR_BinOp_mutant_1507055022.py.t60.out.0
HIT: 5 MIN: 0.0190649032593 MAX: 0.3726811409 MEAN: 0.119312047959 MEDIAN: 0.0498631000519 STD: 0.132239268191
==================================================
AOR_BinOp_mutant_1507055023.py.t60.out.0
HIT: 5 MIN: 0.0304222106934 MAX: 0.229833126068 MEAN: 0.10974111557 MEDIAN: 0.0952191352844 STD: 0.0654610226932
==================================================
AOR_BinOp_mutant_1507055024.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO raise
2481c2481
<                     raise OSError(errno.EISDIR, ("Is a directory: '%s'" + path))
---
>                     raise OSError(errno.EISDIR, ("Is a directory: '%s'" % path))

==================================================
AOR_UnaryOp_mutant_1507055072.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO ChangeDiskUsage
734c734
<             self.filesystem.ChangeDiskUsage((+ entry.GetSize()), pathname_name, entry.st_dev)
---
>             self.filesystem.ChangeDiskUsage((- entry.GetSize()), pathname_name, entry.st_dev)

ASR_AugAssign_mutant_1506797769.py NOT IN LOCS!
==================================================
ASR_AugAssign_mutant_1507055073.py.t60.out.0
HIT: 5 MIN: 0.362548828125 MAX: 18.317084074 MEAN: 5.60693597793 MEDIAN: 1.88546204567 STD: 6.74410571036
==================================================
ASR_AugAssign_mutant_1507055074.py.t60.out.0
HIT: 5 MIN: 1.94461894035 MAX: 10.236686945 MEAN: 4.17848720551 MEDIAN: 3.10285115242 STD: 3.06075591682
==================================================
ASR_AugAssign_mutant_1507055075.py.t60.out.0
HIT: 5 MIN: 1.52878189087 MAX: 18.4675600529 MEAN: 5.50570716858 MEDIAN: 2.08395195007 STD: 6.52753532278
==================================================
ASR_AugAssign_mutant_1507055076.py.t60.out.0
HIT: 5 MIN: 5.26366996765 MAX: 59.0064361095 MEAN: 23.8241693973 MEDIAN: 18.4262089729 STD: 20.0438744445
==================================================
ASR_AugAssign_mutant_1507055081.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO epoch
536c536
<         self.epoch //= 1
---
>         self.epoch += 1

==================================================
ASR_AugAssign_mutant_1507055082.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO epoch
536c536
<         self.epoch /= 1
---
>         self.epoch += 1

==================================================
ASR_AugAssign_mutant_1507055083.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO epoch
536c536
<         self.epoch *= 1
---
>         self.epoch += 1

==================================================
ASR_AugAssign_mutant_1507055084.py.t60.out.0
HIT: 5 MIN: 2.02637696266 MAX: 53.5241839886 MEAN: 33.2007099629 MEDIAN: 31.9757428169 STD: 18.8152518409
==================================================
ASR_AugAssign_mutant_1507055090.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_nlink
651c651
<         self.st_nlink //= 1
---
>         self.st_nlink += 1

==================================================
ASR_AugAssign_mutant_1507055091.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_nlink
651c651
<         self.st_nlink /= 1
---
>         self.st_nlink += 1

==================================================
ASR_AugAssign_mutant_1507055092.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_nlink
651c651
<         self.st_nlink *= 1
---
>         self.st_nlink += 1

==================================================
ASR_AugAssign_mutant_1507055093.py.t60.out.0
HIT: 5 MIN: 0.217566013336 MAX: 0.951300144196 MEAN: 0.634940242767 MEDIAN: 0.687813043594 STD: 0.294538601899
==================================================
ASR_AugAssign_mutant_1507055094.py.t60.out.0
HIT: 3 MIN: 0.623674869537 MAX: 45.4658501148 MEAN: 30.2919069926 MEDIAN: 44.7861959934 STD: 20.9804429634
==================================================
ASR_AugAssign_mutant_1507055095.py.t60.out.0
HIT: 3 MIN: 31.1323609352 MAX: 46.0351221561 MEAN: 38.2880086899 MEDIAN: 37.6965429783 STD: 6.09838485545
==================================================
ASR_AugAssign_mutant_1507055096.py.t60.out.0
HIT: 4 MIN: 14.1074841022 MAX: 56.3875629902 MEAN: 34.0121762752 MEDIAN: 32.7768290043 STD: 16.5968677857
==================================================
ASR_AugAssign_mutant_1507055097.py.t60.out.0
HIT: 5 MIN: 0.700889110565 MAX: 6.38731098175 MEAN: 2.94235639572 MEDIAN: 1.09523296356 STD: 2.50405344413
==================================================
ASR_AugAssign_mutant_1507055098.py.t60.out.0
HIT: 5 MIN: 0.0565130710602 MAX: 0.18173289299 MEAN: 0.123097801208 MEDIAN: 0.127961158752 STD: 0.0446397245863
==================================================
ASR_AugAssign_mutant_1507055099.py.t60.out.0
HIT: 5 MIN: 0.0408711433411 MAX: 0.178419828415 MEAN: 0.11813621521 MEDIAN: 0.140621185303 STD: 0.0478048253421
==================================================
ASR_AugAssign_mutant_1507055100.py.t60.out.0
HIT: 5 MIN: 0.0431520938873 MAX: 0.28870511055 MEAN: 0.181940793991 MEDIAN: 0.187610864639 STD: 0.086668131014
==================================================
ASR_AugAssign_mutant_1507055101.py.t60.out.0
HIT: 5 MIN: 0.113805055618 MAX: 0.245815038681 MEAN: 0.152416372299 MEDIAN: 0.125294923782 STD: 0.0488575920329
==================================================
ASR_AugAssign_mutant_1507055102.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_nlink
736c736
<         self.st_nlink //= 1
---
>         self.st_nlink -= 1

==================================================
ASR_AugAssign_mutant_1507055103.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_nlink
736c736
<         self.st_nlink /= 1
---
>         self.st_nlink -= 1

==================================================
ASR_AugAssign_mutant_1507055104.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_nlink
736c736
<         self.st_nlink *= 1
---
>         self.st_nlink -= 1

==================================================
ASR_AugAssign_mutant_1507055105.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_nlink
736c736
<         self.st_nlink += 1
---
>         self.st_nlink -= 1

==================================================
ASR_AugAssign_mutant_1507055106.py.t60.out.0
HIT: 5 MIN: 0.0542409420013 MAX: 5.57414698601 MEAN: 1.40577001572 MEDIAN: 0.219602108002 STD: 2.10857934052
==================================================
ASR_AugAssign_mutant_1507055107.py.t60.out.0
HIT: 5 MIN: 0.288586139679 MAX: 1.79047012329 MEAN: 0.934248590469 MEDIAN: 0.795778989792 STD: 0.505087145253
==================================================
ASR_AugAssign_mutant_1507055108.py.t60.out.0
HIT: 5 MIN: 0.153831958771 MAX: 4.62634301186 MEAN: 2.57074532509 MEDIAN: 2.11102390289 STD: 1.62808759054
==================================================
ASR_AugAssign_mutant_1507055109.py.t60.out.0
HIT: 5 MIN: 0.263597011566 MAX: 4.51649188995 MEAN: 1.42727198601 MEDIAN: 0.48658490181 STD: 1.60595395157
==================================================
ASR_AugAssign_mutant_1507055110.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO _last_dev
939c939
<         self._last_dev //= 1
---
>         self._last_dev += 1

==================================================
ASR_AugAssign_mutant_1507055111.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO _last_dev
939c939
<         self._last_dev /= 1
---
>         self._last_dev += 1

==================================================
ASR_AugAssign_mutant_1507055112.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO _last_dev
939c939
<         self._last_dev *= 1
---
>         self._last_dev += 1

==================================================
ASR_AugAssign_mutant_1507055113.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO _last_dev
939c939
<         self._last_dev -= 1
---
>         self._last_dev += 1

==================================================
ASR_AugAssign_mutant_1507055114.py.t60.out.0
HIT: 5 MIN: 0.0418770313263 MAX: 0.0857989788055 MEAN: 0.0635005474091 MEDIAN: 0.0637788772583 STD: 0.0169275844814
==================================================
ASR_AugAssign_mutant_1507055115.py.t60.out.0
HIT: 5 MIN: 0.0241808891296 MAX: 0.0493519306183 MEAN: 0.0382145404816 MEDIAN: 0.03852891922 STD: 0.00822096559791
==================================================
ASR_AugAssign_mutant_1507055116.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO usage_change
1072c1072
<             mount_point['used_size'] *= usage_change
---
>             mount_point['used_size'] += usage_change

==================================================
ASR_AugAssign_mutant_1507055117.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO usage_change
1072c1072
<             mount_point['used_size'] -= usage_change
---
>             mount_point['used_size'] += usage_change

==================================================
ASR_AugAssign_mutant_1507055118.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO link_depth
1764c1764
<                 link_depth //= 1
---
>                 link_depth += 1

==================================================
ASR_AugAssign_mutant_1507055119.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO link_depth
1764c1764
<                 link_depth /= 1
---
>                 link_depth += 1

==================================================
ASR_AugAssign_mutant_1507055120.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO link_depth
1764c1764
<                 link_depth *= 1
---
>                 link_depth += 1

==================================================
ASR_AugAssign_mutant_1507055121.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO link_depth
1764c1764
<                 link_depth -= 1
---
>                 link_depth += 1

==================================================
ASR_AugAssign_mutant_1507055122.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO _last_ino
2094c2094
<         self._last_ino //= 1
---
>         self._last_ino += 1

==================================================
ASR_AugAssign_mutant_1507055123.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO _last_ino
2094c2094
<         self._last_ino /= 1
---
>         self._last_ino += 1

==================================================
ASR_AugAssign_mutant_1507055124.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO _last_ino
2094c2094
<         self._last_ino *= 1
---
>         self._last_ino += 1

==================================================
ASR_AugAssign_mutant_1507055125.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO _last_ino
2094c2094
<         self._last_ino -= 1
---
>         self._last_ino += 1

==================================================
ASR_AugAssign_mutant_1507055130.py.t60.out.0
HIT: 5 MIN: 0.0326769351959 MAX: 0.0983819961548 MEAN: 0.0649039745331 MEDIAN: 0.0747308731079 STD: 0.0265768661115
==================================================
ASR_AugAssign_mutant_1507055131.py.t60.out.0
HIT: 5 MIN: 0.0508708953857 MAX: 0.366947174072 MEAN: 0.177821588516 MEDIAN: 0.124423980713 STD: 0.120936485876
==================================================
ASR_AugAssign_mutant_1507055132.py.t60.out.0
HIT: 5 MIN: 0.0389280319214 MAX: 0.343074083328 MEAN: 0.152545404434 MEDIAN: 0.153547048569 STD: 0.109479750732
==================================================
ASR_AugAssign_mutant_1507055133.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_mode
2201c2201
<             st_mode -= (~ self.umask)
---
>             st_mode &= (~ self.umask)

==================================================
ASR_AugAssign_mutant_1507055134.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_mode
2201c2201
<             st_mode += (~ self.umask)
---
>             st_mode &= (~ self.umask)

==================================================
ASR_AugAssign_mutant_1507055135.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO _last_ino
2210c2210
<         self._last_ino //= 1
---
>         self._last_ino += 1

==================================================
ASR_AugAssign_mutant_1507055136.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO _last_ino
2210c2210
<         self._last_ino /= 1
---
>         self._last_ino += 1

==================================================
ASR_AugAssign_mutant_1507055137.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO _last_ino
2210c2210
<         self._last_ino *= 1
---
>         self._last_ino += 1

==================================================
ASR_AugAssign_mutant_1507055138.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO _last_ino
2210c2210
<         self._last_ino -= 1
---
>         self._last_ino += 1

==================================================
BCR_Break_mutant_1507055138.py.t60.out.0
==================================================
BCR_Break_mutant_1507055139.py.t60.out.0
==================================================
BCR_Break_mutant_1507055140.py.t60.out.0
==================================================
BOD_UnaryOp_mutant_1507055583.py.t60.out.0
HIT: 5 MIN: 0.0629880428314 MAX: 0.734866857529 MEAN: 0.406621217728 MEDIAN: 0.424893140793 STD: 0.214420130614
==================================================
BOD_UnaryOp_mutant_1507055584.py.t60.out.0
HIT: 5 MIN: 0.0518779754639 MAX: 0.73642706871 MEAN: 0.216936635971 MEDIAN: 0.113139152527 STD: 0.261591108544
==================================================
BOD_UnaryOp_mutant_1507055585.py.t60.out.0
HIT: 5 MIN: 0.134155035019 MAX: 0.905694961548 MEAN: 0.490471982956 MEDIAN: 0.300333023071 STD: 0.322332918613
==================================================
BOD_UnaryOp_mutant_1507055586.py.t60.out.0
HIT: 5 MIN: 0.0514159202576 MAX: 0.29198884964 MEAN: 0.164321136475 MEDIAN: 0.13187289238 STD: 0.0921528595676
==================================================
BOD_UnaryOp_mutant_1507055587.py.t60.out.0
HIT: 5 MIN: 0.0256409645081 MAX: 0.142061948776 MEAN: 0.082042646408 MEDIAN: 0.0836000442505 STD: 0.0382379515073
BOR_BitAnd_mutant_1506798281.py NOT IN LOCS!
==================================================
BOR_BitAnd_mutant_1507055589.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_mode
683c683
<         if ((not (self.st_mode | PERM_WRITE)) and (not self.filesystem.is_windows_fs)):
---
>         if ((not (self.st_mode & PERM_WRITE)) and (not self.filesystem.is_windows_fs)):

==================================================
BOR_BitAnd_mutant_1507055590.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_mode
719c719
<         if ((entry.st_mode | PERM_WRITE) == 0):
---
>         if ((entry.st_mode & PERM_WRITE) == 0):

==================================================
BOR_BitAnd_mutant_1507055591.py.t60.out.0
HIT: 5 MIN: 0.0615019798279 MAX: 0.153340101242 MEAN: 0.10376906395 MEDIAN: 0.115532159805 STD: 0.0361324355273
==================================================
BOR_BitAnd_mutant_1507055592.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_mode
1106c1106
<         file_object.st_mode = ((file_object.st_mode & (~ PERM_ALL)) | (mode | PERM_ALL))
---
>         file_object.st_mode = ((file_object.st_mode & (~ PERM_ALL)) | (mode & PERM_ALL))

==================================================
BOR_BitAnd_mutant_1507055593.py.t60.out.0
HIT: 5 MIN: 0.0192039012909 MAX: 0.0367910861969 MEAN: 0.0278185367584 MEDIAN: 0.0305078029633 STD: 0.0065951032164
==================================================
BOR_BitAnd_mutant_1507055594.py.t60.out.0
HIT: 5 MIN: 0.0539510250092 MAX: 0.293209075928 MEAN: 0.17177939415 MEDIAN: 0.15290594101 STD: 0.0791785783223
==================================================
BOR_BitAnd_mutant_1507055595.py.t60.out.0
HIT: 5 MIN: 0.179213047028 MAX: 11.831384182 MEAN: 3.13541903496 MEDIAN: 1.1804869175 STD: 4.36962162425
==================================================
BOR_BitAnd_mutant_1507055596.py.t60.out.0
HIT: 5 MIN: 0.15957903862 MAX: 0.619371891022 MEAN: 0.384946584702 MEDIAN: 0.340442895889 STD: 0.176475455734
==================================================
BOR_BitAnd_mutant_1507055597.py.t60.out.0
HIT: 5 MIN: 0.0755219459534 MAX: 0.197558879852 MEAN: 0.136055707931 MEDIAN: 0.119329929352 STD: 0.048704877775
==================================================
BOR_BitAnd_mutant_1507055598.py.t60.out.0
HIT: 5 MIN: 0.149616003036 MAX: 0.397820949554 MEAN: 0.224361467361 MEDIAN: 0.1805331707 STD: 0.0902776008606
==================================================
BOR_BitAnd_mutant_1507055599.py.t60.out.0
==================================================
BOR_BitAnd_mutant_1507055600.py.t60.out.0
HIT: 5 MIN: 0.0380170345306 MAX: 0.773040056229 MEAN: 0.259197044373 MEDIAN: 0.146077156067 STD: 0.269046701198
==================================================
BOR_BitAnd_mutant_1507055601.py.t60.out.0
HIT: 5 MIN: 0.0367429256439 MAX: 0.419783115387 MEAN: 0.196603965759 MEDIAN: 0.147912979126 STD: 0.133651779058
==================================================
BOR_BitAnd_mutant_1507055602.py.t60.out.0
HIT: 5 MIN: 0.182374954224 MAX: 1.54213905334 MEAN: 0.664946222304 MEDIAN: 0.593906164169 STD: 0.475616694105
==================================================
BOR_BitAnd_mutant_1507055603.py.t60.out.0
HIT: 5 MIN: 0.396445035934 MAX: 18.2209949493 MEAN: 8.51826119423 MEDIAN: 5.85809493065 STD: 7.76784005858
==================================================
BOR_BitAnd_mutant_1507055604.py.t60.out.0
HIT: 5 MIN: 0.162800073624 MAX: 5.72256016731 MEAN: 3.76302442551 MEDIAN: 4.27551698685 STD: 1.88922345089
==================================================
BOR_BitAnd_mutant_1507055605.py.t60.out.0
HIT: 5 MIN: 0.0338861942291 MAX: 0.118068933487 MEAN: 0.0628894329071 MEDIAN: 0.0500710010529 STD: 0.0311200092038
==================================================
BOR_BitAnd_mutant_1507055611.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_mode
4551c4551
<             if ((open_modes.can_read and (not (file_object.st_mode | PERM_READ))) or (open_modes.can_write and (not (file_object.st_mode & PERM_WRITE)))):
---
>             if ((open_modes.can_read and (not (file_object.st_mode & PERM_READ))) or (open_modes.can_write and (not (file_object.st_mode & PERM_WRITE)))):

==================================================
BOR_BitAnd_mutant_1507055612.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_mode
4551c4551
<             if ((open_modes.can_read and (not (file_object.st_mode & PERM_READ))) or (open_modes.can_write and (not (file_object.st_mode | PERM_WRITE)))):
---
>             if ((open_modes.can_read and (not (file_object.st_mode & PERM_READ))) or (open_modes.can_write and (not (file_object.st_mode & PERM_WRITE)))):

==================================================
BOR_BitOr_mutant_1507055613.py.t60.out.0
HIT: 5 MIN: 0.0322179794312 MAX: 0.0451180934906 MEAN: 0.0381086349487 MEDIAN: 0.0385930538177 STD: 0.00452249889795
==================================================
BOR_BitOr_mutant_1507055614.py.t60.out.0
HIT: 5 MIN: 0.0750260353088 MAX: 0.154795885086 MEAN: 0.117718744278 MEDIAN: 0.129981994629 STD: 0.0317226458989
==================================================
BOR_BitOr_mutant_1507055615.py.t60.out.0
HIT: 5 MIN: 0.018128156662 MAX: 0.0419580936432 MEAN: 0.0298871040344 MEDIAN: 0.0274140834808 STD: 0.00986085777679
==================================================
BOR_BitOr_mutant_1507055618.py.t60.out.0
HIT: 5 MIN: 0.0406601428986 MAX: 0.374126911163 MEAN: 0.151665210724 MEDIAN: 0.13210105896 STD: 0.120956050999
==================================================
BOR_BitOr_mutant_1507055619.py.t60.out.0
HIT: 5 MIN: 0.067813873291 MAX: 0.384562969208 MEAN: 0.192156553269 MEDIAN: 0.189565896988 STD: 0.108694407049
==================================================
CDL_List_mutant_1507055415.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO is_case_sensitive
861c861
<         self.is_case_sensitive = (sys.platform not in ['cygwin', 'darwin'])
---
>         self.is_case_sensitive = (sys.platform not in ['win32', 'cygwin', 'darwin'])

==================================================
CDL_List_mutant_1507055416.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO is_case_sensitive
861c861
<         self.is_case_sensitive = (sys.platform not in ['darwin', 'win32'])
---
>         self.is_case_sensitive = (sys.platform not in ['win32', 'cygwin', 'darwin'])

==================================================
CDL_List_mutant_1507055417.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO is_case_sensitive
861c861
<         self.is_case_sensitive = (sys.platform not in ['win32', 'cygwin'])
---
>         self.is_case_sensitive = (sys.platform not in ['win32', 'cygwin', 'darwin'])

EXS_ExceptHandler_mutant_1506798102.py NOT IN LOCS!
==================================================
EXS_ExceptHandler_mutant_1507055420.py.t60.out.0
HIT: 5 MIN: 0.0469148159027 MAX: 0.0752418041229 MEAN: 0.0590867519379 MEDIAN: 0.0535128116608 STD: 0.0108313239729
==================================================
EXS_ExceptHandler_mutant_1507055423.py.t60.out.0
HIT: 5 MIN: 0.260656833649 MAX: 2.88246703148 MEAN: 1.2607149601 MEDIAN: 0.716558933258 STD: 0.982102011432
==================================================
EXS_ExceptHandler_mutant_1507055424.py.t60.out.0
HIT: 5 MIN: 0.039048910141 MAX: 0.179883956909 MEAN: 0.0861020088195 MEDIAN: 0.0707001686096 STD: 0.0498342816481
==================================================
EXS_ExceptHandler_mutant_1507055425.py.t60.out.0
HIT: 5 MIN: 0.0229539871216 MAX: 0.234803915024 MEAN: 0.154980897904 MEDIAN: 0.171945810318 STD: 0.0714966882959
==================================================
EXS_ExceptHandler_mutant_1507055427.py.t60.out.0
HIT: 5 MIN: 0.0237190723419 MAX: 0.381181001663 MEAN: 0.224458599091 MEDIAN: 0.217860937119 STD: 0.130819481462
==================================================
EXS_ExceptHandler_mutant_1507055428.py.t60.out.0
HIT: 5 MIN: 0.0913038253784 MAX: 0.552129030228 MEAN: 0.365978813172 MEDIAN: 0.358138084412 STD: 0.157668747437
==================================================
EXS_ExceptHandler_mutant_1507055430.py.t60.out.0
HIT: 5 MIN: 0.0503318309784 MAX: 0.274276971817 MEAN: 0.136169433594 MEDIAN: 0.1311211586 STD: 0.0753525478973
==================================================
EXS_ExceptHandler_mutant_1507055431.py.t60.out.0
HIT: 5 MIN: 0.0634560585022 MAX: 0.476655006409 MEAN: 0.208484220505 MEDIAN: 0.144466876984 STD: 0.153657566384
==================================================
EXS_ExceptHandler_mutant_1507055432.py.t60.out.0
HIT: 5 MIN: 0.0244140625 MAX: 0.207412004471 MEAN: 0.116757822037 MEDIAN: 0.130183935165 STD: 0.061084354792
==================================================
EXS_ExceptHandler_mutant_1507055433.py.t60.out.0
==================================================
EXS_ExceptHandler_mutant_1507055434.py.t60.out.0
HIT: 5 MIN: 0.0451381206512 MAX: 0.0841498374939 MEAN: 0.0610105991363 MEDIAN: 0.0554981231689 STD: 0.0143596071533
==================================================
EXS_ExceptHandler_mutant_1507055435.py.t60.out.0
HIT: 5 MIN: 0.0307559967041 MAX: 0.434430837631 MEAN: 0.194514131546 MEDIAN: 0.138805866241 STD: 0.157955196255
==================================================
EXS_ExceptHandler_mutant_1507055438.py.t60.out.0
HIT: 5 MIN: 0.0395629405975 MAX: 0.215619802475 MEAN: 0.120919322968 MEDIAN: 0.124310016632 STD: 0.0637040694018
==================================================
LCR_BoolOp_mutant_1507055450.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055451.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055453.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055454.py.t60.out.0
HIT: 5 MIN: 0.0304689407349 MAX: 0.10425901413 MEAN: 0.066142988205 MEDIAN: 0.0626418590546 STD: 0.02384881636
==================================================
LCR_BoolOp_mutant_1507055456.py.t60.out.0
HIT: 5 MIN: 0.0228078365326 MAX: 0.0398268699646 MEAN: 0.0304259777069 MEDIAN: 0.0274600982666 STD: 0.00677296329834
==================================================
LCR_BoolOp_mutant_1507055458.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055459.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055460.py.t60.out.0
HIT: 5 MIN: 0.0194480419159 MAX: 0.0377089977264 MEAN: 0.0293032169342 MEDIAN: 0.0303330421448 STD: 0.00629371157889
==================================================
LCR_BoolOp_mutant_1507055461.py.t60.out.0
HIT: 5 MIN: 0.0755178928375 MAX: 0.512340784073 MEAN: 0.190229701996 MEDIAN: 0.108475923538 STD: 0.164326047017
==================================================
LCR_BoolOp_mutant_1507055462.py.t60.out.0
HIT: 5 MIN: 0.204472064972 MAX: 0.766386032104 MEAN: 0.428359603882 MEDIAN: 0.397887945175 STD: 0.20661624002
==================================================
LCR_BoolOp_mutant_1507055463.py.t60.out.0
HIT: 5 MIN: 0.0587491989136 MAX: 0.299503087997 MEAN: 0.152518701553 MEDIAN: 0.059376001358 STD: 0.114609181077
==================================================
LCR_BoolOp_mutant_1507055464.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055465.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055474.py.t60.out.0
HIT: 5 MIN: 0.0863649845123 MAX: 0.620809078217 MEAN: 0.334636259079 MEDIAN: 0.243749141693 STD: 0.205788550481
==================================================
LCR_BoolOp_mutant_1507055475.py.t60.out.0
HIT: 5 MIN: 0.030109167099 MAX: 0.0819189548492 MEAN: 0.048389005661 MEDIAN: 0.0467929840088 STD: 0.0186223296989
==================================================
LCR_BoolOp_mutant_1507055476.py.t60.out.0
HIT: 5 MIN: 0.0274829864502 MAX: 0.033579826355 MEAN: 0.0298523426056 MEDIAN: 0.0292038917542 STD: 0.00227486179089
==================================================
LCR_BoolOp_mutant_1507055478.py.t60.out.0
HIT: 5 MIN: 0.0257661342621 MAX: 0.0391829013824 MEAN: 0.0313893795013 MEDIAN: 0.0310399532318 STD: 0.00443044575274
==================================================
LCR_BoolOp_mutant_1507055479.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055480.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO is_case_sensitive
1309c1309
<         if (self.is_case_sensitive and (not path)):
---
>         if (self.is_case_sensitive or (not path)):

==================================================
LCR_BoolOp_mutant_1507055481.py.t60.out.0
HIT: 5 MIN: 0.0218908786774 MAX: 0.0357971191406 MEAN: 0.0267549991608 MEDIAN: 0.0254061222076 STD: 0.00477307821827
==================================================
LCR_BoolOp_mutant_1507055482.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055483.py.t60.out.0
HIT: 5 MIN: 0.101142883301 MAX: 0.28027510643 MEAN: 0.186413574219 MEDIAN: 0.163697957993 STD: 0.0671804308387
==================================================
LCR_BoolOp_mutant_1507055484.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055494.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055495.py.t60.out.0
HIT: 5 MIN: 0.0210518836975 MAX: 0.0355319976807 MEAN: 0.0272317886352 MEDIAN: 0.0284819602966 STD: 0.00515634716238
==================================================
LCR_BoolOp_mutant_1507055496.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055497.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO is_case_sensitive
1570c1570
<         return (file_path.startswith(root_name) and ((not self.is_case_sensitive) and file_path.lower().startswith(root_name.lower())) and self.StartsWithDriveLetter(file_path))
---
>         return (file_path.startswith(root_name) or ((not self.is_case_sensitive) and file_path.lower().startswith(root_name.lower())) or self.StartsWithDriveLetter(file_path))

==================================================
LCR_BoolOp_mutant_1507055498.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO is_case_sensitive
1570c1570
<         return (file_path.startswith(root_name) or ((not self.is_case_sensitive) or file_path.lower().startswith(root_name.lower())) or self.StartsWithDriveLetter(file_path))
---
>         return (file_path.startswith(root_name) or ((not self.is_case_sensitive) and file_path.lower().startswith(root_name.lower())) or self.StartsWithDriveLetter(file_path))

==================================================
LCR_BoolOp_mutant_1507055499.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO is_case_sensitive
1577c1577
<         return ((file_path == root_name) and ((not self.is_case_sensitive) and (file_path.lower() == root_name.lower())) and ((len(file_path) == 2) and self.StartsWithDriveLetter(file_path)))
---
>         return ((file_path == root_name) or ((not self.is_case_sensitive) and (file_path.lower() == root_name.lower())) or ((len(file_path) == 2) and self.StartsWithDriveLetter(file_path)))

==================================================
LCR_BoolOp_mutant_1507055500.py.t60.out.0
HIT: 5 MIN: 0.0463809967041 MAX: 0.253826856613 MEAN: 0.145252323151 MEDIAN: 0.112453937531 STD: 0.0817419925238
==================================================
LCR_BoolOp_mutant_1507055501.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO is_case_sensitive
1577c1577
<         return ((file_path == root_name) or ((not self.is_case_sensitive) and (file_path.lower() == root_name.lower())) or ((len(file_path) == 2) or self.StartsWithDriveLetter(file_path)))
---
>         return ((file_path == root_name) or ((not self.is_case_sensitive) and (file_path.lower() == root_name.lower())) or ((len(file_path) == 2) and self.StartsWithDriveLetter(file_path)))

==================================================
LCR_BoolOp_mutant_1507055502.py.t60.out.0
HIT: 5 MIN: 0.0667388439178 MAX: 0.330580949783 MEAN: 0.145955562591 MEDIAN: 0.110065937042 STD: 0.096907887464
==================================================
LCR_BoolOp_mutant_1507055503.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055504.py.t60.out.0
HIT: 5 MIN: 0.0419948101044 MAX: 0.294708967209 MEAN: 0.105903720856 MEDIAN: 0.0654199123383 STD: 0.0948464511735
==================================================
LCR_BoolOp_mutant_1507055505.py.t60.out.0
HIT: 5 MIN: 0.0452740192413 MAX: 0.0600168704987 MEAN: 0.0527458190918 MEDIAN: 0.0527651309967 STD: 0.00608375699425
==================================================
LCR_BoolOp_mutant_1507055506.py.t60.out.0
HIT: 5 MIN: 0.145027160645 MAX: 0.597707986832 MEAN: 0.367954444885 MEDIAN: 0.371890068054 STD: 0.17913503817
==================================================
LCR_BoolOp_mutant_1507055507.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055508.py.t60.out.0
HIT: 5 MIN: 0.0451641082764 MAX: 0.243131160736 MEAN: 0.126321220398 MEDIAN: 0.0866758823395 STD: 0.0720635180191
==================================================
LCR_BoolOp_mutant_1507055509.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055510.py.t60.out.0
HIT: 5 MIN: 0.0228359699249 MAX: 0.052029132843 MEAN: 0.0318399906158 MEDIAN: 0.0263268947601 STD: 0.010835413011
==================================================
LCR_BoolOp_mutant_1507055511.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055512.py.t60.out.0
HIT: 5 MIN: 0.0211219787598 MAX: 0.0326409339905 MEAN: 0.0295943260193 MEDIAN: 0.0320138931274 STD: 0.00436254244636
==================================================
LCR_BoolOp_mutant_1507055513.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055514.py.t60.out.0
HIT: 5 MIN: 0.39977312088 MAX: 1.92659807205 MEAN: 0.816432189941 MEDIAN: 0.55539393425 STD: 0.561009862828
==================================================
LCR_BoolOp_mutant_1507055515.py.t60.out.0
HIT: 5 MIN: 0.296041965485 MAX: 1.50920510292 MEAN: 0.983339834212 MEDIAN: 1.33368706703 STD: 0.561634329266
==================================================
LCR_BoolOp_mutant_1507055516.py.t60.out.0
HIT: 5 MIN: 0.998749017715 MAX: 4.87929415703 MEAN: 2.18372821808 MEDIAN: 1.57608985901 STD: 1.38160326985
==================================================
LCR_BoolOp_mutant_1507055517.py.t60.out.0
HIT: 5 MIN: 0.0484719276428 MAX: 1.67155408859 MEAN: 0.650528812408 MEDIAN: 0.377604961395 STD: 0.59518870318
==================================================
LCR_BoolOp_mutant_1507055518.py.t60.out.0
HIT: 5 MIN: 0.0798840522766 MAX: 1.5273270607 MEAN: 0.572049236298 MEDIAN: 0.338124990463 STD: 0.506846688277
==================================================
LCR_BoolOp_mutant_1507055519.py.t60.out.0
HIT: 5 MIN: 0.59466791153 MAX: 4.51793885231 MEAN: 2.73871116638 MEDIAN: 3.75078606606 STD: 1.71880711614
==================================================
LCR_BoolOp_mutant_1507055520.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055521.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055522.py.t60.out.0
HIT: 5 MIN: 0.0574910640717 MAX: 0.119825839996 MEAN: 0.091549539566 MEDIAN: 0.0987958908081 STD: 0.0265464960585
==================================================
LCR_BoolOp_mutant_1507055523.py.t60.out.0
HIT: 5 MIN: 0.0504450798035 MAX: 0.196521997452 MEAN: 0.11307682991 MEDIAN: 0.107172966003 STD: 0.0576349942671
==================================================
LCR_BoolOp_mutant_1507055524.py.t60.out.0
HIT: 5 MIN: 0.075954914093 MAX: 0.175653934479 MEAN: 0.121929550171 MEDIAN: 0.119615077972 STD: 0.0399726400394
==================================================
LCR_BoolOp_mutant_1507055525.py.t60.out.0
HIT: 5 MIN: 0.228048801422 MAX: 1.05586504936 MEAN: 0.54640469551 MEDIAN: 0.552456855774 STD: 0.286853243501
==================================================
LCR_BoolOp_mutant_1507055530.py.t60.out.0
HIT: 5 MIN: 0.0252149105072 MAX: 0.696455955505 MEAN: 0.215834522247 MEDIAN: 0.0992078781128 STD: 0.246614964766
==================================================
LCR_BoolOp_mutant_1507055532.py.t60.out.0
HIT: 5 MIN: 0.0281550884247 MAX: 0.160292863846 MEAN: 0.0661622047425 MEDIAN: 0.0414168834686 STD: 0.0482378016092
==================================================
LCR_BoolOp_mutant_1507055533.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055536.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055537.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055538.py.t60.out.0
HIT: 5 MIN: 0.0450990200043 MAX: 0.136968135834 MEAN: 0.08952999115 MEDIAN: 0.0949819087982 STD: 0.0303999246312
==================================================
LCR_BoolOp_mutant_1507055544.py.t60.out.0
HIT: 5 MIN: 0.0387160778046 MAX: 0.0742671489716 MEAN: 0.052551651001 MEDIAN: 0.0427339076996 STD: 0.0147820673597
==================================================
LCR_BoolOp_mutant_1507055545.py.t60.out.0
HIT: 5 MIN: 0.0310661792755 MAX: 0.0761580467224 MEAN: 0.0489794254303 MEDIAN: 0.0369229316711 STD: 0.0183770590522
==================================================
LCR_BoolOp_mutant_1507055549.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055557.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055558.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055559.py.t60.out.0
HIT: 5 MIN: 0.238916873932 MAX: 6.5931789875 MEAN: 2.22104225159 MEDIAN: 0.913981199265 STD: 2.35837448898
==================================================
LCR_BoolOp_mutant_1507055561.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055562.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055563.py.t60.out.0
HIT: 5 MIN: 5.97022414207 MAX: 48.142854929 MEAN: 18.7330042839 MEDIAN: 15.3577511311 STD: 15.2219871573
==================================================
LCR_BoolOp_mutant_1507055564.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055565.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055566.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055567.py.t60.out.0
HIT: 5 MIN: 0.0483710765839 MAX: 0.0780229568481 MEAN: 0.0576279640198 MEDIAN: 0.0539178848267 STD: 0.0105505550717
==================================================
LCR_BoolOp_mutant_1507055568.py.t60.out.0
HIT: 5 MIN: 0.064376115799 MAX: 0.4627161026 MEAN: 0.171562099457 MEDIAN: 0.122894048691 STD: 0.147518908695
==================================================
LCR_BoolOp_mutant_1507055569.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055570.py.t60.out.0
HIT: 5 MIN: 0.0563769340515 MAX: 0.605834007263 MEAN: 0.273233413696 MEDIAN: 0.208405017853 STD: 0.217264283476
==================================================
LCR_BoolOp_mutant_1507055571.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055572.py.t60.out.0
HIT: 5 MIN: 0.0646510124207 MAX: 0.274738788605 MEAN: 0.166491794586 MEDIAN: 0.138584136963 STD: 0.0904662843459
==================================================
LCR_BoolOp_mutant_1507055573.py.t60.out.0
HIT: 5 MIN: 0.0281748771667 MAX: 0.132272005081 MEAN: 0.0739861488342 MEDIAN: 0.0681037902832 STD: 0.036160774796
==================================================
LCR_BoolOp_mutant_1507055574.py.t60.out.0
HIT: 5 MIN: 0.0320770740509 MAX: 0.225646018982 MEAN: 0.157797622681 MEDIAN: 0.174788951874 STD: 0.0660162242797
==================================================
LCR_BoolOp_mutant_1507055575.py.t60.out.0
HIT: 5 MIN: 0.0706069469452 MAX: 0.113090991974 MEAN: 0.0911029338837 MEDIAN: 0.0947668552399 STD: 0.0147243401176
==================================================
LCR_BoolOp_mutant_1507055576.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055577.py.t60.out.0
HIT: 5 MIN: 0.0289270877838 MAX: 0.108027935028 MEAN: 0.0560699939728 MEDIAN: 0.0396950244904 STD: 0.0298612775844
==================================================
LCR_BoolOp_mutant_1507055578.py.t60.out.0
==================================================
LCR_BoolOp_mutant_1507055579.py.t60.out.0
HIT: 5 MIN: 0.0440289974213 MAX: 0.23973608017 MEAN: 0.103687810898 MEDIAN: 0.0727050304413 STD: 0.0729750003993
==================================================
LCR_BoolOp_mutant_1507055580.py.t60.out.0
HIT: 5 MIN: 0.200065135956 MAX: 0.700523138046 MEAN: 0.500085401535 MEDIAN: 0.567432880402 STD: 0.191592537541
==================================================
LCR_BoolOp_mutant_1507055581.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_mode
4551c4551
<             if ((open_modes.can_read and (not (file_object.st_mode & PERM_READ))) and (open_modes.can_write and (not (file_object.st_mode & PERM_WRITE)))):
---
>             if ((open_modes.can_read and (not (file_object.st_mode & PERM_READ))) or (open_modes.can_write and (not (file_object.st_mode & PERM_WRITE)))):

==================================================
LCR_BoolOp_mutant_1507055582.py.t60.out.0
HIT: 5 MIN: 0.110246896744 MAX: 1.00088500977 MEAN: 0.358732986451 MEDIAN: 0.189966917038 STD: 0.328833870299
==================================================
LCR_BoolOp_mutant_1507055583.py.t60.out.0
HIT: 5 MIN: 0.0714831352234 MAX: 0.605976819992 MEAN: 0.258924436569 MEDIAN: 0.230169057846 STD: 0.195275438349
==================================================
LOD_UnaryOp_mutant_1507055152.py.t60.out.0
HIT: 5 MIN: 0.0664129257202 MAX: 0.704605102539 MEAN: 0.414833831787 MEDIAN: 0.52000617981 STD: 0.26753651755
==================================================
LOD_UnaryOp_mutant_1507055154.py.t60.out.0
HIT: 5 MIN: 0.0221700668335 MAX: 0.0513699054718 MEAN: 0.0337617874146 MEDIAN: 0.0287659168243 STD: 0.0102577244411
==================================================
LOD_UnaryOp_mutant_1507055155.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO st_mode
683c683
<         if ((not (self.st_mode & PERM_WRITE)) and self.filesystem.is_windows_fs):
---
>         if ((not (self.st_mode & PERM_WRITE)) and (not self.filesystem.is_windows_fs)):

==================================================
LOD_UnaryOp_mutant_1507055158.py.t60.out.0
HIT: 5 MIN: 0.110918045044 MAX: 0.333650112152 MEAN: 0.182654428482 MEDIAN: 0.156091928482 STD: 0.0815977109983
==================================================
LOD_UnaryOp_mutant_1507055159.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055163.py.t60.out.0
HIT: 5 MIN: 0.0242078304291 MAX: 0.10650396347 MEAN: 0.0773243904112 MEDIAN: 0.0999431610107 STD: 0.0327945784518
==================================================
LOD_UnaryOp_mutant_1507055164.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055165.py.t60.out.0
HIT: 5 MIN: 0.0193967819214 MAX: 0.0519030094147 MEAN: 0.0339555263519 MEDIAN: 0.0310671329498 STD: 0.0106473981765
==================================================
LOD_UnaryOp_mutant_1507055166.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055167.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO is_case_sensitive
1309c1309
<         if (self.is_case_sensitive or path):
---
>         if (self.is_case_sensitive or (not path)):

==================================================
LOD_UnaryOp_mutant_1507055168.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055169.py.t60.out.0
HIT: 5 MIN: 0.0218849182129 MAX: 0.0625541210175 MEAN: 0.0382862091065 MEDIAN: 0.0322849750519 STD: 0.015986005707
==================================================
LOD_UnaryOp_mutant_1507055170.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055171.py.t60.out.0
HIT: 5 MIN: 0.0243339538574 MAX: 0.0372431278229 MEAN: 0.0302796363831 MEDIAN: 0.0292150974274 STD: 0.00431837534095
==================================================
LOD_UnaryOp_mutant_1507055172.py.t60.out.0
HIT: 5 MIN: 0.0259680747986 MAX: 0.0412588119507 MEAN: 0.0326637744904 MEDIAN: 0.0319828987122 STD: 0.00598875614856
==================================================
LOD_UnaryOp_mutant_1507055173.py.t60.out.0
HIT: 5 MIN: 0.0270900726318 MAX: 0.0436639785767 MEAN: 0.0348716259003 MEDIAN: 0.0334761142731 STD: 0.00713681585828
==================================================
LOD_UnaryOp_mutant_1507055176.py.t60.out.0
HIT: 5 MIN: 0.0236170291901 MAX: 0.0368890762329 MEAN: 0.0296022415161 MEDIAN: 0.0277578830719 STD: 0.00455930544534
==================================================
LOD_UnaryOp_mutant_1507055177.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055178.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO is_case_sensitive
1570c1570
<         return (file_path.startswith(root_name) or (self.is_case_sensitive and file_path.lower().startswith(root_name.lower())) or self.StartsWithDriveLetter(file_path))
---
>         return (file_path.startswith(root_name) or ((not self.is_case_sensitive) and file_path.lower().startswith(root_name.lower())) or self.StartsWithDriveLetter(file_path))

==================================================
LOD_UnaryOp_mutant_1507055179.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO is_case_sensitive
1577c1577
<         return ((file_path == root_name) or (self.is_case_sensitive and (file_path.lower() == root_name.lower())) or ((len(file_path) == 2) and self.StartsWithDriveLetter(file_path)))
---
>         return ((file_path == root_name) or ((not self.is_case_sensitive) and (file_path.lower() == root_name.lower())) or ((len(file_path) == 2) and self.StartsWithDriveLetter(file_path)))

==================================================
LOD_UnaryOp_mutant_1507055180.py.t60.out.0
HIT: 5 MIN: 0.0259649753571 MAX: 0.0591599941254 MEAN: 0.0389133930207 MEDIAN: 0.0368049144745 STD: 0.0124210192506
==================================================
LOD_UnaryOp_mutant_1507055181.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO is_case_sensitive
1595c1595
<         if self.is_case_sensitive:
---
>         if (not self.is_case_sensitive):

==================================================
LOD_UnaryOp_mutant_1507055182.py.t60.out.0
HIT: 5 MIN: 0.0240468978882 MAX: 0.0481660366058 MEAN: 0.0381427764892 MEDIAN: 0.0439360141754 STD: 0.0100430144212
==================================================
LOD_UnaryOp_mutant_1507055183.py.t60.out.0
HIT: 5 MIN: 0.021087884903 MAX: 0.0580139160156 MEAN: 0.0328895568848 MEDIAN: 0.0243909358978 STD: 0.013634467272
==================================================
LOD_UnaryOp_mutant_1507055184.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055186.py.t60.out.0
HIT: 5 MIN: 0.0866730213165 MAX: 0.431974887848 MEAN: 0.302793598175 MEDIAN: 0.35076713562 STD: 0.119729011985
==================================================
LOD_UnaryOp_mutant_1507055187.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055188.py.t60.out.0
HIT: 5 MIN: 0.0238289833069 MAX: 0.0324130058289 MEAN: 0.028332901001 MEDIAN: 0.0270528793335 STD: 0.00324447220235
==================================================
LOD_UnaryOp_mutant_1507055189.py.t60.out.0
HIT: 5 MIN: 0.0226559638977 MAX: 0.0598871707916 MEAN: 0.0383198261261 MEDIAN: 0.04194688797 STD: 0.0140362619452
==================================================
LOD_UnaryOp_mutant_1507055190.py.t60.out.0
HIT: 5 MIN: 0.024276971817 MAX: 0.0429730415344 MEAN: 0.036025762558 MEDIAN: 0.0368909835815 STD: 0.00697461472961
==================================================
LOD_UnaryOp_mutant_1507055191.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055192.py.t60.out.0
HIT: 5 MIN: 0.0456898212433 MAX: 0.132996082306 MEAN: 0.068727350235 MEDIAN: 0.0492928028107 STD: 0.0329408693881
==================================================
LOD_UnaryOp_mutant_1507055193.py.t60.out.0
HIT: 5 MIN: 0.0482549667358 MAX: 0.0755929946899 MEAN: 0.0629992008209 MEDIAN: 0.0637061595917 STD: 0.0114638689995
==================================================
LOD_UnaryOp_mutant_1507055194.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055195.py.t60.out.0
HIT: 5 MIN: 0.0314118862152 MAX: 0.102558135986 MEAN: 0.0611498355865 MEDIAN: 0.0449140071869 STD: 0.0292861432223
==================================================
LOD_UnaryOp_mutant_1507055196.py.t60.out.0
HIT: 5 MIN: 0.0217461585999 MAX: 0.127496957779 MEAN: 0.0580408096314 MEDIAN: 0.0411489009857 STD: 0.0379261537383
==================================================
LOD_UnaryOp_mutant_1507055197.py.t60.out.0
HIT: 5 MIN: 0.0734078884125 MAX: 0.150325059891 MEAN: 0.0951652050019 MEDIAN: 0.0855829715729 STD: 0.0283974070995
==================================================
LOD_UnaryOp_mutant_1507055198.py.t60.out.0
HIT: 5 MIN: 0.0381369590759 MAX: 0.0774269104004 MEAN: 0.0590853691101 MEDIAN: 0.0619020462036 STD: 0.0132085412814
==================================================
LOD_UnaryOp_mutant_1507055199.py.t60.out.0
HIT: 5 MIN: 0.162181854248 MAX: 8.77722597122 MEAN: 5.6532971859 MEDIAN: 5.94894790649 STD: 3.00390058416
==================================================
LOD_UnaryOp_mutant_1507055200.py.t60.out.0
HIT: 5 MIN: 0.427713155746 MAX: 1.31090021133 MEAN: 0.703311443328 MEDIAN: 0.519604921341 STD: 0.329812126839
==================================================
LOD_UnaryOp_mutant_1507055201.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055202.py.t60.out.0
HIT: 5 MIN: 0.148031949997 MAX: 0.314668893814 MEAN: 0.231410169602 MEDIAN: 0.260336875916 STD: 0.0622138771614
==================================================
LOD_UnaryOp_mutant_1507055203.py.t60.out.0
HIT: 5 MIN: 0.082484960556 MAX: 0.878608942032 MEAN: 0.493510532379 MEDIAN: 0.490860939026 STD: 0.267056106321
==================================================
LOD_UnaryOp_mutant_1507055204.py.t60.out.0
HIT: 5 MIN: 0.025780916214 MAX: 0.0410139560699 MEAN: 0.0305740356445 MEDIAN: 0.028174161911 STD: 0.00548013338317
==================================================
LOD_UnaryOp_mutant_1507055206.py.t60.out.0
HIT: 5 MIN: 0.0221199989319 MAX: 0.100878953934 MEAN: 0.0494413852692 MEDIAN: 0.040540933609 STD: 0.0268381332033
==================================================
LOD_UnaryOp_mutant_1507055207.py.t60.out.0
HIT: 5 MIN: 0.0369210243225 MAX: 0.0485298633575 MEAN: 0.0436287403106 MEDIAN: 0.0437109470367 STD: 0.00414244083872
==================================================
LOD_UnaryOp_mutant_1507055208.py.t60.out.0
HIT: 5 MIN: 0.037328004837 MAX: 0.136705875397 MEAN: 0.0604631423951 MEDIAN: 0.0433759689331 STD: 0.0382320281684
==================================================
LOD_UnaryOp_mutant_1507055209.py.t60.out.0
HIT: 5 MIN: 0.0651969909668 MAX: 0.144037008286 MEAN: 0.0922669887544 MEDIAN: 0.0872120857239 STD: 0.0272661888861
==================================================
LOD_UnaryOp_mutant_1507055210.py.t60.out.0
HIT: 5 MIN: 0.0761930942535 MAX: 0.264471054077 MEAN: 0.136068058014 MEDIAN: 0.110572099686 STD: 0.0696822791044
==================================================
LOD_UnaryOp_mutant_1507055211.py.t60.out.0
HIT: 5 MIN: 0.74270606041 MAX: 23.4307181835 MEAN: 10.8015034199 MEDIAN: 8.28169894218 STD: 7.50677429562
==================================================
LOD_UnaryOp_mutant_1507055212.py.t60.out.0
HIT: 5 MIN: 0.0738651752472 MAX: 2.81631803513 MEAN: 0.710050392152 MEDIAN: 0.213198900223 STD: 1.05492918983
==================================================
LOD_UnaryOp_mutant_1507055213.py.t60.out.0
HIT: 5 MIN: 0.119790077209 MAX: 1.82680010796 MEAN: 0.796710681916 MEDIAN: 0.611059904099 STD: 0.566107294013
==================================================
LOD_UnaryOp_mutant_1507055214.py.t60.out.0
HIT: 5 MIN: 0.139523983002 MAX: 1.13167381287 MEAN: 0.513427972794 MEDIAN: 0.362257957458 STD: 0.366944654001
==================================================
LOD_UnaryOp_mutant_1507055215.py.t60.out.0
HIT: 5 MIN: 0.200703144073 MAX: 0.547894001007 MEAN: 0.340936851501 MEDIAN: 0.27707695961 STD: 0.141008940609
==================================================
LOD_UnaryOp_mutant_1507055216.py.t60.out.0
HIT: 5 MIN: 0.0526919364929 MAX: 0.0995750427246 MEAN: 0.081954574585 MEDIAN: 0.0844728946686 STD: 0.0157281837033
==================================================
LOD_UnaryOp_mutant_1507055217.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055218.py.t60.out.0
HIT: 5 MIN: 0.0774838924408 MAX: 0.14305305481 MEAN: 0.11550655365 MEDIAN: 0.119117975235 STD: 0.0247035791105
==================================================
LOD_UnaryOp_mutant_1507055219.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055220.py.t60.out.0
HIT: 5 MIN: 0.0251910686493 MAX: 0.217800140381 MEAN: 0.104114484787 MEDIAN: 0.0767631530762 STD: 0.0742477719474
==================================================
LOD_UnaryOp_mutant_1507055221.py.t60.out.0
HIT: 3 MIN: 3.55969381332 MAX: 12.9079520702 MEAN: 8.48293121654 MEDIAN: 8.98114776611 STD: 3.83263598646
==================================================
LOD_UnaryOp_mutant_1507055225.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055234.py.t60.out.0
HIT: 5 MIN: 0.0307650566101 MAX: 0.0419931411743 MEAN: 0.0385581970215 MEDIAN: 0.0394840240479 STD: 0.00402622688465
==================================================
LOD_UnaryOp_mutant_1507055235.py.t60.out.0
HIT: 5 MIN: 0.0731339454651 MAX: 0.213969945908 MEAN: 0.129365921021 MEDIAN: 0.104933977127 STD: 0.0491689107031
==================================================
LOD_UnaryOp_mutant_1507055236.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055237.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055244.py.t60.out.0
HIT: 5 MIN: 0.789941072464 MAX: 17.6413121223 MEAN: 4.71537337302 MEDIAN: 1.57956886292 STD: 6.47714453518
==================================================
LOD_UnaryOp_mutant_1507055249.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055250.py.t60.out.0
HIT: 5 MIN: 0.0568749904633 MAX: 3.2459769249 MEAN: 1.94246320725 MEDIAN: 2.50201702118 STD: 1.2520872547
==================================================
LOD_UnaryOp_mutant_1507055251.py.t60.out.0
HIT: 5 MIN: 0.99511885643 MAX: 37.8287661076 MEAN: 15.2989016533 MEDIAN: 11.2220759392 STD: 12.3173201379
==================================================
LOD_UnaryOp_mutant_1507055252.py.t60.out.0
HIT: 3 MIN: 6.05426311493 MAX: 8.38278484344 MEAN: 7.33482567469 MEDIAN: 7.5674290657 STD: 0.964738863862
==================================================
LOD_UnaryOp_mutant_1507055253.py.t60.out.0
HIT: 5 MIN: 4.20462393761 MAX: 51.3773458004 MEAN: 23.8116750717 MEDIAN: 8.41446185112 STD: 20.7764736479
==================================================
LOD_UnaryOp_mutant_1507055254.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055255.py.t60.out.0
HIT: 5 MIN: 3.92244505882 MAX: 52.0938739777 MEAN: 17.6872941971 MEDIAN: 8.17478704453 STD: 17.8982135625
==================================================
LOD_UnaryOp_mutant_1507055259.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055260.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055261.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055263.py.t60.out.0
HIT: 5 MIN: 0.0572819709778 MAX: 0.192759990692 MEAN: 0.129910993576 MEDIAN: 0.135168075562 STD: 0.044717768489
==================================================
LOD_UnaryOp_mutant_1507055264.py.t60.out.0
HIT: 5 MIN: 0.0551559925079 MAX: 0.119197130203 MEAN: 0.086122226715 MEDIAN: 0.0816121101379 STD: 0.0221731097328
==================================================
LOD_UnaryOp_mutant_1507055265.py.t60.out.0
==================================================
LOD_UnaryOp_mutant_1507055266.py.t60.out.0
HIT: 5 MIN: 0.0351529121399 MAX: 0.0898320674896 MEAN: 0.0615086078644 MEDIAN: 0.0606338977814 STD: 0.0197648788858
==================================================
LOD_UnaryOp_mutant_1507055268.py.t60.out.0
HIT: 5 MIN: 0.0242269039154 MAX: 0.0482029914856 MEAN: 0.0363205909729 MEDIAN: 0.0379168987274 STD: 0.00811659629345
==================================================
LOD_UnaryOp_mutant_1507055269.py.t60.out.0
HIT: 5 MIN: 0.0313990116119 MAX: 0.175867795944 MEAN: 0.0778625488281 MEDIAN: 0.0422399044037 STD: 0.055461970786
==================================================
LOD_UnaryOp_mutant_1507055270.py.t60.out.0
HIT: 5 MIN: 0.0546939373016 MAX: 0.37526512146 MEAN: 0.166053771973 MEDIAN: 0.0983729362488 STD: 0.115965939031
LOI_BoolOp_mutant_1506798010.py NOT IN LOCS!
==================================================
LOI_BoolOp_mutant_1507055334.py.t60.out.0
==================================================
LOI_BoolOp_mutant_1507055335.py.t60.out.0
HIT: 5 MIN: 0.0364098548889 MAX: 0.29269695282 MEAN: 0.180432128906 MEDIAN: 0.207365036011 STD: 0.100082710072
==================================================
LOI_BoolOp_mutant_1507055336.py.t60.out.0
HIT: 5 MIN: 0.0190999507904 MAX: 0.0457780361176 MEAN: 0.0296833992005 MEDIAN: 0.0238258838654 STD: 0.0104391435679
==================================================
LOI_BoolOp_mutant_1507055337.py.t60.out.0
HIT: 5 MIN: 0.0188751220703 MAX: 0.0321140289307 MEAN: 0.0269025802612 MEDIAN: 0.0303359031677 STD: 0.00514401082089
==================================================
LOI_BoolOp_mutant_1507055338.py.t60.out.0
HIT: 5 MIN: 0.0205600261688 MAX: 0.0409018993378 MEAN: 0.0279387950897 MEDIAN: 0.0273931026459 STD: 0.00706203215702
==================================================
LOI_BoolOp_mutant_1507055339.py.t60.out.0
HIT: 5 MIN: 0.117964982986 MAX: 0.334597110748 MEAN: 0.206937599182 MEDIAN: 0.176910877228 STD: 0.0736333834539
==================================================
LOI_BoolOp_mutant_1507055340.py.t60.out.0
HIT: 5 MIN: 0.0773041248322 MAX: 1.97812390327 MEAN: 0.680174160003 MEDIAN: 0.271386861801 STD: 0.711514595336
==================================================
LOI_BoolOp_mutant_1507055341.py.t60.out.0
==================================================
LOI_BoolOp_mutant_1507055350.py.t60.out.0
HIT: 5 MIN: 0.0482549667358 MAX: 0.133635044098 MEAN: 0.0987302303316 MEDIAN: 0.114985942841 STD: 0.0305499659046
==================================================
LOI_BoolOp_mutant_1507055351.py.t60.out.0
HIT: 5 MIN: 0.0183851718903 MAX: 0.0464708805084 MEAN: 0.0325849533081 MEDIAN: 0.0328290462494 STD: 0.0118879597942
==================================================
LOI_BoolOp_mutant_1507055352.py.t60.out.0
HIT: 5 MIN: 0.0267679691315 MAX: 0.0378520488739 MEAN: 0.0348138332367 MEDIAN: 0.0362641811371 STD: 0.00411990979572
==================================================
LOI_BoolOp_mutant_1507055354.py.t60.out.0
==================================================
LOI_BoolOp_mutant_1507055355.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO is_case_sensitive
1309c1309
<         if (not (self.is_case_sensitive or (not path))):
---
>         if (self.is_case_sensitive or (not path)):

==================================================
LOI_BoolOp_mutant_1507055356.py.t60.out.0
HIT: 5 MIN: 0.0187358856201 MAX: 0.0416111946106 MEAN: 0.0293117523193 MEDIAN: 0.029718875885 STD: 0.00913876449931
==================================================
LOI_BoolOp_mutant_1507055365.py.t60.out.0
HIT: 5 MIN: 0.0276651382446 MAX: 0.0403490066528 MEAN: 0.0341202259064 MEDIAN: 0.0340061187744 STD: 0.00407815443734
==================================================
LOI_BoolOp_mutant_1507055366.py.t60.out.0
HIT: 5 MIN: 0.0180659294128 MAX: 0.0430300235748 MEAN: 0.0256187915802 MEDIAN: 0.0189459323883 STD: 0.00967838810938
==================================================
LOI_BoolOp_mutant_1507055367.py.t60.out.0
HIT: 5 MIN: 0.0418500900269 MAX: 0.0654110908508 MEAN: 0.0521560668945 MEDIAN: 0.0453290939331 STD: 0.0103572151908
==================================================
LOI_BoolOp_mutant_1507055368.py.t60.out.0
HIT: 5 MIN: 0.144028186798 MAX: 0.467788934708 MEAN: 0.347034597397 MEDIAN: 0.393526792526 STD: 0.112921147146
==================================================
LOI_BoolOp_mutant_1507055369.py.t60.out.0
HIT: 5 MIN: 0.022118806839 MAX: 0.0502460002899 MEAN: 0.0331314086914 MEDIAN: 0.0325350761414 STD: 0.00964230280896
==================================================
LOI_BoolOp_mutant_1507055370.py.t60.out.0
HIT: 5 MIN: 0.0232269763947 MAX: 0.0313148498535 MEAN: 0.0257810115814 MEDIAN: 0.024631023407 STD: 0.00284211342932
==================================================
LOI_BoolOp_mutant_1507055371.py.t60.out.0
HIT: 5 MIN: 0.0204269886017 MAX: 0.035649061203 MEAN: 0.0274686336517 MEDIAN: 0.0230560302734 STD: 0.00667737713313
==================================================
LOI_BoolOp_mutant_1507055372.py.t60.out.0
HIT: 5 MIN: 0.0246579647064 MAX: 0.12340593338 MEAN: 0.0636177539825 MEDIAN: 0.0672159194946 STD: 0.0352686966144
==================================================
LOI_BoolOp_mutant_1507055373.py.t60.out.0
==================================================
LOI_BoolOp_mutant_1507055374.py.t60.out.0
HIT: 5 MIN: 0.048278093338 MAX: 0.35909986496 MEAN: 0.137380027771 MEDIAN: 0.112936973572 STD: 0.114376221765
==================================================
LOI_BoolOp_mutant_1507055375.py.t60.out.0
HIT: 5 MIN: 0.31679391861 MAX: 1.27227306366 MEAN: 0.817549228668 MEDIAN: 0.792366027832 STD: 0.306573241767
==================================================
LOI_BoolOp_mutant_1507055376.py.t60.out.0
HIT: 5 MIN: 0.188272953033 MAX: 1.3511929512 MEAN: 0.722574996948 MEDIAN: 0.621020078659 STD: 0.413071680427
==================================================
LOI_BoolOp_mutant_1507055377.py.t60.out.0
HIT: 5 MIN: 0.0482881069183 MAX: 0.384654045105 MEAN: 0.146390628815 MEDIAN: 0.103348970413 STD: 0.122496117134
==================================================
LOI_BoolOp_mutant_1507055378.py.t60.out.0
HIT: 5 MIN: 0.31010389328 MAX: 1.39393997192 MEAN: 0.630947589874 MEDIAN: 0.417078971863 STD: 0.397498687293
==================================================
LOI_BoolOp_mutant_1507055379.py.t60.out.0
HIT: 5 MIN: 1.32276916504 MAX: 3.44494390488 MEAN: 2.16488981247 MEDIAN: 2.0225880146 STD: 0.695533199843
==================================================
LOI_BoolOp_mutant_1507055380.py.t60.out.0
HIT: 5 MIN: 0.0263600349426 MAX: 0.0540299415588 MEAN: 0.0434299468994 MEDIAN: 0.047091960907 STD: 0.0106575531661
==================================================
LOI_BoolOp_mutant_1507055381.py.t60.out.0
HIT: 5 MIN: 0.0376079082489 MAX: 0.163741111755 MEAN: 0.0898891925812 MEDIAN: 0.0779550075531 STD: 0.0453711642757
==================================================
LOI_BoolOp_mutant_1507055382.py.t60.out.0
==================================================
LOI_BoolOp_mutant_1507055383.py.t60.out.0
HIT: 5 MIN: 0.0623590946198 MAX: 0.162919044495 MEAN: 0.0929915905 MEDIAN: 0.077064037323 STD: 0.0357815606093
==================================================
LOI_BoolOp_mutant_1507055384.py.t60.out.0
HIT: 5 MIN: 0.146902799606 MAX: 1.46566081047 MEAN: 0.543849086761 MEDIAN: 0.294919967651 STD: 0.485911476147
==================================================
LOI_BoolOp_mutant_1507055387.py.t60.out.0
==================================================
LOI_BoolOp_mutant_1507055391.py.t60.out.0
HIT: 5 MIN: 0.0240039825439 MAX: 0.0377359390259 MEAN: 0.0306720256806 MEDIAN: 0.0305991172791 STD: 0.00513801742428
==================================================
LOI_BoolOp_mutant_1507055392.py.t60.out.0
HIT: 5 MIN: 0.0221858024597 MAX: 0.0342547893524 MEAN: 0.0276156902313 MEDIAN: 0.0260539054871 STD: 0.00426849723294
==================================================
LOI_BoolOp_mutant_1507055396.py.t60.out.0
HIT: 5 MIN: 0.461162090302 MAX: 6.16524004936 MEAN: 2.54063768387 MEDIAN: 1.83502006531 STD: 2.09176912773
==================================================
LOI_BoolOp_mutant_1507055401.py.t60.out.0
HIT: 5 MIN: 0.0432951450348 MAX: 0.171976089478 MEAN: 0.0974366664888 MEDIAN: 0.0916969776154 STD: 0.0457046876495
==================================================
LOI_BoolOp_mutant_1507055402.py.t60.out.0
HIT: 5 MIN: 0.374275922775 MAX: 5.09078192711 MEAN: 2.68083701134 MEDIAN: 2.916711092 STD: 1.89033868951
==================================================
LOI_BoolOp_mutant_1507055403.py.t60.out.0
HIT: 4 MIN: 39.2183570862 MAX: 46.0723569393 MEAN: 42.6416225433 MEDIAN: 42.6378880739 STD: 2.4290732733
==================================================
LOI_BoolOp_mutant_1507055404.py.t60.out.0
==================================================
LOI_BoolOp_mutant_1507055405.py.t60.out.0
HIT: 5 MIN: 4.04335999489 MAX: 30.9413421154 MEAN: 17.6838476181 MEDIAN: 17.3215620518 STD: 9.48703326082
==================================================
LOI_BoolOp_mutant_1507055406.py.t60.out.0
==================================================
LOI_BoolOp_mutant_1507055407.py.t60.out.0
==================================================
LOI_BoolOp_mutant_1507055408.py.t60.out.0
HIT: 5 MIN: 0.0339379310608 MAX: 0.105803012848 MEAN: 0.074041557312 MEDIAN: 0.071436882019 STD: 0.0242285722563
==================================================
LOI_BoolOp_mutant_1507055409.py.t60.out.0
==================================================
LOI_BoolOp_mutant_1507055410.py.t60.out.0
HIT: 5 MIN: 0.0754339694977 MAX: 0.344963788986 MEAN: 0.186519813538 MEDIAN: 0.194086074829 STD: 0.0954931855096
==================================================
LOI_BoolOp_mutant_1507055411.py.t60.out.0
HIT: 5 MIN: 0.0509359836578 MAX: 0.197879076004 MEAN: 0.11604180336 MEDIAN: 0.0969250202179 STD: 0.0558337672194
==================================================
LOI_BoolOp_mutant_1507055412.py.t60.out.0
HIT: 5 MIN: 0.0388588905334 MAX: 0.230620145798 MEAN: 0.129519987106 MEDIAN: 0.137511968613 STD: 0.0643351375843
==================================================
LOI_BoolOp_mutant_1507055413.py.t60.out.0
HIT: 5 MIN: 0.0592401027679 MAX: 0.144008159637 MEAN: 0.0840102195739 MEDIAN: 0.0706169605255 STD: 0.0307010760895
==================================================
LOI_BoolOp_mutant_1507055414.py.t60.out.0
HIT: 5 MIN: 0.0379948616028 MAX: 0.0670881271362 MEAN: 0.0548960208893 MEDIAN: 0.0609300136566 STD: 0.0109260571235
==================================================
LOI_BoolOp_mutant_1507055415.py.t60.out.0
HIT: 5 MIN: 0.0252068042755 MAX: 0.123051166534 MEAN: 0.0702618122101 MEDIAN: 0.0461449623108 STD: 0.0418098173298
LOI_UnaryOp_mutant_1506798003.py NOT IN LOCS!
==================================================
LOI_UnaryOp_mutant_1507055275.py.t60.out.0
HIT: 5 MIN: 0.0440938472748 MAX: 0.190285921097 MEAN: 0.082936000824 MEDIAN: 0.0590150356293 STD: 0.0546957342887
==================================================
LOI_UnaryOp_mutant_1507055276.py.t60.out.0
==================================================
LOI_UnaryOp_mutant_1507055277.py.t60.out.0
HIT: 5 MIN: 0.0219130516052 MAX: 0.0348999500275 MEAN: 0.0277506351471 MEDIAN: 0.0279650688171 STD: 0.00425129371857
==================================================
LOI_UnaryOp_mutant_1507055278.py.t60.out.0
==================================================
LOI_UnaryOp_mutant_1507055279.py.t60.out.0
HIT: 5 MIN: 0.0256130695343 MAX: 0.0457580089569 MEAN: 0.0339114189148 MEDIAN: 0.0305459499359 STD: 0.00787440857345
==================================================
LOI_UnaryOp_mutant_1507055280.py.t60.out.0
HIT: 5 MIN: 0.0269658565521 MAX: 0.0511620044708 MEAN: 0.0388812065124 MEDIAN: 0.0371251106262 STD: 0.00818230671829
==================================================
LOI_UnaryOp_mutant_1507055281.py.t60.out.0
HIT: 5 MIN: 0.0269038677216 MAX: 0.0473141670227 MEAN: 0.037803030014 MEDIAN: 0.0413780212402 STD: 0.00874850410482
==================================================
LOI_UnaryOp_mutant_1507055282.py.t60.out.0
==================================================
LOI_UnaryOp_mutant_1507055283.py.t60.out.0
HIT: 5 MIN: 0.0320661067963 MAX: 0.0444538593292 MEAN: 0.039128780365 MEDIAN: 0.0389249324799 STD: 0.00417269128554
==================================================
LOI_UnaryOp_mutant_1507055284.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO is_case_sensitive
1595c1595
<         if self.is_case_sensitive:
---
>         if (not self.is_case_sensitive):

==================================================
LOI_UnaryOp_mutant_1507055285.py.t60.out.0
HIT: 5 MIN: 0.0291771888733 MAX: 0.0531220436096 MEAN: 0.0394338130951 MEDIAN: 0.0368568897247 STD: 0.00909994836448
==================================================
LOI_UnaryOp_mutant_1507055286.py.t60.out.0
HIT: 5 MIN: 0.0207540988922 MAX: 0.0286190509796 MEAN: 0.0236482143402 MEDIAN: 0.0222878456116 STD: 0.00294846301513
==================================================
LOI_UnaryOp_mutant_1507055287.py.t60.out.0
==================================================
LOI_UnaryOp_mutant_1507055289.py.t60.out.0
HIT: 5 MIN: 0.0215079784393 MAX: 0.0530350208282 MEAN: 0.0337930202484 MEDIAN: 0.0257520675659 STD: 0.013350078649
==================================================
LOI_UnaryOp_mutant_1507055290.py.t60.out.0
==================================================
LOI_UnaryOp_mutant_1507055291.py.t60.out.0
HIT: 5 MIN: 0.0326261520386 MAX: 0.216257095337 MEAN: 0.0855738639832 MEDIAN: 0.0640480518341 STD: 0.067632943623
==================================================
LOI_UnaryOp_mutant_1507055292.py.t60.out.0
HIT: 5 MIN: 0.0228359699249 MAX: 0.111928939819 MEAN: 0.0593620300292 MEDIAN: 0.0574390888214 STD: 0.0315887077159
==================================================
LOI_UnaryOp_mutant_1507055293.py.t60.out.0
HIT: 5 MIN: 0.0312991142273 MAX: 0.111175060272 MEAN: 0.0612270832061 MEDIAN: 0.053277015686 STD: 0.0266415743077
==================================================
LOI_UnaryOp_mutant_1507055294.py.t60.out.0
HIT: 5 MIN: 0.027526140213 MAX: 0.0888259410858 MEAN: 0.0492914199829 MEDIAN: 0.0337660312653 STD: 0.0241819770794
==================================================
LOI_UnaryOp_mutant_1507055295.py.t60.out.0
HIT: 5 MIN: 0.109905004501 MAX: 11.5529010296 MEAN: 4.06936821938 MEDIAN: 3.17986702919 STD: 3.96692567315
==================================================
LOI_UnaryOp_mutant_1507055296.py.t60.out.0
HIT: 5 MIN: 0.227074146271 MAX: 1.34670591354 MEAN: 0.687574243546 MEDIAN: 0.456784963608 STD: 0.461252485284
==================================================
LOI_UnaryOp_mutant_1507055297.py.t60.out.0
HIT: 5 MIN: 0.0949308872223 MAX: 0.591743946075 MEAN: 0.336466979981 MEDIAN: 0.272277116776 STD: 0.213564025808
==================================================
LOI_UnaryOp_mutant_1507055298.py.t60.out.0
HIT: 5 MIN: 0.269711971283 MAX: 1.42978596687 MEAN: 0.64544301033 MEDIAN: 0.403509140015 STD: 0.426418309645
==================================================
LOI_UnaryOp_mutant_1507055299.py.t60.out.0
HIT: 5 MIN: 0.0233800411224 MAX: 0.0389089584351 MEAN: 0.0310774326324 MEDIAN: 0.0297050476074 STD: 0.00607293027507
==================================================
LOI_UnaryOp_mutant_1507055301.py.t60.out.0
HIT: 5 MIN: 0.0262680053711 MAX: 0.0440309047699 MEAN: 0.0350049495697 MEDIAN: 0.0386099815369 STD: 0.00718700068592
==================================================
LOI_UnaryOp_mutant_1507055302.py.t60.out.0
HIT: 5 MIN: 0.0405011177063 MAX: 0.0581049919128 MEAN: 0.0499660015106 MEDIAN: 0.0517978668213 STD: 0.00745836466482
==================================================
LOI_UnaryOp_mutant_1507055303.py.t60.out.0
HIT: 5 MIN: 0.0286738872528 MAX: 0.496387004852 MEAN: 0.134620571136 MEDIAN: 0.0458431243896 STD: 0.181500385317
==================================================
LOI_UnaryOp_mutant_1507055304.py.t60.out.0
HIT: 5 MIN: 0.0342729091644 MAX: 0.366376161575 MEAN: 0.150585031509 MEDIAN: 0.109964132309 STD: 0.115131354025
==================================================
LOI_UnaryOp_mutant_1507055305.py.t60.out.0
HIT: 5 MIN: 0.726693868637 MAX: 7.57974100113 MEAN: 4.57929372787 MEDIAN: 3.96597290039 STD: 2.61958380755
==================================================
LOI_UnaryOp_mutant_1507055306.py.t60.out.0
HIT: 5 MIN: 0.181864976883 MAX: 2.50028395653 MEAN: 1.19406018257 MEDIAN: 1.16361498833 STD: 0.859712598961
==================================================
LOI_UnaryOp_mutant_1507055307.py.t60.out.0
HIT: 5 MIN: 0.129184961319 MAX: 2.87006998062 MEAN: 0.804546642303 MEDIAN: 0.376534938812 STD: 1.04098353882
==================================================
LOI_UnaryOp_mutant_1507055308.py.t60.out.0
HIT: 5 MIN: 0.0901429653168 MAX: 1.72402381897 MEAN: 0.700674962998 MEDIAN: 0.641415119171 STD: 0.557944742682
==================================================
LOI_UnaryOp_mutant_1507055309.py.t60.out.0
HIT: 5 MIN: 0.195033073425 MAX: 0.875659942627 MEAN: 0.50106678009 MEDIAN: 0.420763015747 STD: 0.229528902659
==================================================
LOI_UnaryOp_mutant_1507055310.py.t60.out.0
HIT: 5 MIN: 0.0411360263824 MAX: 0.168782949448 MEAN: 0.102763605118 MEDIAN: 0.0823080539703 STD: 0.0459289968218
==================================================
LOI_UnaryOp_mutant_1507055311.py.t60.out.0
HIT: 5 MIN: 0.0710179805756 MAX: 0.111060857773 MEAN: 0.0901245594025 MEDIAN: 0.0968101024628 STD: 0.0156354844737
==================================================
LOI_UnaryOp_mutant_1507055312.py.t60.out.0
==================================================
LOI_UnaryOp_mutant_1507055322.py.t60.out.0
HIT: 5 MIN: 0.386713981628 MAX: 16.7932839394 MEAN: 6.97681999207 MEDIAN: 7.00943613052 STD: 5.55056591179
==================================================
LOI_UnaryOp_mutant_1507055326.py.t60.out.0
HIT: 4 MIN: 11.1386549473 MAX: 33.2064409256 MEAN: 20.9328830242 MEDIAN: 19.693218112 STD: 9.50989736694
==================================================
LOI_UnaryOp_mutant_1507055327.py.t60.out.0
HIT: 5 MIN: 8.98397707939 MAX: 41.2510330677 MEAN: 21.1725452423 MEDIAN: 14.990986824 STD: 12.3261949851
==================================================
LOI_UnaryOp_mutant_1507055333.py.t60.out.0
HIT: 5 MIN: 0.0312249660492 MAX: 0.0586709976196 MEAN: 0.0421712398529 MEDIAN: 0.0397431850433 STD: 0.00985514039553
==================================================
OIL_For_mutant_1507055636.py.t60.out.0
HIT: 5 MIN: 0.0187299251556 MAX: 0.0413608551025 MEAN: 0.0271203517914 MEDIAN: 0.0207970142365 STD: 0.00917612273865
==================================================
OIL_For_mutant_1507055637.py.t60.out.0
==================================================
OIL_For_mutant_1507055641.py.t60.out.0
HIT: 5 MIN: 0.0184662342072 MAX: 0.0356049537659 MEAN: 0.0287608146668 MEDIAN: 0.0311660766602 STD: 0.00607910707974
==================================================
OIL_For_mutant_1507055642.py.t60.out.0
HIT: 5 MIN: 0.0208120346069 MAX: 0.0441858768463 MEAN: 0.0316800117492 MEDIAN: 0.0252029895782 STD: 0.0100673276887
==================================================
OIL_For_mutant_1507055643.py.t60.out.0
HIT: 5 MIN: 0.0219619274139 MAX: 0.0514850616455 MEAN: 0.0363444328308 MEDIAN: 0.0307109355927 STD: 0.0126061196042
==================================================
OIL_For_mutant_1507055644.py.t60.out.0
==================================================
OIL_For_mutant_1507055648.py.t60.out.0
==================================================
OIL_While_mutant_1507055623.py.t60.out.0
==================================================
OIL_While_mutant_1507055624.py.t60.out.0
==================================================
OIL_While_mutant_1507055625.py.t60.out.0
==================================================
OIL_While_mutant_1507055626.py.t60.out.0
==================================================
OIL_While_mutant_1507055627.py.t60.out.0
==================================================
OIL_While_mutant_1507055628.py.t60.out.0
HIT: 5 MIN: 0.0172250270844 MAX: 0.0430269241333 MEAN: 0.0295623779297 MEDIAN: 0.0329918861389 STD: 0.0102642504748
RIL_For_mutant_1506798344.py NOT IN LOCS!
==================================================
RIL_For_mutant_1507055656.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO reversed
1014c1014
<         for mount_point in reversed(self.mount_points.values()):
---
>         for mount_point in self.mount_points.values():

==================================================
RIL_For_mutant_1507055659.py.t60.out.0
HIT: 5 MIN: 0.0260498523712 MAX: 0.0822739601135 MEAN: 0.0443853855133 MEDIAN: 0.0338070392609 STD: 0.0205191040688
==================================================
RIL_For_mutant_1507055660.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO reversed
1319c1319
<         for component in reversed(path_components):
---
>         for component in path_components:

==================================================
RIL_For_mutant_1507055661.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO reversed
1382c1382
<         for component in reversed(path_components):
---
>         for component in path_components:

==================================================
RIL_For_mutant_1507055664.py.t60.out.0
HIT: 5 MIN: 0.0247571468353 MAX: 0.0625710487366 MEAN: 0.0367086410523 MEDIAN: 0.0305759906769 STD: 0.0139618010098
==================================================
RIL_For_mutant_1507055665.py.t60.out.0
HIT: 5 MIN: 0.0270261764526 MAX: 0.0646259784698 MEAN: 0.03860039711 MEDIAN: 0.0356841087341 STD: 0.0135892751028
==================================================
RIL_For_mutant_1507055666.py.t60.out.0
HIT: 5 MIN: 0.0279178619385 MAX: 0.0543060302734 MEAN: 0.0358147621155 MEDIAN: 0.0294399261475 STD: 0.00996455438142
==================================================
RIL_For_mutant_1507055667.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO reversed
2090c2090
<         for new_dir in reversed(new_dirs):
---
>         for new_dir in new_dirs:

==================================================
RIL_For_mutant_1507055671.py.t60.out.0
IGNORING NOT KILLED MUTANT DUE TO reversed
2374c2374
<         for component in reversed(path_components):
---
>         for component in path_components:


********************************************************************************

873 TOTAL MUTANTS
424 NOT COVERED 51.0 % COVERED
156 IGNORED DUE TO TYPE

KILLED 286 OUT OF 371 77.0 % KILLED
279 VERY EASY KILLS (5/5 AT 60 SECONDS) 75.0 % VERY EASY KILLS
7 KILLED BY AT LEAST ONE 60 SECOND RUN, BUT NOT ALL 2.0 % RARER KILLS
LONGEST MINIMUM TIME TO KILL: 44.7861959934
LONGEST TIME TO KILL: 59.0064361095
LONGEST MEDIAN TIME TO KILL: 44.7861959934
LONGEST MEAN TIME TO KILL: 42.6416225433

MEANS:
  MIN: 0.591667206137
  MAX: 3.25058002155
  MEDIAN: 1.47780282848
  MEAN: 1.70427467829
MEDIANS:
  MIN: 0.0425734519958
  MAX: 0.17714381218
  MEDIAN: 0.094874382019
  MEAN: 0.103941774368

85 MUTANTS TO EXAMINE 85
**************************************************
BCR_Break_mutant_1507055138.py
1743,1744c1743,1744
<                 # line: 1684
<                 continue
---
>                 # line: 1691
>                 break

**************************************************
BCR_Break_mutant_1507055139.py
2377,2378c2377,2378
<                 # line: 2410
<                 continue
---
>                 # line: 2412
>                 break

**************************************************
BCR_Break_mutant_1507055140.py
3634,3635c3634,3635
<                 # line: 3693
<                 continue
---
>                 # line: 3694
>                 break

**************************************************
BOR_BitAnd_mutant_1507055599.py
3284c3284
<                 mode = (511 | (~ self._umask()))
---
>                 mode = (511 & (~ self._umask()))

**************************************************
EXS_ExceptHandler_mutant_1507055433.py
2419,2420c2419,2420
<             # line: 2447
<             pass
---
>             # line: 2448
>             return False

**************************************************
LCR_BoolOp_mutant_1507055450.py
366c366
<         self.errors = (errors and 'strict')
---
>         self.errors = (errors or 'strict')

**************************************************
LCR_BoolOp_mutant_1507055451.py
396c396
<         if ((sys.version_info >= (3, 0)) or isinstance(self.byte_contents, bytes)):
---
>         if ((sys.version_info >= (3, 0)) and isinstance(self.byte_contents, bytes)):

**************************************************
LCR_BoolOp_mutant_1507055453.py
424c424
<         if ((not isinstance(size, int_types)) and (size < 0)):
---
>         if ((not isinstance(size, int_types)) or (size < 0)):

**************************************************
LCR_BoolOp_mutant_1507055458.py
460c460
<         current_size = (self.st_size and 0)
---
>         current_size = (self.st_size or 0)

**************************************************
LCR_BoolOp_mutant_1507055459.py
518c518
<         current_size = (self.st_size and 0)
---
>         current_size = (self.st_size or 0)

**************************************************
LCR_BoolOp_mutant_1507055464.py
952c952
<         if (self.is_windows_fs or (force or (not self._MountPointForPath(path)))):
---
>         if (self.is_windows_fs and (force or (not self._MountPointForPath(path)))):

**************************************************
LCR_BoolOp_mutant_1507055465.py
952c952
<         if (self.is_windows_fs and (force and (not self._MountPointForPath(path)))):
---
>         if (self.is_windows_fs and (force or (not self._MountPointForPath(path)))):

**************************************************
LCR_BoolOp_mutant_1507055479.py
1303c1303
<             if (path.startswith(sep) or (not normalized_path.startswith(sep))):
---
>             if (path.startswith(sep) and (not normalized_path.startswith(sep))):

**************************************************
LCR_BoolOp_mutant_1507055482.py
1327c1327
<             if ((current_dir is None) or (isinstance(current_dir, FakeDirectory) or (current_dir._byte_contents is None) or (current_dir.st_size == 0))):
---
>             if ((current_dir is None) or (isinstance(current_dir, FakeDirectory) and (current_dir._byte_contents is None) and (current_dir.st_size == 0))):

**************************************************
LCR_BoolOp_mutant_1507055484.py
1351c1351
<             path = self._path_separator(path).join(((((self.cwd != root_name) or self.cwd) or empty), path))
---
>             path = self._path_separator(path).join(((((self.cwd != root_name) and self.cwd) or empty), path))

**************************************************
LCR_BoolOp_mutant_1507055494.py
1536c1536
<         if ((not path) and (path == self._path_separator(path))):
---
>         if ((not path) or (path == self._path_separator(path))):

**************************************************
LCR_BoolOp_mutant_1507055496.py
1563c1563
<         return (self.is_windows_fs or (len(file_path) >= 2) or file_path[:1].isalpha or (file_path[1:2] == colon))
---
>         return (self.is_windows_fs and (len(file_path) >= 2) and file_path[:1].isalpha and (file_path[1:2] == colon))

**************************************************
LCR_BoolOp_mutant_1507055503.py
1582c1582
<         return (file_path and (file_path.endswith(self._path_separator(file_path)) and ((self.alternative_path_separator is not None) and file_path.endswith(self._alternative_path_separator(file_path)))))
---
>         return (file_path and (file_path.endswith(self._path_separator(file_path)) or ((self.alternative_path_separator is not None) and file_path.endswith(self._alternative_path_separator(file_path)))))

**************************************************
LCR_BoolOp_mutant_1507055507.py
1692c1692
<             if ((not link_path.startswith(sep)) and ((alt_sep is None) and (not link_path.startswith(alt_sep)))):
---
>             if ((not link_path.startswith(sep)) and ((alt_sep is None) or (not link_path.startswith(alt_sep)))):

**************************************************
LCR_BoolOp_mutant_1507055509.py
1714c1714
<         if ((not file_path) and (not _ValidRelativePath(file_path))):
---
>         if ((not file_path) or (not _ValidRelativePath(file_path))):

**************************************************
LCR_BoolOp_mutant_1507055511.py
1858c1858
<         if (path.endswith(sep) and (alt_sep and path.endswith(alt_sep))):
---
>         if (path.endswith(sep) or (alt_sep and path.endswith(alt_sep))):

**************************************************
LCR_BoolOp_mutant_1507055513.py
1876c1876
<                 if ((not self.is_windows_fs) or isinstance(parent_obj, FakeFile)):
---
>                 if ((not self.is_windows_fs) and isinstance(parent_obj, FakeFile)):

**************************************************
LCR_BoolOp_mutant_1507055520.py
2176c2176
<         if (self.Exists(file_path) and self.IsLink(file_path)):
---
>         if (self.Exists(file_path) or self.IsLink(file_path)):

**************************************************
LCR_BoolOp_mutant_1507055521.py
2216c2216
<         if ((not read_from_real_fs) or ((contents is not None) or (st_size is not None))):
---
>         if ((not read_from_real_fs) and ((contents is not None) or (st_size is not None))):

**************************************************
LCR_BoolOp_mutant_1507055533.py
2795c2795
<             return (path.startswith(sep) or ((altsep is not None) or path.startswith(altsep)))
---
>             return (path.startswith(sep) or ((altsep is not None) and path.startswith(altsep)))

**************************************************
LCR_BoolOp_mutant_1507055536.py
2894c2894
<         elif ((self.filesystem.is_windows_fs and path.startswith(sep)) and ((altsep is not None) and path.startswith(altsep))):
---
>         elif ((self.filesystem.is_windows_fs and path.startswith(sep)) or ((altsep is not None) and path.startswith(altsep))):

**************************************************
LCR_BoolOp_mutant_1507055537.py
2894c2894
<         elif ((self.filesystem.is_windows_fs or path.startswith(sep)) or ((altsep is not None) and path.startswith(altsep))):
---
>         elif ((self.filesystem.is_windows_fs and path.startswith(sep)) or ((altsep is not None) and path.startswith(altsep))):

**************************************************
LCR_BoolOp_mutant_1507055549.py
3629c3629
<         while (head or tail):
---
>         while (head and tail):

**************************************************
LCR_BoolOp_mutant_1507055557.py
3953c3953
<         errors = (errors and 'strict')
---
>         errors = (errors or 'strict')

**************************************************
LCR_BoolOp_mutant_1507055558.py
3964c3964
<             if ((not binary) or (sys.version_info >= (3, 0))):
---
>             if ((not binary) and (sys.version_info >= (3, 0))):

**************************************************
LCR_BoolOp_mutant_1507055561.py
3977c3977
<             if (contents or (not update)):
---
>             if (contents and (not update)):

**************************************************
LCR_BoolOp_mutant_1507055562.py
3999c3999
<                     if (read or (not use_io)):
---
>                     if (read and (not use_io)):

**************************************************
LCR_BoolOp_mutant_1507055564.py
4157c4157
<         return ((not self.is_stream) or ((not self._filesystem.is_windows_fs) or (sys.version_info[0] > 2)))
---
>         return ((not self.is_stream) and ((not self._filesystem.is_windows_fs) or (sys.version_info[0] > 2)))

**************************************************
LCR_BoolOp_mutant_1507055565.py
4157c4157
<         return ((not self.is_stream) and ((not self._filesystem.is_windows_fs) and (sys.version_info[0] > 2)))
---
>         return ((not self.is_stream) and ((not self._filesystem.is_windows_fs) or (sys.version_info[0] > 2)))

**************************************************
LCR_BoolOp_mutant_1507055566.py
4250c4250
<             if ((not writing) and (sys.version_info >= (3,))):
---
>             if ((not writing) or (sys.version_info >= (3,))):

**************************************************
LCR_BoolOp_mutant_1507055569.py
4336c4336
<         if (reading and writing):
---
>         if (reading or writing):

**************************************************
LCR_BoolOp_mutant_1507055571.py
4347c4347
<                 if (args or (args[0] == 0)):
---
>                 if (args and (args[0] == 0)):

**************************************************
LCR_BoolOp_mutant_1507055576.py
4470c4470
<         self._use_io = (use_io and (sys.version_info >= (3, 0)) and (platform.python_implementation() == 'PyPy'))
---
>         self._use_io = (use_io or (sys.version_info >= (3, 0)) or (platform.python_implementation() == 'PyPy'))

**************************************************
LCR_BoolOp_mutant_1507055578.py
4502c4502
<         binary = ((sys.version_info < (3, 0)) and ('b' in mode))
---
>         binary = ((sys.version_info < (3, 0)) or ('b' in mode))

**************************************************
LOD_UnaryOp_mutant_1507055159.py
952c952
<         if (self.is_windows_fs and (force or self._MountPointForPath(path))):
---
>         if (self.is_windows_fs and (force or (not self._MountPointForPath(path)))):

**************************************************
LOD_UnaryOp_mutant_1507055164.py
1233c1233
<         if ((self.alternative_path_separator is None) or path):
---
>         if ((self.alternative_path_separator is None) or (not path)):

**************************************************
LOD_UnaryOp_mutant_1507055166.py
1303c1303
<             if (path.startswith(sep) and normalized_path.startswith(sep)):
---
>             if (path.startswith(sep) and (not normalized_path.startswith(sep))):

**************************************************
LOD_UnaryOp_mutant_1507055168.py
1321c1321
<             if isinstance(current_dir, FakeDirectory):
---
>             if (not isinstance(current_dir, FakeDirectory)):

**************************************************
LOD_UnaryOp_mutant_1507055170.py
1345c1345
<         elif self._StartsWithRootPath(path):
---
>         elif (not self._StartsWithRootPath(path)):

**************************************************
LOD_UnaryOp_mutant_1507055177.py
1546c1546
<         if path_components[0]:
---
>         if (not path_components[0]):

**************************************************
LOD_UnaryOp_mutant_1507055184.py
1660c1660
<             if self._StartsWithRootPath(path):
---
>             if (not self._StartsWithRootPath(path)):

**************************************************
LOD_UnaryOp_mutant_1507055187.py
1692c1692
<             if ((not link_path.startswith(sep)) and ((alt_sep is None) or link_path.startswith(alt_sep))):
---
>             if ((not link_path.startswith(sep)) and ((alt_sep is None) or (not link_path.startswith(alt_sep)))):

**************************************************
LOD_UnaryOp_mutant_1507055191.py
1795c1795
<                     if self.is_windows_fs:
---
>                     if (not self.is_windows_fs):

**************************************************
LOD_UnaryOp_mutant_1507055194.py
1876c1876
<                 if (self.is_windows_fs and isinstance(parent_obj, FakeFile)):
---
>                 if ((not self.is_windows_fs) and isinstance(parent_obj, FakeFile)):

**************************************************
LOD_UnaryOp_mutant_1507055201.py
1970c1970
<             elif (self.is_windows_fs and force_replace):
---
>             elif (self.is_windows_fs and (not force_replace)):

**************************************************
LOD_UnaryOp_mutant_1507055217.py
2376c2376
<             if ((component not in current_dir.contents) or isinstance(current_dir.contents, dict)):
---
>             if ((component not in current_dir.contents) or (not isinstance(current_dir.contents, dict))):

**************************************************
LOD_UnaryOp_mutant_1507055219.py
2389c2389
<             if ((not exist_ok) or isinstance(self.ResolveObject(dir_name), FakeDirectory)):
---
>             if ((not exist_ok) or (not isinstance(self.ResolveObject(dir_name), FakeDirectory))):

**************************************************
LOD_UnaryOp_mutant_1507055225.py
2891c2891
<         if self.isabs(path):
---
>         if (not self.isabs(path)):

**************************************************
LOD_UnaryOp_mutant_1507055236.py
3292c3292
<         if (self.filesystem.is_windows_fs and (not open_modes.can_write) and self.filesystem.Exists(file_path)):
---
>         if ((not self.filesystem.is_windows_fs) and (not open_modes.can_write) and self.filesystem.Exists(file_path)):

**************************************************
LOD_UnaryOp_mutant_1507055237.py
3292c3292
<         if ((not self.filesystem.is_windows_fs) and open_modes.can_write and self.filesystem.Exists(file_path)):
---
>         if ((not self.filesystem.is_windows_fs) and (not open_modes.can_write) and self.filesystem.Exists(file_path)):

**************************************************
LOD_UnaryOp_mutant_1507055249.py
3964c3964
<             if (binary and (sys.version_info >= (3, 0))):
---
>             if ((not binary) and (sys.version_info >= (3, 0))):

**************************************************
LOD_UnaryOp_mutant_1507055254.py
3999c3999
<                     if (read and use_io):
---
>                     if (read and (not use_io)):

**************************************************
LOD_UnaryOp_mutant_1507055259.py
4157c4157
<         return (self.is_stream and ((not self._filesystem.is_windows_fs) or (sys.version_info[0] > 2)))
---
>         return ((not self.is_stream) and ((not self._filesystem.is_windows_fs) or (sys.version_info[0] > 2)))

**************************************************
LOD_UnaryOp_mutant_1507055260.py
4157c4157
<         return ((not self.is_stream) and (self._filesystem.is_windows_fs or (sys.version_info[0] > 2)))
---
>         return ((not self.is_stream) and ((not self._filesystem.is_windows_fs) or (sys.version_info[0] > 2)))

**************************************************
LOD_UnaryOp_mutant_1507055261.py
4250c4250
<             if (writing or (sys.version_info >= (3,))):
---
>             if ((not writing) or (sys.version_info >= (3,))):

**************************************************
LOD_UnaryOp_mutant_1507055265.py
4402c4402
<         if (self.is_stream and (not (self in self._filesystem.open_files))):
---
>         if ((not self.is_stream) and (not (self in self._filesystem.open_files))):

**************************************************
LOI_BoolOp_mutant_1507055334.py
396c396
<         if (not ((sys.version_info >= (3, 0)) and isinstance(self.byte_contents, bytes))):
---
>         if ((sys.version_info >= (3, 0)) and isinstance(self.byte_contents, bytes)):

**************************************************
LOI_BoolOp_mutant_1507055341.py
952c952
<         if (not (self.is_windows_fs and (force or (not self._MountPointForPath(path))))):
---
>         if (self.is_windows_fs and (force or (not self._MountPointForPath(path)))):

**************************************************
LOI_BoolOp_mutant_1507055354.py
1303c1303
<             if (not (path.startswith(sep) and (not normalized_path.startswith(sep)))):
---
>             if (path.startswith(sep) and (not normalized_path.startswith(sep))):

**************************************************
LOI_BoolOp_mutant_1507055373.py
1876c1876
<                 if (not ((not self.is_windows_fs) and isinstance(parent_obj, FakeFile))):
---
>                 if ((not self.is_windows_fs) and isinstance(parent_obj, FakeFile)):

**************************************************
LOI_BoolOp_mutant_1507055382.py
2376c2376
<             if (not ((component not in current_dir.contents) or (not isinstance(current_dir.contents, dict)))):
---
>             if ((component not in current_dir.contents) or (not isinstance(current_dir.contents, dict))):

**************************************************
LOI_BoolOp_mutant_1507055387.py
2894c2894
<         elif (not ((self.filesystem.is_windows_fs and path.startswith(sep)) or ((altsep is not None) and path.startswith(altsep)))):
---
>         elif ((self.filesystem.is_windows_fs and path.startswith(sep)) or ((altsep is not None) and path.startswith(altsep))):

**************************************************
LOI_BoolOp_mutant_1507055404.py
3999c3999
<                     if (not (read and (not use_io))):
---
>                     if (read and (not use_io)):

**************************************************
LOI_BoolOp_mutant_1507055406.py
4250c4250
<             if (not ((not writing) or (sys.version_info >= (3,)))):
---
>             if ((not writing) or (sys.version_info >= (3,))):

**************************************************
LOI_BoolOp_mutant_1507055407.py
4336c4336
<         if (not (reading or writing)):
---
>         if (reading or writing):

**************************************************
LOI_BoolOp_mutant_1507055409.py
4347c4347
<                 if (not (args and (args[0] == 0))):
---
>                 if (args and (args[0] == 0)):

**************************************************
LOI_UnaryOp_mutant_1507055276.py
1321c1321
<             if isinstance(current_dir, FakeDirectory):
---
>             if (not isinstance(current_dir, FakeDirectory)):

**************************************************
LOI_UnaryOp_mutant_1507055278.py
1345c1345
<         elif self._StartsWithRootPath(path):
---
>         elif (not self._StartsWithRootPath(path)):

**************************************************
LOI_UnaryOp_mutant_1507055282.py
1546c1546
<         if path_components[0]:
---
>         if (not path_components[0]):

**************************************************
LOI_UnaryOp_mutant_1507055287.py
1660c1660
<             if self._StartsWithRootPath(path):
---
>             if (not self._StartsWithRootPath(path)):

**************************************************
LOI_UnaryOp_mutant_1507055290.py
1795c1795
<                     if self.is_windows_fs:
---
>                     if (not self.is_windows_fs):

**************************************************
LOI_UnaryOp_mutant_1507055312.py
2891c2891
<         if self.isabs(path):
---
>         if (not self.isabs(path)):

**************************************************
OIL_For_mutant_1507055637.py
1332,1333d1331
<             # line: 1282
<             break

**************************************************
OIL_For_mutant_1507055644.py
2093,2094d2092
<             # line: 2046
<             break

**************************************************
OIL_For_mutant_1507055648.py
2382,2383d2381
<             # line: 2409
<             break

**************************************************
OIL_While_mutant_1507055623.py
506,507d505
<             # line: 492
<             break

**************************************************
OIL_While_mutant_1507055624.py
732,733d731
<                 # line: 709
<                 break

**************************************************
OIL_While_mutant_1507055625.py
765,766d764
<             # line: 730
<             break

**************************************************
OIL_While_mutant_1507055626.py
1389,1390d1388
<                     # line: 1346
<                     break

**************************************************
OIL_While_mutant_1507055627.py
1678,1679d1677
<                 # line: 1613
<                 break

