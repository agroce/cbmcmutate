CBMC version 5.0 64-bit linux
Parsing harness.c
Parsing mutant100037_dllinsert.c
Converting
Type-checking harness
file harness.c line 43 function main: function `assert' is not declared
Type-checking mutant100037_dllinsert
file mutant100037_dllinsert.c line 15 function insert_node: function `assert' is not declared
Generating GOTO Program
Adding CPROVER library
Function Pointer Removal
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Unwinding loop main.0 iteration 1 (4 max) file harness.c line 18 function main thread 0
Unwinding loop insert_node.0 iteration 1 (4 max) file mutant100037_dllinsert.c line 49 function insert_node thread 0
Unwinding loop insert_node.0 iteration 2 (4 max) file mutant100037_dllinsert.c line 49 function insert_node thread 0
Unwinding loop insert_node.0 iteration 3 (4 max) file mutant100037_dllinsert.c line 49 function insert_node thread 0
Not unwinding loop insert_node.0 iteration 4 (4 max) file mutant100037_dllinsert.c line 49 function insert_node thread 0
Unwinding loop main.0 iteration 2 (4 max) file harness.c line 18 function main thread 0
Unwinding loop insert_node.0 iteration 1 (4 max) file mutant100037_dllinsert.c line 49 function insert_node thread 0
Unwinding loop insert_node.0 iteration 2 (4 max) file mutant100037_dllinsert.c line 49 function insert_node thread 0
Unwinding loop insert_node.0 iteration 3 (4 max) file mutant100037_dllinsert.c line 49 function insert_node thread 0
Not unwinding loop insert_node.0 iteration 4 (4 max) file mutant100037_dllinsert.c line 49 function insert_node thread 0
Unwinding loop main.0 iteration 3 (4 max) file harness.c line 18 function main thread 0
Unwinding loop insert_node.0 iteration 1 (4 max) file mutant100037_dllinsert.c line 49 function insert_node thread 0
Unwinding loop insert_node.0 iteration 2 (4 max) file mutant100037_dllinsert.c line 49 function insert_node thread 0
Unwinding loop insert_node.0 iteration 3 (4 max) file mutant100037_dllinsert.c line 49 function insert_node thread 0
Not unwinding loop insert_node.0 iteration 4 (4 max) file mutant100037_dllinsert.c line 49 function insert_node thread 0
Not unwinding loop main.0 iteration 4 (4 max) file harness.c line 18 function main thread 0
Unwinding loop main.1 iteration 1 (4 max) file harness.c line 27 function main thread 0
Unwinding loop main.1 iteration 2 (4 max) file harness.c line 27 function main thread 0
Unwinding loop main.1 iteration 3 (4 max) file harness.c line 27 function main thread 0
Not unwinding loop main.1 iteration 4 (4 max) file harness.c line 27 function main thread 0
Unwinding loop main.2 iteration 1 (4 max) file harness.c line 40 function main thread 0
Unwinding loop main.2 iteration 2 (4 max) file harness.c line 40 function main thread 0
Unwinding loop main.2 iteration 3 (4 max) file harness.c line 40 function main thread 0
Not unwinding loop main.2 iteration 4 (4 max) file harness.c line 40 function main thread 0
size of program expression: 1530 steps
slicing removed 287 assignments
Generated 1039 VCC(s), 704 remaining after simplification
Passing problem to propositional reduction
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.0 with simplifier
47532 variables, 154357 clauses
SAT checker: negated claim is SATISFIABLE, i.e., does not hold
Runtime decision procedure: 0.686s
Building error trace

Counterexample:

State 6 file harness.c line 15 function main thread 0
----------------------------------------------------
  s=3 (00000000000000000000000000000011)

State 9 file harness.c line 19 function main thread 0
----------------------------------------------------
  v=-201256710 (11110100000000010001000011111010)
LOG: ref[0] = -201256710


State 11 file harness.c line 21 function main thread 0
----------------------------------------------------
  ref[0]=-201256710 (11110100000000010001000011111010)

State 14 file harness.c line 22 function main thread 0
----------------------------------------------------
  value=-201256710 (11110100000000010001000011111010)

State 25 file mutant100037_dllinsert.c line 17 function insert_node thread 0
----------------------------------------------------
  dynamic_object1.data=-201256710 (11110100000000010001000011111010)

State 32 file mutant100037_dllinsert.c line 21 function insert_node thread 0
----------------------------------------------------
  dynamic_object1.prev=&dynamic_object1.data (0000001000000000000000000000000000000000000000000000000000000000)

State 36 file mutant100037_dllinsert.c line 21 function insert_node thread 0
----------------------------------------------------
  dynamic_object1.next=&dynamic_object1.data (0000001000000000000000000000000000000000000000000000000000000000)

State 48 file harness.c line 19 function main thread 0
----------------------------------------------------
  v=-1274998726 (10110100000000010001000000111010)
LOG: ref[1] = -1274998726


State 50 file harness.c line 21 function main thread 0
----------------------------------------------------
  ref[1]=-1274998726 (10110100000000010001000000111010)

State 53 file harness.c line 22 function main thread 0
----------------------------------------------------
  value=-1274998726 (10110100000000010001000000111010)

State 64 file mutant100037_dllinsert.c line 17 function insert_node thread 0
----------------------------------------------------
  dynamic_object2.data=-1274998726 (10110100000000010001000000111010)

State 79 file mutant100037_dllinsert.c line 26 function insert_node thread 0
----------------------------------------------------
  dynamic_object2.next=&dynamic_object1.data (0000001000000000000000000000000000000000000000000000000000000000)

State 89 file mutant100037_dllinsert.c line 27 function insert_node thread 0
----------------------------------------------------
  dynamic_object2.prev=&dynamic_object1.data (0000001000000000000000000000000000000000000000000000000000000000)

State 96 file mutant100037_dllinsert.c line 28 function insert_node thread 0
----------------------------------------------------
  dynamic_object1.prev=&dynamic_object2.data (0000001100000000000000000000000000000000000000000000000000000000)

State 112 file mutant100037_dllinsert.c line 30 function insert_node thread 0
----------------------------------------------------
  dynamic_object1.next=&dynamic_object2.data (0000001100000000000000000000000000000000000000000000000000000000)

State 120 file harness.c line 22 function main thread 0
----------------------------------------------------
  head=&dynamic_object2.data (0000001100000000000000000000000000000000000000000000000000000000)

State 123 file harness.c line 19 function main thread 0
----------------------------------------------------
  v=-201256774 (11110100000000010001000010111010)
LOG: ref[2] = -201256774


State 125 file harness.c line 21 function main thread 0
----------------------------------------------------
  ref[2]=-201256774 (11110100000000010001000010111010)

State 128 file harness.c line 22 function main thread 0
----------------------------------------------------
  value=-201256774 (11110100000000010001000010111010)

State 139 file mutant100037_dllinsert.c line 17 function insert_node thread 0
----------------------------------------------------
  dynamic_object3.data=-201256774 (11110100000000010001000010111010)

State 160 file mutant100037_dllinsert.c line 34 function insert_node thread 0
----------------------------------------------------
  cur_node=&dynamic_object2.data (0000001100000000000000000000000000000000000000000000000000000000)

State 177 file mutant100037_dllinsert.c line 46 function insert_node thread 0
----------------------------------------------------
  cur_node=&dynamic_object1.data (0000001000000000000000000000000000000000000000000000000000000000)

State 200 file mutant100037_dllinsert.c line 61 function insert_node thread 0
----------------------------------------------------
  dynamic_object3.next=&dynamic_object2.data (0000001100000000000000000000000000000000000000000000000000000000)

State 213 file mutant100037_dllinsert.c line 62 function insert_node thread 0
----------------------------------------------------
  dynamic_object3.prev=&dynamic_object1.data (0000001000000000000000000000000000000000000000000000000000000000)

State 229 file mutant100037_dllinsert.c line 63 function insert_node thread 0
----------------------------------------------------
  dynamic_object1.next=&dynamic_object3.data (0000010000000000000000000000000000000000000000000000000000000000)

State 239 file mutant100037_dllinsert.c line 64 function insert_node thread 0
----------------------------------------------------
  dynamic_object2.prev=&dynamic_object3.data (0000010000000000000000000000000000000000000000000000000000000000)

State 246 file harness.c line 22 function main thread 0
----------------------------------------------------
  head=&dynamic_object2.data (0000001100000000000000000000000000000000000000000000000000000000)

State 249 file harness.c line 24 function main thread 0
----------------------------------------------------
  v=-1274998470 (10110100000000010001000100111010)
LOG: checking -1274998470

LOG: ref count = 0


State 262 file harness.c line 33 function main thread 0
----------------------------------------------------
  pos=&dynamic_object2.data (0000001100000000000000000000000000000000000000000000000000000000)

State 269 file harness.c line 35 function main thread 0
----------------------------------------------------
  curr=-1274998726 (10110100000000010001000000111010)
LOG: moving to next item


State 279 file harness.c line 42 function main thread 0
----------------------------------------------------
  pos=&dynamic_object1.data (0000001000000000000000000000000000000000000000000000000000000000)

State 287 file harness.c line 44 function main thread 0
----------------------------------------------------
  curr=-201256710 (11110100000000010001000011111010)
LOG: moving to next item


State 298 file harness.c line 42 function main thread 0
----------------------------------------------------
  pos=&dynamic_object3.data (0000010000000000000000000000000000000000000000000000000000000000)

Violated property:
  file harness.c line 43 function main
  assertion pos->data >= curr
  pos->data >= curr

VERIFICATION FAILED
