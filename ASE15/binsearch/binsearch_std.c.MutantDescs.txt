4: /* MUTANT (del_stmt) */ /*   long low = 0; */ 
4: /* MUTANT (rep_const) */  long low = 1;
4: /* MUTANT (rep_const) */  long low = -1;
5: /* MUTANT (del_stmt) */ /*   long high = size - 1; */ 
5: /* MUTANT (rep_const) */  long high = size - 0;
5: /* MUTANT (rep_const) */  long high = size - -1;
5: /* MUTANT (rep_const) */  long high = size - ((1)+1);
7: /* MUTANT (rep_op) */  while (low < high) {
7: /* MUTANT (rep_op) */  while (low > high) {
7: /* MUTANT (rep_op) */  while (low >= high) {
7: /* MUTANT (rep_op) */  while (low == high) {
7: /* MUTANT (rep_op) */  while (low != high) {
7: /* MUTANT (negate) */  while(! (low <= high)) {
8: /* MUTANT (del_stmt) */ /*     long mid = ((unsigned long)low + (unsigned long)high) >> 1; */ 
8: /* MUTANT (rep_op) */    long mid = ((unsigned long)low - (unsigned long)high) >> 1;
8: /* MUTANT (rep_op) */    long mid = ((unsigned long)low * (unsigned long)high) >> 1;
8: /* MUTANT (rep_op) */    long mid = ((unsigned long)low % (unsigned long)high) >> 1;
8: /* MUTANT (rep_const) */    long mid = ((unsigned long)low + (unsigned long)high) >> 0;
8: /* MUTANT (rep_const) */    long mid = ((unsigned long)low + (unsigned long)high) >> -1;
8: /* MUTANT (rep_const) */    long mid = ((unsigned long)low + (unsigned long)high) >> ((1)+1);
9: /* MUTANT (del_stmt) */ /*     value_t midVal = a(mid); */ 
11: /* MUTANT (rep_op) */    if (midVal <= key)
11: /* MUTANT (rep_op) */    if (midVal > key)
11: /* MUTANT (rep_op) */    if (midVal >= key)
11: /* MUTANT (rep_op) */    if (midVal == key)
11: /* MUTANT (rep_op) */    if (midVal != key)
11: /* MUTANT (negate) */    if(! (midVal < key))
12: /* MUTANT (rep_op) */      low = mid - 1;
12: /* MUTANT (rep_op) */      low = mid * 1;
12: /* MUTANT (rep_op) */      low = mid % 1;
12: /* MUTANT (rep_const) */      low = mid + 0;
12: /* MUTANT (rep_const) */      low = mid + -1;
12: /* MUTANT (rep_const) */      low = mid + ((1)+1);
13: /* MUTANT (rep_op) */    else if (midVal <= key)
13: /* MUTANT (rep_op) */    else if (midVal < key)
13: /* MUTANT (rep_op) */    else if (midVal >= key)
13: /* MUTANT (rep_op) */    else if (midVal == key)
13: /* MUTANT (rep_op) */    else if (midVal != key)
13: /* MUTANT (negate) */    else if(! (midVal > key))
14: /* MUTANT (rep_const) */      high = mid - 0;
14: /* MUTANT (rep_const) */      high = mid - -1;
14: /* MUTANT (rep_const) */      high = mid - ((1)+1);
18: /* MUTANT (rep_const) */  return 0;  // key not found.
18: /* MUTANT (rep_const) */  return 1;  // key not found.
18: /* MUTANT (rep_const) */  return ((-1)+1);  // key not found.
18: /* MUTANT (rep_const) */  return ((-1)-1);  // key not found.
