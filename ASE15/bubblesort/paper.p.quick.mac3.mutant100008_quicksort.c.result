/bin/sh: limit: command not found
CBMC version 5.0 64-bit macos
Parsing paperharness.c
Parsing mutant100008_quicksort.c
Converting
Type-checking mutant100008_quicksort
file mutant100008_quicksort.c line 6 function quickSort: function `printf' is not declared
Type-checking paperharness
file paperharness.c line 34 function main: function `assert' is not declared
warning: implicit function declaration "printf"
old definition in module mutant100008_quicksort file mutant100008_quicksort.c line 6 function quickSort
signed int (void)
new definition in module paperharness file /usr/include/stdio.h line 259
signed int (const char *, ...)
Generating GOTO Program
Adding CPROVER library
Function Pointer Removal
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Unwinding loop main.0 iteration 1 (4 max) file paperharness.c line 14 function main thread 0
Unwinding loop main.0 iteration 2 (4 max) file paperharness.c line 14 function main thread 0
Unwinding loop main.0 iteration 3 (4 max) file paperharness.c line 14 function main thread 0
Not unwinding loop main.0 iteration 4 (4 max) file paperharness.c line 14 function main thread 0
Unwinding recursion quickSort iteration 1 (4 max)
Unwinding recursion quickSort iteration 2 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 2 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 1 (4 max)
Unwinding recursion quickSort iteration 2 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 2 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding loop main.1 iteration 1 (4 max) file paperharness.c line 26 function main thread 0
Unwinding loop main.1 iteration 2 (4 max) file paperharness.c line 26 function main thread 0
Unwinding loop main.1 iteration 3 (4 max) file paperharness.c line 26 function main thread 0
Not unwinding loop main.1 iteration 4 (4 max) file paperharness.c line 26 function main thread 0
size of program expression: 536 steps
simple slicing removed 4 assignments
Generated 55 VCC(s), 27 remaining after simplification
Passing problem to propositional reduction
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.0 with simplifier
10545 variables, 30905 clauses
SAT checker: negated claim is SATISFIABLE, i.e., does not hold
Runtime decision procedure: 0.04s
Building error trace

Counterexample:

State 19 file paperharness.c line 11 function main thread 0
----------------------------------------------------
  i=0 (00000000000000000000000000000000)

State 20 file paperharness.c line 11 function main thread 0
----------------------------------------------------
  v=0 (00000000000000000000000000000000)

State 21 file paperharness.c line 11 function main thread 0
----------------------------------------------------
  count=0 (00000000000000000000000000000000)

State 22 file paperharness.c line 11 function main thread 0
----------------------------------------------------
  qcount=0 (00000000000000000000000000000000)

State 23 file paperharness.c line 11 function main thread 0
----------------------------------------------------
  prev=0 (00000000000000000000000000000000)

State 24 file paperharness.c line 12 function main thread 0
----------------------------------------------------
  s=0 (00000000000000000000000000000000)

State 25 file paperharness.c line 12 function main thread 0
----------------------------------------------------
  s=3 (00000000000000000000000000000011)

State 27 file paperharness.c line 14 function main thread 0
----------------------------------------------------
  i=0 (00000000000000000000000000000000)

State 29 file paperharness.c line 15 function main thread 0
----------------------------------------------------
  v=-1338998784 (10110000001100001000000000000000)
LOG: ref[0] = -1338998784


State 31 file paperharness.c line 17 function main thread 0
----------------------------------------------------
  ref[0]=-1338998784 (10110000001100001000000000000000)

State 32 file paperharness.c line 18 function main thread 0
----------------------------------------------------
  a[0]=-1338998784 (10110000001100001000000000000000)

State 33 file paperharness.c line 14 function main thread 0
----------------------------------------------------
  i=1 (00000000000000000000000000000001)

State 36 file paperharness.c line 15 function main thread 0
----------------------------------------------------
  v=-1607434239 (10100000001100001000000000000001)
LOG: ref[1] = -1607434239


State 38 file paperharness.c line 17 function main thread 0
----------------------------------------------------
  ref[1]=-1607434239 (10100000001100001000000000000001)

State 39 file paperharness.c line 18 function main thread 0
----------------------------------------------------
  a[1]=-1607434239 (10100000001100001000000000000001)

State 40 file paperharness.c line 14 function main thread 0
----------------------------------------------------
  i=2 (00000000000000000000000000000010)

State 43 file paperharness.c line 15 function main thread 0
----------------------------------------------------
  v=-1610579968 (10100000000000001000000000000000)
LOG: ref[2] = -1610579968


State 45 file paperharness.c line 17 function main thread 0
----------------------------------------------------
  ref[2]=-1610579968 (10100000000000001000000000000000)

State 46 file paperharness.c line 18 function main thread 0
----------------------------------------------------
  a[2]=-1610579968 (10100000000000001000000000000000)

State 47 file paperharness.c line 14 function main thread 0
----------------------------------------------------
  i=3 (00000000000000000000000000000011)

State 52 file paperharness.c line 20 function main thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 53 file paperharness.c line 20 function main thread 0
----------------------------------------------------
  size=3 (00000000000000000000000000000011)

State 56 file mutant100008_quicksort.c line 39 function sort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 57 file mutant100008_quicksort.c line 39 function sort thread 0
----------------------------------------------------
  l=0 (00000000000000000000000000000000)

State 58 file mutant100008_quicksort.c line 39 function sort thread 0
----------------------------------------------------
  r=2 (00000000000000000000000000000010)
LOG: quicksort called with l=0, r=2


State 60 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=-1981808645 (10001001110111111111111111111011)

State 64 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 65 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  l=0 (00000000000000000000000000000000)

State 66 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  r=-1981808646 (10001001110111111111111111111010)
LOG: quicksort called with l=0, r=-1981808646


State 68 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=44072960 (00000010101000001000000000000000)

State 73 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 74 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  l=-1981808644 (10001001110111111111111111111100)

State 75 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  r=2 (00000000000000000000000000000010)
LOG: quicksort called with l=-1981808644, r=2


State 77 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=0 (00000000000000000000000000000000)

State 81 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 82 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  l=-1981808644 (10001001110111111111111111111100)

State 83 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  r=-1 (11111111111111111111111111111111)
LOG: quicksort called with l=-1981808644, r=-1


State 85 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=-3 (11111111111111111111111111111101)

State 89 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 90 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  l=-1981808644 (10001001110111111111111111111100)

State 91 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  r=-4 (11111111111111111111111111111100)
LOG: quicksort called with l=-1981808644, r=-4


State 93 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=-1073741824 (11000000000000000000000000000000)

State 97 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 98 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  l=-1981808644 (10001001110111111111111111111100)

State 99 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  r=-1073741825 (10111111111111111111111111111111)
LOG: quicksort called with l=-1981808644, r=-1073741825


State 101 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=0 (00000000000000000000000000000000)

Violated property:
  file mutant100008_quicksort.c line 13 function quickSort
  recursion unwinding assertion

VERIFICATION FAILED
