/bin/sh: limit: command not found
CBMC version 5.0 64-bit linux
Parsing harness.c
Parsing mutant100004_avltree.c
Converting
Type-checking harness
file harness.c line 37 function main: function `assert' is not declared
Type-checking mutant100004_avltree
Generating GOTO Program
Adding CPROVER library
Function Pointer Removal
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Unwinding recursion insert iteration 1 (3 max)
Unwinding recursion insert iteration 2 (3 max)
Unwinding recursion insert iteration 3 (3 max)
Not unwinding recursion insert iteration 4 (3 max)
Unwinding recursion delete iteration 1 (3 max)
Unwinding recursion delete iteration 2 (3 max)
Unwinding recursion delete iteration 3 (3 max)
Not unwinding recursion delete iteration 4 (3 max)
Unwinding loop main.0 iteration 1 (3 max) file harness.c line 18 function main thread 0
Unwinding recursion insert iteration 1 (3 max)
Unwinding recursion insert iteration 2 (3 max)
Unwinding recursion insert iteration 3 (3 max)
Not unwinding recursion insert iteration 4 (3 max)
Unwinding recursion delete iteration 1 (3 max)
Unwinding recursion delete iteration 2 (3 max)
Unwinding recursion delete iteration 3 (3 max)
Not unwinding recursion delete iteration 4 (3 max)
Unwinding loop main.0 iteration 2 (3 max) file harness.c line 18 function main thread 0
Unwinding recursion query iteration 1 (3 max)
Unwinding recursion query iteration 2 (3 max)
Unwinding recursion query iteration 3 (3 max)
Not unwinding recursion query iteration 4 (3 max)
Unwinding recursion query iteration 1 (3 max)
Unwinding recursion query iteration 2 (3 max)
Unwinding recursion query iteration 3 (3 max)
Not unwinding recursion query iteration 4 (3 max)
size of program expression: 8974 steps
simple slicing removed 9 assignments
Generated 4096 VCC(s), 3974 remaining after simplification
Passing problem to propositional reduction
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.0 with simplifier
1070300 variables, 4462957 clauses
SAT checker: negated claim is SATISFIABLE, i.e., does not hold
Runtime decision procedure: 13.033s
Building error trace

Counterexample:

State 18 file harness.c line 9 function main thread 0
----------------------------------------------------
  v=0 (00000000000000000000000000000000)

State 19 file harness.c line 9 function main thread 0
----------------------------------------------------
  i=0 (00000000000000000000000000000000)

State 20 file harness.c line 9 function main thread 0
----------------------------------------------------
  c=0 (00000000000000000000000000000000)

State 21 file harness.c line 10 function main thread 0
----------------------------------------------------
  present=0 (00000000000000000000000000000000)

State 22 file harness.c line 10 function main thread 0
----------------------------------------------------
  present=0 (00000000000000000000000000000000)

State 23 file harness.c line 12 function main thread 0
----------------------------------------------------
  val=0 (00000000000000000000000000000000)

State 24 file harness.c line 12 function main thread 0
----------------------------------------------------
  val=-79591422 (11111011010000011000100000000010)
searching for -79591422


State 26 file harness.c line 16 function main thread 0
----------------------------------------------------
  root=((struct node *)NULL) (0000000000000000000000000000000000000000000000000000000000000000)

State 27 file harness.c line 16 function main thread 0
----------------------------------------------------
  root=INVALID-64 (0100000011110101111111011111110111111110011111011111111111101000)

State 28 file harness.c line 18 function main thread 0
----------------------------------------------------
  i=0 (00000000000000000000000000000000)

State 29 file harness.c line 19 function main thread 0
----------------------------------------------------
  v=264604176 (00001111110001011000101000010000)

State 30 file harness.c line 20 function main thread 0
----------------------------------------------------
  c=1073741824 (01000000000000000000000000000000)
LOG 0: insert(264604176)


State 35 file harness.c line 23 function main thread 0
----------------------------------------------------
  rootp=&root!0@1 (0000100100000000000000000000000000000000000000000000000000000000)

State 36 file harness.c line 23 function main thread 0
----------------------------------------------------
  value=264604176 (00001111110001011000101000010000)

State 37 file mutant100004_avltree.c line 65 function insert thread 0
----------------------------------------------------
  root=((struct node *)NULL) (0000000000000000000000000000000000000000000000000000000000000000)

State 41 file mutant100004_avltree.c line 65 function insert thread 0
----------------------------------------------------
  root=INVALID-64 (0100000011110101111111011111110111111110011111011111111111101000)

State 45 file mutant100004_avltree.c line 68 function insert thread 0
----------------------------------------------------
  value=264604176 (00001111110001011000101000010000)

State 46 file mutant100004_avltree.c line 10 function new_node thread 0
----------------------------------------------------
  n=((struct node *)NULL) (0000000000000000000000000000000000000000000000000000000000000000)

State 75 file mutant100004_avltree.c line 10 function new_node thread 0
----------------------------------------------------
  n=&dynamic_object1.payload (0000001000000000000000000000000000000000000000000000000000000000)

State 79 file mutant100004_avltree.c line 11 function new_node thread 0
----------------------------------------------------
  dynamic_object1={ .payload=264604176, .height=1, .kid={ INVALID-64, INVALID-64 } } ({ 00001111110001011000101000010000, 00000000000000000000000000000001, { 0100000011110101111111011111110111111110011111011111111111101000, 0100000011110101111111011111110111111110011111011111111111101000 } })

State 86 file mutant100004_avltree.c line 68 function insert thread 0
----------------------------------------------------
  root=&dynamic_object1.payload (0000001000000000000000000000000000000000000000000000000000000000)

State 91 file harness.c line 18 function main thread 0
----------------------------------------------------
  i=1 (00000000000000000000000000000001)

State 93 file harness.c line 19 function main thread 0
----------------------------------------------------
  v=533039640 (00011111110001011000101000011000)

State 94 file harness.c line 20 function main thread 0
----------------------------------------------------
  c=-1073741824 (11000000000000000000000000000000)
LOG 1: delete(533039640)


State 99 file harness.c line 29 function main thread 0
----------------------------------------------------
  rootp=&root!0@1 (0000100100000000000000000000000000000000000000000000000000000000)

State 100 file harness.c line 29 function main thread 0
----------------------------------------------------
  value=533039640 (00011111110001011000101000011000)

State 101 file mutant100004_avltree.c line 77 function delete thread 0
----------------------------------------------------
  root=((struct node *)NULL) (0000000000000000000000000000000000000000000000000000000000000000)

State 105 file mutant100004_avltree.c line 77 function delete thread 0
----------------------------------------------------
  root=&dynamic_object1.payload (0000001000000000000000000000000000000000000000000000000000000000)

State 122 file mutant100004_avltree.c line 85 function delete thread 0
----------------------------------------------------
  rootp=dynamic_object1.kid + 1 (0000001000000000000000000000000000000000000000000000000000010000)

State 123 file mutant100004_avltree.c line 85 function delete thread 0
----------------------------------------------------
  value=533039640 (00011111110001011000101000011000)

State 124 file mutant100004_avltree.c line 77 function delete thread 0
----------------------------------------------------
  root=((struct node *)NULL) (0000000000000000000000000000000000000000000000000000000000000000)

State 131 file mutant100004_avltree.c line 77 function delete thread 0
----------------------------------------------------
  root=INVALID-64 (0100000011110101111111011111110111111110011111011111111111101000)

State 137 file mutant100004_avltree.c line 86 function delete thread 0
----------------------------------------------------
  rootp=&root!0@1 (0000100100000000000000000000000000000000000000000000000000000000)

State 138 file mutant100004_avltree.c line 42 function adjust_balance thread 0
----------------------------------------------------
  root=((struct node *)NULL) (0000000000000000000000000000000000000000000000000000000000000000)

State 142 file mutant100004_avltree.c line 42 function adjust_balance thread 0
----------------------------------------------------
  root=&dynamic_object1.payload (0000001000000000000000000000000000000000000000000000000000000000)

State 143 file mutant100004_avltree.c line 43 function adjust_balance thread 0
----------------------------------------------------
  b=0 (00000000000000000000000000000000)

State 147 file mutant100004_avltree.c line 43 function adjust_balance thread 0
----------------------------------------------------
  n=&dynamic_object1.payload (0000001000000000000000000000000000000000000000000000000000000000)

Violated property:
  file mutant100004_avltree.c line 22 function balance
  dereference failure: object bounds in *n->kid[(signed long int)0]
  !(POINTER_OFFSET(n->kid[0l]) < 0) && OBJECT_SIZE(n->kid[0l]) >= 24 + POINTER_OFFSET(n->kid[0l]) || DYNAMIC_OBJECT(n->kid[0l])

VERIFICATION FAILED
