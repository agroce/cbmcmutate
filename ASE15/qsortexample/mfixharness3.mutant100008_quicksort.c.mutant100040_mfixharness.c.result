/bin/sh: limit: command not found
CBMC version 5.0 64-bit macos
Parsing mutant100040_mfixharness.c
Parsing mutant100008_quicksort.c
Converting
Type-checking mutant100008_quicksort
file mutant100008_quicksort.c line 6 function quickSort: function `printf' is not declared
Type-checking mutant100040_mfixharness
file mutant100040_mfixharness.c line 31 function main: function `assert' is not declared
Generating GOTO Program
Adding CPROVER library
Function Pointer Removal
Partial Inlining
Generic Property Instrumentation
Starting Bounded Model Checking
Unwinding loop main.0 iteration 1 (4 max) file mutant100040_mfixharness.c line 14 function main thread 0
Unwinding loop main.0 iteration 2 (4 max) file mutant100040_mfixharness.c line 14 function main thread 0
Unwinding loop main.0 iteration 3 (4 max) file mutant100040_mfixharness.c line 14 function main thread 0
Not unwinding loop main.0 iteration 4 (4 max) file mutant100040_mfixharness.c line 14 function main thread 0
Unwinding recursion quickSort iteration 1 (4 max)
Unwinding recursion quickSort iteration 2 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 2 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 1 (4 max)
Unwinding recursion quickSort iteration 2 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 2 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 3 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding recursion quickSort iteration 4 (4 max)
Not unwinding recursion quickSort iteration 5 (4 max)
Unwinding loop main.1 iteration 1 (4 max) file mutant100040_mfixharness.c line 24 function main thread 0
Unwinding loop main.1 iteration 2 (4 max) file mutant100040_mfixharness.c line 24 function main thread 0
Unwinding loop main.1 iteration 3 (4 max) file mutant100040_mfixharness.c line 24 function main thread 0
Not unwinding loop main.1 iteration 4 (4 max) file mutant100040_mfixharness.c line 24 function main thread 0
size of program expression: 525 steps
simple slicing removed 4 assignments
Generated 55 VCC(s), 27 remaining after simplification
Passing problem to propositional reduction
Running propositional reduction
Post-processing
Solving with MiniSAT 2.2.0 with simplifier
9636 variables, 28297 clauses
SAT checker: negated claim is SATISFIABLE, i.e., does not hold
Runtime decision procedure: 0.037s
Building error trace

Counterexample:

State 19 file mutant100040_mfixharness.c line 11 function main thread 0
----------------------------------------------------
  i=0 (00000000000000000000000000000000)

State 20 file mutant100040_mfixharness.c line 11 function main thread 0
----------------------------------------------------
  v=0 (00000000000000000000000000000000)

State 21 file mutant100040_mfixharness.c line 11 function main thread 0
----------------------------------------------------
  count=0 (00000000000000000000000000000000)

State 22 file mutant100040_mfixharness.c line 11 function main thread 0
----------------------------------------------------
  qcount=0 (00000000000000000000000000000000)

State 23 file mutant100040_mfixharness.c line 11 function main thread 0
----------------------------------------------------
  prev=0 (00000000000000000000000000000000)

State 24 file mutant100040_mfixharness.c line 12 function main thread 0
----------------------------------------------------
  s=0 (00000000000000000000000000000000)

State 25 file mutant100040_mfixharness.c line 12 function main thread 0
----------------------------------------------------
  s=2 (00000000000000000000000000000010)

State 27 file mutant100040_mfixharness.c line 14 function main thread 0
----------------------------------------------------
  i=0 (00000000000000000000000000000000)

State 29 file mutant100040_mfixharness.c line 15 function main thread 0
----------------------------------------------------
  v=0 (00000000000000000000000000000000)

State 30 file mutant100040_mfixharness.c line 16 function main thread 0
----------------------------------------------------
  ref[0]=0 (00000000000000000000000000000000)

State 31 file mutant100040_mfixharness.c line 17 function main thread 0
----------------------------------------------------
  a[0]=0 (00000000000000000000000000000000)

State 32 file mutant100040_mfixharness.c line 14 function main thread 0
----------------------------------------------------
  i=1 (00000000000000000000000000000001)

State 35 file mutant100040_mfixharness.c line 15 function main thread 0
----------------------------------------------------
  v=1 (00000000000000000000000000000001)

State 36 file mutant100040_mfixharness.c line 16 function main thread 0
----------------------------------------------------
  ref[1]=1 (00000000000000000000000000000001)

State 37 file mutant100040_mfixharness.c line 17 function main thread 0
----------------------------------------------------
  a[1]=1 (00000000000000000000000000000001)

State 38 file mutant100040_mfixharness.c line 14 function main thread 0
----------------------------------------------------
  i=2 (00000000000000000000000000000010)

State 43 file mutant100040_mfixharness.c line 19 function main thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 44 file mutant100040_mfixharness.c line 19 function main thread 0
----------------------------------------------------
  size=2 (00000000000000000000000000000010)

State 47 file mutant100008_quicksort.c line 39 function sort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 48 file mutant100008_quicksort.c line 39 function sort thread 0
----------------------------------------------------
  l=0 (00000000000000000000000000000000)

State 49 file mutant100008_quicksort.c line 39 function sort thread 0
----------------------------------------------------
  r=1 (00000000000000000000000000000001)
LOG: quicksort called with l=0, r=1


State 51 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=-6 (11111111111111111111111111111010)

State 55 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 56 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  l=0 (00000000000000000000000000000000)

State 57 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  r=-7 (11111111111111111111111111111001)
LOG: quicksort called with l=0, r=-7


State 59 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=1069547537 (00111111110000000000000000010001)

State 64 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 65 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  l=-5 (11111111111111111111111111111011)

State 66 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  r=1 (00000000000000000000000000000001)
LOG: quicksort called with l=-5, r=1


State 68 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=-4 (11111111111111111111111111111100)

State 72 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 73 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  l=-5 (11111111111111111111111111111011)

State 74 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  r=-5 (11111111111111111111111111111011)
LOG: quicksort called with l=-5, r=-5


State 76 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=-2 (11111111111111111111111111111110)

State 81 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 82 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  l=-3 (11111111111111111111111111111101)

State 83 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  r=1 (00000000000000000000000000000001)
LOG: quicksort called with l=-3, r=1


State 85 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=-2 (11111111111111111111111111111110)

State 89 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 90 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  l=-3 (11111111111111111111111111111101)

State 91 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  r=-3 (11111111111111111111111111111101)
LOG: quicksort called with l=-3, r=-3


State 93 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=-5 (11111111111111111111111111111011)

State 98 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 99 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  l=-1 (11111111111111111111111111111111)

State 100 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  r=1 (00000000000000000000000000000001)
LOG: quicksort called with l=-1, r=1


State 102 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=-1 (11111111111111111111111111111111)

State 106 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 107 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  l=-1 (11111111111111111111111111111111)

State 108 file mutant100008_quicksort.c line 13 function quickSort thread 0
----------------------------------------------------
  r=-2 (11111111111111111111111111111110)
LOG: quicksort called with l=-1, r=-2


State 110 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=0 (00000000000000000000000000000000)

State 115 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  a=a (0000001000000000000000000000000000000000000000000000000000000000)

State 116 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  l=0 (00000000000000000000000000000000)

State 117 file mutant100008_quicksort.c line 14 function quickSort thread 0
----------------------------------------------------
  r=1 (00000000000000000000000000000001)
LOG: quicksort called with l=0, r=1


State 119 file mutant100008_quicksort.c line 7 function quickSort thread 0
----------------------------------------------------
  j=0 (00000000000000000000000000000000)

Violated property:
  file mutant100008_quicksort.c line 13 function quickSort
  recursion unwinding assertion

VERIFICATION FAILED
